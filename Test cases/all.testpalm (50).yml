feature: select2

description: Блок используется для создания раскрывающегося списка с возможностью одиночного или множественного выбора. Блок визуально представлен кнопкой и выпадающим списком. Для платформы desktop не тестируем пример touch-native.

specs:
  Проверить корректность работы примера № 1 (Theme & Size & Nouveaux):
    Проверка корректности работы примера с мышкой (пример № 1 - Theme & Size & Nouveaux):
      - do: Тапнуть поочередно на каждый из элементов с темой normal и pseudo
      - assert: По тапу и удержанию элемента его размер уменьшается
      - do: Тапнуть по элементу с темой normal и pseudo
      - assert: Появляется выпадающее меню с выбором вариантов
      - do: Выбрать любой пункт выпадающего меню, кроме disabled, и тапнуть по нему
      - assert: При нажатии пункт получает фокус (темно-серый фон, белый шрифт); выпадающее меню закрывается, выбранный пункт меню показывается в шапке элемента
      - assert: При повторном нажатии на элемент выбранный в качестве активного пункт меню имеет маркер выбора (галочку)
      - do: Вызвать выпадающее меню и попробовать выбрать пункт, отмеченный как disabled
      - assert: Цвет фона выбранного пункта не меняется, шрифт остается светло-серым, не реагирует на тапы
      - do: Вызвать выпадающее меню у любого элемента normal или pseudo, после открытия меню тапнуть за его пределами
      - assert: Выпадающее меню скрывается
    Проверка работы кнопок (пример № 1 - Theme & Size & Nouveaux):
      - do: Нажать на кнопку toggle disabled над элементами normal и pseudo
      - assert: Все элементы переходят в состояние disabled; не реагируют на тапы
      - assert: При повторном нажатии на кнопку toggle disabled элементы перестают быть disabled
      - do: Нажать на кнопку toggle background над элементами normal и pseudo
      - assert: Фон у блока с элементами normal и pseudo изменился
      - assert: При повторном нажатии на кнопку toggle background цвет фона становится исходным
      - do: Нажать на кнопку 'cycle tone' над элементами normal и pseudo
      - assert: Элементы normal становятся красными, элементы pseudo обесцвечиваются; в кнопке появляется надпись '(tone:red)'
      - do: Тапнуть любой элемент
      - assert: Открывается выпадающее меню с красным фоном и белым шрифтом; выбранные пункты получают красный шрифт и белый фон
      - do: Повторно нажать на кнопку 'cycle tone' над элементами normal и pseudo
      - assert: Элементы normal получают серую заливку, элементы pseudo - белую с черной рамкой; в кнопке появляется надпись '(tone:grey)'
      - do: Тапнуть любой элемент
      - assert: Открывается выпадающее меню с белым фоном и серым шрифтом; выбранные пункты получают белый шрифт и синий фон
      - do: Повторно нажать на кнопку 'cycle tone' над элементами normal и pseudo
      - assert: Элементы normal получают темную заливку и белые символы, элементы pseudo - белую заливку и светло-серые символы; в кнопке появляется надпись '(tone:dark)'
      - do: Тапнуть любой элемент
      - assert: Открывается выпадающее меню с темным фоном и белым шрифтом; выбранные пункты получают темный шрифт и белый фон
      - do: Повторно нажать на кнопку 'cycle tone' над элементами normal и pseudo
      - assert: Элементы возвращаются в исходное состояние; в кнопке появляется надпись '(tone:default)'

  Проверить корректность работы примера № 2 (Theme & Size):
    Проверка внешнего вида (пример № 2 - Theme & Size):
      - do: Проверить внешний вид примера 
      - assert: Пример представляет собой две строки (темы normal и pseudo), в каждую из которых входят по три кнопки (элемента) разных размеров
      - assert: По умолчанию в каждом элементе выбрано значение 'Каждый'
    Проверка выпадающего меню (пример № 2 - Theme & Size):
      - do: Тапнуть по элементу с темой normal и pseudo
      - assert: Появляется выпадающее меню с выбором вариантов
      - assert: Внешний вид и содержимое выпадающего меню соответствует примеру из предыдущей версии библиотеки
      - do: При открытом выпадающем меню повернуть экран устройства
      - assert: Выпадающее меню останется расположенным так же относительно вызвавшей его кнопки (если хватает места)
    Проверка тапов по активному элементу (пример № 2 - Theme & Size):
      - do: Тапнуть по активному пункту выпадающего меню для каждого из элементов примера (активными являются все элементы, кроме предпоследнего; он прокрашен в серый цвет, находится в состоянии disabled)
      - assert: Активный пункт выпадающего меню переходит в состояние 'выбрано' (у пункта появляется слева отметка о том, что он выбран), выпадающее меню закрывается
      - do: Повторно открыть выпадающее меню
      - assert: У выбранного ранее пункта выпадающего меню установлен признак выбора (галочка)
      - do: Снова тапнуть по уже выбранному пункту выпадающего меню
      - assert: Выбранный пункт остается выбранным
    Проверка пунктов в состоянии disabled (пример № 2 - Theme & Size):
      - do: Тапнуть по пункту выпадающего меню в состоянии disabled (предпоследний пункт выпадающего меню с серым шрифтом)
      - assert: Пункт в состоянии disabled не реагирует на нажатия
      - assert: Пункты в состоянии disabled НЕ переходят в нажатое состояние по тапу
    Проверка тапов за пределами выпадающего меню (пример № 2 - Theme & Size):
      - do: Тапнуть по элементу с темой normal и pseudo
      - do: После появления на экране устройства выпадающего меню тапнуть за его пределами
      - assert: По тапу за пределами выпадающего меню оно исчезает с экрана устройства
    Проверка повторных тапов по кнопке (пример № 2 - Theme & Size):
      - do: Тапнуть по элементу с темой normal и pseudo
      - do: После появления на экране устройства выпадающего меню тапнуть еще раз по кнопке
      - assert: По тапу по кнопке выпадающее меню исчезает с экрана устройства
    Проверка работы скролла (пример № 2 - Theme & Size):
      - do: Тапнуть по элементу с темой normal и pseudo
      - do: После появления на экране устройства выпадающего меню проскроллить страницу вниз
      - assert: При скролле страницы выпадающее меню работает корректно, оно остается под тем же элементом, под которым было вызвано
      - assert: При скролле выпадающее меню уходит с экрана устройства вслед за элементом, по тапу на который было вызвано
    Проверка работы элементов в состоянии disabled (пример № 2 - Theme & Size): 
      - do: Перевести элементы в состояние disabled, нажав на кнопку toggle disabled
      - assert: Элементы примера переходят в состояние disabled; внешне это выражается в том, что элементы примера становятся серыми
      - assert: Элементы в состоянии disabled не реагируют на нажатия
      - assert: По тапу по элементам примера в состояние disabled внешний вид элементов никак не меняется

  Проверить корректность работы примера № 3 (Types):
    Проверка внешнего вида (пример № 3 - Types):
      - do: Проверить внешний вид примера № 3 (Types)
      - assert: Пример включает в себя четыре элемента - без названия, radio, check и radiocheck
      - assert: Первый элемент представляет собой выпадающее меню без возможности выбора пункта
      - assert: Второй элемент представляет собой выпадающий список-радио (можно выбрать только один пункт списка, снять выделение нельзя)
      - assert: Третий элемент представляет собой выпадающий список-чек (можно выбрать каждый из пунктов списка, выбор можно снять с любого пункта списка)
      - assert: Четвертый элемент представляет собой выпадающий список-радиочек (можно выбрать один элемент списка, с выбранного элемента можно снять выбор)
    Проверка работы первого элемента примера (пример № 3 - Types):
      - do: Вызвать выпадающее меню у первого элемента
      - do: Нажимать на пункты выпадающего меню
      - assert: При нажатии на пункты выпадающего списка они не выбираются, выпадающее меню не закрывается
    Проверка работы второго элемента примера (пример № 3 - Types):
      - do: Проверить внешний вид примера
      - assert: По умолчанию в радио-списке выбран пункт 'Охотник'
      - assert: Выбранные пункты отображаются на контроле, когда поле ввода закрыто
      - do: Нажать на поле ввода и кликнуть на выбранный пункт
      - assert: Выбор с пункта меню не снимается
      - do: Открыть выпадающее меню и нажать на пункт, отличный от выбранного
      - assert: Выбор переводится на новый пункт
    Проверка работы третьего элемента примера (пример № 3 - Types):
      - do: Проверить внешний вид примера
      - assert: По умолчанию в чек-списке выбраны элементы 'Желает' и 'Знать'
      - assert: По умолчанию элемент находится в состоянии 'выбран' (внешне это выражается в том, что у элемента примера желтый фон; на элементе указаны выбранные пункты выпадающего меню)
      - do: Навести курсор мыши на элемент, находящийся в состоянии 'выбрано'
      - assert: Рамка элемента становится более темной, цвет фона не меняется
      - do: Открыть выпадающее меню и выбрать несколько пунктов
      - assert: Ширина элемента меняется в зависимости от количества выбранных пунктов
      - do: Закрыть выпадающее меню
      - assert: Все выбранные пункты выпадающего меню отображаются в шапке элемента
      - do: Вызвать выпадающее меню и снять выделение со всех его пунктов
      - assert: Меню переходит в состояние 'ничего не выбрано', фон элемента становится белым
      - do: Перевести чек-список в состояние disabled, когда в меню выбраны какие-то пункты
      - assert: Элемент становит серым, но т.к. в нем есть выбранные пункты, то он темнее чем другие примеры в состоянии disabled, которые не были в состоянии 'выбрано' до того, как перешли в состояние disabled
    Проверка работы четвертого элемента примера (пример № 3 - Types):
      - do: Проверить внешний вид примера
      - assert: По умолчанию в радиочек-списке не выбрано ни одного пункта меню
      - do: Открыть выпадающее меню и выбрать один из активных пунктов
      - assert: Выбранный пункт переходит в выбранное состояние, выпадающее меню закрывается, закрытый радиочек-список переходит в выбранное состояние (фон становится желтым, вместо прочерка показывается выбранный пункт выпадающего меню)
      - do: Открыть выпадающее меню и нажать на выбранный пункт
      - assert: Выбор снимается, элемент переходит в состояние, когда выбор не сделан (фон становится белым, вместо выбранного пункта отображается прочерк)
      - do: Перевести радиочек-список в состояние disabled, когда в меню выбран какой-то пункт
      - assert: Элемент становит серым, но т.к. в нем есть выбранные пункты, то он темнее, чем другие примеры в состоянии disabled, которые не были в состоянии 'выбрано' до того, как перешли в состояние disabled
      - do: Открыть выпадающее меню и снять выделение со всех пунктов
      - assert: Меню переходит в состояние 'ничего не выбрано', фон элемента становится белым, вместо выбранного значения в шапке элемента указывается прочерк
    Проверка поведения элементов при повороте экрана устройства (пример № 3 - Types):
    - do: Открыть выпадающее меню у любого элемента примера и повернуть экран устройства
    - assert: Выпадающее будет такой же ширины и останется расположено так же относительно вызвавшей его кнопки (если хватает места)

  Проверить корректность работы примера № 4 (Text):
    - do: Проверить работу примера
    - assert: Первый элемент примера должен переходить в выбранное состояние, но не показывать выбранные пункты
    - assert: Второй элемент примера должен переходить в выбранное состояние и показывать выбранные пункты в закрытом состоянии
    - assert: По умолчанию в обоих элементах примера ничего не выбрано; если ничего не выбрано, то у списка белый фон и фраза 'Text'
    - do: Открыть выпадающее меню у первого элемента и выбрать один или несколько пунктов
    - assert: Элемент переходит в нажатое состояние (фон становится желтым), фраза 'Text' остается в заглавии, выбранные пункты не отображаются в шапке элемента
    - assert: Внешний вид и наполнение первого элемента соответствуют примеру из предыдущей версии библиотеки
    - do: Открыть выпадающее меню у второго элемента и выбрать один или несколько пунктов
    - assert: Элемент переходит в нажатое состояние, в заголовке списка отображаются выбранные пункты выпадающего меню
    - assert: Внешний вид и наполнение второго элемента соответствуют примеру из предыдущей версии библиотеки
    - do: Открыть выпадающее меню у любого элемента примера и повернуть экран устройства
    - assert: Выпадающее будет такой же ширины и останется расположено так же относительно вызвавшей его кнопки (если хватает места)

  Проверить корректность работы примера № 5 (Icons):
    - do: Проверить работу примера с иконками
    - assert: В первом элементе примера иконки отображаются в выпадающем меню и в закрытом списке выбора
    - assert: По умолчанию в обоих элементах примера выбран пункт 'Нож охотничий' с иконкой загрузки
    - do: Открыть выпадающее меню в первом элементе примера
    - assert: У пунктов 'Нож охотничий', 'Топор', 'Металлическая линейка', 'Вилка', 'Зубная щетка' отображаются иконки
    - do: В выпадающем меню выбрать пункт с иконкой и закрыть выпадающее меню
    - assert: Соответствующая иконка отображается в шапке элемента
    - do: Открыть выпадающее меню во втором элементе примера
    - assert: У пунктов 'Нож охотничий', 'Топор', 'Металлическая линейка', 'Вилка', 'Зубная щетка' НЕ отображаются иконки
    - do: В выпадающем меню выбрать любой из первых пяти пунктов и закрыть выпадающее меню
    - assert: В шапке элемента показываются название пункта выпадающего меню и его иконка
    - do: Открыть выпадающее меню у любого элемента примера и повернуть экран устройства
    - assert: Выпадающее будет такой же ширины и останется расположено так же относительно вызвавшей его кнопки (если хватает места)

  Проверить корректность работы примера № 6 (Touch-native):
    Проверка внешнего вида (пример № 6 - Touch-native):
      - do: Проверить внешний вид примера
      - assert: Пример состоит из двух элементов - radio и check
      - assert: По умолчанию в блоке radio выбрано значение 'Каждый'
      - assert: По умолчанию в блоке check стоит прочерк
    Проверить работу примера № 6 (Touch-native):
      - do: Тапнуть по первому или второму элементу примера
      - assert: Фон элемента темнеет, поверх открывается выпадающее меню
      - assert: В первом элементе примера по умолчанию выбран первый элемент 'Каждый'
      - assert: В первом элементе примера выбран может быть только один пункт
      - assert: Во втором элементе примера по умолчанию нет выбранных элементов
      - assert: Во втором элементе примера может быть множественный выбор (несколько пунктов могут быть в выбранном состоянии)
      - do: Открыть выпадающее меню у любого из двух элементов примера и повернуть экран устройства
      - assert: Выпадающее меню остается расположено так же относительно вызвавшей его кнопки (если хватает места)
      - do: Открыть выпадающее меню у любого из двух элементов и тапнуть вне открытого меню
      - assert: Выпадающее меню закрывается
      - do: Открыть выпадающее меню в первом элементе примера и тапнуть по выбранному пункту меню
      - assert: Выбор с пункта не снимается (при последующем открытии меню этот пункт будет находиться в выбранном состоянии)
      - do: Открыть выпадающее меню в первом элементе примера и тапнуть по невыбранному пункту меню
      - assert: Пункт выбирается и при последующем открытии меню отображается в выбранном состоянии; выпадающее меню закрывается
      - do: Открыть выпадающее меню во втором элементе примера и тапнуть по невыбранному пункту меню
      - assert: Пункт переходит в выбранное состояние, около него появляется галочка; выпадающее меню при этом не закрывается
      - do: Открыть выпадающее меню во втором элементе примера и тапнуть по выбранному пункту меню
      - assert: Пункт переходит в невыбранное состояние, около него пропадает галочка; выпадающее меню при этом не закрывается

  Проверить корректность работы примера № 7 (Width):
    - do: Открыть выпадающее меню примера и выбрать все пункты
    - do: Растянуть область примера по всей длине экрана, потом снять выбор со всех пунктов выпадающего меню
    - assert: Все пункты выпадающего меню выбираются
    - assert: Все выбранные пункты отображаются в шапке выпадающего меню
    - assert: Если снять выбор со всех пунктов, то в шапке отображается слово 'Text'
    - assert: Шапка растягивается по длине выбранных элементов, т.е. так, чтобы пользователь мог видеть все выбранные пункты выпадающего меню, но не больше
    - assert: Если шапка со всеми выбранными пунктами выпадающего меню не помещается в поле примера, то шапка растягивается по всей длине поля примера; текст, не влезающий в шапку, заменяется многоточием
    - do: Открыть выпадающее меню примера и уменьшить количество выбранных пунктов
    - assert: Размер шапки уменьшается; длина шапки выстраивается под количество выбранных пунктов выпадающего меню
    - do: Повернуть экран устройства
    - assert: Ширина кнопки, ширина и расположение выпадающего меню сохраняются

  Проверить корректность работы примера № 8 (Width Max):
    - do: Потянуть вправо область примера курсором мыши
    - assert: По горизонтали длина шапка примера занимает все допустимое пространство
    - do: Максимально растянуть область примера
    - assert: Шапка примера занимает всю область примера
    - assert: Вне зависимости от того, сколько пунктов выпадающего меню выбрано, пример всегда занимает всю горизонталь области примера
    - do: Уменьшить область примера, потянув ее влево
    - assert: Длина шапки примера так же уменьшается; текст, который при этом не влезает в шапку, замещается многоточием
    - do: Повернуть экран устройства
    - assert: Ширина кнопки, ширина и расположение выпадающего меню сохраняются

  Проверить корректность работы примера № 9 (Width Fixed):
    - do: Потянуть вправо область примера курсором мыши
    - assert: Область примера растягивается по горизонтали, длина шапки примера не меняется
    - do: Открыть выпадающее меню и выбрать в нем несколько пунктов
    - assert: Длина шапки примера не изменилась; текст в шапке, превышающий по размеру ее длину, замещается многоточием
    - do: Открыть выпадающее меню и выбрать в нем все пункты
    - assert: Длина шапки примера не изменилась; текст в шапке, превышающий по размеру ее длину, замещается многоточием
    - do: Уменьшить размер области примера так, чтобы шапка не помещалась в области примера
    - assert: Размер шапки не меняется
    - do: Повернуть экран устройства
    - assert: Ширина кнопки, ширина и расположение выпадающего меню сохраняются

  Проверить корректность работы примера № 10 (Reset & Submit):
    - do: Проверить внешний вид примера
    - assert: Пример состоит из трех элементов с выпадающим меню и двух кнопок - 'Submit' и 'Reset'
    - do: Тапнуть по первому элементу (в шапке темно-серый фон, белый шрифт)
    - assert: Открывается выпадающее меню с выбранным по умолчанием словом 'Каждый'; пункт в фокусе имеет темно-серый фон и белый шрифт
    - do: В выпадающем меню отметить все пункты и свернуть его
    - assert: Длина элемента увеличивается; в шапке показаны все выбранные пункты меню
    - do: Тапнуть по второму элементу (в шапке светло-серый фон, темный шрифт)
    - assert: Открывается выпадающее меню с выбранным по умолчанием словом 'Каждый'; пункт в фокусе имеет темно-серый фон и белый шрифт
    - assert: В выпадающем меню второго элемента нельзя выбрать более одного пункта
    - do: Тапнуть по третьему элемент (в шапке темно-серый фон, белый шрифт)
    - assert: Открывается выпадающее меню с выбранным по умолчанием словом 'Каждый'; пункт в фокусе имеет темно-серый фон и белый шрифт
    - do: Выбрать в выпадающем меню первого элемента первые четыре пункта, второго элемента - слово 'Желает', третьего - 'Знать'
    - do: Нажать кнопку 'Submit'
    - assert: Происходит обновление страницы; после обновления элементы возвращаются в исходное состояние
    - tech: в урл к адресу прибавляются параметры ?select2-check=red&select2-check=orange&select2-check=yellow&select2-check=green&select2-radio=yellow&select2-radiocheck=green
    - do: Выбрать в выпадающем меню первого элемента первые четыре пункта, второго элемента - слово 'Желает', третьего - 'Знать'
    - do: Нажать кнопку 'Reset'
    - assert: Элементы возвращаются в исходное состояние без обновления страницы

  Проверить корректность работы примера № 11 (Height):
    - do: Тапнуть по примеру
    - assert: Открывается выпадающее меню из 4 строк
    - assert: Справа от пунктов меню появляется полоса прокрутки
    - do: Проскроллить меню вниз
    - assert: Выпадающее меню можно проскроллить в конец списка, появляются еще 3 пункта меню
    - assert: Пункты выпадающего меню скроллятся циклически
    - do: Повернуть экран устройства
    - assert: Ширина кнопки, ширина и расположение выпадающего меню сохраняются

  Проверить корректность работы примера № 12 (Big Select):
    - do: Проверить внешний вид примера
    - assert: Пример представляет собой элемент темного света; по умолчанию в шапке написано 'Доклад 1'; цвет шрифта белый
    - do: Тапнуть по примеру
    - assert: Открывается выпадающее меню из 60 пунктов; пункт в фокусе имеет светлый фон и темный шрифт
    - assert: В выпадающем меню нельзя выбрать больше одного пункта
    - do: Выбрать любой пункт примера и закрыть выпадающее меню
    - assert: В шапке примера отображается название выбранного пункта выпадающего меню
    - do: Вызвать заново выпадающее меню, проскроллить его вниз до конца
    - assert: Выпадающее меню скроллится, справа от пунктов меню появляется полоска вертикальной прокрутки; суммарно выпадающее меню содержит 60 пунктов
    - assert: Выпадающее меню не скроллится циклически

files: []

v-team: lego

example: /all/all.html

manager:
  - kuznecov

qa-engineer:
  - spiker

priority:
  - high

tags:
  - bem
