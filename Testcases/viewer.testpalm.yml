feature: Viewer

specs:
  aliases:
    - &BeforeEach
      - do: получить выдачу по запросу 'foreverdata' и кликнуть в заголовок первого сниппета
      - assert: открывается турбо страница в новой вкладке
      - tech: страница не содержит клиентских ошибок
    - &BeforeEach2
      - do: |
          долистать до заголовка «Смешанный слайдер»
          перелистнуть слайдер на вторую картинку с изображением луны
          нажать на вторую картинку
      - assert: просмотрщик должен открыться

  Просмотрщик открывается и закрывается:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку со снежным гепардом
    - assert: просмотрщик должен открыться
    - do: кликнуть по кнопке "закрыть"
    - assert: просмотрщик должен закрыться

  Просмотрщик открывается, закрывается по браузерной кнопке  "назад" и открывается по браузерной кнопке "вперед":
    - do: перейти по ссылке https://yandex.ru/turbo?stub=page/images.json
    - do: кликнуть на картинку со снежным гепардом
    - assert: просмотрщик открылся
    - do: нажать браузерную кнопку назад
    - assert: просмотрщик закрылся
    - do: нажать браузерную кнопку вперед
    - assert: просмотрщик открылся

  Просмотрщик открывается, в бесконечной ленте на второй странице, если на первой не было изображений:
    - params:
        foreverdata: '1635062971'
    - *BeforeEach
    - do: проскролить до конца страницы
    - do: дождаться загрузки следующей страницы
    - assert: должна загрузиться следующая страница
    - do: кликнуть на картинку со снежным гепардом
    - assert: просмотрщик должен открыться

  Просмотрщик не открывается если картинка в ссылке:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: Кликнуть на картинку с оранжевой машиной
    - assert: Просмотрщик не должен открыться
    - tech: На странице отсутствуют клиентские ошибки

  Просмотрщик не открывается если картинка-ссылка:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с синей машиной
    - assert: просмотрщик не должен открыться
    - tech: на странице отсутствуют клиентские ошибки

  Просмотрщик не открывается, если в данных передан параметр viewer:false:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с котом и надписью NO в начале страницы
    - assert: просмотрщик не должен открыться
    - do: кликнуть на картинку с котом и надписью NO в галерее
    - assert: просмотрщик не должен открыться
    - do: кликнуть на картинку с котом и надписью NO в слайдере
    - assert: просмотрщик не должен открыться
    - tech: на странице отсутствуют клиентские ошибки

  Просмотрщик не открывается по нажатию на ссылку в описании картинки:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на ссылку в описании к картинке со снежным гепардом
    - assert: |
        ссылка не кликабельна (не ведет на другую страницу)
        просмотрщик не должен открыться при нажатии на ссылку
    - tech: на странице отсутствуют клиентские ошибки

  Просмотрщик не открывается для картинки без указанных размеров:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с Останкинской башней
    - assert: просмотрщик не должен открыться
    - tech: на странице отсутствуют клиентские ошибки

  Картинка (низкая) отображается корректно:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку со снежным гепардом
    - assert: просмотрщик должен открыться
    - screenshot: внешний вид [low-image]

  Картинка (низкая) отображается корректно в ландшафтной ориентации:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку со снежным гепардом
    - assert: просмотрщик должен открыться
    - do: перевернуть устройство
    - screenshot: внешний вид [low-image-landscape]
    - do: проскролить просмотрщик до конца вниз
    - screenshot: внешний вид [low-image-landscape-scroll]

  Превью (низкая) отображается корректно:
    - params:
        foreverdata: '260416871'
    - tags: no_assessors
    - *BeforeEach
    - do: в консоли браузера нужно выполнить код `class Image {}`
    - do: кликнуть на картинку со снежным гепардом
    - assert: просмотрщик должен открыться
    - screenshot: внешний вид [low-preview]

  Превью (низкая) отображается корректно в ландшафтной ориентации:
    - params:
        foreverdata: '260416871'
    - tags: no_assessors
    - *BeforeEach
    - do: в консоли браузера нужно выполнить код `class Image {}`
    - do: кликнуть на картинку со снежным гепардом
    - assert: просмотрщик должен открыться
    - do: перевернуть устройство
    - screenshot: внешний вид [low-preview-landscape]

  Картинка (высокая) отображается корректно:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с небоскрёбом
    - assert: просмотрщик должен открыться
    - screenshot: внешний вид [tall-image]

  Картинка (высокая) отображается корректно в ландшафтной ориентации:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с небоскрёбом
    - assert: просмотрщик должен открыться
    - do: перевернуть устройство
    - screenshot: внешний вид [tall-image-landscape]
    - do: проскролить просмотрщик до конца вниз
    - screenshot: внешний вид [tall-image-landscape-scroll]

  Превью (высокая) отображается корректно:
    - params:
        foreverdata: '260416871'
    - tags: no_assessors
    - *BeforeEach
    - do: в консоли браузера нужно выполнить код `class Image {}`
    - do: кликнуть на картинку с небоскрёбом
    - assert: просмотрщик должен открыться
    - screenshot: внешний вид [tall-preview]

  Превью (высокая) отображается корректно в ландшафтной ориентации:
    - params:
        foreverdata: '260416871'
    - tags: no_assessors
    - *BeforeEach
    - do: в консоли браузера нужно выполнить код `class Image {}`
    - do: кликнуть на картинку с небоскрёбом
    - assert: просмотрщик должен открыться
    - do: перевернуть устройство
    - screenshot: внешний вид [tall-preview-landscape]

  Картинка (широкая) отображается корректно:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с панорамой города
    - assert: просмотрщик должен открыться
    - screenshot: внешний вид [wide-image]

  Картинка (широкая) отображается корректно в ландшафтной ориентации:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с панорамой города
    - assert: просмотрщик должен открыться
    - do: перевернуть устройство
    - screenshot: внешний вид [wide-image-landscape]

  Превью (широкая) отображается корректно:
    - params:
        foreverdata: '260416871'
    - tags: no_assessors
    - *BeforeEach
    - do: в консоли браузера нужно выполнить код `class Image {}`
    - do: кликнуть на картинку с панорамой города
    - assert: просмотрщик должен открыться
    - screenshot: внешний вид [wide-preview]

  Превью (широкая) отображается корректно в ландшафтной ориентации:
    - params:
        foreverdata: '260416871'
    - tags: no_assessors
    - *BeforeEach
    - do: в консоли браузера нужно выполнить код `class Image {}`
    - do: кликнуть на картинку с панорамой города
    - assert: просмотрщик должен открыться
    - do: перевернуть устройство
    - screenshot: внешний вид [wide-preview-landscape]

  Картинка (маленькая) отображается корректно:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с галочкой
    - assert: просмотрщик должен открыться
    - screenshot: внешний вид [small-image]

  Картинка (маленькая) отображается корректно в ландшафтной ориентации:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с галочкой
    - assert: просмотрщик должен открыться
    - do: перевернуть устройство
    - screenshot: внешний вид [small-image-landscape]

  Превью (маленькая) отображается корректно:
    - params:
        foreverdata: '260416871'
    - tags: no_assessors
    - *BeforeEach
    - do: в консоли браузера нужно выполнить код `class Image {}`
    - do: кликнуть на картинку с галочкой
    - assert: просмотрщик должен открыться
    - screenshot: внешний вид [small-preview]

  Превью (маленькая) отображается корректно в ландшафтной ориентации:
    - params:
        foreverdata: '260416871'
    - tags: no_assessors
    - *BeforeEach
    - do: в консоли браузера нужно выполнить код `class Image {}`
    - do: кликнуть на картинку с галочкой
    - assert: просмотрщик должен открыться
    - do: перевернуть устройство
    - screenshot: внешний вид [small-preview-landscape]

  Картинка с длинной подписью отображается корректно:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с солнцем и длинной подписью
    - assert: просмотрщик должен открыться
    - screenshot: внешний вид [long-description-image]
    - do: проскролить просмотрщик до конца вниз
    - screenshot: внешний вид [long-description-image-scroll]

  Картинка с длинной подписью отображается корректно в ландшафтной ориентации:
    - params:
        foreverdata: '260416871'
    - *BeforeEach
    - do: кликнуть на картинку с солнцем и длинной подписью
    - assert: просмотрщик должен открыться
    - do: перевернуть устройство
    - screenshot: внешний вид [long-description-image-landscape]
    - do: проскролить просмотрщик до конца вниз
    - screenshot: внешний вид [long-description-image-landscape-scroll]

  Просмотрщик в слайдере:

    Картинки просмотрщика должны перелистываться и синхронизироваться со слайдером на странице:
      - params:
          foreverdata: '260416871'
      - *BeforeEach
      - *BeforeEach2
      - do: перелистнуть картинку просмотрщика на следующую
      - assert: появилась картинка серой сетки в красной рамке с подписью «Вторая картинка в первом слайдере»
      - do: закрыть просмотрщик, нажав по крестику наверху справа
      - assert: просмотрщик закрылся и в слайдере на странице открыта картинка серой сетки в красной рамке с подписью «Вторая картинка в первом слайдере»

    При перелистывании картинок в просмотрщике одного слайдера не должен листаться другой слайдер:
      - params:
          foreverdata: '260416871'
      - *BeforeEach
      - *BeforeEach2
      - do: перелистнуть картинку просмотрщика на следующую
      - do: закрыть просмотрщик, нажав по крестику наверху справа
      - assert: просмотрщик закрылся и в слайдере на странице открыта картинка серой сетки в красной рамке с подписью «Вторая картинка в первом слайдере»
      - assert: в слайдере под заголовком «Слайдер с двумя картинками» открыта первая картинка

    Просмотрщик должен перелистываться после закрытия и открытия переходом по истории:
      - params:
          foreverdata: '260416871'
      - *BeforeEach
      - *BeforeEach2
      - do: закрыть просмотрщик, нажав по браузерной кнопке «назад»
      - assert: просмотрщик закрылся
      - do: снова открыть просмотрщик, нажав по браузерной кнопке вперёд»
      - do: перелистнуть картинку просмотрщика на следующую
      - assert: появилась картинка серой сетки в красной рамке с подписью «Вторая картинка в первом слайдере»

    Просмотрщик должен открываться и перелистываться после обновления страницы:
      - tags: no_assessors # Эта функциональность не работает в оверлее.
      - params:
          foreverdata: '260416871'
      - *BeforeEach
      - *BeforeEach2
      - do: перезагрузить страницу в браузере
      - assert: просмотрщик открылся на той же картинке
      - do: перелистнуть картинку просмотрщика на следующую
      - assert: появилась картинка серой сетки в красной рамке с подписью «Вторая картинка в первом слайдере»

  Счётчики:
    Отправка при открытии просмотрщика картинки:
    - *BeforeEach
    - do: кликнуть на картинку с солнцем и длинной подписью
    - assert: открылся просмотрщик
    - tech: |
        отправился технический счётчик с параметрами:
        type: viewer-opened
        data:
          src: адрес картинки
          slider: false

    Отправка при открытии просмотрщика слайдера:
    - *BeforeEach
    - *BeforeEach2
    - tech: |
        отправился технический счётчик с параметрами:
        type: viewer-opened
        data:
          src: адрес картинки
          slider: true

browsers:
  notFor:
    - android-browser-4.4-touch
    - ios-safari-9-touch
    - ios-safari-10-touch
    - ios-safari-11-touch

files:
  - features/blocks/viewer/viewer.hermione.js

v-team: Turbo

tlds: none
