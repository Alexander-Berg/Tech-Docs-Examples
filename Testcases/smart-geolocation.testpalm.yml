feature: Смарт-геолокация

specs-integration:
  Наличие проинициализированного блока на странице по любому запросу:
    - do: получить выдачу по запросу «рецепт пиццы»
    - assert: на странице должен присутствовать проинициализированный блок user-location-updater. Блок без визуального представления, проверить что он есть на странице можно, выполнив в Console Dev Tools команду $('.user-location-updater_js_inited').length === 1

specs:
  aliases:
    - &CheckMetricsStatus
      - assertMetrics:
          # Количество пользователей, у которых можно спросить координату молча
          - geoloc.total_permission_status_on
          # Количество пользователей, у которых нельзя спросить координату молча
          - geoloc.total_permission_status_off
          # Количество пользователей, разрешивших обновление геолокации
          - geoloc.total_permission_status_granted
          # Количество пользователей, запретивших обновление геолокации
          - geoloc.total_permission_status_denied
          # Количество пользователей, которым было показано окошко запроса геолокации
          - geoloc.total_permission_status_prompt
    - &CheckMetricsRequest
      - assertMetrics:
          # Количество успешных запросов геолокации
          - geoloc.total_permission_requests_success
          # Количество успешных запросов геолокации с перезапросом
          - geoloc.total_permission_requests_reload
          # Количество запросов разрешения на геолокацию
          - geoloc.total_permission_requests
          # Количество запросов геолокации с запретом или отказом
          - geoloc.total_permission_requests_off
          # Количество успешных запросов геолокации без перезапроса
          - geoloc.total_permission_requests_nothing
          # Количество запросов геолокации с ошибкой
          - geoloc.total_permission_requests_error
  На геонезависимом запросе:
    browsers:
      - chrome-phone
      - chrome-desktop
      - firefox
    beforeEach:
      - do: очистить все куки браузера
      - do: выставить настройку геолокации в браузере «спрашивать разрешение на доступ» (Инструкция https://yandex.ru/support/common/browsers-settings/geolocation.html)
      - do: получить выдачу по запросу «рецепт пиццы»
    Когда неизвестно, есть ли доступ к геолокации:
      - assert: на странице должен присутствовать проинициализированный блок user-location-updater. Блок без визуального представления, проверить что он есть на странице можно, выполнив в Console Dev Tools команду $('.user-location-updater_js_inited').length === 1
      - tech: должны сработать технические счётчики path='/tech/userlocation/on' и path='/tech/userlocation/prompt'
      - *CheckMetricsStatus
    Когда доступ к геолокации запрещён:
      - do: запретить доступ к геолокации
      - do: перезагрузить страницу
      - assert: на странице должен присутствовать проинициализированный блок user-location-updater. Блок без визуального представления, проверить что он есть на странице можно, выполнив в Console Dev Tools команду $('.user-location-updater_js_inited').length === 1
      - tech: должны сработать технические счётчики path='/tech/userlocation/on' и path='/tech/userlocation/denied'
      - *CheckMetricsStatus
    Когда доступ к геолокации разрешён:
      Точность геолокации низкая:
        - do: разрешить доступ к геолокации
        - do: подменить свои координаты на произвольные с низкой точностью (accuracy > 5000 метров). Используйте любое подходящее расширение браузера
        - do: перезагрузить страницу
        - tech: должны сработать технические счётчики path='/tech/userlocation/on', path='/tech/userlocation/prompt', path='/tech/userlocation/unknown'
        - *CheckMetricsStatus
      Точность геолокации высокая:
        - do: разрешить доступ к геолокации
        - do: подменить свои координаты на произвольные с низкой точностью (accuracy ~ 5 метров), Используйте любое подходящее расширение браузера
        - do: перезагрузить страницу
        - tech: должны сработать технические счётчики path='/tech/userlocation/on', path='/tech/userlocation/prompt', path='/tech/userlocation/new'
        - *CheckMetricsStatus
      Полученные координаты отличаются от известных нам ранее:
        - do: разрешить доступ к геолокации
        - do: подменить свои координаты на произвольные с высокой точностью (accuracy ~ 5 метров), Используйте любое подходящее расширение браузера
        - do: перезагрузить страницу
        - tech: должны сработать технические счётчики path='/tech/userlocation/on', path='/tech/userlocation/prompt', path='/tech/userlocation/new'
        - do: подменить свои координаты на отличные от заданных ранее с высокой точностью (accuracy ~ 5 метров)
        - tech: через промежуток времени заданный флагом geo_silent_refresh (время в секундах),должен опять сработать счётчик path='/tech/userlocation/new'
        - *CheckMetricsStatus
      Полученные координаты не отличаются от известных нам ранее:
        - do: разрешить доступ к геолокации
        - do: подменить свои координаты на произвольные с высокой точностью (accuracy ~ 5 метров),Используйте любое подходящее расширение браузера
        - do: перезагрузить страницу
        - tech: должны сработать технические счётчики path='/tech/userlocation/on', path='/tech/userlocation/prompt', path='/tech/userlocation/new'
        - do: подменить свои координаты на те же что и заданные ранее с высокой точностью (accuracy ~ 5 метров), Для контроля точность можно чуть поменять — на пару метров, например
        - tech: через промежуток времени заданный флагом geo_silent_refresh (время в секундах), должен опять сработать счётчик path='/tech/userlocation/old'
        - *CheckMetricsStatus
  На запросе, который мы посчитали геозависимым (про сетевые организации, погоду, etc.):
    Полученный регион не изменился, перезагрузка не требуется:
      - do: получить выдачу по пустому запросу
      - do: подменить свои координаты на произвольные с высокой точностью (accuracy ~ 5 метров), Используйте любое подходящее расширение браузера
      - do: перезагрузить страницу (в этот момент в куку yp, в сабкуку gpauto, будут записаны координаты заданные выше)
      - do: перезадать запрос на любой, где будет колдунщик ОргМн или Погоды
      - tech: должен сработать технический счётчик path='/tech/serp/region/lower/message' vars='-status=statusUnchanged', -type=nothing'
      - *CheckMetricsRequest
    Полученный регион изменился, требуется перезагрузка:
      - do: получить выдачу по пустому запросу
      - do: подменить свои координаты на произвольные с высокой точностью (accuracy ~ 5 метров). Используйте любое подходящее расширение браузера
      - do: перезагрузить страницу (в этот момент в куку yp, в сабкуку gpauto, будут записаны координаты заданные выше)
      - do: подменить свои координаты на другие, сильно отличающиеся от введённых ранее (другой регион)
      - do: перезадать запрос на любой, где будет колдунщик ОргМн или Погоды
      - tech: должен сработать технический счётчик, path='/tech/serp/region/lower/message' vars='-status=statusChanged', -type=reload'
      - *CheckMetricsRequest
    Ошибка при получении региона:
      - do: получить выдачу по пустому запросу
      - do: подменить свои координаты на произвольные с высокой точностью (accuracy ~ 5 метров), Используйте любое подходящее расширение браузера
      - do: перезагрузить страницу (в этот момент в куку yp, в сабкуку gpauto, будут записаны координаты заданные выше)
      - do: подменить свои координаты на другие, с очень низкой точностью (accuracy > 5000 метров)
      - do: перезадать запрос на любой, где будет колдунщик ОргМн или Погоды
      - tech: должен сработать технический счётчик, path='/tech/serp/region/lower/message', vars='-status=statusRegionError', -type=nothing'
      - *CheckMetricsRequest
    Пользователь отклонил запрос на получение текущего местоположения:
      - do: получить выдачу по пустому запросу
      - do: запретить определять геолокацию (code 1)
      - do: перезадать запрос на любой, где будет колдунщик ОргМн или Погоды
      - tech: должен сработать технический счётчик, path='/tech/serp/region/lower/message', vars='-status=statusGeolocationError', -type=off'
      - *CheckMetricsRequest
    Невозможно получить данные или нет ответа от LBS:
      - do: получить выдачу по пустому запросу
      - do: сэмулировать ошибку получения геолокации от LBS (code 2)
      - do: перезадать запрос на любой, где будет колдунщик ОргМн или Погоды
      - tech: должен сработать технический счётчик path='/tech/serp/region/lower/message' vars='-status=statusGeolocationError', -type=error'
      - *CheckMetricsRequest
    Истекло время ожидания получения геолокации:
      - do: получить выдачу по пустому запросу
      - do: сэмулировать ошибку геолокации по таймауту (code 3)
      - do: перезадать запрос на любой, где будет колдунщик ОргМн или Погоды
      - tech: должен сработать технический счётчик, path='/tech/serp/region/lower/message' vars='-status=statusGeolocationError', -type=timeout'
      - *CheckMetricsRequest
    Неизвестная ошибка в получении геолокации:
      - do: получить выдачу по пустому запросу
      - do: сэмулировать неизвестную ошибку геолокации (code 4)
      - do: перезадать запрос на любой, где будет колдунщик ОргМн или Погоды
      - tech: должен сработать технический счётчик, path='/tech/serp/region/lower/message' vars='-status=statusGeolocationError', -type=unknown'
      - *CheckMetricsRequest

counter: /tech/userlocation

files:
  - features/common/smart-geolocation/smart-geolocation.hermione.js
  - features/common/smart-geolocation/smart-geolocation.hermione.e2e.js

v-team: VanillaGeo

tags:
  - counters
  - reviewed
  - no_assessors
  - hasE2E

tlds: all

browsers:
  notFor:
    - searchapp-phone
