feature: Авиа
type: Выдача
description: ''
specs:
  Проверка фильтра пересадок слайдер:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре пересадок ничего не
        выбрано.
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: Показался блок фильтра. Галочки не на одном из пунктов не стоит.
        Бегунок слайдера длительности пересадки максимально справа.
    - do: Правый бегунок слайдера подвинуть на середину контроллера.
    - do: >-
        Assert: Цвет кнопки фильтра изменился на тёмно-серый.В блоке фильтров
        появилась кнопка “Сбросить”.

        screen: https://jing.yandex-team.ru/files/tcheremnykh/travel-1000.png
    - do: >-
        Assert: В выдаче отображаются только варианты “Прямой” и с пересадками,
        время которых не превышает “Выбранное время” в фильтре
    - do: >-
        Подвинуть правый бегунок слайдера максимально вправо, левый бегунок
        контроллера подвинуть на середину слайдера.
    - do: 'Assert: Кнопка по-прежнему тёмно-серого цвета'
    - do: >-
        Assert: В выдаче отображаются только варианты “Прямой” и с пересадками,
        время которых не меньше “Выбранного времени” в фильтре
    - do: Нажать на кнопку фильтра пересадок
    - do: 'Assert: блок фильтра свернулся.'
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка фильтра Авиакомпаний':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре авиакомпаний ничего не
        выбрано.
    - do: Нажать на кнопку фильтра авиакомпаний
    - assert: |
        Показался блок фильтра.
        Галочки не на одном из пунктов не стоит.
        Есть галочка Комбинации авиакомпаний, она снята
        Есть кнопка сбросить, она неактивна
        Кнопка альянсов активна на “Все альянсы”
    - do: Выбрать авиакомпанию “S7 Airlines”
    - assert: |
        В чек-боксе появилась галочка, фон чек-бокса стал жёлтым.
        Цвет кнопки фильтра изменился на тёмно-серый.
        Активировалась кнопка альянсов Oneworld.
        В блоке фильтров появилась красная кнопка “Сбросить” (крестик).
        В фильтре авиакомпаний синяя надпись “Сбросить” стала активна

        screen: https://jing.yandex-team.ru/files/gouken67/aviacompany_1.png
    - assert: |
        В выдаче остались только предложения где все сегменты перелёта
        выполняет авиакомпания “S7 Airlines”
    - do: Выбрать авиакомпанию “Аэрофлот”
    - assert: В чек-боксе появилась галочка, фон чек-бокса стал жёлтым.
    - assert: |
        В выдаче остались только предложения где все сегменты перелёта
        выполняет авиакомпания “S7 Airlines” или “Аэрофлот”, а так же смежные
        рейсы где перелёт осуществляют эти компании
    - do: |
        Снова открыть фильтр авиакомпаний
        Установить чекбокс Комбинации авиакомпаний
    - assert: |
        Выдача обновилась. Теперь в ней присутствуют варианты от S7, Аэрофлота и смежные рейсы с участием других компаний, где как минимум один перелёт выполняется S7 или Аэрофлотом.
    - do: |
        Снова открыть фильтр авиакомпаний
        Навести курсор на цену напротив S7
        Кликнуть по появившейся надписи Только
    - assert: |
        Выдача обновилась.
        Остались только варианты от S7, либо смежные рейсы
        Чекбокс с Аэрофлота снят
    - do: |
        Снова открыть фильтр авиакомпаний
        Кликнуть по синей надписи Сбросить
    - assert: Значение фильтра сбросилось. Выдача содержит варианты не только от S7
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: ''
description: ''
specs:
  Проверка актуальности рейсов:
    - do: 'открыть главную страницу авиабилетов https://travel.crowdtest.yandex.ru/'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: Текущее число, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
    - do: Нажать кнопку 'Найти'
    - assert: Открылась страница выдачи
    - do: Нажать на кнопку с сортировками.
    - do: 'Выбрать сортировку “По времени отправления”. Для тача: порядок оставить прежним.'
    - assert: >-
        Варианты отсортированы по времени отправления от меньшего к
        большему. В выдаче только те рейсы до времени отправления которых не
        меньше часа
manual: true
Сервис: Авиа
feature: Авиа
type: Выдача
description: ''
specs:
    Проверка кнопки выбрать всё в фильтре Авиакомпаний:
        - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Екатеринбург
              Куда: Санкт-Петербург
              Туда: 5 число следующего месяца, дату обратно не ставить.
              Пассажиры: 1 взрослых
              Класс: Эконом
        - do: Нажать кнопку “Найти”
        - do: >-
              Assert: Открылась страница выдачи. В фильтре авиакомпаний ничего не
              выбрано. Над выдачей надпись "{N} вариантов"
        - do: Нажать на кнопку фильтра авиакомпаний
        - do: >-
              Assert: Показался блок фильтра. Галочки не на одном из пунктов не стоит.
              Кнопка альянсов активна на “Все альянсы”
              Чекбокс Комбинации авиакомпаний снят
        - do: Нажать на кнопку “Все авиакомпании”
        - do: >-
              Assert: Во всех чек-боксах появилась галочка, фон чек-боксов стал
              жёлтым. Цвет фона кнопки стал тёмно-серым.В блоке фильтров появилась кнопка
              “Сбросить”.

              screen: https://jing.yandex-team.ru/files/tcheremnykh/travel-1003.png
        - do: >-
              Assert: В выдаче остались только те рейсы, сегменты которых полностью
              выполняются указанными компаниями или рейсы, сегменты которых
              выполняются только указанными авиакомпаниями. (Если не понятно -
              посмотрите на пример Москва-Ухта и обратите внимание на АК Nordwind)

              Над выдачей надпись "Выбрано {M} вариантов из {N}"
        - do: Нажать на кнопку фильтра авиакомпаний
        - do: >-
              Assert: блок фильтра свернулся. Кнопка “Авиакомпании” выделена желтым
              цветом.
        - do: |
              Открыть фильтр авиакомпаний
              Установить чекбокс Комбинации авиакомпаний
              Закрыть фильтр
              Проверить выдачу
        - assert: В выдаче отображаются все варианты. Над выдачей надпись "{N} вариантов"
        - do: |
              Открыть фильтр авиакомпаний снова
              Снять чекбокс “Все авиакомпании”
        - do: >-
              Assert: Во всех чек-боксах авиакомпаний галочки снялись, фон чек-боксов стал белым.
              Цвет фона кнопки фильтра стал светло-серым.
              Чекбокс Комбинации авиакомпаний все ёщё выбран
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка комбинации фильтров':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: Любая доступная дата
        Обратно: Любая доступная дата
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи. Никаких фильтров не выбрано'
    - do: Активировать фильтр “Без пересадок”
    - do: >-
        Assert: В выдаче отображаются только варианты “Прямой” - для рейсов туда
        и рейсов обратно. В блоке фильтров появилась кнопка “Сбросить” (крестик).
    - do: Активировать фильтр “С багажом”
    - do: >-
        Assert: В выдаче отображаются только варианты “Прямой” и с включённым в
        стоимость багажом.
    - do: >-
        В фильтре “Время вылета/прилёта” для вылета Туда выбрать время, в
        которое есть перелеты, например, “день”
    - do: >-
        Assert: В выдаче отображаются только варианты “Прямой”, с включённым в
        стоимость багажом и время вылета Туда которых входит в соответствующий
        диапазон (например, для "день" - “12:00-18:00”)
    - do: >-
        В фильтре “Время вылета/прилёта” для вылета Обратно выбрать время, в
        которое есть перелеты, например, “вечер”
    - do: >-
        Assert: В выдаче отображаются только варианты “Прямой”, с включённым в
        стоимость багажом и время вылета Туда и Обратно которых входит в
        соответствующие выбранные диапазоны
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: ''
specs:
    'Авиа: Проверка фильтра С багажом на выдаче':
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Екатеринбург
              Куда: Санкт-Петербург
              Туда: 5 число следующего месяца, дату обратно не ставить.
              Пассажиры: 1 взрослых
              Класс: Эконом
        - do: Нажать кнопку “Найти”
        - assert: >-
              В результате поиска билеты только туда. Фильтр “С багажом” не
              активный. На кнопке есть информация о минимальной стоимости билета с
              этим фильтром.
        - do: Нажать на кнопку фильтра “С Багажом”
        - assert: >-
              Цвет фона кнопки стал тёмно-серым. На десктопе в блоке фильтров появилась кнопка
              с крестиком. В тачах на общей кнопке с фильтрами появился счетчик примененных фильтров (показывает единицу)

               screen десктоп: https://jing.yandex-team.ru/files/kuklina/2022-04-08_23-30-56.png
               screen тач: https://jing.yandex-team.ru/files/kuklina/2022-04-08_23-35-25.png
        - assert: >-
              В выдаче отображаются только варианты с включённым в стоимость
              багажом . Минимальная цена билета соответсвует указанной на кнопке
        - do: Кликнуть по любому сниппету (не по кнопке “Купить” и не по багажной информации)
        - assert: >-
              Открылась страница покупки. Справа отображается блок с
              предложениями партнеров (в таче - снизу).

              - в десктопе над блоком предложений есть выпадающий список тарифов.
              Выбран тариф с багажом (иконка чемодана зелёная)

              - в таче над предложениями партнёров показан список тарифов
              Выбран тариф с багажом

              screen: https://jing.yandex-team.ru/files/gouken67/1005_1-1.png
               У каждого сегмента указано наличие багажа и ручной клади в формате
              "{N} место багажа, до {M} кг, бесплатная ручная кладь до {R} кг" либо

              "N место, R кг. N место, R кг, ХxYxZ см" либо

              "N место, R кг. N место, ХxYxZ см".

              **Важно:** Для некоторых рейсов может быть не указан вес ручной клади
              (например, у Аэрофлота). Это не баг.
manual: true
Функциональность: Фильтры и сортировки
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Tag: Smoke
feature: Авиа
type: ''
description: ''
specs:
  Проверка фильтра без пересадок в динамике цен со страницы выдачи:
    - do: 'открыть главную страницу авиабилетов https://travel.crowdtest.yandex.ru/'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: >-
        Над выдачей нажать на кнопку “Посмотреть” в блоке "Сравните стоимость
        билетов на разные даты"
    - do: 'Assert: Открылась динамика цен. Фильтры не активированы'
    - do: Нажать на кнопку фильтра “Без пересадок”
    - do: >-
        Assert: Цвет фона кнопки стал желтым. Во время обновления данных
        появился лоадер. Данные в динамике обновились. Фильтр на странице выдачи
        так же применился. В выдаче остались только варианты без пересадок.
    - assert: |-
        screen
        1
    - do: Нажать кнопку стоимости билета на другую дату в динамике цен
    - do: >-
        Assert: Выдача обновилась. Дата соответствует выбранной в динамике цен.
        Фильтр “Без пересадок” остался активным.
manual: true
Сервис: Авиа
feature: Авиа
type: ''
description: ''
specs:
  Проверка фильтра С багажом в динамике цен со страницы выдачи:
    - do: 'открыть главную страницу авиабилетов https://travel.crowdtest.yandex.ru/'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: >-
        Над выдачей нажать на кнопку “Посмотреть” в блоке “Сравните стоимость
        билетов на разные даты”
    - do: 'Assert: Открылась динамика цен. Фильтры не активированы'
    - do: Нажать на кнопку фильтра “С Багажом”
    - do: >-
        Assert:  Цвет фона кнопки стал желтым. Во время обновления данных
        появился лоадер. Данные в динамике обновились. Фильтр на странице выдачи
        так же применился. В выдаче остались только варианты, в стоимость
        которых входит багаж
    - assert: |-
        screen
        1
    - do: Нажать кнопку стоимости билета на другую дату в динамике цен
    - do: >-
        Assert: Выдача обновилась. Дата соответствует выбранной в динамике цен.
        Фильтр “с багажом” остался активным.
manual: true
Сервис: Авиа
feature: Авиа
type: ''
description: ''
specs:
  Проверка скрола динамики при применении фильтра:
    - do: 'открыть главную страницу авиабилетов https://travel.crowdtest.yandex.ru/'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: >-
        Над выдачей нажать на кнопку “Посмотреть” в блоке “Сравните стоимость
        билетов на разные даты”
    - do: 'Assert: Открылась динамика цен. Выбран текущий день'
    - do: Проскролить до даты на две недели вперёд
    - do: Нажать на столбец этой даты в таймлайне
    - do: 'Assert: Цвет выбранного столбца изменился на желтый'
    - do: Применить фильтр “Без пересадок”
    - do: >-
        Assert: Динамика обновилась. График не проскролился обратно, а остался
        на прежнем месте.
manual: true
Сервис: Авиа
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка фильтра без пересадок в динамике цен со страницы выдачи':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: Кликнуть по ссылке Смотреть весь календарь в блоке Динамики цен.
    - do: 'Assert: Открылась динамика цен. Фильтры не активированы'
    - do: Нажать на кнопку фильтра “Без пересадок”
    - do: >-
        Assert: Цвет фона кнопок "Без пересадок" и "Пересадки" стал тёмно-серым. Во
        время обновления данных появился лоадер. Данные в динамике обновились.
        Фильтр на странице выдачи так же применился. В выдаче остались только
        варианты без пересадок.

        Screen: https://jing.yandex-team.ru/files/snejca/12210912.png
    - do: |
        Переключиться на График цен
        кликнуть на кнопку со стоимостью для выбранной кнопки
    - assert: >-
        Динамика закрылась, выдача перестроилась, фильтр "Без пересадок"
        на выдаче включен
    - do: Обратить внимание на блок Динамики цен
    - assert: Цены, указанные в этом блоке, отображаются с учётом активного фильтра.
    - do: |
        Кликнуть по кнопке из Динамики цен:
        https://jing.yandex-team.ru/files/gouken67/1009_1.png
    - assert: Осуществился переход на выдачу за выбранную дату. Минимальная цена совпадает с ценой, указанной в кнопке, по которой кликнули. Фильтр Без пересадок включён.
manual: true
Функциональность:
  - Фильтры и сортировки
  - Динамика
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка фильтра С багажом в динамике цен со страницы выдачи':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: Кликнуть по ссылке Смотреть весь календарь в блоке Динамики цен.
    - do: 'Assert: Открылась динамика цен. Фильтры не активированы'
    - do: Нажать на кнопку фильтра “С Багажом”
    - do: >-
        Assert: Цвет фона кнопки стал тёмно-серым. Во время обновления данных
        появился лоадер. Данные в динамике обновились. Фильтр на странице выдачи
        так же применился. В выдаче остались только варианты в стоимость которых
        входит багаж
        Screen: https://jing.yandex-team.ru/files/snejca/12210912.png
    - do: кликнуть на кнопку со стоимостью для любой даты, отличной от текущей
    - assert: >-
        Открылась новая вкладка с выдачей на выбранную дату, фильтр "С багажом"
        на выдаче включен
        На старой вкладке окно Динамики цен остаётся открытым
    - do: |
        Дождаться загрузки выдачи
        Обратить внимание на блок Динамики цен
    - assert: Цены, указанные в этом блоке, отображаются с учётом активного фильтра.
    - do: |
        Кликнуть по кнопке из Динамики цен:
        https://jing.yandex-team.ru/files/gouken67/1009_1.png
    - assert: Осуществился переход на выдачу за выбранную дату. Минимальная цена совпадает с ценой, указанной в кнопке, по которой кликнули. Фильтр С багажом включён.
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: ''
specs:
    Проверка скрола динамики при применении фильтра:
        - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Екатеринбург
              Куда: Санкт-Петербург
              Туда: 5 число следующего месяца, дату обратно не ставить.
              Пассажиры: 1 взрослых
              Класс: Эконом
        - do: Нажать кнопку “Найти”
        - do: 'Assert: Открылась страница выдачи'
        - do: |
              Нажать на кнопку “Посмотреть” в блоке сортировок (рядом с подсказкой о ценах на другие дни)
              https://jing.yandex-team.ru/files/gouken67/Подсказка%20Динамики%20цен.png
        - do: 'Assert: Открылась динамика цен. Выбрана дата из формы поиска'
        - do: Проскролить на две недели вперёд
        - do: Применить фильтр “Без пересадок”
        - do: 'Assert: Динамика обновилась. Таблица проскроллилась обратно к 5-му числу'
manual: true
Функциональность:
    - Фильтры и сортировки
    - Динамика
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Страница заказа
description: ''
specs:
  Раскрытие блока цен партнёров:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: Кликнуть по любому сниппету (не по кнопке купить)
    - do: >-
        Assert: Открылась страница покупки. В правой части страницы указаны
        партнёры и предлагаемые цены. Присутствует ссылка "Показать все
        предложения".

        (если ссылки нет - выбрать другой сниппет)

        Screen: https://jing.yandex-team.ru/files/snejca/15190912.png
    - do: Нажать на ссылку “Показать все предложения”.
    - do: 'Assert: Раскрывается список остальных предложений'
    - do: 'Выбрать последнее предложение, кликнуть по кнопке Купить'
    - assert: >-
        assert:  В новой вкладке открылся сайт партнера, выполняется поиск на
        указанные ранее данные
manual: true
Устройство: Десктоп
Страница: Страница заказа
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: ''
description: ''
specs:
  Проверка кнопки переключения валюты:
    - do: 'открыть главную страницу авиабилетов https://travel.crowdtest.yandex.ru/'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Париж
        Куда: Берилн
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Цены указаны в рублях и валюте. Под
        ценами в валюте указана примерная цена в рублях.
    - do: Нажать на кнопку переключения валюты
    - do: >-
        Assert: Блок раскрылся. Возле выбранной валюты стоит галочка. Валюты
        отображены в виде символа этой валюты, кроме тенге(тенге так и
        написано).
    - do: Выбрать “Доллар”.
    - do: >-
        Assert: Галочка пропала возле рубля, а появилась возле доллара. Блок
        свернулся. В фильтрах “Без пересадок”, “С багажом” и “бюджета”, а так же
        в “Динамике цен” цены указаны в долларах.
    - do: >-
        Assert: Цены предложений указаны в долларах. Конвертация по курсу ЦБ +
        3%. В предложениях с валютной ценой, если цена была не в долларах, под
        ценой валюты отображена примерная стоимость в долларах. Если валютные
        предложения были с ценами в долларах, то остаётся только одна цена в
        долларах.
    - do: Кликнуть по любому сниппету(не по кнопке купить)
    - do: >-
        Assert: На странице покупки цены партнёров в долларах, так же цены за
        отели указаны в долларах.
    - do: Перейти к любому партнёру
    - do: 'Assert: Цены у партнёра указаны в долларах'
manual: true
Сервис: Авиа
feature: Авиа
type: ''
description: ''
specs:
  Проверка фильтра С багажом на странице покупки:
    - do: 'открыть главную страницу авиабилетов https://avia.yandex.ru'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Фильтр “С багажом” не активный. На
        кнопке есть информация о минимальной стоимости билета с этим фильтром.
    - do: Кликнуть по сниппету с предложением от s7
    - do: >-
        Assert: Над блоком предложений есть кнопка фильтра “С Багажом”. Она не
        активна.
    - do: Нажать на кнопку фильтра “С Багажом”
    - do: >-
        Assert: В блоке предложений остались только предложения с включённым в
        стоимость багажом.
    - assert: >-
        screen

        https://jing.yandex-team.ru/files/megamgistr/Sankt-Peterburg_28iyunya_kupit_aviabilety_iz_Moskvy_2019-06-26_10-51-41.png
    - do: Вернуться на страницу выдачи
    - do: 'Assert: Фильтр “С Багажом” на странице выдаче не активный.'
manual: true
Сервис: Авиа
feature: Авиа
type: ''
description: ''
specs:
  Проверка фильтра С Багажом в динамике цен на странице динамики:
    - do: 'открыть главную страницу авиабилетов https://travel.crowdtest.yandex.ru/'
    - do: В блоке рецептов нажать на кнопку “Динамика цен” на первом варианте.
    - do: 'Assert: Открылась динамика цен. Фильтры не активированы'
    - do: Нажать кнопку фильтра “С Багажом”
    - do: >-
        Assert: Цвет фона кнопки стал тёмным, а шрифт светлым. Во время
        обновления динамики появился лоадер. Динамика обновилась с учётом
        выбранного фильтра.
    - do: Нажать кнопку “Найти” рядом с графиком динамики
    - do: >-
        Assert: Открылась страница выдачи. Фильтр “с Багажом” активирован. В
        выдаче рейсы только с включенным багажом. Параметры перелёта совпадают с
        параметрами на странице Динамики В блоке фильтров есть кнопка
        “Сбросить”.
manual: true
Сервис: Авиа
feature: Авиа
type: ''
description: ''
specs:
  Проверка фильтра Без Пересадок в динамике цен на странице динамики:
    - do: 'открыть главную страницу авиабилетов https://avia.yandex.ru'
    - do: В блоке рецептов нажать на кнопку “Динамика цен” на первом сниппите.
    - do: 'Assert: Открылась динамика цен. Фильтры не активированы'
    - do: Нажать кнопку фильтра “Без пересадок”
    - do: >-
        Assert: Цвет фона кнопки стал тёмным, а шрифт светлым. Во время
        обновления динамики появился лоадер. Динамика обновилась с учётом
        выбранного фильтра.
    - do: Нажать кнопку “Найти” рядом с графиком динамики
    - do: >-
        Assert: Открылась страница выдачи. Фильтр “Без пересадок” активирован. В
        выдаче только прямые рейсы. Параметры перелёта совпадают с параметрами
        на странице Динамики. В блоке фильтров есть кнопка “Сбросить”.
manual: true
Сервис: Авиа
feature: Авиа
type: ''
description: ''
specs:
  Проверка комбинации фильтров в динамике цен настранице динамики:
    - do: 'открыть главную страницу авиабилетов https://avia.yandex.ru'
    - do: В блоке рецептов нажать на кнопку “Динамика цен” на первом сниппите.
    - do: 'Assert: Открылась динамика цен. Фильтры не активированы'
    - do: Нажать кнопку фильтра “Без пересадок”
    - do: >-
        Assert: Цвет фона кнопки стал тёмным, а шрифт светлым. Во время
        обновления динамики появился лоадер. Динамика обновилась с учётом
        выбранного фильтра.
    - do: Нажать кнопку фильтра “С Багажом”
    - do: >-
        Assert: Цвет фона кнопки стал тёмным, а шрифт светлым. Во время
        обновления динамики появился лоадер. Динамика обновилась с учётом
        выбранных фильтров
    - do: Нажать кнопку “Найти” возле графика динамики цен
    - do: >-
        Assert: Открылась страница выдачи. Фильтры “Без пересадок” и “С Багажом”
        активированы. В выдаче только прямые рейсы в стоимость которых включён
        багаж. Параметры перелёта совпадают с параметрами на странице Динамики.
        В блоке фильтров есть кнопка “Сбросить”.
manual: true
Сервис: Авиа
feature: Авиа
type: ''
description: ''
specs:
  Проверка сохранения фильтра с выдачи в динамике цен:
    - do: 'открыть главную страницу авиабилетов https://avia.yandex.ru'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: “Нажать кнопку Найти”
    - do: >-
        Assert: Открылась страница выдачи. Фильтр “С багажом” не активный. На
        кнопке есть информация о минимальной стоимости билета с этим фильтром.
    - do: Нажать на кнопку фильтра “С Багажом”
    - do: >-
        Assert: Цвет фона кнопки стал тёмным, а шрифт светлым. В блоке фильтров
        появилась кнопка “Сбросить”.
    - do: >-
        Assert: В выдаче отображаются только варианты с включённым в стоимость
        багажом
    - do: Открыть “Динамику цен”
    - do: >-
        Assert: Динамика открылась, фильтр “С Багажом” так же активный. Динамика
        загрузилась в соответсвии с фильтром.
manual: true
Сервис: Авиа
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка заглушки на выдаче, если отфильтровать так, что не остаётся вариантов':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Самара
        Куда: Москва
        Туда: 20 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи. Фильтры не применены.'
    - do: Применить фильтр “Без пересадок”
    - do: 'Assert: В выдаче остались только прямые рейсы выбранной а/к.'
    - do: 'В форме заменить город “Откуда” на Торонто, нажать кнопку “найти”'
    - do: >-
        Assert: Открылась страница выдачи, фильтр “без пересадок” установлен.
        Вместо вариантов перелёта - заглушка “Нет подходящих вариантов. Ни один
        вариант из результатов поиска не соответствует заданным фильтрам.
        Пожалуйста, сбросьте один или несколько фильтров” и кнопка “пересадки” с
        крестиком.
    - do: Сбросить крестиком фильтр
    - do: 'Assert: Показались варианты с пересадками.'
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
feature: Авиа
type: Выдача
description: ''
specs:
  '[Touch]Проверка фильтра пересадок "Не более одной" в тачах':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты в таче'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи.'
    - do: Открыть меню фильтров
    - do: 'Assert: Открылась шторка с фильтрами. Ни один фильтр не выбран.'
    - do: Перейти в фильтр “Пересадки”
    - do: 'Assert: Шторка фильтров пересадок развернулась. Ни один фильтр не выбран'
    - do: Выбрать фильтр “Не более одной пересадки”
    - do: >-
        Assert: В чекбоксе напротив появилась галочка, фон чекбокса стал жёлтым.
        На кнопке меню фильтров появилась цифра 1 обозначающая что фильтр
        пересадок активен.

        screen: https://jing.yandex-team.ru/files/molox/пальма1.png
    - do: Нажать кнопку “Готово”
    - do: >-
        Assert: Шторка с фильтрами пересадок скрылась. На фильтре пересадок
        видим цифру 1 обозначающую кол-во примененных фильтров внутри пересадок.
        Так эже видим крестик для сброса фильтров внутри пересадок.

        screen: https://jing.yandex-team.ru/files/molox/12345.png
    - do: Кликаем по кнопке "Показать n варинатов"
    - do: >-
        Assert: Шторка с меню фильтров скрылась. Выдача соответствует
        примененным фильтрам.

        На кнопке меню фильтров видим число обозначающее кол-во примененных
        фильтров.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: [Touch]Проверка фильтра пересадок "Без пересадок" в тачах':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи.   (если рейсов на эту дату нет,
        поискать на 5 число следующего месяца)
    - do: Открыть меню фильтров
    - do: 'Assert: Открылась шторка с фильтрами. Ни один фильтр не выбран.'
    - do: Перейти в фильтр “Пересадки”
    - do: 'Assert: Шторка фильтров пересадок развернулась. Ни один фильтр не выбран'
    - do: >-
        Выбрать фильтр “Без пересадок” (если фильтр неактивен, поискать на 5
        число следующего месяца)
    - do: >-
        Assert: В чекбоксе напротив появилась галочка, фон чекбокса стал жёлтым.
        Скрылись ползунки длительности пересадки. Кнопки фильтров без пересадки
        загорелись тёмно-серым.

        screen: https://jing.yandex-team.ru/files/molox/пересад.png
    - do: Нажать кнопку "Готово"
    - do: >-
        Assert: Шторка Пересадок скрылась.

        Видим что на фильтре пересадок есть цифра 1 и крестик для сброса фильтра
        пересадок.

        Кнопка "Без пересадок" активна и горит тёмно-серым.
    - do: Кликаем по кнопке "Показать n вариантов"
    - do: >-
        Assert: Шторка с фильтрами скрылась. Кнопка "Без пересадок" на выдаче
        горит тёмно-серым и на кнопке меню фильтров есть цифра 1.

        screen: https://jing.yandex-team.ru/files/molox/ыыы.png
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка сохранения фильтра с выдачи в динамике цен:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: “Нажать кнопку Найти”
    - do: >-
        Assert: Открылась страница выдачи. Фильтр “С багажом” не активный. На
        кнопке есть информация о минимальной стоимости билета с этим фильтром.
    - do: Нажать на кнопку фильтра “С Багажом”
    - do: 'Assert: Цвет фона кнопки стал тёмно-серым.'
    - do: >-
        Assert: В выдаче отображаются только варианты с включённым в стоимость
        багажом. Над списком сниппетов отображается количество выбранных
        вариантов
    - do: Открыть “Динамику цен”
    - do: >-
        Assert: Динамика открылась, фильтр “С Багажом” так же активный. Динамика
        загрузилась в соответствии с фильтром.
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: >-
  “Ночной пересадка считается, если интервал от прилета до вылета пересекается с
  [00:00; 06:00], тут в том числе все пересадки длительностью больше 24 часов
  считаются ночными)”
specs:
  '[Touch]Проверка фильтра пересадок "Без ночных пересадок" в тачах':
    - do: >-
        открыть главную страницу путешествий, вкладка Авиабилеты через браузер
        телефона/приложение/режим эмуляции
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи.
    - do: Открыть меню фильтров
    - assert: Шторка с меню фильтров открылась. Ни один фильтр не выбран.
    - do: Перейти в фильтр ““Пересадки””
    - assert: |
        Шторка с фильтрами пересадок открылась. Ни один фильтр не выбран'
        Есть серая надпись Сбросить
    - do: Выбрать фильтр “Без ночных пересадок”
    - assert: |-
        В чекбоксе напротив появилась галочка, фон чекбокса стал жёлтым.
        screen: https://jing.yandex-team.ru/files/molox/исноваседаяночь.png
        Надпись Сбросить стала синей
    - do: Нажать кнопку “Готово”
    - assert: |-
        Шторка с фильтрами пересадок скрылась.
        Видим что на фильтре пересадок видна цифра 1
    - do: Кликнуть по кнопке "Показать n вариантов"
    - assert: >-
        На кнопке меню фильтров видно цифру 1, кнопка выделена желтым
        цветом.

        screen: https://jing.yandex-team.ru/files/molox/1234.png
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Страница покупки
description: ''
specs:
  'Авиа: Опрос партнёров на странице покупки':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Мехико
        Туда: 20 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку "Найти"
    - do: >-
        Assert: Открылась страница поиска вариантов(прелоадер), после открылась
        страница выдачи, внизу страницы прогрессбар показывающий сколько
        партнёров из скольких опрошено.

        **Важно:** Прогрессбара может не быть, если эта выдача уже была получена
        недавно.
    - do: >-
        Как только открылась страница выдачи, сразу перейти по первому
        сниппету (не по кнопке Купить и не по багажной информации)
    - do: >-
        Assert: Открылась страница покупки. Есть информация о рейсе, догружается
        только блок партнёров.
    - do: >-
        Подождать пока все партнёры будут опрошены(прогресс бар внизу страницы
        пропадёт)
    - do: 'Assert: В блоке партнёров появились все партнёры'
manual: true
Функциональность: Переход к партнёру
Устройство:
  - Десктоп
  - Тач
Страница: Страница покупки
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: ''
specs:
  '[Touch]Проверка фильтра пересадок "Без смены аэропорта" в тачах':
    - do: >-
        открыть главную страницу путешествий, вкладка Авиабилеты через браузер
        телефона/приложение/режим эмуляции
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: >-
        Открылась страница выдачи. В фильтре пересадок ничего не
        выбрано.
    - do: Открыть меню фильтров
    - assert: Открылась шторка с меню фильтров
    - do: Перейти в фильтр “Пересадки”
    - assert: |
        Открылась шторка с фильтрами пересадок
        Есть серая надпись Сбросить
    - do: Выбрать фильтр “Без смены аэропорта”
    - assert: >-
        В чекбоксе напротив появилась галочка, фон чекбокса стал
        жёлтым.

        screen: https://jing.yandex-team.ru/files/molox/гык.png
        Надпись Сбросить стала синей
    - do: Нажать кнопку “Готово”
    - assert: >-
        Шторка пересадок скрылась. На фильтре пересадок видка цифра 1.
        Есть кнопка крестика с возможность сбросить конкретный фильтр.

        screen: https://jing.yandex-team.ru/files/molox/гик.png
    - do: Кликнуть по кнопке "Показать n предложений"
    - assert: >-
        Закрылась шторка с меню фильтров. кнопка меню фильтров горит
        желтым и на ней видна цифра 1.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  '[Touch]Проверка фильтра пересадок "слайдер времени пересадки" в тачах':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты в таче'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи.'
    - do: Открыть меню фильтров
    - do: |-
        Assert: Открылась шторка фильтров. Ни один фильтр не выбран.
        screen: https://jing.yandex-team.ru/files/molox/меню123.png
    - do: Перейти в фильтр “Пересадки”
    - do: >-
        Assert: Шторка фильтров пересадок открылась. Ни один фильтр не выбран.
        Левый бегунок слайдера максимально слева, правый максимально справа.
    - do: Передвинуть левый бегунок слайдера на середину.
    - do: 'Assert: Изменилось время пересадки для левого ползунка'
    - do: Передвинуть правый ползунок
    - do: 'Assert: Изменилось время пересадки для правого ползузнка'
    - do: Кликнуть по кнопке "Готово"
    - do: >-
        Assert: Шторка фильтров пересадок закрылась. Мы видим число 1 на фильтре
        пересадок и крестик с возможностью сбросить фильтр

        screen: https://jing.yandex-team.ru/files/molox/44444.png
    - do: Кликаем по кнопке "Показать n вариантов"
    - do: >-
        Assert: Шторка меню фильтров скрылась. Кнопка меню фильтров выделена
        желтым и имеет цифру 1
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: Отутствие логотипа Авиакомпании - не баг!
specs:
  'Авиа: [Touch]Проверка фильтра "Аэропортов" в тачах':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты в таче'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи.'
    - do: Открыть меню фильтров
    - do: |-
        Assert: Шторка меню фильтров открылась. Ни один фильтр не выбран.
        screen: https://jing.yandex-team.ru/files/molox/55555.png
    - do: Перейти в фильтр “Аэропорты”
    - do: >-
        Assert: Шторка фильтра аэропортов открылась. Ни один фильтр не выбран.
        Аэропорты расположены столбиком друг под другом. Сначала аэропорты
        Лондона затем Москвы.
    - do: Выбрать один аэропорт для Лондона и один для Москвы
    - do: >-
        Assert: В чекбоксах напротив появились галочки, фон чекбоксов стал
        жёлтым.

        screen: https://jing.yandex-team.ru/files/molox/22222.png
    - do: Нажать кнопку “Готово”
    - do: >-
        Assert: Шторка фильтра Аэропортов скрылась. На фильтре Аэропорты
        отображается кол-во примененных фильтров.

        screen: https://jing.yandex-team.ru/files/molox/аэро.png
    - do: Кликнуть по кнопке "Показать n вариантов"
    - do: >-
        Assert: Шторка с меню фильтров скрылась. Кнопка меню фильтров горит
        темно-серым и на ней отображается кол-во примененных фильтров.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
feature: Авиа
type: Страница покупки
description: ''
specs:
  'Авиа: Непротухающая страница покупки':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Самара
        Туда: текущее число, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: Кликнуть по первому сниппету(не по кнопке купить)
    - do: >-
        Assert: Открылась страница покупки(урл /order).  Есть информация о
        рейсе, в блоке партнёров представлены партнёры и цены
    - do: >-
        Изменить в урле в параметрах “when=”  и "forward" на вчерашнюю дату
        (например, forward=DP%20340.2020-08- **05** T05%3A55 ->
        forward=DP%20340.2020-08- **04** T05%3A55)
    - do: >-
        Assert: Страница покупки обновилась. Информация о рейсе есть. В блоке
        партнёров сообщение

        “Ничего не нашлось

        Увы, машину времени ещё не изобрели, а выбранная дата отправления уже в
        прошлом.”

        Screen:
        https://jing.yandex-team.ru/files/tcheremnykh/2020-09-02_11-42-35.png


        Примечание: Если вы проводите проверку 1-го числа месяца и заменяете
        дату на 30/31 число прошлого месяца - ошибка будет другой, это баг
        TRAVELASSESSORS-575
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница покупки
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  '[Touch]Проверка фильтра "время вылета/прилета" в тачах':
    - do: >-
        открыть главную страницу путешествий, вкладка Авиабилеты через браузер
        телефона/приложение/режим эмуляции
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, Обратно: 15 число следующего месяца
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи.'
    - do: Открыть меню фильтров
    - do: 'Assert: Шторка меню фильтров открылась. Ни один фильтр не выбран.'
    - do: Перейти в фильтр “Время вылета/прилета”
    - do: >-
        Assert: Шторка фильтра “Время вылета/прилета” развернулась. Сначала
        указано время отправления/прибытия для рейса Туда, потом для рейса
        обратно.
    - do: >-
        Для рейса туда в блоке прибытия выбрать “День”. Для рейса обратно в
        блоке вылета выбрать время отправления “Утро”
    - do: 'Assert: У выбранных пунктов проставилась галочка в чекбоксе.'
    - do: Нажать кнопку “Готово”
    - do: >-
        Assert: Шторка с фильтрами времени вылета/прилета скрылась. На фильтре
        отображается кол-во выбранных временных промежутков. Есть кнопка
        крестика для сброса фильтра.
    - do: Кликнуть по кнопке "Показать n вариантов"
    - do: >-
        Assert: Шторка меню фильтров скрылась. Выдача соответствует примененным
        фильтрам. Кнопка меню фильтров горит желтым цветом и на ней видно кол-во
        активных фильтров
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: Отсутствие логотипа Авиакомпании - не баг!
specs:
  'Авиа: [Touch]Проверка фильтра "Авиакомпании" в тачах':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты в таче'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: В результате поиска билеты только туда.'
    - do: Открыть меню фильтров
    - do: 'Assert: Шторка меню фильтров открылась. Ни один фильтр не выбран.'
    - do: Перейти в фильтр “Авиакомпании”
    - do: >-
        Assert: Шторка фильтров авиакомпаний развернулась. Ни один фильтр не
        выбран.

        screen: https://jing.yandex-team.ru/files/molox/666.png
    - do: Выбрать фильтр одной из доступных авиакомпаний
    - do: 'Assert: В чекбоксе напротив появилась галочка, фон чекбокса стал жёлтым.'
    - do: Нажать кнопку “Готово”
    - do: >-
        Assert: Шторка фильтра Авиакомпаний скрылась. На фильтре отображается
        кол-во выбранных авиакомпаний в виде цифры в желтом кружке. Есть кнопка
        сброса фильтра в виде крестика.

        screen: https://jing.yandex-team.ru/files/molox/4321.png
    - do: Кликнуть по кнопке "Показать n вариантов"
    - do: >-
        Assert: Шторка меню фильтров скрылась. Выдача соответствует выбранным
        фильтрам. Кнопка меню фильтров горит желтым и на ней изображено кол-во
        выбранных фильтров.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка дизейбла фильтров, если рейсов с таким фильтром нет':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Саппоро
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре аэропортов ничего не
        выбрано.
    - do: Нажать на кнопку фильтра пересадок
    - do: |-
        Assert: Фильтр “Без пересадок” задизейблен
        screen: https://jing.yandex-team.ru/files/tcheremnykh/travel-1032.png
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: Отсутствие логотипа Авиакомпании - не баг!
specs:
  'Авиа: [Touch]Проверка комбинации фильтров и кнопки сбросить в тачах':
    - do: >-
        открыть главную страницу путешествий, вкладка Авиабилеты через браузер
        телефона/приложение/режим эмуляции
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи.'
    - do: Открыть меню фильтров
    - do: |-
        Assert: Открылась шторка меню фильтров. Ни один фильтр не выбран.
        screen: https://jing.yandex-team.ru/files/molox/789.png
    - do: Перейти в фильтр “Пересадки”
    - do: |-
        Assert: Шторка фильтров пересадок развернулась. Ни один фильтр не выбран
        screen: https://jing.yandex-team.ru/files/molox/345.png
    - do: Выбрать фильтр “Без пересадок”. Если фильтр недоступен - пропустите шаг.
    - do: >-
        Assert: В чекбоксе напротив фильтра “Без пересадок” появилась галочка,
        фон чекбокса жёлтого цвета.
    - do: Развернуть шторку фильтра “Аэропорты”
    - do: 'Assert: Блок фильтров аэропортов развернулся. Ни один фильтр не выбран.'
    - do: >-
        Выбрать аэропорты Хитроу и Домодедово (если недоступны, поискать на 5
        число следующего месяца)
    - do: >-
        Assert: В чекбоксе напротив Аэропортов появилась галочка, фон чекбокса
        жёлтого цвета.
    - do: Нажать кнопку “Показать n вариантов”
    - do: >-
        Assert: Шторка меню фильтров скрылась. Применен и выделен темно серым цветом
        фильтр "Без пересадок", так же выделена темно серым цветом кнопка меню
        фильтров и на ней есть кол-во примененных фильтров  виде цифры. Выдача
        соответствует примененным фильтрам.

        screen: https://jing.yandex-team.ru/files/iliasova/2021-11-16_00.46.50-urj8j.png
    - do: Открыть меню фильтров фильтров
    - do: Нажать кнопку “Сбросить”
    - do: 'Assert: Все фильтры сброшены'
    - do: Нажать кнопку “Показать n вариантов”
    - do: 'Assert: Шторка меню фильтров скрылась. На выдаче показаны все варианты'
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка того что предложения не дублируются':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: Текущее число, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Предложения представлены в одном
        варианте (Т.е. все предложения на выдаче уникальны по сочетанию времени,
        ак, аэропортов вылета)


        **Важно:** Если всё же удалось найти похожие предложения - перейдите на
        страницу покупки и убедитесь, что в обоих предложениях указаны
        одинаковые рейсы с одинаковым временем отправления/прибытия. Если для
        обоих предложений все данные сходятся - это баг.
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка скролла динамики, График цен':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: Нажать на кнопку динамики цен
    - do: 'Assert: Открылась динамика цен.'
    - do: Поменять на График цен
    - assert: |
        Отображается график в виде гистограммы, где:
        1) Выбран день вылета, столбец жёлтого цвета
        2) Автоматически происходит опрос партнёров (если изначально нет цен на
        какие-то даты) для +- 3 дня от выбранной даты - отображаются лоадеры на
        столбиках
        3) Дни, для которых цена известна, светло серого цвета, под столбцами
        указана цена. Дни, для которых цена не известна, - в полосочку, под
        столбцами - кнопка "Найти"
        4) Есть ватерлиния - пунктирная линия, построенная относительно
        выбранного столбца
        Screen:
        https://jing.yandex-team.ru/files/tcheremnykh/2020-01-28_16-30-08.png
    - do: Нажать на стрелку скролла справа.
    - do: 'Assert: график проскроллился на 1 столбик вправо'
    - do: Нажать на стрелку скролла слева.
    - assert: 'Assert: график проскроллился на 1 столбик влево'
manual: true
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка актуальности рейсов для заграницы:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: Текущее число, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: Нажать на кнопку с сортировками
    - do: 'Выбрать сортировку “По времени отправления”, порядок оставить прежним'
    - do: >-
        Assert: Варианты отсортированы по времени отправления от меньшего к
        большему. В выдаче только те рейсы до времени отправления которых не
        меньше часа по московскому времени
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Отображение информации об автобусной пересадке:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Дубай
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку Найти
    - do: >-
        Assert: Найдены варианты перелёта в одну сторону

        Есть предложения до Travel Mall EY Bus Station _(если предложений нет,
        выбрать другую дату)_

        На сниппете отображается информация что пересадка будет на автобусе. В
        десктопе, если навести курсор на информацию о пересадках - появится
        pop-up, где так же будет информация о пересадке на автобус.

        Screen: https://jing.yandex-team.ru/files/gouken67/travel_1038.png
    - do: Кликнуть по сниппету(не по кнопке купить) с рейсом до этого вокзала
    - do: |-
        Assert: Открылась страница покупки.
        На втором сегменте есть информация что пересадка на автобусе
    - do: Перейти к партнёру по жёлтой кнопке для покупки
    - do: >-
        Assert: Переход сработал.Открылась страница с лэндингом варианта.
        Параметры варианта у партнёра совпадают с нашими, цена может отличаться
        только в меньшую сторону
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка производственного календаря в динамике:
    - do: Открыть страницу выдачи по любому поисковому запросу
    - do: Нажать на кнопку открытия динамики цен
    - do: >-
        Assert: Открывается попап с динамикой цен. В динамике выходные и
        праздничные дни недели выделены красным
    - do: |
        Закрыть Динамику цен.
        Совершить поиск на ближайшую праздничную дату.
        Проверить отображение в блоке Динамики цен: https://jing.yandex-team.ru/files/gouken67/1009_1.png
    - assert: Выходные и праздничные дни недели выделены красным
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: ''
description: ''
specs:
  Проверка того что предложения не дублируются:
    - do: 'открыть главную страницу авиабилетов https://avia.yandex.ru'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: Текущее число, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Предложения представлены в одном
        варианте.
manual: true
Сервис: Авиа
feature: Авиа
type: Выдача
description: 'Параметры сортировки сохраняются в куках. Если сортировка изначально не "Сначала рекомендуемые", то перед созданием баг-репорта стоит почистить куки или открыть вкладку инкогнито'
specs:
  Проверка сортировки "Сначала рекомендуемые" лучшая цена:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Сортировка по умолчанию “Сначала
        рекомендуемые”. В Первом сниппете под ценой указанно “Лучшая цена”.

        screen:
        https://jing.yandex-team.ru/files/kuklina/2022-03-31_17-38-12.png

        screen-touch:
        https://jing.yandex-team.ru/files/gouken67/travel_1042_touch.png
    - do: 'Шаг для десктопа: Сменить сортировку на "Сначала дешевые"'
    - do: 'Шаг для тача: Сменить сортировку на “По цене”'
    - do: Надпись “Лучшая цена” осталась для предложений с лучшей ценой.
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
    Проверка фильтра пересадок "Не более одной" для направления туда и обратно:
        - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Сочи
              Куда: Екатеринбург
              Туда: 5 число следующего месяца, Обратно: 10 число следующего месяца
              Пассажиры: 1 взрослых
              Класс: Эконом
        - do: Нажать кнопку “Найти”
        - do: >-
              Assert: Открылась страница выдачи. Есть варианты с 2 и более пересадками
              как туда так и обратно. В фильтре пересадок ничего не выбрано.
              Присутствует надпись Сбросить.
        - do: Нажать на кнопку фильтра пересадок
        - do: >-
              Assert: Показался блок фильтра. Галочки не на одном из пунктов не
              стоит.Контроллер длительности пересадки максимально справа.
        - do: Выбрать пункт “Не более одной пересадки”
        - do: >-
              Assert: В чек-боксе появилась галочка. Цвет фона кнопки стал тёмно-серым. В
              блоке фильтров появилась кнопка “Сбросить”.
              Надпись Сбросить в фильтре Пересадки стала синего цвета
        - do: >-
              Assert: В выдаче отображаются только варианты “Прямой” и с одной
              пересадкой как туда, так и обратно
        - do: Нажать на кнопку фильтра пересадок
        - do: 'Assert: блок фильтра свернулся. Кнопка "Пересадки" тёмно-серого цвета.'
        - do: |
              Открыть фильтр Пересадок снова
              Кликнуть по синей надписи Сбросить
        - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка фильтра пересадок "Без пересадок" для направления туда и обратно':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, Обратно: 10 число следующего месяца
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Есть рейсы с пересадками, как туда,
        так и обратно. В фильтре пересадок ничего не выбрано.
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: Показался блок фильтра. Галочки не на одном из пунктов не
        стоит.Контроллер длительности пересадки максимально справа.
        Есть серая надпись Сбросить
    - do: Выбрать пункт “Без пересадок”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет фона кнопки стал тёмно-серым.
        Также у отдельной кнопки фильтра Без пересадок фон стал тёмно-серым. В блоке
        фильтров появилась кнопка “Сбросить”.
        В фильтре Пересадки надпись Сбросить стала синей.
    - do: >-
        Assert: В выдаче отображаются только варианты “Прямой”, как туда, так и
        обратно
    - do: Нажать на кнопку фильтра пересадок
    - do: 'Assert: блок фильтра свернулся. Кнопка “Пересадки” тёмно-серого цвета.'
    - do: |
          Снова открыть фильтр Пересадки
          Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: >-
  “Ночной пересадка считается, если интервал от прилета до вылета пересекается с
  [00:00; 06:00], тут в том числе все пересадки длительностью больше 24 часов
  считаются ночными)”
specs:
  Проверка фильтра пересадок "Без ночных пересадок" для направления туда и обратно:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Лондон
        Туда: 5 число следующего месяца, Обратно: 10 число следующего месяца.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Есть предложения с ночными
        пересадками, как туда, так и обратно. В фильтре пересадок ничего не
        выбрано.
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: Показался блок фильтра. Галочки не на одном из пунктов не
        стоит.Бегунок слайдера длительности пересадки максимально справа.
        Есть серая надпись Сбросить
    - do: Выбрать пункт “Без ночных пересадок”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет фона кнопки стал тёмно-серым. В
        блоке фильтров появилась кнопка “Сбросить”.
        В фильтре Пересадки надпись Сбросить стала синей.
    - do: >-
        Assert: В выдаче отображаются только варианты “без ночных пересадок”,
        как туда, так и обратно
    - do: Нажать на кнопку фильтра пересадок
    - do: 'Assert: блок фильтра свернулся. Кнопка “Пересадки” тёмно-серого цвета.'
    - do: |
        Снова открыть фильтр Пересадки
        Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: Адаптировать тач+ десктоп
specs:
  Проверка фильтра пересадок "Без смены аэропорта" для направления туда и обратно:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Лондон
        Туда: 5 число следующего месяца, Обратно: 10 число следующего месяца
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Есть предложения с пересадками со
        сменой аэропорта, как туда, так и обратно. В фильтре пересадок ничего не
        выбрано.
    - do: >-
        Нажать на кнопку фильтра пересадок (В таче спрятаны за кнопкой
        https://jing.yandex-team.ru/files/tcheremnykh/2019-12-16_18-11-02.png)
    - do: >-
        Assert: Показался блок фильтра. Галочки не на одном из пунктов не
        стоит.Бегунок слайдера длительности пересадки максимально справа.
        Есть серая надпись Сбросить
    - do: Выбрать пункт “Без смены аэропорта”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет фона кнопки стал тёмно-серым. В
        блоке фильтров появилась кнопка Сбросить.
        В фильтре Пересадки надпись Сбросить стала синей.
    - do: >-
        Assert: В выдаче отображаются только варианты без смены аэропорта, как
        туда, так и обратно
    - do: Нажать на кнопку фильтра пересадок
    - do: 'Assert: блок фильтра свернулся. Кнопка “Пересадки” тёмно-серого цвета.'
    - do: |
        Снова открыть фильтр Пересадки
        Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: ''
description: ''
specs:
  Проверка актуальности рейсов для заграницы:
    - do: 'открыть главную страницу авиабилетов https://avia.yandex.ru'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Берлин
        Туда: Текущее число, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: Нажать на кнопку с сортировками.
    - do: 'Выбрать сортировку “По времени отправления”, порядок оставить прежним'
    - do: >-
        Assert: Варианты отсортированы по времени отправления от меньшего к
        большему. В выдаче только те рейсы до времени отправления которых не
        меньше часа по Лондонскому времени.
manual: true
Сервис: Авиа
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка фильтра Аэропорты':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Лондон
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре аэропортов ничего не
        выбрано.
    - do: Нажать на кнопку фильтра аэропортов
    - do: >-
        Assert: Показался блок фильтра для аэропортов туда. Аэропорты
        расположены столбиком друг под другом. Сначала аэропорты “ИЗ МОСКВЫ”,
        потом аэропорты “В ЛОНДОН”.
        Галочки не на одном из пунктов не стоит.
    - do: |
        Выставить значение "ИЗ МОСКВЫ" = "Шереметьево", "В ЛОНДОН" = Хитроу
        Закрыть фильтр и вернуться на выдачу
    - assert: На выдаче остались только варианты с вылетом из Шереметьево и прилётом в Хитроу
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка динамики цен для направления "Туда и обратно"':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца
        Обратно: 7 число следующего месяца
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: Кликнуть по ссылке Смотреть весь календарь в блоке Динамики цен.
    - do: >-
        Assert: Открылась страница динамики цены для выбранного направления

        Есть фильтры "Без пересадок", “С Багажом”, “Пересадки”,“ Время
        вылета/прилёта”

        Есть переключатель, - по дефолту “Таблица цен”

          роисходит обновление цен для промежутков, на которые цена была неизвестна (лежат по диагонали от выделенной клетки), а также на 6 дополнительных клеток вокруг жёлтой.

        Динамика отображается для направления “Туда и обратно”. В таблице числа,
        указанные в столбцах Туда и строках Обратно, записаны чёрным шрифтом. Если есть выходные/праздничные дни недели, они указаны красным шрифтом.
    - do: >-
        После прогрузки актуальной цены (когда исчезнет спиннер) нажать на кнопку
        с ценой (период, отличный от выбранного из п.2).
    - assert: >-
        Assert: Динамика закрылась, совершился переход на выдачу с датами,
        выбранными в динамике. Цена самого дешевого предложения соответствует
        цене из кнопки на динамике.
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
feature: Авиа
type: Главная
description: ''
specs:
  Поиск из аэропорта в страну:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Шереметьево
        Куда: США
        Туда: 5 число следующего месяца
        Обратно: 10 число следущего месяца.
        Пассажиры: 1 взрослый, 1 ребенок, 1 младенец
        Класс: Бизнес
    - do: Нажать кнопку Найти
    - assert:  |
        В поле Куда подставилось название страны
        Переходим на страницу Поиска до страны
        На странице есть: шапка со свернутой формой поиска, баннер с информацией об ограничениях, карточки с популярными городами выбранной страны, футер.
        Карточка состоит из фото города или заглушки (если фото нет), названия города и минимальной цены перелёта. Страница может содержать цены с приставкой "~" и спиннером. Если в город нет рейсов, цены не будет совсем.
        'Скриншот десктоп: https://jing.yandex-team.ru/files/kuklina/2022-04-14_16-06-58.png'
        'Скриншот тач: https://jing.yandex-team.ru/files/kuklina/2022-04-15_17-18-10.png'
    - do: Дождаться загрузки всех цен
    - do: Обновить страницу
    - assert: |
        Внешний вид страницы прежним.
        Баннер с ограничениями показывает нужную страну.
        Поиск цен заново не запускается.
    - do: Кликнуть на баннер с информацией об ограничениях
    - assert: Открывается попап-окно \ шторка с подробной информацией для страны назначения.
    - do: Закрыть попап \ шторку с ограничениями.
    - do: ввести в поле "Куда" Россия
    - assert:  |
        Переходим на страницу Поиска до страны
        На странице нет баннера с ограничениями на въезд в страну.
        Среди карточек городов нет Москвы
    - do: Запомнить цену на любой карточке города, кликнуть по этой карточке города.
    - assert:  |
        Открывается выдача поиска в указанный город.
        Гороа "Откуда", дата, количество пассажиров и класс обслуживания соответстуют запросу из поиска до страны.
        "Куда" соответствует городу с выбранной карточки.
        Самая низкая цена соответствует цене, которая была указана на карточке города.

manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  '[Touch]Проверка динамики в тачах':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты в таче'
    - do: |-
        Заполнить форму поиска билетов:
        Откуда: Екатеринбург
        Куда: Москва
        Туда: 4 число следующего месяца, Обратно: не ставить
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: |
        Открылась страница выдачи.
        На выдаче присутствует блок Динамики цен с кнопками:

        https://jing.yandex-team.ru/files/gouken67/1442_1_touch.png

        В блоке 3 кнопки с ценами и одна кнопка Смотреть. Кнопки с ценами содержат цены и даты для текущего дня и +-1 ближайших дня.

        - Если Текущие цены сильно выше средних цен в динамике, то информация о
        том, что текущие цены сравнительно выше.

        - Если цены примерно такие же, то будет просто написано "Цены на соседние даты".

        - Если Текущие цены существенно ниже, то информация о том что в другие
        дни лететь дороже.

        - Если известны цены не для всех ближайших дней - текст будет "Цены на соседние даты"
    - do: нажать на кнопку “Смотреть весь календарь”
    - do: >-
        Assert: Открылся календарь цен по выбранному направлению. Даты в виде
        столбиков расположены друг под другом, слева число, справа цена.

        Пока происходит опрос партнёров, на столбиках рисуется жёлтый спиннер

        После загрузки всех цен столбик с ценой ниже текущей имеет цену зелёного
        цвета, **но только при условии, что его цена отличается от текущей более
        чем на 10%**
    - do: Нажать на кнопку _"Смотреть полный календарь"_
    - do: >-
        Assert: Раскрывается список всех дней, начиная с сегодня. У некоторых
        дат присутствуют приблизительные цены. Если цена не
        известна - в правом конце столбика написано "Цена неизвестна" и значок обновления
    - do: Нажать на столбик с примерной ценой.
    - do: >-
        Assert: Примерная цена пропадает. На выбранном столбике возник жёлтый спиннер.

        После установки конечной цены спиннер исчезает, появляется сама цена.
    - do: Нажать на столбик с "Цена неизвестна"
    - do: >-
        Assert: На выбранном столбике возник жёлтый спиннер. После установки конечной цены спиннер исчезает, появляется сама цена.
    - do: Нажать на столбик с известной ценой
    - do: >-
        Assert: открылась страница выдачи для выбранного направления и выбранной
        в динамике даты.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  Отображение информации об поездовой пересадке:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Кельн
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку Найти
    - do: 'Assert: Найдены варианты перелёта в одну сторону'
    - do: >-
        Открыть на выдаче фильтр Аэропорты (в таче - кликнуть на иконку с
        ползунками, там будет этот фильтр).

        Выставить в блоке "Прибытие в Кельн" значение "Главный Кельн".

        (В таче) Нажать на кнопку Применить.
    - do: >-
        Assert: На выдаче остались варианты с прилётом в Главный Кельн

        На сниппете отображается информация что пересадка будет на поезде

        В десктопе, если навести курсор на информацию о пересадках - появляется
        pop-up, в котором также есть информация о пересадке на поезд.

        Screen: https://jing.yandex-team.ru/files/gouken67/travel_1054.png
    - do: Кликнуть по сниппету(не по кнопке купить) с рейсом до этого вокзала
    - do: |-
        Assert: Открылась страница покупки.
        На втором сегменте есть информация что пересадка на поезде
        Screen: https://jing.yandex-team.ru/files/snejca/14471312.png
    - do: Перейти к партнёру по жёлтой кнопке для покупки
    - do: >-
        Assert: Переход сработал.Открылась страница с лэндингом варианта.
        Параметры варианта у партнёра совпадают с нашими, цена может отличаться
        только в меньшую сторону
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Портал
type: Главная
description: |-
  Для просмотра данных в консоли необходимо добавит ключ в адресную строку.
  Адрес для тестировщиков https://travel-test.yandex.ru/?_ym_debug=1
  Адрес для асессоров https://travel.crowdtest.yandex.ru/?_ym_debug=1
specs:
  Отправлять события в Метрику при клике по элементам шапки:
    - do: Зайти на портал по ссылке с ключем и войти в консоль
    - assert: >-
        В консоли есть строчка, подтверждающая логирование в консоль:
        https://jing.yandex-team.ru/files/rifat-k/2019-12-16_12-16-17.png
    - do: >-
        Находясь на главной портала нажать в шапке на слово Путешествия, справа
        от Яндекс.
    - assert: >-
        - В консоли появилась строчка "Reach goal. Counter: 50912507. Goal id:
        header_travel_link_click. Params:  undefined"

        - В строке указано именно **header_travel_link_click**

        https://jing.yandex-team.ru/files/rifat-k/2019-12-16_12-24-50.png
    - do: 'Поочередно прокликать по кнопкам Ж/Д билеты, Отели и Авиабилеты'
    - assert: >-
        После каждого клика:

        - в консоли появляется строчка "Reach goal. Counter: 50912507. Goal id:
        tab_hotels_click. Params:  undefined"

        - Goal id принимает значение того направления, на которое был сделан
        клик.

        https://jing.yandex-team.ru/files/rifat-k/2019-12-16_12-34-46.png
    - do: >-
        Находясь в любом направлении (Авиа, ЖД или Отели) нажать на то же
        направление в шапке
    - assert: >-
        В консоли появляется строчка "PageView. Counter 50912507 . URL: /avia/ .
        Referrer: undefined . Params:  undefined", где  после URL адрес
        соответствующей вертикали.
    - do: >-
        Находясь в любой вертикали, зайти в любую выдачу, к примеру
        https://travel-test.yandex.ru/trains/yekaterinburg--tyumen/?when=today&_ym_debug=1

        Находясь на странице выдачи кликнуть по поисковой форме

        ![image](https://jing.yandex-team.ru/files/rifat-k/2019-12-16_12-56-51.png)
    - assert: >-
        В консоли появилась строчка "Reach goal. Counter: 50912507. Goal id:
        header_search_form_information_click. Params:  undefined"
    - do: Повторить пункт 5 для других вертикалей (Авиабилеты и Отели)
    - assert: В консоли появляется строчка Reach goal с соответствующим id
    - do: >-
        Зайти в любую выдачу любой вертикали, к примеру
        https://travel-test.yandex.ru/trains/yekaterinburg--tyumen/?when=today&_ym_debug=1

        Нажать в шапке на Ж/Д билеты
    - assert: >-
        В консоли появилась строчка Reach goal. Counter: 50912507. Goal id:
        **tab_active_click.** Params:  undefined
    - do: Повторить шаг 7 для остальных вертикалей
    - assert: 'В консоли, после id будет стоять **tab_active_click**'
    - do: Находясь в портале нажать на слово Яндекс в шапке
    - assert: >-
        В консоли можно увидеть "Reach goal. Counter: 50912507. Goal id:
        **header_yandex_link_click** Params: undefined"

        https://jing.yandex-team.ru/files/rifat-k/kCZLnL7v7K.mp4
manual: true
Устройство: Десктоп
Страница:
  - Главная
  - Выдача
Сервис: Портал
Тестирование асессорами: Да
feature: Отели
type: ''
description: ''
specs:
  Перепоиск на странице отеля:
    - do: |-
        Перейти на страницу отеля со следующими параметрами
        отель - Radisson славянская
        дата заезда - завтра
        дата выезда - послезавтра
        кол-во гостей - 1
    - assert: |-
        * Открылась страница выбранного отеля
        * Вверху на уровне меню портала отображается шапка поиска
    - do: Кликнуть по области шапки
    - assert: >-
        * Шапка с предыдущего шага пропала

        * Под меню портала появились поля отеля, дат заезда, выезда, кол-ва
        гостей

        * в поле отеля значение Radisson Славянская

        * заезд - завтра

        * выезд - послезавтра

        * кол-во гостей - 1 взрослый
    - do: |-
        Изменить в поле заезда дату на первый день следующего месяца
        выезд через день
        кол-во гостей 2
        Нажать “Найти”
    - assert: >-
        * Появился лоадер “Загрузка отеля Загружаем информацию об отеле и
        получаем самые выгодные предложения”

        * Через 5-10 секунд отобразилась страница отеля

        * Название отеля на странице - Radisson Славянская

        * Данные в шапке вверху страницы соответствуют данным, введенным на
        предыдущем шаге

        * В блоке офферов отображаются даты заезда выезда, кол-во гостей

        * Данные в этом блоке совпадают с данными в шапке
manual: true
Устройство: Десктоп
Сервис: Отели
Окружение: Testing
Tag:
  - Smoke
  - Blocker
Автор: iliasova
feature: Отели
type: ''
description: ''
specs:
  'Тач: Соответствие данных запроса и выдачи на странице поиска отелей':
    - do: |-
        Перейти на страницу поиска отелей с указанными параметрами:
        - 2 гостя
        - дата заезда - завтрашний день
        - дата выезда - через 2 дня после заезда (чтобы получить 2 ночи)
        - Екатеринбург
    - assert: >-
        Откроется страница поиска отелей

        - Под шапкой присутствует строка поиска, в которой указан город, даты
        заезду-выезда и количество гостей - данные совпадают с запросом

        - На странице отображены карточки отелей

        - В самом низу есть кнопки Назад и Далее

        https://jing.yandex-team.ru/files/rifat-k/IMG_9852.PNG
    - do: Нажать на белое пространство любой карточки
    - assert: >-
        В новой вкладке открылась страница отеля на табе Главная. На странице
        присутствует:

        - Строка поиска, в которой указан город, даты заезду-выезда и количество
        гостей - данные совпадают с запросом

        - Название отеля и его рейтинг (может не быть) - соответствует тому, на
        который тапнули

        - Ниже блок с датами заезда-выезда, количеством гостей


        https://jing.yandex-team.ru/files/rifat-k/IMG_9853.PNG
manual: true
Устройство: Тач
Сервис: Отели
Тестирование асессорами: Да
feature: Отели
type: ''
description: >-
  Карта для тестовой оплаты тестовой брони: 5100002767155462

  Месяц и год: 12/22

  CVV: 454


  **Информация для асессоров: доступов во внутренний тестинг нет, поэтому после
  перехода во внутренний тестинг, чтобы открылась ссылка, нужно заменить
  https://travel-test.yandex.ru/ на https://travel.crowdtest.yandex.ru/ - должна
  открыться та же страница бронирования на стенде асессоров.**
specs:
  'Тач: Соответствие информации при переходе со страницы отеля на бронирование':
    - do: >-
        На главной портала нажать на вкладку Отели и найти отель Angelo by
        Vienna House Ekaterinburg

        - 2 гостя

        - дата заезда - завтрашний день

        - дата выезда - послезавтра
    - assert: >-
        Открылась страница отеля на табе Главная


        - Под шапкой присутствует строка поиска, в которой указан город, даты
        заезду-выезда и количество гостей - данные совпадают с запросом

        - Название отеля и его рейтинг

        - Ниже блок с датами заезда-выезда, количеством гостей
    - do: Нажать на таб Цены на номера
    - assert: >-
        Открылся таб и на странице есть:

        - Под шапкой присутствует строка поиска, в которой указано название
        отеля, даты заезду-выезда и количество гостей

        - Ниже указаны дата и время заезда и выезда и количество гостей

        - Полное описание номера, услуги и условия заселения

        - Ниже поля для ввода имен гостей и контактов - электронная почта и
        номер телефона


        На странице бронирования все данные о гостинице, датах и цене совпадают
        с предыдущим шагом
    - do: >-
        Нажать на желтую кнопку Выбрать, справа от предложения от
        Яндекс.Путешествий

        Если нет предложений от Яндекса, то можно изменить даты заезда-выезда,
        через строчку поиска в шапке
    - assert: >-
        Открылась страница бронирования

        https://jing.yandex-team.ru/files/rifat-k/IMG_9856.PNG

        На странице присутствуют:

        - Название отеля и его адрес

        - Ниже указаны дата и время заезда и выезда, количество гостей

        - Описание номера и условия заселения

        - Ниже поля для ввода имен гостей и контактов - электронная почта и
        номер телефона

        - Внизу блок со стоимостью, количеством ночей, цена налогов и сборов,
        кнопка с галочкой для подписки на новости, итоговая стоимость и желтая
        кнопка Оплатить


        На странице бронирования все данные о гостинице, датах и цене совпадают
        с предыдущими шагами
    - do: >-
        Ввести валидные данные в поля Имя и Фамилию гостей, электронную почту и
        номер телефона. Нажать на желтую кнопку Оплатить
    - assert: >-
        Произошел переход на страницу ввода данных карты

        На странице ввода данных карты все данные об Отеле, датах заезда-выезда,
        количество гостей и цене совпадают с предыдущими шагами
    - do: Ввести валидные данные карты и произвести оплату
    - assert: Оплата прошла и открылась страница успешной брони
    - do: >-
        На открывшейся странице успешного бронирования присутствуют:

        - Зеленая надпись "Вы успешно забронировали номер в отеле"

        - Контакты гостя, указанные на шаге странице бронирования

        - Название и адрес отеля/ Телефон отеля (может не быть)

        - Ниже указаны даты и время заезда-выезда и данные гостей

        - Ниже блок с ценой, количеством ночей и налогами и сборами. В блоке
        присутствует информация об отмене брони и ссылка на фискальный чек


        https://jing.yandex-team.ru/files/rifat-k/IMG_9859.PNG


        Все данные о городе, отеле, датах заезда-выезда совпадают на всех шагах

        Данные гостей и контакты совпадают с данными из шага 4
manual: true
Устройство: Тач
Сервис: Отели
Тестирование асессорами: Да
feature: Отели
type: Выдача
description: ''
specs:
  'Тач: Общий вид страницы поиска отелей':
    - do: >-
        Перейти на страницу поиска отелей с любым кол-вом гостей, датами заезда
        и выезда в городе Екатеринбург
    - assert: >-
        Откроется страница поиска отелей

        - Под шапкой присутствует строка поиска, в которой указан город, даты
        заезду-выезда и количество гостей - данные совпадают с запросом

        - Под строкой поиска есть переключатель Список/Карта и кнопка фильтров

        - Ниже отображены предложения отелей, 10 карточек

        - В самом низу есть кнопки Назад и Далее

        https://jing.yandex-team.ru/files/gouken67/travel_1065.png
    - do: Нажать на кнопку Карта вверху страницы
    - assert: >-
        - Строка поиска с введенными данными, кнопка фильтра и её состояние
        осталась на месте. Данные не изменились

        - Кнопка Список перестала быть желтой, кнопка Карта окрасилась в желтый

        - На странице пропадают карточки отелей и вместо них отображается карта

        - Кнопки +/- и текущей геопозиции на карте кликабельны

        - Карту можно перемещать пальцем и менять масштаб щипками 2-х пальцев

        - На карте есть галочка Искать при изменении карты

        https://jing.yandex-team.ru/files/rifat-k/IMG_9861.PNG
manual: true
Устройство: Тач
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Tag: Blocker
feature: Отели
type: Выдача
description: ''
specs:
  Тач.Общий вид карточек отеля на странице поиска:
    - do: Перейти на страницу поиска отелей с любым кол-вом гостей, городом(миллионником), датами заезда и выезда.
    - assert: >-
        - Открылась страница поиска отелей

        - На странице отображены карточки отелей

        - Каждая карточка состоит из
               - карусели фото - можно скроллить
               - название отеля (опционально входит звездность)
               - кнопка добавления в избранное (кнопка в форме сердечка)
               - рейтинг
               - количество отзывов
               - тип размещения (гостиница/хостел)
               - тип местности (у моря/рядом с парком/рядом с центром/рядом с аэропортом) - может отсутствовать
               - самая выгодная (дешевая) цена размещается крупным планом
               - информация о бесплатной отмене и завтраке (если их нет у отеля, ничего не отображается)
               - кнопка "Выбрать"
        ![image](https://jing.yandex-team.ru/files/ivalor/2022-01-28T12%3A28%3A29Z.0f1193e.png)

        _Курсивом выделена информация, которая может отсутствовать со стороны
        партнера_
    - do: >-
        Кликнуть по очереди по элементам на карточке
        - кнопка добавления в избранное

        - фотография

        - название отеля

        - количество отзывов

        - пустое пространство, услуги и другие некликабельные слова
    - assert: >-
        Клик по
        - кнопке добавления в избранное - кнопка закрашивается в красный цвет, внизу экрана всплывает уведомление "Отель добавлен в Избранное"
        
        - всё остальное - переход на страницу отеля
manual: true
Устройство: Тач
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
feature: Отели
type: ''
description: ''
specs:
  'Тач: Различные состояния карточек на странице поиска отелей':
    - do: 'https://testpalm.yandex-team.ru/testcase/travel-923'
manual: true
Сервис: Отели
feature: Отели
type: ''
description: ''
specs:
  'Тач: Перепоиск номеров через шапку на странице поиска отелей':
    - do: 'https://testpalm.yandex-team.ru/testcase/travel-935'
manual: true
Сервис: Отели
feature: Отели
type: ''
description: Быть незалогиненым.
specs:
  Тревелайн. Бронирование отеля НЕзалогин:
    - do: |-
        Перейти на страницу бронирования отеля Вега Измайлово.
        Заезд завтра, выезд послезавтра, 2 гостя
    - do: 'Assert: Открылась страница бронирования отеля'
    - do: |-
        Ввести данные гостей:
        1 гость: Kirill Ivanov
        2 гость: Svetlana Maksimova
        Электронная почта: ivanov@kirill.com
        Телефон: 8911111111
    - do: Нажать на кнопку "Оплатить"
    - do: 'Assert: Открылась страница оплаты заказа'
    - do: |-
        Заполнить поля:
        Номер карты: 5100 0027 6715 5462
        Срок действия: 12/22
        CVC/CVV: 454
    - do: Снять галочку "Сохранить карту для быстрой оплаты в дальнейшем"
    - do: Нажать на кнопку "Оплатить"
    - do: >-
        Assert: Появился лоадер с текстом “Создание заказа Создаем заказ и
        готовимся к оплате”
    - do: 'Assert: Элементы на странице задизейблены'
    - do: >-
        Assert: Открылась страница успешной брони отеля. На странице должны
        соответствовать данные из предыдущих шагов:

        - Название отеля

        - Даты заеда и выезда

        - Количество гостей

        - Имя/Фамилия гостей

        - Контактные данные - электронная почта и телефон

        - Оплаченная сумма
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Сервис: Отели
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Blocker
feature: ЖД
type: Выдача
description: >-
  Рейс пополнения - это рейс, который отсутствует в базе Расписаний, но приходит
  в ответе партнера.

  В интерфейсе такие рейсы можно отличить так: заходим на выдачу, на выдаче n
  сниппетов, загружаются цены. После прогрузки цен сниппетов становится n+1. Это
  значит, что один рейс пришел от партнера, это и есть рейс пополнения (увидеть
  можно только когда цены приходят от партнера, а не из кэша или колдунщика).

  Чтобы воспроизводить эту ситуацию в тестинге, нужно:

  * Выбрать поезд и дату, на котором хотим проверять

  * Перейти в рабочую тестовую админку
  https://work.admin-test.rasp.yandex-team.ru

  * Перейти в раздел "Нитки"

  * Найти нужный поезд

  * Перейти в нитку для него и в календаре убрать нужную дату, нажать Save
specs:
  'ЖД: Рейсы пополнения, кнопка к нам':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на выдачу с поездом из Preconditions
        Для этого поезда кликнуть по кнопке покупки
    - assert: |-
        * Открылась страница выбора мест
        * Все данные о поезде соответствуют данным на выдаче
    - do: Обновить страницу
    - assert: |-
        * Ошибок нет
        * Содержание страницы и информация о поезде не поменялись
    - do: Создать заказ (дойти до шага подтверждения) на любых пассажиров
    - assert: >-
        * Билеты бронируются

        * Информация о поезде на странице подтверждения соответствует информации
        на предыдущих шагах
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Рейс пополнения - это рейс, который отсутствует в базе Расписаний, но приходит
  в ответе партнера.

  В интерфейсе такие рейсы можно отличить так: заходим на выдачу, на выдаче n
  сниппетов, загружаются цены. После прогрузки цен сниппетов становится n+1. Это
  значит, что один рейс пришел от партнера, это и есть рейс пополнения (увидеть
  можно только когда цены приходят от партнера, а не из кэша или колдунщика).


  **Для асессоров: нужно перебрать несколько дат. Если не получается найти рейс,
  пропустить кейс.**
specs:
  'ЖД: Рейсы пополнения, кнопка к УФС':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на выдачу Барнаул - Бийск на дату (см описание)
    - assert: >-
        * Открывается выдача, через какое-то время появляется сниппет с поездом
        658Ч, кнопка ведет на УФС
    - do: Кликнуть по кнопке Купить на УФС
    - assert: >-
        * Произошел переход на сайт УФС, направление, номер пезда и дата
        соответствуют выдаче
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить url страницы на этапе оформления
  заказа.

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._
specs:
  Автобусы.Партнеры. Ecolines:
    - do: |-
        Поиск по партнеру Эколайнс
        - Москва - Волгоград
        - Рига - Москва
        - Москва - Гомель
        - Лида - Минск
        - Смоленск - Питер
    - assert: 'Маршрут партнера Эколайнс найден, доступен для букинга'
    - do: |-
        Заполните данные, необходимые для оформления билета
        Нажмите кнопку Оплатить
    - assert: 'Открылась форма для оплаты, ошибок нет'
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Покупка
description: ''
specs: {}
manual: true
Страница: Покупка
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: ''
specs: {}
manual: true
Устройство: Тач
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Покупка
description: ''
specs: {}
manual: true
Устройство: Тач
Страница: Покупка
Сервис: Автобусы. Старый фронт
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги в кейсе, где требуется ввести данные
  карты и нажать кнопку Оплатить, нужно пропустить и продолжать прохождение
  кейса.**


  Данные тестовой карты:

  5100003697253468

  12/20

  090
specs:
  'ЖД: Покупка на маршрут с пересадкой, десктоп':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на выдачу Москва - Тихвин на любую дату
    - assert: >-
        * Открылась выдача с рейсами с пересадками

        * Есть цены и кнопка покупки на весь рейс с пересадкой (может быть
        долго, надо подождать) (если нет - поискать на другие даты)

        ![](https://jing.yandex-team.ru/files/jjon89/2021-07-18_13-09-09.png)
    - do: Кликнуть по кнопке покупки
    - assert: '* Страница выбора мест открылась в той же вкладке'
    - do: >-
        Выбрать любые места для обоих поездов и по шагам покупки дойти до хэппи
        пейдж, вы должны выбрать места на оба поезда выбранного пересадочного
        маршрута.
    - assert: |-
        * Вверху страницы заказа отображается заголовок "Билеты оформлены"
        * Отображаются два сегмента как на выдаче
        * Есть информация о пересадке (время, вокзал)
        * Данные о рейсах совпадают с данными на выдчаче
        ![](https://jing.yandex-team.ru/files/jjon89/2021-07-18_13-26-53.png)
    - do: Кликнуть по кнопке Подробнее о заказе
    - assert: >-
        * В этой же вкладке открылась страница полного заказа для рейса, на
        который купили билет
manual: true
Функциональность:
  - Покупка
  - 'ЖД+ЖД: Пересадки'
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Портал
type: Главная
description: ''
specs:
  '[Тач] Портал. Календарь скроллится до верной даты (заполнена дата Туда)':
    - do: |-
        Зайти на главную Авиа
        Кликнуть на инпут Туда
    - assert: Открылся календарь на начале текущего месяца
    - do: Выбрать любой день следующего месяца
    - assert: |-
        * Календарь Туда скрылся
        * В поле Туда подставилась выбранная дата
    - do: Кликнуть по календарю Обратно
    - assert: |-
        * Календарь Обратно проскроллился до выбранной даты из поля Туда
        * Все даты до даты Туда недоступны для выбора
    - do: >-
        Выполнить шаги 1-3 для вкладки Отели (вместо Туда-Заезд, вместо
        Обратно-Выезд)
    - assert: ОР совпадает
manual: true
Устройство: Тач
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: iliasova
feature: ЖД
type: ''
description: |-
  На данный момент клиринг платежа происходит через 48 часов.
  Значение устанавливается динамической настройкой.
specs:
  'ЖД: Отложенный клиринг':
    - do: >-
        Купить билеты для двух пассажиров

        Найти заказ в бэкофисе https://train-backoffice.test.rasp.yandex.ru

        Для оркестратора в админке
        https://travel-orders-admin-testing.common.yandex-team.ru/
    - assert: '* В логах бэкофиса не записи о том, что платеж заклирился'
    - do: Сдать один из билетов
    - assert: >-
        * Произошел возврат (ресайз)

        * В логах появилась запись о клиринге платежа (клирится остаток после
        возврата)
    - do: Сдать второй билет
    - assert: '* Произошел обычный возврат (рефанд)'
manual: true
Функциональность: Только бэкенд
Устройство: Десктоп
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: ''
description: ''
specs:
  'ЖД: Заказы со страховкой клирятся сразу':
    - do: >-
        Купить билет на 1 пассажира со страховкой

        Найти заказ в бэкофисе https://train-backoffice.test.rasp.yandex.ru

        Для оркестратора в админке
        https://travel-orders-admin-testing.common.yandex-team.ru/
    - assert: '* В логах в бэкофисе есть запись о том, что платеж заклирился'
manual: true
Функциональность: Только бэкенд
Устройство: Десктоп
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: ''
description: |-
  Кейс для себя, чтобы помнить логику.

  При возврате в первые сутки не удерживается наш сервисный сбор.
specs:
  'ЖД: Возврат в первые сутки: дорогой билет':
    - do: >-
        Купить билет на одного пассажира на большую сумму (например, Москва -
        Екатеринбург в СВ)
    - do: >-
        Сдать билет

        Найти заказ в бэкофисе https://train-backoffice.test.rasp.yandex.ru (для
        прода - можно просто открыть чек возврата, в тестовых чеках заглушка у
        траста)

        Для оркестратора в админке
        https://travel-orders-admin-testing.common.yandex-team.ru/
    - assert: >-
        * Возврат осуществился

        * В бэкофисе в информации о платеже сумма к возврату равна сумме к
        возврату на странице заказа - поле refunds

        * Возвращен наш сервисный сбор минус 60 рублей (комиссия ИМ за покупку +
        за возврат)

        https://jing.yandex-team.ru/files/shenfeld/2019-12-25_18.57.42-j5c96.png
manual: true
Функциональность: Только бэкенд
Устройство: Десктоп
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: ''
description: >-
  Кейс для себя, чтобы помнить логику.


  При возврате, если после покупки прошло больше суток, сервисный сбор Яндекса
  удерживается.

  Найти или оформить заказ, такой, чтобы к моменту возврата прошло больше суток.
specs:
  'ЖД: Возврат больше чем через сутки после покупки':
    - do: >-
        Сдать билет из подготовки

        Найти заказ в бэкофисе https://train-backoffice.test.rasp.yandex.ru (для
        прода - можно просто открыть чек возврата, в тестовых чеках заглушка у
        траста)

        Для оркестратора в админке
        https://travel-orders-admin-testing.common.yandex-team.ru/
    - assert: >-
        * Осуществился возврат

        * В бэкофисе в информации о платеже сумма к возврату равна сумме к
        возврату на странице заказа - поле refunds

        * Наш сервисный сбор не возвращен
manual: true
Функциональность: Только бэкенд
Устройство: Десктоп
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: ''
description: 'Кейс для себя, чтобы помнить логику.'
specs:
  'ЖД: Возврат в первые сутки: дешевый билет':
    - do: >-
        Купить один дешевый билет (например, Москва - Рязань, самый дешевый
        стоит 400-500 рублей)
    - do: >-
        Сдать билет

        Найти заказ в бэкофисе https://train-backoffice.test.rasp.yandex.ru (для
        прода - можно просто открыть чек возврата, в тестовых чеках заглушка у
        траста)

        Для оркестратора в админке
        https://travel-orders-admin-testing.common.yandex-team.ru/
    - assert: >-
        * Осуществился возврат

        * В бэкофисе в информации о платеже сумма к возврату равна сумме к
        возврату на странице заказа - поле refunds

        * Наш сервисный сбор не возвращен (потому что не покрывает сбор ИМ - 60
        рублей)

        https://jing.yandex-team.ru/files/shenfeld/2019-12-25_19.06.38-nhhew.png
manual: true
Функциональность: Только бэкенд
Устройство: Десктоп
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Для прохождения кейса требуется подобрать такой поезд, у которого в одном
  классе обслуживания будет несколько вагонов (то есть отображается одновременно
  несколько схем):

  https://jing.yandex-team.ru/files/shenfeld/2019-12-26_16.58.37-hr43u.png

  Перейти на вкладку ЖД

  Перейти на выдачу Москва - Санкт-Петербург

  Для поезда из описания перейти по кнопке Выбрать место
specs:
  'ЖД: Корректное бронирование в класс с несколькими вагонами':
    - do: >-
        Раскрыть класс с несколькими вагонами

        Для НЕ первого по счету вагона выбрать место под номером 10, которое доступно для
        выбора хотя бы в одном из предыдущих вагонов:

        https://jing.yandex-team.ru/files/arhey/2022-01-14T07:31:29Z.5ed1b6f.png

        Запомнить вагон, в котором выбрали место
    - assert: '* Место окрасилось в желтый'
    - do: |-
        Кликнуть Указать пассажиров
        Заполнить все поля любыми валидными данными
        Кликнуть Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Забронировалось место и вагон, которые выбирали
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выдача
description: 'В колдунщике есть случаи, когда ссылки формируются на фронте по ID.'
specs:
  'ЖД: Поиск по ID для переходов с колдунщика':
    - do: >-
        Перейти на главную сервиса

        Добавить к урлу
        "_/trains/search/?fromId=c11202&toId=c79&when=2020-01-16_" (дату
        подставить текущую или будущую

        Перейти по полученной ссылке
    - assert: >-
        * Открылась страница поиска из Златоуста в Магадан

        * В урле id сменились на названия станций
        "_/trains/zlatoust--magadan/?when=2020-01-16_"

        * Дата соответствует той, которую вводили

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_17.42.00-xye3y.png)
    - do: >-
        Вернуться на главную сервиса

        Добавить к урлу "_/trains/search/?fromId=c213&toId=&when=2020-01-30_"
        (пустой пункт прибытия. Дату подставить текущую или будущую)

        Перейти по полученной ссылке
    - assert: >-
        * Открылась главная сервиса на вкладке ЖД билеты

        * Форма поиска заполнена: пункт отправления - Москва, пункт прибытия -
        пустой, дата - та, которую вводили
    - do: >-
        Вернуться на главную сервиса

        Добавить к урлу “/trains/search/?fromId=&toId=c54&when=2020-01-30”
        (пустой пункт отправления. Дату подставить текущую или будущую)

        Перейти по полученной ссылке
    - assert: >-
        * Открылась главная сервиса на вкладке ЖД билеты

        * Форма поиска заполнена: пункт отправления - пустой (или заполняется
        актуальной локацией юзера), пункт прибытия - Екатеринбург, дата - та,
        которую вводили
    - do: >-
        Вернуться на главную сервиса

        Добавить к урлу “/trains/search/?fromId=c213&toId=c54&when=” (пустая
        дата)

        Перейти по полученной ссылке
    - assert: >-
        * Открылась главная сервиса на вкладке ЖД билеты

        * Форма поиска заполнена: пункт отправления - Москва, пункт прибытия -
        Екатеринбург, дата - пустая
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Автобусы. Старый фронт
type: Главная
description: >-
  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678

  Пользователь не авторизован
specs:
  Шапка:
    - do: Открыть главную страницу сервиса
    - assert: |-
        - Страница открылась
        - В шапке отображаются:
        -- Логотип "Яндекс Путешествия"
        -- Табы "Авиабилеты", "Ж/Д Билеты", "Отели", "Автобусы"
        -- Кнопка "Войти"
    - do: Нажать "Войти"
    - assert: Открылась страница авторизации
    - do: Авторизоваться
    - assert: |-
        - Вернулись на страницу сервиса
        - В шапке вместо кнопки "Войти" отображается юзерпик и имя пользователя
        - Появилась кнопка Мои билеты
    - do: Нажать на логотип "Яндекс" в шапке
    - assert: В той же вкладке открылась главная страница Яндекс
    - do: Вернуться на сервис и нажать на "Путешествия" в шапке
    - assert: |-
        - Перехода не происходит
        - Остались на главной сервиса "Яндекс Путешествия" на вкладке "Автобусы"
    - do: Нажать на таб "Авиабилеты" в шапке
    - assert: >-
        В соседней вкладке открылась главная страница сервиса "Яндекс
        Авиабилеты"
    - do: Нажать на таб "Ж/д билеты" в шапке
    - assert: >-
        В соседней вкладке открылась главная страница сервиса "Яндекс
        Путешествия" на вкладке "Ж/д билеты"
    - do: Нажать на таб "Отели" в шапке
    - assert: >-
        В соседней вкладке открылась главная страница сервиса "Яндекс
        Путешествия" на вкладке "Отели"
    - do: Нажать на таб "Автобусы"
    - assert: |-
        - Перехода не происходит
        - Остались на главной сервиса "Яндекс Путешествия" на вкладке "Автобусы"
    - do: Нажать на юзерпик в шапке
    - assert: |-
        - Развернулось меню пользователя
        - В меню присутствуют пункты:
        -- "Написать письмо"
        -- "Мой диск" с иконкой диска
        -- Настройка
        -- Паспорт
        -- Выйти
    - do: Нажать "Написать письмо"
    - assert: В той же вкладке открылась Яндекс Почта
    - do: Вернуться на сервис и нажать "Мой диск" в меню пользователя
    - assert: В той же вкладке открылся Яндекс Диск
    - do: Вернуться на сервис и нажать "Настройка" в меню пользователя
    - assert: 'В той же вкладке открылась страница настроек https://yandex.ru/tune/'
    - do: Вернуться на сервис и нажать "Паспорт" в меню пользователя
    - assert: Открылась страница Яндекс Паспорта пользователя
    - do: Вернуться на сервис и нажать "Мои билеты" в шапке
    - assert: Открылась страница заказов пользователя /bus/orders
    - do: '**Десктоп:** Уменьшить ширину страницы'
    - assert: |-
        - Шапка отображается без артефактов
        - Верстка не едет
    - do: Нажать "Выйти" в меню пользователя
    - assert: |-
        - Пользователь не авторизован
        - Кнопка "Мои билеты" не отображается
        - Вместо юзерпика пользователя появилась кнопка "Войти"
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Открыта главная страница сервиса, при необходимости проскроллена до подвала'
specs:
  'Подвал: проверка внешнего вида':
    - do: Проверить отображение подвала
    - assert: >-
        - подвал отображается во всю ширину страницы

        - цвет фона серый

        - цвет ссылок синий

        - присутствуют ссылки "Условия покупки билетов на автобусы",
        "Пользовательское соглашение", "Обратная связь", "Помощь", копирайт со
        ссылкой "Яндекс"

        - копирайт выровнен по правому краю основного содержимого страницы

        - остальные ссылки выровнены по левому краю основного содержимого
        страницы
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Открыта главная страница сервиса, при необходимости проскроллена до подвала'
specs:
  Проверка переходов по ссылкам из футера:
    - do: Кликнуть по ссылке "Условия покупки билетов на автобусы"
    - assert: >-
        В новой вкладке открывается страница
        https://yandex.ru/legal/bus_tickets_booking_conditions/
    - do: Кликнуть по ссылке "Пользовательское соглашение"
    - assert: >-
        В новой вкладке открывается страница
        https://yandex.ru/legal/travel_termsofuse/
    - do: Кликнуть по ссылке "Обратная связь"
    - assert: >-
        В новой вкладке открывается страница
        https://yandex.ru/support/travel/troubleshooting.html#feedback__bus
    - do: Кликнуть по ссылке "Помощь"
    - assert: >-
        В новой вкладке открывается страница
        https://yandex.ru/support/travel/index.html
    - do: Кликнуть по ссылке "Яндекс"
    - assert: 'В этой же вкладке открывается страница https://yandex.ru/'
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Открыта главная страница сервиса, при необходимости проскроллена до подвала'
specs:
  Проверка ховера ссылок в подвале:
    - do: Поочередно навести курсор мыши на все ссылки в подвале"
    - assert: Текст становится красным
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Перейти на https://yandex.ru/bus/'
specs:
  Панель поиска билетов. Внешний вид + Саджест:
    - do: Проверить внешний вид панели поиска билетов
    - assert: 'Внешний вид соответствует скриншоту: https://yadi.sk/i/JGmIWcYlj7DB9A'
    - do: Кликнуть в поле "Откуда"
    - assert: |-
        Поле обведено рамкой
        Саджесты открываются
        Город вписан
    - do: Набрать "Мос"
    - assert: |-
        Появляется саджест с релевантными вариантами
        Появляется крестик
    - do: Кликнуть в тело страницы
    - assert: |-
        Саджест скрывается
        Введенные символы остаются
    - do: Кликнуть в поле "Откуда"
    - assert: Появляется саджест
    - do: Выбрать любой вариант в саджесте
    - assert: |-
        Саджест скрывается
        Выбранный вариант отображается в поле
    - do: Нажать на крестик
    - assert: |-
        Поле очищается
        Отображается плейсхолдер
        Отображается саджест
    - do: Кликнуть в поле "Куда"
    - assert: |-
        Отображается плейсхолдер
        Отображается саджест
    - do: Повторить шаги 3-7
    - assert: ФР соответствует ОР
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Перейти на https://yandex.ru/bus/'
specs:
  'Десктоп: проверка, что может быть открыт только один саджест':
    - do: Кликнуть в поле "Откуда". Ввести название вашего населенного пункта
    - assert: Отображается саджест
    - do: Кликнуть в поле "Куда".
    - assert: |-
        Саджест из предыдущего шага скрывается
        Отображается саджест поля "Куда"
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Перейти на https://yandex.ru/bus/'
specs:
  Ввод невалидных значений:
    - do: Кликнуть в поле "Куда". Ввести несвязный набор символов
    - assert: Саджест не отображается
    - do: Очистить поле
    - assert: Саджест отображается
    - do: Повторить шаги 1-2 для поля "Откуда"
    - assert: ФР соответствует ОР
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Перейти на https://yandex.ru/bus/'
specs:
  Работа кнопки смены направлений:
    - do: |-
        Набрать "Санкт-Петербург" в поле "Откуда"
        Нажать на кнопку смены направлений
    - assert: |-
        Поле "Откуда" очищается. Есть плейсхолдер
        В поле "Куда" подставляется введённое ранее в поле "Откуда" значение
    - do: |-
        Набрать "Москва" в поле "Откуда"
        Нажать на кнопку смены направлений
    - assert: Значения полей меняются местами
    - do: Нажать на кнопку "Найти"
    - assert: Отображаются Рейсы направления Питер — Москва
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Перейти на https://yandex.ru/bus/'
specs:
  Календарь:
    - do: Кликнуть в поле "Завтра"
    - assert: |-
        Появляется календарь
        Внешний вид: https://yadi.sk/i/_TpItX8AgKiDiQ
    - do: Выбрать в календаре вчерашнюю дату
    - assert: Дата не выбирается. Календарь не скрывается
    - do: 'Выбрать сегодняшнюю дату, затем завтрашнюю'
    - assert: Даты выбираются и корректно подставляются в соответствующее поле
    - do: |-
        Проскроллить календарь в самый конец
        Выбрать в календаре последнюю некликабельную дату
    - assert: Дата не выбирается и не подставляется
    - do: Выбрать в календаре последнюю кликабельную дату
    - assert: Дата выбирается и корректно подставляется в соответствующее поле
    - do: Удалить подставленное значение клавишей Backspace
    - assert: Значение не удаляется
    - do: Ввести дату вручную
    - assert: Ничего не происходит
    - do: Кликнуть в тело страницы вне активных элементов
    - assert: |-
        Календарь закрывается
        Выбранное ранее значение в поле сохраняется
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Перейти на https://yandex.ru/bus/'
specs:
  'Календарь. Десктоп: работа кнопок сегодня/завтра':
    - do: Кликнуть в поле "Завтра"
    - assert: Открывается календарь
    - do: Кликнуть по кнопке "Сегодня"
    - assert: |-
        Значение поля изменяется на "Сегодня"
        Дата в календаре сменяется на текущую
    - do: Кликнуть по кнопке "Завтра"
    - assert: |-
        Значение поля изменяется на "Завтра"
        Дата в календаре сменяется на завтрашнюю
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: 'Перейти на https://yandex.ru/bus/'
specs:
  Кнопка "Найти":
    - do: Не заполняя полей нажать на кнопку "Найти"
    - assert: 'Появляются ошибки https://yadi.sk/i/xBimpAJWB5K_Og'
    - do: Обновить страницу
    - assert: Ошибки пропадают
    - do: Заполнить одно из полей и нажать "Найти"
    - assert: Появляется ошибка у незаполненного поля
    - do: Заполнить второе поле
    - assert: Ошибка пропала
    - do: Нажать на кнопку "Найти"
    - assert: Появляется релевантная выдача
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: Открыта главная страница сервиса
specs:
  Внешний вид блока "Популярные направления":
    - do: Проверить внешний вид блока "Популярные направления"
    - assert: |-
        - блок выровнен по центру
        - каждое из  предложений имеет изображение
        - направление и цена выровнены по левому краю с изображением
        - направление отображается синим цветом
        - цена отображается серым цветом
        - отображение корректное, верстка не нарушена
        - ниже отображаются еще предложения без изображений
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: Открыта главная страница сервиса
specs:
  Проверка ховера и перехода по текстовым ссылкам:
    - do: >-
        Поочередно навести курсор мыши на название каждого популярного
        направления
    - assert: Текст становится красным
    - do: Поочередно названия всех направлений
    - assert: >-
        Осуществляется переход на страницу с предложениями билетов на выбранное
        направление в той же вкладке
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: Открыта главная страница сервиса
specs:
  Переход по картинкам:
    - do: Поочередно прокликать все изображений в блоке "Популярные направления"
    - assert: >-
        Осуществляется переход на страницу с предложениями билетов на выбранное
        направление в той же вкладке
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: >-
  Открыта главная страница сервиса. При необходимости проскроллена до блока
  других направлений
specs:
  Проверка внешнего вида блока других направлений:
    - do: Проверить внешний вид блока других направлений
    - assert: >-
        - блок не содержит заголовок

        - ниже во всю ширину блока отображается белая кнопка "Каталог
        направлений"

        - в каждой строке название направления выровнено по левому краю

        - в каждой строке цена выровнена по правому краю

        - текст названия и цены синего цвета

        - отображение корректное, верстка не нарушена
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: >-
  Открыта главная страница сервиса. При необходимости проскроллена до блока
  других направлений
specs:
  Проверка ховера и перехода по ссылкам блока других направлений:
    - do: Поочередно навести курсор мыши на каждое из 10 направлений
    - assert: Текст названия и цены становится красным
    - do: Навести курсор мыши на кнопку "Каталог направлений"
    - assert: 'Кнопка стала темнее, текст на кнопке не изменился'
    - do: Поочередно прокликать все направления
    - assert: >-
        Осуществляется переход на страницу с предложениями билетов на выбранное
        направление
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: >-
  Открыта главная страница сервиса. При необходимости проскроллена до кнопки
  "Каталог направлений"
specs:
  Проверка работы кнопки "Каталог направлений":
    - do: Кликнуть по кнопке "Каталог направлений"
    - assert: Осуществляется переход к букве "А" алфавитного списка направлений
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: Автобусы. Старый фронт
type: Главная
description: ''
specs:
  'Тач: Горизонтальная ориентация':
    - do: Открыть главную страницу сервиса в горизонтальной ориентации
    - assert: >-
        - Страница открылась

        - В шапке отображается:

        -- логотип "Яндекс Путешествия"

        -- кнопка авторизации или юзерпик (если пользователь авторизован)

        - Описание : "Поиск и продажа билетов ..."

        - Форма поиска направлений:

        -- Поле ввода места отправления

        -- Поле ввода места назначения

        -- стрелка смены направлений

        -- Дата поездки

        -- Кнопка "Найти"

        - Ниже блок с популярными направлениями в регионе, блок содержит:

        -- Картинка у каждого направления

        -- "Место отправления - Место назначения"

        -- стоимость билетов "от ...₽"

        - Ниже отображается список направлений без изображений с ценами

        - Кнопка "Каталог направлений"

        - В футере отображается:

        -- ссылки "Условия покупки...", "Пользовательское соглашение", "Обратная
        связь", "Помощь"

        -- копирайт
    - do: Тапнуть в поле ввода откуда
    - assert: Разворачивается саджест с местами поблизости
    - do: Выбрать любое значение в саджесте
    - assert: |-
        - Саджест сворачивается
        - В поле ввода места отправления отображается выбранное значение
    - do: Нажать в поле Куда
    - assert: Развернулся саджест
    - do: Выбрать любое значение в саджесте
    - assert: |-
        - Саджест сворачивается
        - В поле ввода места назначения отображается выбранное значение
    - do: Нажать на дату поездки
    - assert: Открывается календарь
manual: true
Устройство: Тач
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2758282
feature: ЖД
type: Выбор мест
description: >-
  У партнера есть ограничения при бронировании детских билетов в купе целиком.
  Кейс проверяет валидацию на нашей стороне.
specs:
  'ЖД: Ошибка при выборе детских билетов при брони купе целиком':
    - do: |
        Перейти на выдачу Москва - Санкт-Петербург на любую дату
        Для поезда 760А кликнуть по кнопке покупки
    - assert: |
        * Произошел переход на страницу выбора мест

        * Есть тип вагона "Купе-переговорная"
        Класс пишется в описании вагона (если нет типа или поезда на выдаче, поискать на другую дату)
        Для тача пишется  тип вагона. Класс вагона скрыт за иконкой "?"
        Примерный вид https://jing.yandex-team.ru/files/semirka/Screenshot_2022-01-11-12-46-18-497_com.android.chrome.jpg
    - do: |
        Выбрать 0 взрослых билетов и любое количество детских билетов с местом
        (например, 2)

        Выбрать класс Купе-переговорная и купе в нем

        Нажать "Указать пассажиров"
    - assert: |
        * Перехода на следующий шаг не произошло

        * У кнопки появился попап с текстом "В этом вагоне нельзя купить только
        детские билеты. Добавьте взрослого пассажира."
    - do: |
        Добавить взрослого пассажира
        Нажать "Указать пассажиров"
    - assert: |
        * Произошел переход на страницу ввода данных
        * Ошибок нет
    - do: |
        Перейти на выдачу Москва - Нижний Новгород на любую дату
        Для поезда 702Н кликнуть по кнопке покупки
    - assert: |
        * Произошел переход на страницу выбора мест
        * В таче класс скрыт за иконкой "?"
        * В СВ есть класс 1Е (если нет класса или поезда на выдаче, выбрать
        другой поезд, например 706Н, или поискать на другую дату)
    - do: |
        Выбрать 0 взрослых и 1 детский билет с местом
        Выбрать любое купе в классе 1Е
        Кликнуть по кнопке "Указать пассажиров"
    - assert: |
        * Перехода на следующий шаг не произошло
        * У кнопки появился попап с текстом "В этом вагоне нельзя купить только
        детский билет. Добавьте пассажира."
    - do: |
        Добавить 1 детский билет с местом (чтобы было 2 детских с местом)
        Выбрать любое купе в классе 1Е
        Кликнуть "Указать пассажиров"
    - assert: |
        * Произошел переход на страницу ввода данных
        * Ошибок нет

manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Ссылки на сервис Расписаний:

  * **Тестинг десктоп для асессоров**: https://rasp.crowdtest.yandex.ru

  * **Тестинг тач для асессоров**: https://t.rasp.crowdtest.yandex.ru

  * Тестинг десктоп: https://testing.morda-front.rasp.common.yandex.ru

  * Тестинг тач: https://t.testing.morda-front.rasp.common.yandex.ru

  * Прод десктоп: https://rasp.yandex.ru/

  * Прод тач: https://t.rasp.yandex.ru


  **Информация для асессоров**: В тестинге переход по кнопке покупки работать не
  будет из-за отсутствия доступов во внутренний тестинг, поэтому после перехода
  на сервис путешествий (по кнопке Выбрать место), нужно заменить в урле
  "https://travel-test.yandex.ru/" на "https://travel.crowdtest.yandex.ru/",
  параметры в урле сохранить без изменений и перейти по полученной ссылке.
specs:
  'ЖД: Бронирование при переходе с Расписаний':
    - do: |-
        Перейти на главную Расписаний в нужном окружении (см описание)
        Выполнить поиск Москва - Санк-Петербург поездами на дату через месяц от текущей
        Для поезда 016А фирменный «Арктика» кликнуть по кнопке "Выбрать место"
    - assert: >-
        * Произошел переход на сервис Путешествий на страницу выбора мест
        (асессорам см описание)

        * Страница открылась в новой вкладке

        * Информация о поезде на открывшейся странице соответствует информации
        на выдаче Расписаний: номер и маршрут поезда, признак фирменности (если
        есть), вокзалы отправления/прибытия, время отправления/прибытия, даты
        отправления/прибытия, перевозчик
    - do: |-
        Выбрать вагон и место №10 в поезде (если место занято найти вагон, где оно свободно)
        Нажать Указать пассажиров
        Заполнить все поля любыми валидными данными
        Нажать Проверить заказ и купить
    - assert: >-
        * Произошел переход на страницу подтверждения

        * Все данные о поезде и пассажирах соответствуют данным на предыдущих
        страницах
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Кейс не для асессоров, переход в тестинг с параметрами работает только из
  внутрисети. Иначе ведет в прод.


  Ссылка для перехода в тестинг:
  https://yandex.ru/search/?text=%D0%B5%D0%BA%D0%B0%D1%82%D0%B5%D1%80%D0%B8%D0%BD%D0%B1%D1%83%D1%80%D0%B3%20%D0%BC%D0%BE%D1%81%D0%BA%D0%B2%D0%B0%20%D0%BF%D0%BE%D0%B5%D0%B7%D0%B4&lr=54&&waitall=da&metahost=TRANSPORT%3Atesting.train-wizard-api.common.yandex.net%2Fsearcher%2Fpublic-api%2Fdirection%2F
  (в тестинге иногда не показывается колдун, может потребоваться обновить
  страницу)

  Ссылка для перехода в прод:
  https://yandex.ru/search/?text=%D0%B5%D0%BA%D0%B0%D1%82%D0%B5%D1%80%D0%B8%D0%BD%D0%B1%D1%83%D1%80%D0%B3%20%D0%BC%D0%BE%D1%81%D0%BA%D0%B2%D0%B0%20%D0%BF%D0%BE%D0%B5%D0%B7%D0%B4&clid=2270455&win=388&lr=54
specs:
  'ЖД: Бронирование при переходе с серпа':
    - do: >-
        Перейти по ссылке из описания в зависимости от тестируемого окружения

        Для любого из поездов кликнуть по кнопке покупки:
        https://jing.yandex-team.ru/files/shenfeld/2020-01-09_18.40.57-7xyuw.png
    - assert: >-
        * Произошел переход на сервис Путешествий на страницу выбора мест

        * Страница открылась в новой вкладке

        * Информация о поезде на открывшейся странице соответствует информации в
        поиске Яндекса: номер и маршрут поезда, признак фирменности (если есть),
        время отправления/прибытия, даты отправления/прибытия
    - do: |-
        Выбрать любое место в поезде
        Нажать Указать пассажиров
        Заполнить все поля любыми валидными данными
        Нажать Проверить заказ и купить
    - assert: >-
        * Произошел переход на страницу подтверждения

        * Все данные о поезде и пассажирах соответствуют данным на предыдущих
        страницах
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Blocker
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |
  Под "мало мест" подразумевается, что в любом из вагонов в поезде осталось <4
  мест.

  Перейти на вкладку ЖД
  Найти такой поезд, чтобы в каждом из вагонов осталось <4 мест
  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-13_17.03.47-fduzm.png)

  Для этого нужно поискать на ближайшие даты поезд, где в целом осталось не
  много мест (посмотреть на выдаче)

  Можно искать на выдачах Москва - Санкт-Петербург, Москва - Екатеринбург или
  любых других

  Если не получается найти, можно взять поезд с наименьшим количеством свободных
  мест и в соседних вкладках забронировать лишние места в вагонах.
specs:
  'ЖД: Случай, когда в поезде осталось мало мест':
    - do: Перейти на страницу выбора мест для поезда из подготовки
    - assert: |
        * На странице есть предупреждение "В этом поезде не осталось вагонов с четырьмя свободными местами"
        * Общее количество допустимых билетов в подсказках и контролле  равно количеству свободных мест в вагоне с максимальным количеством свободных мест
        * Примерный внешний вид для тача https://jing.yandex-team.ru/files/semirka/Screenshot_74-1.png
    - do: Выбрать максимально допустимое кол-во взрослых билетов
    - assert: Нельзя выбрать больше 3 пассажиров с местом, дальше кнопка добавить "+" дизайблится
    - do: Нажать на кнопку добавить "+" у контролла детских билетов с местом
    - assert: |
        * Кнопка задизайблена и пассажиры не добавляются
        * Можно добавить только столько билетов, чтобы в сумме получилось не более допустимого количества в этом поезде, остальные варианты задизейблены

manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |
    Типы и вагоны должны убираться после выбора билетов, если в них недостаточно свободных мест.
    Для асессоров: если тестируете тач, для простоты можно искать подходящие поезда в десктопе, после чего переходить по ссылке в таче.
    Для прохождения кейса требуется найти тип поездов:
    В одном из ТИПОВ (Плацкарт, купе, итд) все вагоны с не более чем 3 свободными местами - в типе должно быть несколько вагонов с разными классами

    Скрин: https://jing.yandex-team.ru/files/shenfeld/2020-01-14_15.11.10-p005k.png

    Можно искать на выдачах Москва - Санкт-Петербург, Москва - Екатеринбург или любых других.
    Если не получается найти, можно взять поезд с наименьшим количеством свободных
    мест и в соседних вкладках забронировать лишние места в вагонах.
specs:
  'ЖД: Фильтрация вагонов при малом кол-ве свободых мест':
    - do: Перейти на страницу выбора мест для поезда из подготовки 1
    - assert: На странице отображается тип, в вагонах которого осталось мало мест
    - do: Выбрать количество пассажиров больше, чем осталось в вагонах этого типа
    - assert: |
        * Этот тип вагона пропал
        * Остальные типы остались без изменений
    - do: |
        Уменьшить количество пассажиров так, чтобы мест в вагонах типа, который
        пропал, хватало
    - assert: Тип снова отображается
    - do: Перейти на страницу выбора мест для поезда из подготовки 2
    - assert: На странице отображается класс, в вагонах которого осталось мало мест
    - do: |
        Выбрать количество пассажиров больше, чем осталось в вагонах этого
        класса
    - assert: |
        * Этот класс пропал
        * Остальные классы стались без изменений
    - do: >-
        Уменьшить количество пассажиров так, чтобы мест в вагонах класса,
        который пропал, хватало
    - assert: Класс снова отображается
    - do: Перейти на страницу выбора мест для поезда из подготовки 3
    - assert: На странице отображается вагон, где осталось мало мест
    - do: Выбрать количество пассажиров больше, чем осталось в этом вагоне
    - assert: |
        * Этот вагон пропал
        * Остальные вагоны остались без изменений
    - do: |
        Уменьшить количество пассажиров так, чтобы мест в вагонах класса,
        который пропал, хватало
    - assert: Вагон снова отображается

manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Тач
  - Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: ''
description: |-
  Быть залогиненым под:
  mastertester@yandex.ru
  MasterTester1
specs:
  Тревелайн. Бронирование отеля залогин:
    - do: |-
        Перейти на страницу бронирования отеля Вега Измайлово.
        Заезд завтра, выезд послезавтра, 2 гостя
    - do: 'Assert: Открылась страница бронирования отеля'
    - do: 'Assert: Поле телефона и мейла заполнены данными залогина'
    - do: |-
        Ввести данные гостей:
        1 гость: Kirill Ivanov
        2 гость: Svetlana Maksimova
    - do: Нажать на кнопку “Оплатить”
    - do: 'Assert: Открылась страница оплаты заказа'
    - do: |-
        Заполнить поля:
        Номер карты: 5100 0027 6715 5462
        Срок действия: 12/22
        CVC/CVV: 454
    - do: Снять галочку “Сохранить карту для быстрой оплаты в дальнейшем"
    - do: Нажать на кнопку “Оплатить”
    - do: >-
        Assert: Появился лоадер с текстом “Создание заказа Создаем заказ и
        готовимся к оплате”
    - do: 'Assert: Элементы на странице задизейблены'
    - do: >-
        Assert: Открылась страница успешной брони отеля. На странице должны
        соответствовать данные из предыдущих шагов:

        - Название отеля

        - Даты заеда и выезда

        - Количество ночей

        - Имя/Фамилия гостей

        - Контактные данные - электронная почта и телефон

        - Оплаченная сумма
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Сервис: Отели
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Blocker
feature: Автобусы. Старый фронт
type: Главная
description: |-
  Открыта главная страница сервиса
  Пользователь авторизован
specs:
  'Шапка: переход по пунктам меню авторизованного пользователя':
    - do: Тап на аватарку пользователя в правом верхнем углу
    - assert: |-
        Открывается выпадающее меню.
        Присутствуют пункты:
        - Написать письмо
        - Мой Диск с иконкой Диска слева
        Через разделительную линию пункты:
        - Настройка
        - Паспорт
        - Выйти
    - do: Тап по пункту меню "Написать письмо"
    - assert: Открывается Яндекс Почта на странице создания нового письма
    - do: |-
        Вернуться на главную страницу сервиса https://yandex.ru/bus/
        Тап на аватарку пользователя в правом верхнем углу
        Тап по пункту меню "Мой Диск"
    - assert: Открывается Яндекс Диск
    - do: |-
        Вернуться на главную страницу сервиса https://yandex.ru/bus/
        Тап на аватарку пользователя в правом верхнем углу
        Тап по пункту меню "Настройка"
    - assert: 'Открывается страница настроек аккаунта https://yandex.ru/tune'
    - do: |-
        Вернуться на главную страницу сервиса https://yandex.ru/bus/
        Тап на аватарку пользователя в правом верхнем углу
        Тап по пункту меню "Паспорт"
    - assert: Открывается главная страница Яндекс Паспорта
    - do: |-
        Вернуться на главную страницу сервиса https://yandex.ru/bus/
        Тап на аватарку пользователя в правом верхнем углу
        Тап по пункту меню "Выйти"
    - assert: >-
        Остаемся на главной странице сервиса https://yandex.ru/bus/ .
        Пользователь разлогинивается. Вместо аватарки отображается белая кнопка
        "Войти"
manual: true
Устройство: Тач
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814892
feature: Автобусы. Старый фронт
type: Главная
description: Открыта главная страница сервиса
specs:
  'Блок "Откуда-Куда": внешний вид':
    - do: Проверить внешний вид блока "Откуда-Куда"
    - assert: |-
        Блок белого цвета, прямоугольной формы, содержит:
        - Поле "Откуда" (серым шрифтом) с городом отправления
        - Поле "Куда" (серым шрифтом)
        - Поле, заполненное датой (черным шрифтом)
        Поля отделены друг от друга горизонтальной чертой серого цвета
        Справа от черты под полем "Откуда" отображается черная двойная стрелка
        Справа от поля с датой отображается серая иконка календаря
        Под блоком отображается желтая кнопка "Найти"
        Верстка блока корректная, блок отображается по всей ширине экрана
    - do: Перевернуть устройство в другую ориентацию
    - assert: 'Верстка блока корректная, все элементы на месте'
manual: true
Устройство: Тач
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814892
feature: Автобусы. Старый фронт
type: Главная
description: |-
  _Вводимый текст в полях ввода может быть не отцентрован, не надо заводить баг_
  Открыта главная страница сервиса
specs:
  'Получение выдачи для городов, между которыми нет рейсов':
    - do: >-
        Заполнить поля "Откуда" и "Куда" городами, между которыми нет рейсов.
        Например, Владивосток и Калининград.

        Тап на кнопку "Найти".
    - assert: >-
        Открылось окно с надписью "Поиск рейсов".

        Надпись в окне сменяется на надпись "На эту дату рейсов нет. Попробуйте
        выбрать другую дату отправления" с серой кнопкой "Выбрать другую дату"
manual: true
Устройство: Тач
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814892
feature: Автобусы. Старый фронт
type: Главная
description: Находимся на главной странице сервиса
specs:
  Футер:
    - do: Проверить внешний вид футера
    - assert: |-
        Футер серого цвета.
        Присутствуют пункты:
        - Условия покупки билетов на автобусы
        - Пользовательское соглашение
        - Обратная связь
        - Помощь

        Ниже находится копирайт с синей надписью "Яндекс"
    - do: Тап по пункту "Условия покупки билетов на автобусы"
    - assert: >-
        Открывается страница с условиями бронирования и приобретения электронных
        билетов на автобусы
        https://yandex.ru/legal/bus/_tickets_booking_conditions
    - do: |-
        Вернуться на главную страницу сервиса https://yandex.ru/bus/
        Тап по пункту "Пользовательское соглашение"
    - assert: >-
        Открывается страница с пользовательским соглашением сервиса Яндекс
        Путешествия https://yandex.ru/legal/travel_termsofuse
    - do: |-
        Вернуться на главную страницу сервиса https://yandex.ru/bus/
        Тап по пункту "Обратная связь"
    - assert: >-
        Открывается форма отправки обратной связи службе поддержки Путешествий
        https://yandex.ru/support/travel/troubleshooting.html#feedback_bus
    - do: |-
        Вернуться на главную страницу сервиса https://yandex.ru/bus/
        Тап по пункту "Помощь"
    - assert: >-
        Открывается страница помощи Яндекс Путешествий
        https://yandex.ru/support/travel/index.html
    - do: |-
        Вернуться на главную страницу сервиса https://yandex.ru/bus/
        Тап по надписи "Яндекс" в копирайте
    - assert: 'Открывается главная страница https://yandex.ru'
manual: true
Устройство: Тач
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814892
feature: Автобусы. Старый фронт
type: Главная
description: |-
  Между блоками с популярными направлениями встроена реклама
  Открыта главная страница сервиса
specs:
  'Блок тарифов: внешний вид':
    - do: Проверить внешний вид блока тарифов
    - assert: >-
        Блок тарифов состоит из популярных направлений из города, который указан
        в настройках на yandex.ru/tune, либо из ближайшего крупного города.

        Для каждого из популярных направлений присутствует картинка, под ней
        слева указано направление (Откуда-Куда), ниже стоимость поездки.

        Под последним популярным направлением присутствует текстовый блок с
        популярными направлениями. Блок состоит из указания направления
        (Откуда-Куда) слева и стоимости поездки справа.

        Под последним направлением находится серая кнопка "Каталог направлений"
    - do: Перевернуть девайс в другую ориентацию
    - assert: >-
        Верстка не ломается, содержимое блока растягивается по всей ширине
        экрана, расположение всех элементов относительно друг друга остается
        прежним. _(на x-айфонах есть поля по бокам)_
manual: true
Устройство: Тач
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814892
feature: Автобусы. Старый фронт
type: Главная
description: Открыта главная страница сервиса
specs:
  'Блок тарифов: переход по ссылкам с тарифами':
    - do: Тап по любой картинке из блока тарифов
    - assert: >-
        Надпись сменяется списком предложений согласно направлению, написанному
        под картинкой, по которой осуществлялся переход
    - do: >-
        Вернуться на главную страницу сервиса. Тап по любому наименованию
        направления под картинкой в блоке тарифов
    - assert: >-
        адпись сменяется списком предложений согласно направлению, по которому
        осуществлялся переход
    - do: >-
        Вернуться на главную страницу сервиса. Тап по любому наименованию
        направления в текстовом блоке под блоком с картинками
    - assert: >-
        Надпись сменяется списком предложений согласно направлению, по которому
        осуществлялся переход
manual: true
Устройство: Тач
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814892
feature: Автобусы. Старый фронт
type: Главная
description: Открыта главная страница сервиса
specs:
  'Блок тарифов: переход по кнопке "Каталог направлений"':
    - do: Тап по кнопке "Каталог направлений" в нижней части блока тарифов
    - assert: Открывается каталог направлений по алфавиту
manual: true
Устройство: Тач
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814892
feature: ЖД
type: Выдача
description: >-
  Кейс проверяет случай, когда на выдачу попадаем первый раз (цен нет в колдуне
  и нет в кэше - делаем запрос к партнеру).

  Выглядит это так: появляются спиннеры загрузки цен, через какое-то время
  появляются кнопки покупки.

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-20_16.40.31-o3lyi.png)
specs:
  'ЖД: Запрос за ценами к партнеру':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на выдачу из описания (чтобы были спиннеры загрузки, а не сразу
        кнопки - можно поискать на дальние даты, но не более 90 дней)
    - assert: |-
        * Сначала отображаются спиннеры
        * Через какое-то время спиннеры меняются на кнопки покупки
    - do: Обновить страницу выдачи
    - assert: '* Спиннеров нет, цены и кнопки отображаются сразу'
    - do: >-
        Перейти по кнопке покупки для любого поезда (кнопка Выбрать место; если
        есть только кнопка Купить на УФС - поискать на другую дату)
    - assert: '* Открылась страница выбора мест для этого поезда'
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: при возвращении со страницы покупки на выдачу запоминается позиция, до которой доскроллили':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: >-
        Открылась страница выдачи для направления Екатеринбург -
        Санкт-Петербург.
    - do: Проскроллить выдачу вниз и запомнить текущее расположение сниппетов.
    - do: Нажать по одному из сниппетов предложений.
    - assert: Осуществился переход на страницу покупки для выбранного предложения.
    - do: Нажать на кнопку Все варианты перелёта.
    - assert: >-
        Вернулись на страницу выдачи. Расположение сниппетов соответствует тому,
        которое было до перехода на страницу покупки.
    - do: 'Проскроллить выдачу ещё раз, запомнить расположение сниппетов.'
    - do: Перейти на страницу покупки по одному из предложений.
    - do: Нажать на кнопку Назад браузера.
    - assert: >-
        Вернулись на страницу выдачи. Расположение сниппетов соответствует тому,
        которое было до перехода на страницу покупки.
    - do: 'Проскроллить выдачу ещё раз, запомнить расположение сниппетов.'
    - do: Перейти на страницу покупки по одному из предложений.
    - do: Обновить страницу.
    - do: >-
        Дождаться окончания загрузки страницы, а затем нажать на кнопку Все
        варианты перелёта.
    - assert: >-
        Возвращаемся на страницу выдачи. Происходит перезапрос вариантов, после
        его окончания страница выдачи отображается с самого первого варианта.
        Позиция, до которой доскроллили, не сохранилась.
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: >-
  Некоторые предложения на выдаче могут состоять из нескольких рейсов. Например,
  рейс Екатеринбург - Токио всегда проходит с пересадками, и потому все
  предложения для него состоят из нескольких сегментов.

  Разные сегменты могут быть предоставлены разными авиакомпаниями.

  В случае, когда в предложении участвует больше одной авиакомпании, такое
  предложение не будет показываться в результатах фильтрации только по одной из
  них.

  Т. е., например, если на выдаче есть вариант, в котором один сегмент выполняет
  компания А, а второй - компания Б, то:

  - Отфильтровав по компании А, этот вариант не отобразится

  - Отфильтровав по компании Б, этот вариант также будет отсутствовать
specs:
  'Авиа: На выдаче Авиакомпания не показывается в фильтре, если она есть только в сегментах':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Ухта
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи.
    - do: >-
        Раскрыть фильтр авиакомпаний. Сравнить список авиакомпаний с теми, что
        есть в вариантах выдачи.
    - assert: >-
        Список авиакомпаний в фильтре состоит только из тех авиакомпаний, для
        которых на выдаче есть свой личный вариант (рейс состоит только из
        сегментов одной этой компании).
    - do: Применить фильтр для одной из авиакомпаний из списка.
    - assert: >-
        На выдаче остались только варианты, где присутствует одна только эта
        авиакомпания.
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Автобусы. Старый фронт
type: Главная
description: ''
specs:
  Шапка. Логотип:
    - do: Открыть главную страницу сервиса.
    - assert: |-
        Шапка содержит:
        - Логотип Яндекс
        - Логотип Путешествия
        - Переключатель видов транспорта/отелей, выделен раздел Автобусы
        - Кнопка Войти (для незалогиненного пользователя)
        - Аватар и юзернейм пользователя (для залогиненного пользователя)
        - Мои билеты (для залогиненного пользователя)
    - do: Нажать на логотип Яндекс.
    - assert: Происходит переход на главную страницу Яндекса.
    - do: |-
        Вернуться на предыдущую страницу.
        Нажать на логотип Путешествия.
    - assert: |-
        Происходит переход на главную страницу Яндекс.Путешествия
        Выделен раздел Автобусы
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: ''
specs:
  Шапка. Переключатель поиска и покупки билетов:
    - do: Открыть главную страницу сервиса.
    - assert: |-
        Шапка содержит:
        - Логотип Яндекс
        - Логотип Путешествия
        - Переключатель видов транспорта/отелей, активен раздел Автобусы
        - Кнопка Войти (для незалогиненного пользователя)
        - Аватар и юзернейм пользователя (для залогиненного пользователя)
        - Мои билеты (для залогиненного пользователя)

        Переключатель видов транспорта/отелей содержит элементы:
        - Авиабилеты
        - Ж/д билеты
        - Отели
        - Автобусы
    - do: Нажать на Авиабилеты.
    - assert: В новой вкладке открывается главная страница Яндекс.Авиабилеты
    - do: |-
        Вернуться на сервис.
        Нажать на Ж/д билеты.
    - assert: >-
        В новой вкладке открывается страница Яндекс.Путешествия, выбран раздел
        Ж/д билеты
    - do: |-
        Вернуться на сервис.
        Нажать на Отели.
    - assert: >-
        В новой вкладке открывается страница Яндекс.Путешествия, выбран раздел
        Отели
    - do: Нажать на Автобусы.
    - assert: >-
        В новой вкладке открывается страница Яндекс.Путешествия, выбран раздел
        Автобусы
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: |-
  Открыта главная страница сервиса
  Выбран раздел Автобусы
  Пользователь не залогинен
specs:
  Личный кабинет. Авторизация существующим аккаунтом:
    - do: Нажать кнопку Войти в шапке.
    - assert: Происходит переход в Паспорт для выбора пользователя.
    - do: |-
        Ввести корректные логин и пароль существующего пользователя.
        Нажать Войти.
    - assert: |-
        Происходит возврат на страницу сервиса Яндекс.Путешествия
        В шапке отображается аватар и юзернейм пользователя
        Появляется раздел Мои билеты
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: |-
  Открыта главная страница сервиса
  Выбран раздел Автобусы
  Пользователь не залогинен
specs:
  Личный кабинет. Регистрация нового пользователя:
    - do: Нажать кнопку Войти в шапке.
    - assert: Происходит переход в Паспорт для выбора пользователя.
    - do: >-
        Нажать Зарегистрироваться

        Указать необходимые для регистрации нового пользователя данные и нажать
        Зарегистрироваться
    - assert: |-
        Происходит возврат на страницу сервиса Яндекс.Путешествия
        В шапке отображается аватар и юзернейм пользователя
        Появляется раздел Мои билеты
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: |-
  Открыта главная страница сервиса
  Выбран раздел Автобусы
  Пользователь залогинен
specs:
  Личный кабинет. Мои билеты:
    - do: Нажать "Мои билеты" слева от аватара пользователя.
    - assert: >-
        Открывается страница заказов пользователя.

        В шапке переключатель видов транспорта/отелей заменяется поиском рейсов
        автобусов.

        Ниже отображаются купленные билеты или заглушка "Вы еще не купили ни
        одного билета".
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: |-
  Открыта главная страница сервиса
  Выбран раздел Автобусы
  Пользователь залогинен
specs:
  Личный кабинет. Выход из текущего аккаунта:
    - do: Нажать на аватар или юзернейм пользователя в шапке.
    - assert: |-
        Открывается меню, содержащее пункты:
        - Написать письмо
        - Мой диск
        - Настройка
        - Паспорт
        - Выйти
    - do: Нажать Выйти
    - assert: |-
        Происходит разлогин.
        Аватар и юзернейм пользователя заменяются кнопкой Войти.
        Если находились в разделе Мои билеты, появляется заглушка "Ошибка".
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: |-
  Открыта главная страница сервиса
  Выбран раздел Автобусы
  Пользователь залогинен
specs:
  Личный кабинет. Смена текущего пользователя:
    - do: Нажать на аватар или юзернейм пользователя в шапке.
    - assert: |-
        Открывается меню, содержащее пункты:
        - Написать письмо
        - Мой диск
        - Настройка
        - Паспорт
        - Выйти
    - do: Нажать Выйти
    - assert: |-
        Происходит разлогин.
        Аватар и юзернейм пользователя заменяются кнопкой Войти.
        Если находились в разделе Мои билеты, появляется заглушка "Ошибка".
    - do: Нажать кнопку Войти в шапке.
    - assert: Происходит переход в Паспорт для выбора пользователя.
    - do: >-
        Ввести корректные логин и пароль существующего пользователя или
        зарегистрировать нового пользователя.

        Нажать Войти.
    - assert: |-
        Происходит возврат на страницу сервиса Яндекс.Путешествия
        В шапке отображается аватар и юзернейм пользователя
        Появляется раздел Мои билеты
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: |-
  Открыта главная страница сервиса Яндекс.Путешествия
  Активен раздел Автобусы
specs:
  Поиск билетов на автобусные рейсы:
    - do: Открыть главную страницу сервиса
    - assert: |-
        Открыта страница "Поиск и продажа билетов на автобусы по России и СНГ"
        Под шапкой и заголовком расположены поля поиска, включающие:
        - Откуда
        - Куда
        - Кнопка смены направления
        - Выбор даты
        - Кнопка Найти
    - do: Выбрать поле Откуда
    - assert: Поле Откуда выделено жёлтой рамкой
    - do: Начать вводить название любого города
    - assert: 'Появляется саджест, содержащий список населённых пунктов, станций и др.'
    - do: Выбрать город из списка
    - assert: Название города подставилось в поле Откуда
    - do: Выбрать поле Куда
    - assert: Поле Куда выделено жёлтой рамкой
    - do: Начать вводить название любого города
    - assert: 'Появляется саджест, содержащий список населённых пунктов, станций и др.'
    - do: Выбрать город из списка
    - assert: Название города подставилось в поле Куда
    - do: Нажать кнопку смены направления (две реверсивные стрелки)
    - assert: Значения полей Откуда и Куда поменялись местами
    - do: Выбрать поле Дата
    - assert: |-
        Поле Дата выделено жёлтой рамкой
        Появился саджест
    - do: Нажать в саджесте кнопку Сегодня
    - assert: |-
        Поле Дата заполнено значением "сегодня"
        В календаре подсвечена текущая дата
    - do: Нажать в саджесте кнопку Завтра
    - assert: |-
        Поле Дата заполнено значением "завтра"
        В календаре подсвечена следующая дата
    - do: Выбрать в саджесте произвольную дату
    - assert: |-
        Поле Дата заполнено выбранной датой
        В календаре подсвечена выбранная дата
    - do: Нажать кнопку Найти
    - assert: >-
        Отображается список рейсов, удовлетворяющий условиям поиска, или
        заглушка "На эту дату рейсов нет"
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: |-
  Открыта главная страница сервиса Яндекс.Путешествия
  Активен раздел Автобусы
specs:
  Страница результатов поиска:
    - do: >-
        Ввести в поля поиска Куда, Откуда и Дата корректные значения

        Нажать кнопку Найти

        Если отображается заглушка "На эту дату рейсов нет", подобрать другие
        условия поиска
    - assert: 'Отображается список рейсов, удовлетворяющий условиям поиска'
    - do: Проверить внешний вид страницы с результатами поиска
    - assert: >-
        - Поле поиска переместилось в шапку, в нём заполнены ранее выбранные
        значения

        - В заголовке отображается "Рейсы", указаны пункты Откуда и Куда, дата
        отправления

        - Количество найденных рейсов

        - Указание на местное время

        - Блок "Хорошие цены"

        - Список рейсов
    - do: Выбрать поле поиска в шапке
    - assert: |-
        Поиск разворачивается
        Поля ввода позволяют выбрать и изменить значения
        Кнопка Найти обновляет результаты поиска
    - do: Проверить визуально блок Есть дешевле!
    - assert: |-
        Блок содержит элементы:
        - Заголовок "Есть дешевле!"
        - Под заголовком текст "Проверьте другие даты, цены могут быть ниже"
        - Горизонтальный ряд с датами, начиная с текущей
        - На каждую дату указана минимальная стоимость билета
        - Если минимальная стоимость не определена, отображается значок "Лупа"
    - do: Выбрать любую дату в блоке Есть дешевле
    - assert: >-
        Заголовок поиска сменился на выбранную дату

        Результаты поиска обновились

        Среди результатов поиска минимальное значение соответствует цене в блоке
        Есть дешевле
    - do: Выбрать дату без установленной цены в блоке Есть дешевле
    - assert: >-
        Заголовок поиска сменился на выбранную дату

        Результаты поиска обновились

        В блоке Есть дешевле появилось значение

        Среди результатов поиска минимальное значение соответствует цене в блоке
        Есть дешевле
    - do: Проверить визуально блок с результатами поиска
    - assert: |-
        Таблица результатов содержит колонки:
        - Отправление (время и населённый пункт)
        - Прибытие (время и населённый пункт)
        - Время в пути
        - Цена (сумма и знак валюты)
        - Кнопка Выбрать (Надпись Выбрать и ниже количество оставшихся мест)
    - do: Нажать на заголовки колонок
    - assert: |-
        Сортировка рейсов выполняется по выбранной колонке
        При повторном нажатии направление сортировки меняется
    - do: (Десктоп) Навести курсор на любой рейс
    - assert: Строка таблицы выделяется жёлтой рамкой
    - do: Выбрать любой рейс
    - assert: |-
        Описание рейса разворачивается и показывается дополнительная информация:
        - Временная линия с временем и пунктами остановок
        - Рейс
        - Перевозчик
        - Транспорт
        - Ссылка Прочие условия
        - Ссылка Скрыть
    - do: Нажать ссылку Прочие условия
    - assert: Разворачивается текст с дополнительным описанием
    - do: Нажать ссылку Скрыть
    - assert: |-
        Дополнительная информация скрывается
        Строка рейса не выделена
    - do: Нажать кнопку Выбрать любого рейса со свободными местами
    - assert: >-
        Открывается страница выбора мест, ввода персональных данных и оплаты
        билетов

        Рейс соответствует выбранному в таблице
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: ''
specs:
  Блок "Популярные направления" на главной Яндекс.Путешествия (Автобусы). Внешний вид:
    - do: Открыть главную страницу трестируемого сервиса на разделе "Автобусы"
    - assert: Открывается раздел "Автобусы" сервиса Яндекс. Путешествия
    - do: Проверить внешний вид блока "Популярные направления"
    - assert: |-
        - Верстка корректна
        - Отображается 9 популярных направлений (3х3)
        - У каждого направления есть подпись цены "от ..."
        - В названии направления есть населенный пункт отправления и прибытия
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: ''
specs:
  Блок "Популярные направления" на главной Яндекс.Путешествия (Автобусы). Переход по ссылкам популярных направлений.:
    - do: Открыть главную страницу трестируемого сервиса на разделе "Автобусы"
    - assert: Открывается раздел "Автобусы"  сервиса Яндекс. Путешествия
    - do: Кликнуть по названию направления в блоке "Популярные направления"
    - assert: Открывается страница результатов поиска выбранного направления на завтра
    - do: Повторить шаг 2 для других направлений
    - assert: Открывается страница результатов поиска выбранного направления на завтра
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: ''
specs:
  Блок "Каталог направлений" на главной Яндекс.Путешествия (Автобусы). Внешний вид:
    - do: Открыть главную страницу трестируемого сервиса на разделе "Автобусы"
    - assert: Открывается раздел "Автобусы"  сервиса Яндекс. Путешествия
    - do: Проверить внешний вид блока "Каталог направлений"
    - assert: >-
        - Внешний вид корректен

        - Блок выстроен в две колонки

        - У каждого направления есть цена "от... "

        - Под самим блоком есть название блока "Каталог направлений"

        - Каждое направление, кроме последнего, отделено бордюром - линией
        подчеркивания

        - Название блока выделено рамкой
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: ''
specs:
  Блок "Каталог направлений" на главной Яндекс.Путешествия (Автобусы). Переход по ссылкам:
    - do: Открыть главную страницу трестируемого сервиса на разделе "Автобусы"
    - assert: Открывается раздел "Автобусы"  сервиса Яндекс. Путешествия
    - do: Кликнуть по любому направлению в блоке "Каталог направлений"
    - assert: Открывается страница результатов поиска выбранного направления на завтра
    - do: Повторить шаг 2 для других направлений
    - assert: Открывается страница результатов поиска выбранного направления на завтра
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Автобусы. Старый фронт
type: Главная
description: Проверка верстки подвала и работоспособности ссылок в нем.
specs:
  Подвал:
    - do: >-
        Открыть главную страницу сервиса Яндекс.Путешествия - Автобусы,
        пролистать страницу вниз до подвала.
    - assert: >-
        В подвале есть ссылки "Условия покупки билетов на автобусы",
        "Пользовательское соглашение", "Обратная связь", "Помощь" и копирайт со
        ссылкой на главную страницу Яндекса. Верстка корректна.

        https://yadi.sk/i/ZQenm70rHwA8zg
    - do: Навести курсор по очереди на каждую из ссылок в подвале.
    - assert: 'Форма курсора меняется, цвет текста ссылки меняется на красный'
    - do: Нажать на ссылку "Условия покупки билетов на автобусы".
    - assert: >-
        В новой вкладке открывается страница
        https://yandex.ru/legal/bus_tickets_booking_conditions/
    - do: >-
        Вернуться на страницу сервиса. Нажать на ссылку "Пользовательское
        соглашение".
    - assert: >-
        В новой вкладке открывается страница
        https://yandex.ru/legal/travel_termsofuse/
    - do: Вернуться на страницу сервиса. Нажать на ссылку "Обратная связь".
    - assert: >-
        В новой вкладке открывается страница
        https://yandex.ru/support/travel/troubleshooting.html#feedback__bus
    - do: Вернуться на страницу сервиса. Нажать на ссылку "Помощь".
    - assert: >-
        В новой вкладке открывается страница
        https://yandex.ru/support/travel/index.html
    - do: Вернуться на страницу сервиса. Нажать на ссылку "Яндекс" в копирайте.
    - assert: В той же вкладке открывается главная страница Яндекса.
manual: true
Функциональность: Личный кабинет
Страница: Главная
Сервис: Автобусы. Старый фронт
Tag: form-2814823
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка окна Динамики цен при изменении размера окна браузера':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: Нажать на кнопку “Динамика цен”
    - assert: |-
        Общий фон страницы затемнился.
        По центру страницы появился блок динамики цены.
    - do: >-
        Уменьшить высоту окна браузера до того момента, когда окно Динамики не
        будет помещаться полностью.
    - assert: >-
        В окне браузера появляется скролл, который позволяет проматывать окно
        Динамики по вертикали.
    - do: Вернуть изначальный размер окну браузера.
    - assert: Скроллы для окна Динамики пропали.
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Покупка
description: ''
specs:
  'Авиа: Обратный порядок городов в заголовке обратного перелета на странице покупки':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца
        Обратно: 7 число следующего месяца
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: >-
        Перейти на страницу покупки, кликнув на один из вариантов (не по кнопке
        Купить).
    - assert: Осуществился переход на страницу покупки.
    - do: Проверить порядок городов в заголовках перелётов Туда и Обратно.
    - assert: >-
        Для перелёта Туда - заголовок "Екатеринбург - Санкт-Петербург", для
        перелёта Обратно - заголовок "Санкт-Петербург - Екатеринбург"
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Покупка
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: >-
  Для удобства разделим все фильтры на 2 группы.

  Группа 1 будет содержать все фильтры, которые влияют на подсказку Динамики
  цен. Это фильтры:

  - Фильтр багажа

  - Пересадки (в т.ч. фильтр Без пересадок)

  - Время вылета/прилёта


  Группа 2 состоит из фильтров, при применении которых подсказка Динамики цен
  принимает нейтральный вид ("Сравните стоимость билетов на разные даты"). Это
  фильтры:

  - Аэропорты

  - Авиакомпании
specs:
  'Авиа: Влияние фильтров на подсказку Динамики цен':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом

        Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: Нажать на кнопку “Динамика цен”
    - assert: |-
        Общий фон страницы затемнился.
        По центру страницы появился блок динамики цены.
    - do: |-
        Дождаться, пока на Динамике цен прогрузятся цены на все 7 дней.
        Закрыть окно Динамики.
    - do: >-
        Применить поочерёдно фильтр багажа, фильтр Без пересадок, любой другой
        фильтр из Пересадок, Время вылета/прилёта.
    - assert: >-
        Происходит одно из двух:

        - Подсказка Динамики цен меняется всякий раз, когда происходит
        применение фильтра, либо его снятие: https://jing.yandex-team.ru/files/gouken67/983_1.png
        Аналогично меняется заголовок в блоке Динамики цен: https://jing.yandex-team.ru/files/gouken67/1009_1.png

        - Подсказка Динамики цен остаётся одинаковой при применении фильтров.


        В обоих случаях подсказка никогда не принимает нейтральный вид (см.
        описание).

    - do: |-
        Сбросить все фильтры.
        Применить поочерёдно фильтр Аэропорты, фильтр Авиакомпании.
    - assert: >-
        Подсказка принимает нейтральный вид, когда применяется один из этих
        фильтров. В блоке Динамики цен записано "Цены на соседние даты".
    - do: >-
        Применить произвольную комбинацию фильтров из группы 1 и фильтров из
        группы 2.
    - assert: Подсказка принимает нейтральный вид.
    - do: Сбросить все фильтры.
    - assert: 'Подсказка принимает вид, который был до применения любого из фильтров.'
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Фильтрояк (десктоп)':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: >-
        Применить на выдаче фильтры Без пересадок и С багажом.

        Также выставить произвольные значения в фильтрах Время вылета/прилёта,
        Авиакомпания= Аэрофлот.
    - do: |-
        Кликнуть на строку поиска.
        Изменить значения поиска на Екатеринбург - Токио, дату не менять.
        Нажать на кнопка Найти.
    - assert: >-
        Попадаем на страницу фильтрояка.

        * На странице присутствует текст "Нет подходящих вариантов.

        Ни один вариант из результатов поиска не соответствует заданным
        фильтрам.

        Пожалуйста, сбросьте один или несколько фильтров."

        * Под текстом располагаются балуны с названиями применённых фильтров и
        крестиками.

        * Присутствуют строка с фильтрами, строка с сортировкой и ссылкой на
        ближайшие аэропорты

        Пример того, как выглядит страница:
        https://jing.yandex-team.ru/files/gouken67/%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%20%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D0%BE%D1%8F%D0%BA%D0%B0.png
    - do: Навести курсор на балун "С багажом".
    - assert: 'При наведении курсора балун затемняется, но больше ничего не происходит.'
    - do: Нажать на крестик на балуне "С багажом".
    - assert: >-
        Балун "С багажом" исчезает, снимается фильтр "С багажом" в строке
        фильтров. Фильтрояк остаётся.
    - do: Снять все галочки в фильтре Время вылета/прилёта.
    - assert: Балун "Время вылета/прилёта" исчезает. Фильтрояк остаётся.
    - do: Нажать на крестик на балуне “Пересадки”.
    - assert: >-
        Фильтр "Без пересадок" сбрасывается. Страница фильтрояка исчезает,
        появляется выдача для направления Екатеринбург - Токио. Оставшиеся
        фильтры остаются применёнными.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Фильтрояк (тач)':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: >-
        Применить на выдаче фильтры Без пересадок и С багажом.

        Также выставить произвольные значения в фильтрах Время вылета/прилёта,
        Авиакомпании.
    - do: |-
        Кликнуть на строку поиска.
        Изменить значения поиска на Екатеринбург - Токио, дату не менять.
        Нажать на кнопка Найти.
    - assert: >-
        Попадаем на страницу фильтрояка.

        * На странице присутствует текст "Нет подходящих вариантов.

        Ни один вариант из результатов поиска не соответствует заданным
        фильтрам.

        Пожалуйста, сбросьте один или несколько фильтров."

        * Под текстом располагаются балуны с названиями применённых фильтров и
        крестиками.

        * Присутствует строка с фильтрами.

        Пример того, как выглядит страница:
        https://jing.yandex-team.ru/files/gouken67/%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%20%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D0%BE%D1%8F%D0%BA%D0%B0%20%28%D1%82%D0%B0%D1%87%29.png
    - do: Нажать на балун "С багажом".
    - assert: Ничего не происходит.
    - do: Нажать на крестик на балуне "С багажом".
    - assert: >-
        Балун "С багажом" исчезает, снимается фильтр "С багажом" в строке
        фильтров. Счётчик фильтров уменьшается на 1. Фильтрояк остаётся.
    - do: Снять все галочки в фильтре Время вылета/прилёта.
    - assert: >-
        Балун "Время вылета/прилёта" исчезает. Счётчик фильтров уменьшается на
        1. Фильтрояк остаётся.
    - do: Нажать на крестик на балуне “Пересадки”.
    - assert: >-
        Фильтр "Без пересадок" сбрасывается. Счётчик фильтров уменьшается на 1.
        Страница фильтрояка исчезает, появляется выдача для направления
        Екатеринбург - Токио. Оставшиеся фильтры остаются применёнными.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: Отсутствие логотипа Авиакомпании - не баг!
specs:
  'Авиа: Сниппеты на странице выдачи':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Токио
        Туда: 5 число следующего месяца
        Обратно: 7 число следующего месяца
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: |-
        Применить сортировку "По времени в пути, по убыванию".
        Проверить, из чего состоит сниппет на выдаче.
    - assert: >-
        Сниппет содержит следующую информацию:

        * Авиакомпания/авиакомпании (в тачах не будет), предоставляющие рейс
        туда и рейс обратно. Для десктопа: сели рейс туда и рейс обратно
        предоставляет одна и та же авиакомпания - в сниппете будет указана
        большая иконка с логотипом этой компании.

        * Время вылета/прилёта (рассчитывается по местному времени
        соответствующего пункта)

        * Общее время в пути

        * Блок, где указаны возможные пересадки для каждого направления

        * Для каждого направления - аэропорт вылета и аэропорт прилёта

        * Информация о багаже

        * Стоимость перелёта на жёлтой кнопке

        * Информация о сайте партнёра с такой стоимостью


        Пример для десктопа:
        https://jing.yandex-team.ru/files/gouken67/travel_1146_desktop.png


        Пример для тачей:
        https://jing.yandex-team.ru/files/gouken67/travel_1146_touch.png
    - do: (Для десктопа) Навести курсор на информацию о пересадках.
    - assert: Появляется pop-up с подробным описанием информации о пересадках.
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: [Touch] Работа с меню фильтров':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: Нажать на кнопку с ползунками
    - assert: >-
        Открывается шторка с фильтрами. На кнопке "Показать" указано текущее
        число вариантов на выдаче.
    - do: Выставить произвольный порядок фильтров.
    - assert: По мере выставления фильтров число на кнопке Показать уменьшается.
    - do: 'Закрыть одну из групп, в которой были выбраны значения фильтров.'
    - assert: >-
        Группа фильтров теперь имеет числовое значение примененных в ней
        фильтров

        screen: https://jing.yandex-team.ru/files/molox/77777.png
    - do: Комбинацией фильтров набрать минимальное, но не равное 0 количество вариантов (число на кнопке Показать)
    - do: Нажать на кнопку Показать.
    - assert: >-
        Возвращаемся на выдачу. На выдаче ровно столько же вариантов, сколько
        было указано на кнопке Показать.

        На кнопке с ползунками указано корректное число применённых фильтров -
        сколько групп фильтров было задействовано, такое число и будет записано
        (фильтр Без пересадок входит в группу Пересадки).
    - do: |-
        Вернуться в шторку меню с фильтрами.
        Изменить порядок фильтров.
        Нажать на затемненную область позади шторки.
        Шторка должна скрыться.
    - assert: >-
        Возвращаемся на выдачу. На выдаче ровно столько же вариантов, сколько
        было указано на кнопке Показать.

        На кнопке с ползунками указано корректное число применённых фильтров.
    - do: |-
        Вернуться в шторку с фильтрами.
        Нажать на кнопку Сбросить.
    - assert: >-
        Все фильтры сняты. Группы фильтров больше не окрашены в жёлтый цвет.
        Число вариантов на кнопке Показать стало тем же, каким оно было до
        применения фильтров.

        Кнопка "Сбросить" не активна и окрашена серым
    - do: Нажать на кнопку Показать.
    - assert: >-
        Шторка скрылась

        Возвращаемся на выдачу. На выдаче ровно столько же вариантов, сколько
        было указано на кнопке Показать.

        На кнопке с ползунками нет чисел.
    - do: Кликнуть по кнопке меню фильтров
    - assert: Открылась шторка с меню фильтров. Ни один фильтр не выбран.
    - do: |-
        Выбрать произвольный фильтр
        screen: https://jing.yandex-team.ru/files/molox/99999.png
    - assert: Появился крестик для сброса фильтра
    - do: |-
        Очистить выбранный фильтр кнопкой в виде крестика
        screen: https://jing.yandex-team.ru/files/molox/крест.png
    - assert: Фильтр сбросился. Кол-во вариантов увеличилось
    - do: Закрыть меню фильтров
    - assert: >-
        Шторка скрылась

        Возвращаемся на выдачу. На выдаче ровно столько же вариантов, сколько
        было указано на кнопке Показать.

        На кнопке с ползунками нет чисел.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: gouken67
feature: ЖД
type: Ввод данных
description: ''
specs:
  'ЖД: Отображение ошибки на вводе данных, когда нет мест в выбранный вагон':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на любую выдачу из Москвы
        Для любого поезда кликнуть по кнопке покупки
    - assert: '* Произошел переход на страницу выбора мест'
    - do: |-
        Выбрать любое место
        Кликнуть Указать пассажиров
    - assert: '* Произошел переход на страницу ввода данных'
    - do: >-
        Заменить в урле значение параметра __coachNumber__ на номер
        несуществующего вагона, например, 100

        Перейти по полученной ссылке
    - assert: >-
        * Произошел переход на страницу ввода данных с ошибкой:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-22_17.26.46-se5fg.png)
    - do: Кликнуть по кнопке Выбрать места заново
    - assert: '* Произошел переход на страницу выбора мест в тот же поезд'
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Для прохождения кейса нужно найти поезд, где осталось мало мест в один из
  типов вагонов или в целый поезд. Можно поискать на Москва - Екатеринбург,
  Москва - Санкт-Петербург, Санкт-Петербург - Москва на ближайшие даты.

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-22_20.18.40-0hvkz.png)
specs:
  'ЖД: Ошибка "На заданном направлении (или поезде) мест нет"':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на выдачу из описания

        Кликнуть по кнопке покупки для поезда с маленьким количеством мест в
        поезде/типе
    - assert: '* Произошел переход на страницу выбора мест'
    - do: >-
        Скопировать ссылку на страницу выбора мест и открыть ее в новой вкладке

        Для типа мест, где осталось мало свободных мест, забронировать (то есть
        дойти до шага подтверждения) ВСЕ места в этом типе - можно сделать это в
        нескольких вкладках

        Не закрывать эти вкладки и вернуться на первую вкладку, где еще доступны
        все места, которые бронировали

        Нажать Указать пассажиров

        Заполнить все поля валидными данными

        Нажать проверить заказ и купить
    - assert: >-
        * Перехода на страницу подтверждения не произошло

        * Отображается ошибка:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-22_20.44.13-sv6pw.png)
    - do: Кликнуть по кнопке Выбрать места заново
    - assert: |-
        * Произошел переход на страницу выбора мест
        * На странице нет типа вагона, куда были забронированы все места
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: ''
description: ''
specs: {}
manual: true
Сервис: ЖД
feature: Авиа
type: Выдача
description: >-
  Подсказки Динамики цен отображаются по следующему принципу:

  - При загрузке выдачи запрашивается ответ из price index (ручка dynamics).

  - В зависимости от ответа показывается та или иная подсказка Динамики цен.


  Алгоритм, по которому определяется, какая именно подсказка должна быть
  показана, расписан далее:

  Получаем ответ от ручки price index и принимает её минимальное значение за
  min. Затем сравниваем с текущей минимальной ценой на выдаче.

  **1. Если не удалось найти min (нет цен за остальные 6 дней) – нейтральная
  подсказка (4)**.

  **2.Если за все 7 дней присутствуют цены:**

  Берётся min из цен остальных 6 дней. Параллельно определяется, что меньше –
  10% от текущей цены, либо $30.

  Если min цена находится в отрезке [тек – x; тек + x] (где x = min {10%; $30}),
  выводится подсказка о **примерно таких же ценах (3)**

  Если min цена находится вне этого отрезка, происходит сравнение с текущей
  ценой. Если текущая меньше, выводится подсказка **«Это хорошая цена» (1)**.
  Если меньше min цена, выводится подсказка **«Это дорого» (2)**.

  **3. Если есть цены, но не за все 6 дней:**

  Берём min из имеющихся цен. Решаем, что меньше - 10% от текущей цены, либо
  $30.

  x = min {10%; $30}

  - Если min цена меньше (тек – x) – подсказка **«Это дорого» (2).**

  - Если min цена располагается внутри отрезка [тек – x; тек + x] –
  **нейтральная подсказка (4).**

  - Если min цена больше (тек + x) - **нейтральная подсказка (4).**


  **Для того, чтобы узнать, какой ответ нам присылает price index, необходимо
  сделать следующее:**

  1. На главной странице открыть DevTools браузера (по умолчанию - F12) и
  перейти на вкладку Network:


  ![DevTools](https://jing.yandex-team.ru/files/gouken67/%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%201.png)


  2. Ввести в поле Filter слово "dynamics".

  3. Получить нужную выдачу.

  В DevTools будут появляться только запросы для dynamics.

  4. Кликнуть по появившемуся запросу. Перейти во вкладку Preview.


  Появляется ответ от price index:


  ![Ответ от price
  index](https://jing.yandex-team.ru/files/gouken67/%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%202.png)


  Читается это так:

  1. В каждой строке записана дата, минимальная цена по аналогичной выдаче за
  эту дату, значение валюты и актуальность.

  2. Актуальность определяется полем roughly. Если оно имеет значение true,
  значит указанная здесь цена не является актуальной, если false - то является.


  **Виды подсказок:**

  1. Подсказка о хорошей цене: "Билеты на соседние даты стоят дороже - на <X>
  р."

  2. Подсказка о плохой цене: "Билеты на соседние даты стоят дешевле - на <X>
  р."

  3. Подсказка о примерно такой же цене: "Билеты на соседние даты стоят примерно
  столько же"

  4. Нейтральная подсказка: "Сравните стоимость билетов на разные даты"


  Далее будет описан способ, который позволит просмотреть большую часть
  подсказок.
specs:
  'Авиа: Проверка подсказок Динамики цен':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Кейптаун
        Туда: Любое число месяца, который будет через 3 месяца от текущего.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: |-
        Открыть DevTools.
        Перейти во вкладку Network.
        Ввести слово "dynamics" в поле Filter.
    - do: Нажать кнопку “Найти” на странице Авиабилетов.
    - assert: >-
        Открылась страница выдачи. Во вкладке Network появился ответ для
        "dynamics"
    - do: Ознакомиться с ответом для "dynamics".
    - assert: >-
        Необходимо, чтобы в ответе было одно из этих состояний:

        - Есть информация только по текущему дню;

        - Есть информация по текущему и другим дням, но значение roughly у
        записей равно true;

        - Информации нет совсем.

        Если это не так, необходимо повторить шаги 1-5 со смещением на одну
        неделю вперёд.


        **ВАЖНО:** Для текущего дня подойдёт любое значение roughly, для
        остальных - только true.
    - do: >-
        В случае успешного прохождения предыдущего шага: посмотреть на подсказку
        Динамики цен.
    - assert: Подсказка Динамики цен имеет нейтральный вид (4).
    - do: |-
        Выбрать произвольный день в промежутке +-3 дня от текущего.
        Получить выдачу для этого дня по направлению Москва - Кейптаун.
    - assert: >-
        Открылась страница выдачи. Во вкладке Network появился новый ответ для
        “dynamics”.
    - do: Обновить страницу. Ознакомиться с ответом для "dynamics".
    - assert: >-
        В ответе запись текущего дня и запись дня прошлой выдачи имеют roughly:
        false.
    - do: Посмотреть на подсказку Динамики цен.
    - assert: >-
        Пусть min цена - это цена в ответе dynamics для дня предыдущей выдачи,
        тек - текущая минимальная цена на выдаче, x = min {тек * 10%; $30}.


        - Если min цена меньше (тек – x) – подсказка «Это дорого» (2).

        - Если min цена располагается внутри отрезка [тек – x; тек + x] –
        нейтральная подсказка (4).

        - Если min цена больше (тек + x) - нейтральная подсказка (4).


        Говоря проще: если текущая минимальная цена на выдаче отличается от
        минимальной цены из ответа dynamics больше чем на x, мы считаем её
        дорогой.
    - do: Кликнуть на подсказку Динамики цен.
    - assert: 'Открылась Динамика цен, появился новый ответ для dynamics.'
    - do: |-
        Дождаться, пока все варианты прогрузятся.
        Обновить страницу.
    - assert: >-
        Открылась страница выдачи. Во вкладке Network появился ответ для
        “dynamics”.
    - do: Ознакомиться с ответом для “dynamics”.
    - assert: 'Строки для всех дней имеют roughly: false.'
    - do: Посмотреть на подсказку Динамики цен.
    - assert: >-
        Пусть min цена - это цена в ответе dynamics для дня предыдущей выдачи,
        тек - текущая минимальная цена на выдаче, x = min {тек * 10%; $30}.

        Если min цена находится в отрезке [тек – x; тек + x] (где x = min {10%;
        $30}), выводится подсказка о **примерно таких же ценах (3)**

        Если min цена находится вне этого отрезка, происходит сравнение с
        текущей ценой. Если текущая меньше, выводится подсказка **«Это хорошая
        цена» (1)**. Если меньше min цена, выводится подсказка **«Это дорого»
        (2).**
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Значения фильтров выдачи не должны сохраняться после возвращения на начальную страницу':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: Выставить произвольные значения фильтров.
    - assert: 'На выдаче остались только варианты, подходящие под значения фильтров.'
    - do: 'Вернуться на начальную страницу, нажав на логотип Авиабилетов.'
    - do: Вместо Санкт-Петербурга выставить Москву.
    - do: Произвести поиск рейсов.
    - assert: Открылась страница выдачи. Значения всех фильтров сброшены.
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: >-
  Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с кнопкой
  Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым аккаунтом
  (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был именно тестовый
  аккаунт, т.к. через свой аккаунт не впустит

  **Вход в Яндекс.Паспорт**:

  - Кликнуть по кнопке Войти в правом верхнем углу _(если по нажатию на кнопку
  Войти открывается продовый паспорт passport.yandex.ru, необходимо в другой
  вкладке открыть паспорт тестинга https://passport-test.yandex.ru и
  авторизоваться в нем тестовым аккаунтом)_

  - Ввести логин testtravel

  - Нажать на кнопку Войти

  - Ввести пароль 1234ASDF

  - Нажать на кнопку Войти ещё раз


  После этого происходит возврат на страницу. с которой осуществлялся вход.
  Чтобы разлогиниться из Яндекс.Паспорта, необходимо кликнуть по иконке в правом
  верхнем углу и нажать на кнопку Выйти.
specs:
  'Авиа: Сохранение значений фильтров':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: |-
        Применить фильтры в произвольном порядке.
        Запомнить этот порядок.
    - do: |-
        Изменить направление в форме поиска.
        Получить выдачу по новому направлению.
        Проверить, остались ли фильтры применёнными.
    - assert: Порядок фильтров остался прежним.
    - do: Изменить порядок фильтров. Запомнить получившийся порядок.
    - do: >-
        Перейти на страницу покупки, нажав на любой из сниппетов (не по кнопке "Купить" и не по багажной информации)
        Вернуться обратно на страницу выдачи.
    - assert: Порядок фильтров не изменился.
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: gouken67
feature: Авиа
type: Главная
description: >-
  Временно убрали рецепты у авиа. После восстановления нужно вернуть кейс.


  Для авторизации на проде можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  'Авиа: Популярные направления не исчезают с главной страницы':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - assert: Популярные направления для Авиа присутствуют
    - do: >-
        Перейти на Отели.

        Кликнуть по популярному направлению.

        Нажать на логотип Путешествий, пока осуществляется переход на страницу
        поиска.
    - assert: Осуществлён переход на главную страницу для Отелей.
    - do: Вернуться на вкладку Авиабилеты.
    - assert: Популярные направления для Авиа должны присутствовать.
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: |-
        Совершить вход в Яндекс.Паспорт.
        На экране выдачи: Нажать на логотип Путешествий
    - assert: >-
        Осуществлён переход на главную страницу для Авиа. Популярные направления
        для Авиа должны присутствовать.
manual: true
Функциональность: Рецепты
Устройство:
  - Десктоп
  - Тач
Страница: Главная
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Получение сообщения "Нет вариантов"':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Маган
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”.
    - assert: >-
        После того, как закончится опрос партнёров, на экране появится
        сообщение:

        "Нет вариантов

        Мы не нашли билетов на это направление.

        Давайте поищем куда-нибудь еще!"
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги в кейсе, где требуется ввести данные
  карты и нажать кнопку Оплатить, нужно пропустить.**


  Тестовая карта (не для асессоров):

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/20

  Для прохождения кейса требуется найти поезд с временем отправления через 2 или
  через 8 часов от текущего.

  Можно искать на выдачах Москва - Санкт-Петербург (больше всего вариантов),
  Москва - Екатеринбург или любых других.
specs:
  'ЖД: Смена суммы к возврату при изменении условий возврата':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на любую выдачу и для поезда из подготовки и кликнуть по кнопке
        покупки

        Пройти по шагам покупки до страницы успешного заказа для одного
        пассажира

        Нажать "Подробнее о заказе"

        На странице заказа дождаться, когда до отправления поезда останется без
        1 минуты 2 или 8 часов

        Нажать Сдать билет
    - assert: '* Открылось модальное окно возврата с суммой к возврату'
    - do: Подождать 1-2 минуты
    - assert: >-
        * В течение этого времени сумма к возврату в модальном окне поменялась
        (сумма стала меньше)
    - do: Сдать билет
    - assert: >-
        * Произошел возврат билета

        * Сумма к возврату на странице совпадает с суммой в модальном окне
        (после изменения)
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Получение выдачи для пунктов, для которых не приходит город':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Модлин
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: |-
        Открылась страница выдачи
        Если результатов выдачи нет, поискать на 5 число следующего месяца
    - do: >-
        Дождаться окончания опроса партнёров.

        Проскроллить страницу вниз несколько раз (если вариантов мало -
        пропустить шаг).
    - assert: Новые варианты для указанного направления появляются после скролла.
    - do: Кликнуть по одному из сниппетов.
    - assert: Осуществился переход на страницу покупки.
    - do: 'Совершить переход к партнёру, нажав на кнопку Купить для любого из них.'
    - assert: >-
        Осуществляется переход к партнёру. В качестве города прибытия будет
        указана Варшава.
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: ЖД
type: Ввод данных
description: ''
specs:
  'ЖД: Валидация даты рождения, граничные значения (min)':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на выдачу Москва - Санкт-Петербург через неделю
        Для любого сниппета кликнуть по кнопке покупки
    - assert: '* Произошел переход на страницу выбора мест'
    - do: |-
        Выбрать любое место
        Нажать Указать пассажиров
    - assert: '* Произошел переход на страницу ввода дынных'
    - do: |-
        Заполнить поле даты рождения значением 31.12.1899
        Остальные поля заполнить любыми валидными данными
        Нажать Проверить заказ и купить
    - assert: >-
        * Переход на страницу подтверждения не произошел

        * Поле даты рождения подсвечивается красным и есть подсказка "Проверьте
        год."
    - do: |-
        Ввести дату рождения 01.01.1900
        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Данные пассажира соответствуют введенным
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: ''
specs:
  'ЖД: Валидация даты рождения, граничные значения (max)':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на выдачу Москва - Санкт-Петербург через неделю
        Для любого сниппета кликнуть по кнопке покупки
    - assert: '* Произошел переход на страницу выбора мест'
    - do: |-
        Выбрать любое место
        Нажать Указать пассажиров
    - assert: '* Произошел переход на страницу ввода дынных'
    - do: |-
        Заполнить поле даты рождения значением текущей даты
        Выбрать документ - Свидетельство о рождении
        Остальные поля заполнить любыми валидными данными
        Нажать Проверить заказ и купить
    - assert: >-
        * Переход на страницу подтверждения не произошел

        * Поле даты рождения подсвечивается красным и есть подсказка "Этот
        пассажир еще не родился :-)"
    - do: >-
        Ввести дату рождения от текущей до даты отправления поезда (например,
        завтрашнюю)

        Нажать Проверить заказ и купить
    - assert: >-
        * Переход на страницу подтверждения не произошел

        * Поле даты рождения подсвечивается красным и есть подсказка “Этот
        пассажир еще не родился :-)”
    - do: |-
        Ввести вчерашнюю дату рождения
        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Данные пассажира соответствуют введенным
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: Нужен другой пример.
specs:
  'ЖД: Случай, когда все вагоны в поезде беспересадочные':
    - do: >-
        Перейти на выдачу Москва - Магнитогорск на любую дату, где есть поезд
        014Е с кнопкой покупки

        Кликнуть для этого поезда по кнопке покупки
    - assert: >-
        * Произошел переход на страницу выбора мест

        * В блоке информации о поезде вверху страницы есть приписка
        "беспересадочный вагон"

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-24_13.05.35-riluf.png)
    - do: Просмотреть все вагоны во всех классах и типах в поезде
    - assert: >-
        * Для всех вагонов отображается только номер вагона, нет приписок
        "беспересадочный, прибывает в ..."
manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Вернуть кейс после восстановления движения.


  При оформлении электронных билетов без электронной регистрации для проезда со
  станций стран СНГ, Латвии, Литвы и Эстонии необходимо получить посадочный
  купон на бланке установленной формы в билетных кассах или терминалах
  самообслуживания, расположенных на территории Российской Федерации.
specs:
  'ЖД: Предупреждение о том, что нужно получить билет в кассе':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на выдачу Баку - Москва на четверг

        Для поезда 055Щ кликнуть по кнопке покупки (если нет поезда или кнопки,
        поискать на другой четверг)
    - assert: >-
        * Произошел переход на страницу выбора мест

        * Для всех или некоторых классов есть иконка отсутствия ЭР

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-24_13.33.11-ni252.png)
    - do: |-
        Для вагона без ЭР выбрать место
        Кликнуть по кнопке Указать пассажиров
        Ввести любые валидные данные пассажира (ФИО на латинице)
        Кликнуть Проверить заказ и купить
    - assert: >-
        * Произошел переход на страницу подтверждения

        * На странице есть предупреждение на желтом фоне о том, что нужно
        получить билет на территории РФ:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-24_13.34.52-c1x06.png)
    - do: Кликнуть по ссылке "расположены"
    - assert: >-
        * Произошел переход на сайт РЖД на страницу поиска касс:
        http://pass.rzd.ru/sellpoints/public/ru?STRUCTURE_ID=5243
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Авиа
type: Покупка
description: >-
  Ошибку можно получить заменив в ссылке when на другое число


  Ссылка на страницу покупки с ошибкой (тестинг):
  https://travel-test.yandex.ru/avia/order/?adult_seats=1&backward=&children_seats=0&forward=U6%20407.2019-12-20T09%3A30&fromId=c213&fromName=Москва&infant_seats=0&klass=economy&lang=ru&national_version=ru&oneway=1&queryKey=c213_c239_2020-12-21_None_economy_1_0_0_ru&return_date=&toId=c239&toName=Сочи&when=2019-12-20


  Ссылка на страницу покупки с ошибкой (прод):
  https://travel.yandex.ru/avia/order/?adult_seats=1&backward=&children_seats=0&forward=U6%20407.2019-12-20T09%3A30&fromId=c213&fromName=Москва&infant_seats=0&klass=economy&lang=ru&national_version=ru&oneway=1&queryKey=c213_c239_2020-12-21_None_economy_1_0_0_ru&return_date=&toId=c239&toName=Сочи&when=2019-12-20


  ССЫЛКА ДЛЯ АСЕССОРОВ:
  https://travel.crowdtest.yandex.ru/avia/order/?adult_seats=1&backward=&children_seats=0&forward=U6%20407.2019-12-20T09%3A30&fromId=c213&fromName=Москва&infant_seats=0&klass=economy&lang=ru&national_version=ru&oneway=1&queryKey=c213_c239_2020-12-21_None_economy_1_0_0_ru&return_date=&toId=c239&toName=Сочи&when=2019-12-20
specs:
  'Авиа: При перепоиске с блока ошибки на странице покупки в шапку подставляются корректные данные':
    - do: |
        Перейти по ссылке из описания.
        Заменить число в ссылке when на текущее число плюс 6-12 месяцев
    - assert: >-
        Попадаем на страницу покупки с ошибкой. В строке поиска указано
        направление Москва - Сочи (направление есть только в десктопе).
    - do: Нажать на кнопку Повторить поиск.
    - assert: >-
        Происходит получение выдачи за 20 декабря. В строке поиска указано
        направление Москва - Сочи.
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Покупка
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Главная
description: ''
specs:
  'Авиа: валидация поиска без указанной даты':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Дату туда и обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом

        Нажать кнопку “Найти”
    - assert: >-
        Для десктопа: Появилось сообщение "Выберите дату отправления". Текст в поле Туда
        выделен красным. Открывается календарь, где предлагается выбрать дату
        отправления

        Для тачей: Открывается календарь, где предлагается выбрать дату
        отправления.
    - do: |-
        **Для десктопа:**
        Кликнуть по полю Туда.
        Выбрать в календаре Туда-обратно.
        Ввести произвольную дату в поле Обратно.
        Нажать на кнопку Найти.
        **Для тачей:**
        Обновить страницу.
        Заполнить форму данными из шага 2.
        Кликнуть по полю Обратно.
        Ввести произвольную дату.
        (Календарь закрылся автоматически)
        Нажать на кнопку Найти на главной.
    - assert: >-
        Появилось сообщение “Выберите дату отправления”. Текст в поле Туда
        выделен красным. Открывается календарь, где предлагается выбрать дату
        отправления.

        Для тачей: Открывается шторка календаря, предлагается выбрать дату Туда.
    - do: |-
        Ввести произвольную дату в поле Туда.
        Нажать на кнопку Найти.
    - assert: Открылась страница выдачи по указанному направлению на указанные даты.
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Главная
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: gouken67
feature: Авиа
type: Колдунщик
description: >-
  **ВАЖНО:** Если колдунщик не показался, необходимо обновить страницу. Если
  колдунщик есть, но нет вариантов, необходимо прямо в нём изменить дату
  отправления на другую.

  Шаги расписаны с предположением о том, что у колдунщика есть варианты.
specs:
  'Авиа: Обработка переходов к партнёру с колдунщика':
    - do: |-
        Зайти на yandex.ru
        Ввести в строке поиска "Екатеринбург Москва авиабилеты"
        Нажать на кнопку Найти
    - assert: >-
        Происходит переход на выдачу. Среди вариантов есть колдунщик
        авиабилетов:

        ![image](https://jing.yandex-team.ru/files/gouken67/%D0%9A%D0%BE%D0%BB%D0%B4%D1%83%D0%BD%D1%89%D0%B8%D0%BA%20%D0%B0%D0%B2%D0%B8%D0%B0%D0%B1%D0%B8%D0%BB%D0%B5%D1%82%D0%BE%D0%B2.png)
    - do: >-
        **Шаг только для тестинга.**

        Перейти по
        https://hamster.yandex.ru/search/?text=екатеринбург+москва&lr=54&metahost=TICKETS%3Ago.wizard.testing.avia.yandex.net
    - assert: Осуществился переход на колдунщика для тестинга.
    - do: >-
        Найти среди вариантов тот, у которого сайт отличен от s7.ru,
        http://pobeda.aero, www.utair.ru

        Кликнуть правой кнопкой по жёлтой кнопке с ценой для этого варианта.

        Скопировать адрес ссылки.

        Вставить ссылку в новом окне.

        Проверить наличие параметра wizardRedirKey (или unisearchRedirKey) в ссылке (если его нет,
        необходимо в конце ссылки добавить &unisearchRedirKey=123123)

        Перейти по получившейся ссылке.
    - assert: 'Происходит переход на страницу партнёра, прелоадера Авиа не появлялось.'
    - do: >-
        Скопировать ссылку ещё раз.

        Вставить ссылку в новом окне.

        Убрать из ссылки параметр wizardRedirKey или unisearchRedirKey, если он есть (удалить строку
        &wizardRedirKey=..... - всё до следующего & или &unisearchRedirKey=..... - всё до следующего &).

        Перейти по получившейся ссылке.
    - assert: >-
        Появляется прелоадер Авиа, после него - происходит переход на страницу
        партнёра.
    - do: >-
        Проделать описанное в шаге 3 с одним из вариантов с указанным сайтом
        s7.ru, http://pobeda.aero или www.utair.ru
    - assert: >-
        Появляется прелоадер Авиа, после него - происходит переход на страницу
        партнёра.
    - do: >-
        Проделать описанное в шаге 4 с одним из вариантов с указанным сайтом
        s7.ru, http://pobeda.aero или www.utair.ru
    - assert: >-
        Появляется прелоадер Авиа, после него - происходит переход на страницу
        партнёра.
manual: true
Функциональность: Переход к партнёру
Устройство: Десктоп
Страница: Колдунщик
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Подсказка Динамики цен отсутствует для рейсов бизнес-класса':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Бизнес
    - do: Нажать кнопку “Найти”.
    - assert: >-
        Открылась страница выдачи. Подсказка Динамики цен отсутствует. Блок Динамики цен также отсутствует. Кнопка
        Аэропорт рядом переместилась в левый край и работает.
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Страница покупки
description: ''
specs:
  'Авиа: Рекламный блок на странице покупки':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: Кликнуть на любое из предложений (не по кнопке Купить).
    - assert: Переходим на страницу покупки для выбранного предложения.
    - do: Проскроллить страницу до самого низу.
    - assert: Под информационным блоком располагается блок с рекламой.
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница покупки
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Портал
type: Главная
description: ''
specs:
  'Портал: При нажатии на поле "Город" введённый город выделяется целиком':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
    - do: Кликнуть по полю города отправления.
    - assert: Название города выделилось целиком.
    - do: |-
        Ввести "Москва" вместо "Екатеринбург".
        Кликнуть по полю города прибытия.
    - assert: Название города выделилось целиком.
    - do: Ввести "Сочи" вместо "Санкт-Петербург".
    - do: |-
        Заполнить остальные поля формы поиска:
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”.
    - assert: Открылась страница выдачи Авиабилетов для направления Москва - Сочи.
    - do: >-
        Перейти на главную для Ж/Д Билетов, кликнув на ссылку в шапке. **Для
        тачей:** Открыть мобильное меню, нажав на кнопку в правом верхнем углу,
        и кликнуть по ссылке Ж/д билеты
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
    - do: Кликнуть по полю города отправления.
    - assert: Название города выделилось целиком.
    - do: |-
        Ввести “Москва” вместо “Екатеринбург”.
        Кликнуть по полю города прибытия.
    - assert: Название города выделилось целиком.
    - do: |-
        Ввести “Сочи” вместо “Санкт-Петербург”.

        Заполнить остальные поля формы поиска:
        Когда: 5 число следующего месяца

        Нажать кнопку “Найти”.
    - assert: Открылась страница выдачи Ж/Д Билетов для направления Москва - Сочи.
    - do: 'Перейти на главную для Отелей, кликнув на ссылку в шапке.'
    - do: |-
        Кликнуть по полю Страна, курорт или отель.
        Выбрать "Москва".
    - do: Кликнуть по полю ещё раз.
    - assert: Название города выделилось целиком.
    - do: |-
        Ввести вместо "Москва" название города "Екатеринбург".

        Заполнить остальные поля формы поиска:
        Заезд: 5 число следующего месяца
        Выезд: 7 число следующего месяца

        Нажать на кнопку "Найти".
    - assert: Открылась страница поиска Отелей для Екатеринбурга.
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Главная
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: ЖД
type: Подтверждение
description: >-
  Раньше: Сервисный сбор Яндекса (обычная наценка) = 11% на сумму без белья +
  11% на белье.

  Теперь сбор рассчитывается динамически, поэтому просто проверяем, что он есть.
specs:
  'ЖД: Сбор при покупке в плацкарт, дорогой билет':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на любую выдачу из Москва - Иркутск на любую дату
        Для поезда, где есть места в плацкарт, кликнуть по кнопке покупки
    - assert: '* Произошел переход на страницу выбора мест'
    - do: |-
        Выбрать место в плацкарт
        Не убирать чекбокс постельного белья (выбран по умолчанию)
        Нажать Указать пассажиров
        Ввести любые валидные данные
        Нажать Проверить заказ и купить
    - assert: '* Произошел переход на страницу подтверждения'
    - do: >-
        Навести на иконку ? (в таче тапнуть) около цены за билет

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-16_11.47.56-ywhk4.png)
    - assert: |-
        * Появился попап с информацией о стоимости
        * Есть две позиции: цена билета и сервисный сбор
        * Общая сумма за билет равна цене билета + сервисный сбор
manual: true
Функциональность:
  - Только бэкенд
  - Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Сервисный сбор Яндекса (минимальная наценка) = сбор ИМ (34,7 рублей) + 6% от
  цены без белья + 11% наценка на белье
specs:
  'ЖД: Сбор при покупке в плацкарт, дешевый билет':
    - do: >-
        Перейти на выдачу Галич - Антропово на любую дату

        Отфильтровать выдачу по плацкартам

        Для поезда с самой низкой ценой в плацкарт и кнопкой Выбрать место
        нажать Выбрать место
    - assert: '* Произошел переход на страницу выбора мест'
    - do: Выбрать самое дешевое место в плацкарт
    - assert: >-
        * Справа в корзине появилась расшифровка стоимости

        * В расшифровке указана цена за место и цена за постельное белье (цена
        за постельное белье = 167,72 - это уже с учетом нашего сбора)

        * Сумма в Итого посчитана верно
    - do: |-
        Нажать Указать пассажиров
        Заполнить все поля валидными данными
        Нажать Проверить заказ и купить
    - assert: '* Произошел переход на страницу подтверждения'
    - do: >-
        Навести на иконку i (в таче тапнуть) около цены за билет

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-28_11.58.23-2iwdu.png)
    - assert: >-
        * Открылся попап с расшифровкой стоимости

        * Есть две позиции: цена билета и сервисный сбор

        * Сервисный сбор посчитан по формуле: 34,7 + (цена билета - 151,1)*0,06
        + 16,62

        _где 151,1 - это цена за белье БЕЗ нашего сбора 11%, а 16,62 - наш сбор
        за белье 11%_

        * Общая сумма за билет равна цене билета + сервисный сбор
manual: true
Функциональность:
  - Только бэкенд
  - Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Раньше: Сервисный сбор Яндекса (обычная наценка) = 11% на всю сумму покупки.
  Теперь сбор рассчитывается динамически, поэтому просто проверяем, что он есть.
specs:
  'ЖД: Сбор при покупке НЕ в плацкарт, дорогой билет':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на выдачу Москва - Новосибирск на любую дату
        Для любого поезда с местами в купе кликнуть по кнопке покупки
    - assert: '* Произошел переход на страницу выбора мест'
    - do: |-
        Выбрать место в купе
        Нажать Указать пассажиров
        Ввести любые валидные данные
        Нажать Проверить заказ и купить
    - assert: '* Произошел переход на страницу подтверждения'
    - do: >-
        Навести на иконку ? (в таче тапнуть) около цены за билет

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-16_11.47.56-ywhk4.png)
    - assert: |-
        * Появился попап с информацией о стоимости
        * Есть две позиции: цена билета и сервисный сбор
        * Общая сумма за билет равна цене билета + сервисный сбор
manual: true
Функциональность:
  - Только бэкенд
  - Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Сервисный сбор Яндекса (минимальная наценка) = сбор ИМ (34,7 рублей) + 6% от
  цены с бельем
specs:
  'ЖД: Сбор при покупке НЕ в плацкарт, дешевый билет':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на выдачу Москва - Калуга на любую дату

        Для поезда с самой низкой ценой в сидячий вагон кликнуть по кнопке
        покупки
    - assert: '* Произошел переход на страницу выбора мест'
    - do: |-
        Выбрать место в сидячий вагон
        Нажать Указать пассажиров
        Ввести любые валидные данные
        Нажать Проверить заказ и купить
    - assert: '* Произошел переход на страницу подтверждения'
    - do: >-
        Навести на иконку ? (в таче тапнуть) около цены за билет

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-16_11.47.56-ywhk4.png)
    - assert: |-
        * Появился попап с информацией о стоимости
        * Есть две позиции: цена билета и сервисный сбор
        * Сервисный сбор равен 34,7 + цена билета*0,06
        * Общая сумма за билет равна цене билета + сервисный сбор
manual: true
Функциональность:
  - Только бэкенд
  - Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Авиа
type: Страница покупки
description: >-
  Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с кнопкой
  Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым аккаунтом
  (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был именно тестовый
  аккаунт, т.к. через свой аккаунт не впусти


  **Вход в Яндекс.Паспорт:**

  - Кликнуть по кнопке Войти в правом верхнем углу

  - Ввести логин testtravel

  - Нажать на кнопку Войти

  - Ввести пароль 1234ASDF

  - Нажать на кнопку Войти ещё раз


  После этого происходит возврат на страницу. с которой осуществлялся вход.
  Чтобы разлогиниться из Яндекс.Паспорта, необходимо кликнуть по иконке в правом
  верхнем углу и нажать на кнопку Выйти.
specs:
  'Авиа: Данные отображаются на странице покупки после действий в паспорте':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи.
    - do: Кликнуть по любому из вариантов (не по кнопке Купить).
    - assert: Перешли на страницу покупки для этого варианта.
    - do: >-
        * **Десктоп:**

        -- Авторизоваться в **Яндекс.Паспорт**

        -- Перейти в Заказы

        -- Нажать на кнопку Назад браузера

        * **Тач:**

        -- Открыть паспорт https://passport-test.yandex.ru/profile в новой
        вкладке

        -- Авторизоваться пользователем из description

        -- Вернуться на вкладку покупки и обновить страницу
    - assert: >-
        На странице покупки отображается то же самое предложение, которое было
        до перехода в Заказы ( до рефреша _для тача_ )
manual: true
Устройство: Десктоп
Страница: Страница покупки
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Страница покупки
description: >-
  **ВАЖНО:** Кейс предполагает наличие доступа к
  https://admin.avia.tst.yandex-team.ru/admin/order/partner/ (админка страницы
  партнёров). Если его нет - необходимо запросить у разработчиков.
specs:
  'Авиа: Попытка редиректа по протухшему варианту':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: Кликнуть по одному из предложений (не по кнопке Купить).
    - assert: Переходим на страницу покупки для выбранного предложения.
    - do: >-
        Выбрать наугад одного из партнёров в списке предложений (желательно - не
        Аэрофлот).

        В отдельной вкладке перейти по ссылке
        https://admin.avia.tst.yandex-team.ru/admin/order/partner

        Найти выбранного партнёра и кликнуть по нему.
    - assert: Попадаем на страницу редактирования партнёра.
    - do: |-
        Снять для партнёра галочку "Может быть запрошен через демона".
        Заменить 20 на 3 в поле "Время жизни кеша предложений".
        Нажать на кнопку Сохранить.
    - assert: 'Изменения сохранились, вернулись на страницу со списком партнёров.'
    - do: |-
        Подождать 5 минут.
        Перейти во вкладку с предложением в Портале.
        Попытаться совершить редирект по отредактированному партнёру.
    - assert: >-
        Открывается страница редиректа. Спустя время должны вернуться на
        страницу покупки с ошибкой Ничего не нашлось.
    - do: |-
        Вернуться в https://admin.avia.tst.yandex-team.ru/admin/order/partner
        Перейти в изменённого партнёра.
        Вернуть настройки в прежнее положение.
        Нажать на кнопку Сохранить.
    - assert: 'Изменения сохранились, вернулись на страницу со списком партнёров.'
    - do: |-
        Подождать 5 минут.
        Перейти во вкладку с предложением в Портале.
        Обновить страницу.
        Попытаться совершить редирект по отредактированному партнёру.
    - assert: Редирект срабатывает корректно.
manual: true
Функциональность: Переход к партнёру
Устройство:
  - Десктоп
  - Тач
Страница: Страница покупки
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Автор: gouken67
feature: Отели
type: ''
description: ''
specs:
  Переход с главной портала на страницу отеля:
    - do: |-
        Открыть главную портала. (no_autotest)
        Перейти в раздел отелей. (Либо по урлу https://travel.yandex.ru/hotels)
    - assert: |-
        * Открыта вкладка “Отели”
        * Есть поля страны, заезда, выезда, кол-ва гостей
    - do: |-
        Ввести в поле поиска название отеля (например, Novotel Москва Сити 4*
        дата заезда - завтра
        дата выезда - послезавтра
        кол-во гостей - 3
        Нажать “Найти”
    - assert: >-
        Произошел переход внутри портала на страницу отеля

        https://travel-test.yandex.ru/hotels/hotel/......

        в параметрах урла

        adults=3

        geoId=213

        checkinDate и checkoutDate соответствуют выбранным датам на предыдущем
        шаге.
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - hotels-api
Автор: iliasova
feature: Авиа
type: Выдача
description: >-
  Если вместо выдачи показывается як с картой, попробовать поиск на другие даты
  (близкие, дальние, в одну сторону)

  Также можно попробовать сменить направление, указав другие аэропорты в форме
  поиска (Шереметьево - Кольцово)
specs:
  'Авиа: Поиск аэропорт-аэропорт туда':
    - do: >-
        Произвести поиск аэропорт-аэропорт (например, Домодедово-Хитроу),
        1 взрослый пассажир, эконом.
    - assert: |-
        |
        открылась выдача
        выдача соответствует параметрам поиска
    - do: Кликнуть по первому сниппету
    - assert: |-
        открылась страница покупки
        есть заголовок город1-город2
        есть дата вылета
        есть надпись "1 пассажир эконом-класс"
        есть хотя бы одна кнопка перехода к партнеру
    - do: перейти по кнопке "Купить" у любого партнера(no_autotest)
    - assert: >-
        в новой вкладке открылась страница партнера, параметры поиска
        соответствуют выбранным на сервисе(no_autotest)
manual: true
Функциональность: Инфа на покупке
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag:
  - Smoke
  - Blocker
Автор: tcheremnykh
feature: Авиа
type: Выдача
description: |-
  В кейсе фигурируют Севастополь и Симферополь - это не ошибка:
  у Севастополя нет аэропорта, поэтому рейсы в Симферополь соответствуют
  параметрам поиска "Москва-Севастополь"
  В услових зарытия южных россиийских аэропортов искать на даты
  через 2 недели после предполагаемого открытия Севастополя или ещё позже.
  Если на выбранные даты рейсов нет, выполнить поиск на соседние даты.
  
specs:
  'Авиа: Поиск только s2s':
    - do: 'Произвести поиск Москва-Севастополь, 1 взрослый пассажир, эконом.'
    - assert: |-
        открылась выдача,
        выдача соответствует параметрам поиска,
        (только десктоп) в сниппетах куда: Симферополь
    - do: Кликнуть по первому сниппету (не по кнопке "Купить" и не по багажной информации)
    - assert: |-
        открылась страница покупки
        есть заголовок Москва- Симферополь
        есть дата вылета
        есть надпись "1 пассажир эконом-класс"
        есть хотя бы одна кнопка перехода к партнеру
    - do: перейти по кнопке купить у любого партнера(no_autotest)
    - assert: >-
        в новой вкладке открылась страница партнера, параметры поиска
        соответствуют выбранным на сервисе(no_autotest)
manual: true
Функциональность: Инфа на покупке
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag:
  - Smoke
  - Blocker
Автор: tcheremnykh
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: пагинация':
    - do: выполнить поиск на популярное направление туда- обратно
    - assert: 'открылась выдача, соответствующая условиям поиска'
    - do: проскроллить выдачу до подвала
    - assert: 'подгрузилась следующая пачка офферов, соответствующая условиям поиска'
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag: Blocker
feature: Авиа
type: Выдача
description: >-
  Всякий раз, когда говорится "Кликнуть в самом низу страницы", имеется в виду
  следующая область экрана:

  ![Область для
  клика](https://jing.yandex-team.ru/files/gouken67/%D0%9E%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D1%8C%20%D0%B4%D0%BB%D1%8F%20%D0%BA%D0%BB%D0%B8%D0%BA%D0%B0.png)

  **ВАЖНО:** При тестировании на iOS клик в самом низу страницы может вызвать
  меню браузера. Поэтому на iOS надо кликать ближе к верхней границы указанного
  блока.
specs:
  'Авиа: Элементы внизу экрана на странице выдачи кликабельны':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: >-
        Проскроллить выдачу так, чтобы кнопка Купить одного из вариантов
        касалась нижней границы экрана.

        Кликнуть по сниппету в самом низу страницы.
    - assert: Осуществился переход на страницу покупки.
    - do: |-
        Вернуться на страницу выдачи.
        Кликнуть по кнопке Купить в самом низу экрана.
    - assert: Происходит редирект на страницу партнёра.
    - do: >-
        Вернуться на страницу выдачи.

        Проскроллить страницу так, чтобы кнопки Открыть календарь цен и
        Отслеживать касались нижней границы экрана.

        Кликнуть по кнопке открыть календарь цен.
    - assert: Открывается окно Динамики цен.
    - do: |-
        Вернуться на страницу выдачи.
        Кликнуть по кнопке Отслеживать.
    - assert: >-
        Открывается модальное окно с полем для ввода почты и кнопкой
        Подписаться.
    - do: |-
        Закрыть модальное окно, тапнув в затемнённую область экрана.
        Кликнуть на форму поиска.
        Кликнуть по полю с датой Туда.
    - assert: Открывается календарь.
    - do: |-
        Проскроллить календарь немного вниз.
        Выбрать другую дату.
    - assert: 'Календарь закрывается, в поле с датой Туда отображается выбранная дата.'
    - do: Нажать на кнопку Найти.
    - assert: Происходит получение выдачи за выбранную дату.
manual: true
Функциональность:
  - Фильтры и сортировки
  - Форма поиска
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Главная
description: ''
specs:
  'Авиа: восстановление контекста поисковой формы':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: >-
        Ввести произвольные значения городов, произвольные даты, произвольное
        количество пассажиров в поисковую форму.

        Нажать на кнопку Найти.
    - assert: >-
        Осуществился переход на страницу выдачи. На выдаче отображаются
        варианты, полученные для введённых данных.

        (Для некоторых данных может оказаться, что вариантов для перелёта нет. В
        этом случае отобразится соответствующая страница)
    - do: |-
        Скопировать из адресной строки всё, что идёт после results/.
        Кликнуть на логотип Яндекс.Авиабилеты.
    - assert: 'Вернулись на главную страницу, форма поиска не очистилась.'
    - do: >-
        Добавить в адресную строку /avia/<скопированный кусочек> и нажать на
        Enter.
    - assert: >-
        После обновления страницы поисковая форма будет заполнена данными из
        шага 2.
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Главная
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Общий вид выдачи в таче':
    - do: |-
        Зайти на главную
        На вкладке авиа ввести в поля
        * откуда - Екатеринбург
        * куда - Москва
        * туда - завтра
        * обратно не заполняем
        Кликнуть "Найти"
    - assert: >-
        * Произошел переход на страницу выдачи

        * В шапке лого Путешествий и бургер для разворачивания меню (если
        пользователь не залогинен - внутри бургерного меню будет кнопка Войти,
        если залогинен - там будет его логин и аватар). Также сердечко (для
        избранных отелей)

        * Ниже краткая форма поиска, все данные соответствуют запросу

        * Ниже блок фильтров: Без пересадок, С багажом, кнопка для раскрытия
        всех фильтров

        * Ниже блок с сортировками

        * Под ним отображаются результаты выдачи

        * В выдаче есть блок для отслеживания цены (показывается в начале
        выдачи, перед ним может быть до 4х сниппетов с рекомендованными рейсами)

        Каждый блок с рейсом содержит:
               * логотип (на тестовом стенде может отсутствовать, считаем нормой)
               * время отправления
               * время прилета
               * время в пути
               * информация о багаже и ручной клади в виде иконок
               * жёлтая кнопка с ценой билета
               * различные признаки (Лучшая цена, продает авиакомпания, и др.) - не во всех блоках; только в тех, к которым это относится

        https://jing.yandex-team.ru/files/gouken67/travel_1183.png
    - do: Поскролллить выдачу вниз
    - assert: '- По мере скоролла подгружаются новые сниппеты'
manual: true
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag:
  - automation (iliasova)
  - Smoke
Автор:
  - iliasova
  - shenfeld
feature: Портал
type: ''
description: ''
specs:
  Проверка работоспособности на престейбле:
    - do: >-
        Выполнить поиск авиабилетов на ближайшие даты, туда-обратно, любое
        кол-во гостей

        Запомнить даты поездки, города вылета и прилета, кол-во пассажиров
    - assert: |-
        * В той же вкладке открылась выдача рейсов
        * Параметры поездки полностью соответствуют введенным на 1м шаге
    - do: |-
        Вернуться на главную
        Выполнить поиск жд билетов (запомнить введенные откуда-куда и дату)
    - assert: |-
        * Произошел переход на выдачу жд
        * Выдача соответствует введенным ранее параметрам поездки
    - do: Дойти до шага выбора мест у любого поезда
    - assert: Открылась форма выбора мест
    - do: >-
        Вернуться на главную

        Выполнить поиск отелей в любом регионе с любыми датами и кол-вом гостей
        (запомнить все параметры)
    - assert: |-
        * Произошел переход на страницу поиска отелей в регионе
        * Параметры выдачи соответствуют параметрам на предыдущем шаге
    - do: |-
        Залогиниться
        Перейти в ЛК
    - assert: >-
        * Открылся личный кабинет

        * Отображаются купленные под учеткой заказы (или если их не было -
        заглушка)
    - do: Перейти во вкладку Пассажиры
    - assert: |-
        * Открылась страница ЗКП
        * Есть список пассажиров (если не было создано раньше - заглушка)
manual: true
Сервис: Портал
Тестирование асессорами: Нет
Tag:
  - Smoke
  - Blocker
Автор: iliasova
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Прелоадер для отфильтрованной выдачи присутствует на экране до появления первого варианта':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: |-
        Применить фильтр Без пересадок.
        Получить выдачу Екатеринбург - Токио за то же самое число.
    - assert: >-
        Во время загрузки выдачи на экране присутствует скелетон:

        ![image](https://jing.yandex-team.ru/files/gouken67/Скелетон%20вместо%20прелоадера.png)

        После окончания опроса партнёров на экране отображается страница "Нет
        подходящих вариантов" с возможностью снять фильтр пересадки:

        ![image](https://jing.yandex-team.ru/files/gouken67/фильтрояк.png)
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Автобусы. Старый фронт
type: Партнеры
description: ''
specs: {}
manual: true
Устройство: Десктоп
Сервис: Автобусы. Старый фронт
Страница: Партнеры
feature: Авиа
type: Бронирование
description: >-
  1. Блок подписки сейчас доступен только в рамках эксперимента, поэтому перед
  его тестированием необходимо в DevTools -> Applications добавить куку
  AVIA_UI_booking со значением subscription, а уже потом проходить шаги кейса.


  2. **ВАЖНО:** Блок подписки не появится, если подписка уже осуществилась
  однажды в рамках этой сессии браузера. Если такое случилось, необходимо
  открыть новое окно в режиме Инкогнито, добавить там куку и проходить кейс.


  3. Наличие блока подписки означает, что для этой сессии/для этого пользователя
  Яндекс.Паспорта подписка ещё не была осуществлена. Отсутствие блока подписки
  означает одно из двух: либо для пользователя/сессии подписка уже оформлена,
  либо кука так и не добавилась.


  4. Подписка оформляется в тот момент, когда мы переходим на страницу оплаты с
  проставленным чекбоксом в блоке Подписок.


  **Как проверить запрос на создание заказа.**

  1. Открыть DevTools браузера (F12 для Chrome и Яндекс.Браузера).

  2. Переключиться во вкладку Network.

  3. Ввести в поле Filter 'create-order'.

  4. Перейти на экран оплаты -> в Network при этом должен появиться запрос
  create-order.

  5. Кликнуть по появившемуся запросу.

  6. Перейти во вкладку Headers.

  7. Проскроллить информацию запроса вниз, до блока Request Payload.

  8. Найти в Request Payload блок subscriptions.


  Эти действия важно совершить до перехода на страницу оплаты. Если открывать
  DevTools уже после этого, запрос create-order там не отобразится.
specs:
  'Авиа: BoY - Подписка на рассылку':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: Применить фильтр Авиакомпании = "Аэрофлот".
    - assert: На выдаче остались только варианты от Аэрофлота.
    - do: Кликнуть по любому варианту.
    - assert: Осуществляется переход на страницу покупки для выбранного варианта.
    - do: >-
        Кликнуть по предложению от Аэрофлота. Если такого нет - вернуться на
        выдачу и отыскать вариант, где будет предложение от Аэрофлота.
    - assert: >-
        Осуществляется переход на страницу бронирования Аэрофлота (BoY). Под
        блоком Контактной информации располагается блок Подписки (если его нет -
        см. описание):

        ![image](https://jing.yandex-team.ru/files/gouken67/%D0%91%D0%BB%D0%BE%D0%BA%20%D0%BF%D0%BE%D0%B4%D0%BF%D0%B8%D1%81%D0%BA%D0%B8%20%D0%BD%D0%B0%20BoY%20%D0%90%D1%8D%D1%80%D0%BE%D1%84%D0%BB%D0%BE%D1%82%D0%B0.png)
    - do: >-
        Заполнить данные пассажира.

        Поставить чекбокс в блоке Подписок.

        Открыть DevTools и совершить необходимые действия для просмотра запроса
        на создание заказа **(см. описание)**.

        Перейти на страницу оплаты.

        Проверить, что отправилось в запросе на создание заказа **(см.
        описание)**.
    - assert: >-
        Осуществляется подписка. В запросе на создание заказа в Request Payload
        присутствует блок subscriptions, в котором есть запись "subscribe":
        true.
    - do: Вернуться на страницу бронирования.
    - assert: Блок Подписки исчез.
    - do: Осуществить логин в Яндекс.Паспорт.
    - assert: >-
        Вход в Яндекс.Паспорт произошёл успешно. Вернулись на страницу
        бронирования. Блок Подписки появился вновь.
    - do: >-
        Заполнить данные пассажира. Указать тот же E-Mail, который использовался
        при совершении подписки.

        Поставить чекбокс в блок Подписки и тут же снять.

        Перейти на страницу оплаты.

        Проверить, что отправилось в запросе на создание заказа **(см.
        описание)**.

        Вернуться на страницу бронирования.
    - assert: >-
        Подписка не осуществилась. В запросе на создание заказа в Request
        Payload присутствует блок subscriptions, в котором есть запись
        “subscribe”: false.

        Блок Подписки на месте.
    - do: Обновить страницу.
    - assert: После обновления страницы блок Подписки остаётся на месте.
    - do: >-
        Заполнить данные пассажира. Указать тот же E-Mail, который использовался
        при совершении подписки.

        Поставить чекбокс в блок Подписки.

        Перейти на страницу оплаты.

        Проверить, что отправилось в запросе на создание заказа **(см.
        описание)**.
    - assert: >-
        Осуществляется подписка. В запросе на создание заказа в Request Payload
        присутствует блок subscriptions, в котором есть запись “subscribe”:
        true.
    - do: Вернуться на страницу бронирования.
    - assert: Блок Подписки исчез.
    - do: Разлогиниться из Яндекс.Паспорта.
    - assert: >-
        Выход из учётной записи Яндекс.Паспорта произошёл успешно. Вернулись на
        страницу бронирования. Блок подписки отсутствует.
manual: true
Функциональность: Подписка
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Автор: gouken67
feature: Автобусы. Старый фронт
type: Партнеры
description: ''
specs: {}
manual: true
Устройство: Десктоп
Сервис: Автобусы. Старый фронт
Страница: Партнеры
feature: Автобусы. Старый фронт
type: Партнеры
description: ''
specs: {}
manual: true
Устройство: Десктоп
Сервис: Автобусы. Старый фронт
Страница: Партнеры
feature: Портал
type: Главная
description: ''
specs:
  'Портал: Главная страница - При открытии поля ввода список саджестов не скроллится за экран':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца
        Поле Обратно не заполнять
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: Кликнуть по слову "Путешествия" в логотипе Яндекс.Путешествий
    - assert: >-
        Вернулись на главную страницу, открыта вкладка Авиабилеты, поля
        Отправления и Прибытия заполнены.
    - do: 'Кликнуть по полю Отправления, полю Прибытия'
    - assert: >-
        Открывается окно выбора саджестов.

        Текст, который записан в поле, исчезает.

        Появляется клавиатура для ввода.

        Список саджестов присутствует на экране и не проскроллился вверх сам по
        себе.
    - do: Нажать на стрелочку влево рядом с полем.
    - assert: |-
        Возвращаемся на главную страницу.
        Страница не проскроллилась до футера.
        Форма поиска отображена на экране.
    - do: |-
        Перейти на вкладку ЖД.
        Заполнить форму поиска произвольными данными и нажать на кнопку Найти.
    - assert: Открылась страница выдачи ЖД.
    - do: Кликнуть по ссылке Ж/д билеты в шапке.
    - assert: Вернулись на главную страницу ЖД.
    - do: 'Повторить шаги 5,6 для формы поиска ЖД.'
    - assert: >-
        Список саджестов присутствует на экране и не проскроллился вверх сам по
        себе.

        После возвращения на главную страницу она не проскроллилась до футера.
    - do: |-
        Перейти на вкладку Отели.
        Заполнить форму поиска произвольными данными и нажать на кнопку Найти.
    - assert: Открылась страница поиска Отелей.
    - do: |-
        Раскрыть меню, нажав на кнопку в правом верхнем углу.
        Кликнуть по ссылке Отели.
    - assert: Вернулись на главную страницу Отелей.
    - do: 'Повторить шаги 5,6 для поля "Страна, курорт или отель".'
    - assert: >-
        Список саджестов присутствует на экране и не проскроллился вверх сам по
        себе.

        После возвращения на главную страницу она не проскроллилась до футера.
manual: true
Функциональность: Форма поиска
Устройство: Тач
Страница: Главная
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Бронирование
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров
specs:
  '[Тач] Проверка общего вида на странице BOY':
    - do: Выполнить переход как описано в Description
    - assert: >-
        1) Открылась страница Яндекс.Путешествий  */avia/booking...

        2) В шапке страницы находится меню портала Путешествий

        3) Ниже - логотип Аэрофлота и текст "**Яндекс.Авиабилеты + Аэрофлот**
        Быстро и без наценки"

        4) Ниже расположены вкладки Выбор перелёта - Детали перелёта - Данные
        пассажиров - Оплата заказа.

        Выделен пункт Данные пассажиров

        5) Ниже находится блок с информацией о перелёте.

        Если есть пересадки, то сегменты находятся друг под другом, между ними
        информация о времени пересадки.

        Если перелёт туда и обратно, то под перелётом туда находится блок
        информации о перелёте обратно.


        [collapsed-image](https://jing.yandex-team.ru/files/snejca/photo_2020-03-18_17-21-47.jpg){title=Пример
        верхней части страницы}

        6) Под блоком с информацией о перелёте находится блок с информацией о
        пассажирах, если пассажиров несколько, то каждый находится друг под
        другом - сначала взрослые, потом дети, потом младенцы


        [collapsed-image](https://jing.yandex-team.ru/files/snejca/18031731.png){title=Блок
        с информацией о пассажире}

        7) Под блоком информации о пассажирах находится блок с контактными
        данными покупателя


        [collapsed-image](https://jing.yandex-team.ru/files/snejca/photo_2020-03-18_17-19-45.jpg){title=Блок
        с контактными данными}

        8) Под блоком контактов находится блок с тарифами, ценой, кнопкой
        “Оплатить” и кнопкой “Показать все тарифы”, если тарифов больше чем 2


        [collapsed-image](https://jing.yandex-team.ru/files/snejca/photo_2020-03-18_17-38-03.jpg){title=Блок
        с тарифами}

        9) Ниже находится портальный футер


        [collapsed-image](https://jing.yandex-team.ru/files/snejca/photo_2020-03-18_17-19-57.jpg){title=Футер}
manual: true
Функциональность: Бронирование
Устройство: Тач
Страница: Бронирование
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Отели
type: Выдача
description: ''
specs:
  '[Тач] Соответствие данных запроса и выдачи на странице поиска отелей':
    - do: |-
        На главной портала выбрать таб Отели
        Заполнить форму поиска отелей данными:

        * Екатеринбург (geoid=54)
        * дата заезда - завтрашний день
        * дата выезда - через 2 дня после заезда (чтобы получить 2 ночи)
        * 2 гостя

        Нажать на кнопку Найти
    - assert: >-
        Открывается страница поиска отелей

        Над карточками присутствует поисковая строка с указанными городом,
        датами заезда и выезда и количеством гостей

        В каждой карточке слева внизу есть выгодная цена (минимальная), а справа
        кнопка Выбрать


        [collapsed-image](https://jing.yandex-team.ru/files/snejca/photo_2020-03-18_18-39-51.jpg){title=Пример
        страницы поиска отелей}
    - do: >-
        Кликнуть по кнопке фильтров

        ![](https://jing.yandex-team.ru/files/iliasova/2021-03-05_13.51.44-pudrg.png)

        В открывшемся окне выбрать фильтр Кешбэк Плюса

        Кликнуть Искать в N отелях
    - assert: >-
        Открывается выдача (после прогрузки, сначала могут отображаться
        скелетоны)
    - do: Нажать на пустое белое поле в карточке любого отеля
    - assert: >-
        В той же вкладке открывается страница отеля

        На странице присутствуют:


        * Название отеля и его адрес

        * Ниже на странице есть блок с датами заезда-выезда, количеством гостей
        и предложениями от Яндекс.Путешествий (с указанием названия номера,
        услугами и кнопкой Забронировать)


        Количество гостей, даты заезда-выезда, отель и выгодная цена совпадают с
        данными из предыдущего шага
    - do: >-
        Вернуться на главную портала, поменять даты заезда-выезда и количество
        гостей и повторить пункты 1-2
    - assert: >-
        Ожидаемый результат совпадает с результатами п.1-2 (кроме количества
        ночей и количества гостей)
manual: true
Функциональность: Содержание выдачи
Устройство: Тач
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: iliasova
feature: Комод
type: Мои поездки
description: >-
  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678

  Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (Рядом с кнопкой
  Войти в десктопе. В таче ссылка "Мои поездки" в шторке) > кликнуть Войдите в аккаунт > Авторизоваться тестовым аккаунтом
  (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был именно тестовый
  аккаунт, т.к. через свой аккаунт не впустит

  Открыта главная страница портала Путешествий

  Пользователь авторизован
specs:
  '[Тач] Страница Мои поездки':
    - do: >-
        Нажать на кнопку меню в правом верхнем углу страницы и выбрать пункт
        Моя поездка
    - assert: >-
        * Осуществился переход на страницу личного кабинета в раздел Мои поездки

        * Вверху страницы есть заголовок "Мои поездки"

        * У каждой поездки есть заголовок, даты и картинка

        * Сначала отображаются актуальные поездки (с датами в будущем)

        * Актуальные поездки отсортированы по возрастанию, начиная с самой
        близкой к текущей дате в будущем

        * Под сниппетами есть ссылка "Найти свой заказ"

        * Внизу страницы в блоке "Прошлые и отмененные поездки" есть кнопка "Показать еще" (для аккаунтов с большим
        количеством заказов)
    - do: Проскроллить страницу вниз и кликнуть по кнопке "Показать ещё"
    - assert: Показались еще 20 заказов (или все оставшиеся, если их меньше 20). Прошлые и отмененные заказы отсортированы по убыванию, начиная с самой близкой
        даты к текущей в прошлом
    - do: |-
        Кликнуть в меню паспорта в правом верхнем углу
        Для десктопа - кликнуть Выйти
        Для тачей - кликнуть в аккаунт и в открывшемся попапе кликнуть Выйти
    - assert: '* Произошел переход на страницу поиска заказа'
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Мои поездки
tlds: ru
Сервис: Комод
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: papulova
feature: ЖД
type: Страница заказа
description: |-
  Перейти на вкладку ЖД
  Выполнить поиск Москва - Санкт-Петербург на дату примерно через 2 месяца
  Для любого поезда перейти по кнопке покупки
  Купить билет на 1 пассажира, данные ввести любые валидные
specs:
  'ЖД: Блок покупки обратного билета в таче':
    - do: Купить билет на поезд по описанию из Preconditions
    - assert: >-
        * Осуществился переход на страницу заказа

        * Вверху страницы есть блок с заголовком "Обратный билет из
        Санкт-Петербурга в Москву" и кнопкой "Выбрать дату"

        https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.10.51-e6rgb.png
    - do: Тапнуть по кнопке "Выбрать дату"
    - assert: >-
        * Открылся календарь

        * В календаре задизейблены все даты до даты прибытия поезда (дата
        прибытия доступна)

        * Предыдущие месяцы до прибытия поезда недоступны
    - do: 'Проскроллить календарь вниз, затем вверх'
    - assert: '* Календарь скроллится'
    - do: Тапнуть по кнопке Назад в шапке календаря
    - assert: '* Календарь закрылся, находимся на странице заказа'
    - do: Тапнуть по кнопке "Выбрать дату"
    - assert: '* Раскрылся календарь'
    - do: Тапнуть по любой доступной дате
    - assert: >-
        * Произошел переход на страницу поиска из Санкт-Петербурга в Москву на
        выбранную дату
manual: true
Функциональность: Покупка
Устройство: Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Записная книжка
type: Пассажиры
description: >-
  Необходимо авторизоваться. Можно использовать учетную запись:
  vladlen@yandex.ru password: v12345678


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)
specs:
  'Телефон, почта и галка согласия в форме добавления пассажира':
    - do: >-
        Перейти в Мои Поездки по иконке на главной (находится в правом верхнем углу,
        рядом с кнопкой Войти)

        Перейти на вкладку Пассажиры (на тачах Пассажиры находятся внутри бургера)

        Нажать кнопку Добавить
    - assert: >-
        * Открылась форма добавления пассажира

        * Есть поля Электронная почта, Телефон, чекбокс "Я хочу получать
        уведомления от РЖД об изменении в расписании поездов"
    - do: |-
        Заполнить поле почты значением "1"
        Остальные поля заполнить любыми валидными данными
        Установить галку согласия
        Кликнуть Сохранить
    - assert: >-
        * У поля почты появилась красная обводка и попап с текстом "Это не
        похоже на электронный адрес"
    - do: |-
        Заполнить поле почты валидным значением, например "noemail@yandex.ru"
        Поле телефона заполнить значением "1"
        Кликнуть Сохранить
    - assert: >-
        * У поля телефона появилась красная обводка и попап с текстом "Номер
        указан неправильно. Укажите номер в формате +73333333333"
    - do: |-
        Поменять поле с телефоном на валидное значение, например, "+71111111111"
        Кликнуть Добавить
    - assert: >-
        * Форма добавления пассажира скрылась

        * Десктоп: открыта карточка созданного пассажира, отображаются
        контактные данные

        https://jing.yandex-team.ru/files/shenfeld/2020-03-25_18.06.04-qqfqr.png

        * Тач: в карточке пассажира отображаются контактные данные. Чтобы
        увидеть, нужно пролистать список пассажиров (или воспользоваться поиском
        вверху) и перейти в созданного пассажира.

        https://jing.yandex-team.ru/files/shenfeld/2020-03-25_18.07.52-r17zd.png
    - do: >-
        Кликнуть по иконке редактирования пассажира (карандаш рядом с ФИО вверху
        страницы)
    - assert: >-
        * Открылась форма редактирования, телефон и почта заполнены, галка
        согласия установлена
    - do: |-
        Стереть телефон и почту, оставить галку
        Кликнуть Сохранить
    - assert: >-
        * Поля почты и телефона обведены красным

        * Для поля почты появилась подсказка "Введите электронную почту или
        телефон"
    - do: |-
        Ввести только почту
        Кликнуть Сохранить
    - assert: |-
        * Форма добавления пассажира скрылась
        * В информации о пассажире есть почта, нет телефона
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Необходимо авторизоваться. Можно использовать учетную запись:
  vladlen@yandex.ru password: v12345678


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)

  Залогиниться

  Любому из пассажиров в ЛК (иконка в правом верхнем углу, рядом с кнопкой
  Войти) добавить телефон, почту и галку согласия

  Сохранить

  https://jing.yandex-team.ru/files/shenfeld/2020-03-25_18.17.41-5xl5i.png
specs:
  'ЖД: Передача контактных данных партнеру из ЗКП':
    - do: >-
        Перейти на вкладку ЖД

        Выполнить поиск Москва - Екатеринбург

        Для любого поезда кликнуть по кнопке покупки

        Выбрать любое место

        Кликнуть Указать пассажиров

        Подставить пассажира, которого редактировали в Preconditions (выбрать в
        интентах или в выпадающем списке)

        https://jing.yandex-team.ru/files/shenfeld/2020-03-25_18.21.11-zgasc.png
    - assert: >-
        * Данные пассажира подставились (если подставились не все данные,
        заполнить любыми валидными значениями). Контактные данные по заказу не
        должны подтянуться из ЛК!

        * Под корзинкой со стоимостью (справа на странице) есть текст "Сохраните
        контакты в личном кабинете для быстрого оформления следующих заказов"
    - do: Кликнуть по ссылке "Сохранить"
    - assert: >-
        * В новой вкладке открылась страница помощи с описанием, как добавить
        контактные данные
    - do: |-
        Вернуться на страницу ввода данных
        Кликнуть Проверить заказ и купить
    - assert: '* Произошел переход на страницу подтверждения, ошибок нет'
    - do: >-
        **Не для асессоров**: Найти заказ в админке и убедиться в логах, что мы
        передали в ИМ телефон и почту пассажира из ЗКП
manual: true
Функциональность: Бронь с разными условиями
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: ''
description: |-
  Кейс не для асессоров, проверяет покупку и возврат с оплатой.
  Данные тестовой карты: 5100003697253468, 12/20, 090
specs:
  'ЖД: Покупка и возврат, разные категории пассажиров':
    - do: |-
        Перейти на вкладку ЖД билеты
        Выполнить поиск Москва - Екатеринбург через месяц
        Для любого поезда кликнуть по кнопке покупки
    - assert: '* Произошел переход на страницу выбора мест'
    - do: >-
        Выбрать 1 взрослого пассажира, 1 ребенка с местом и 1 ребенка без места

        Выбрать любые места

        Кликнуть Указать пассажиров

        Ввести любые валидные данные

        Запомнить данные о поезде и пассажирах: номер поезда, время отправления,
        дата отправления, ФИО, возраст и документы пассажиров.

        Кликнуть Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтврждения
        * Все данные о поезде и пассажирах соответствуют запомненным ранее
    - do: >-
        Кликнуть Перейти к оплате

        Ввести данные тестовой карты, например 5100003697253468, 12/20, 090
        (асессоры пропускают)

        Кликнуть Оплатить (асессоры пропускают)
    - assert: >-
        * Через какое-то время произошел переход на страницу заказа

        * Все данные о поезде и пассажирах соответствуют данным на предыдущих
        шагах

        * Есть номер заказа в Путешествиях и номер РЖД:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-26_17.35.53-d4bxn.png)
manual: true
Функциональность: Оркестратор
Устройство:
  - Десктоп
  - Тач
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Если тестируем тач-версию, кнопки Распечатать на странице не будет, это
  нормально.

  Для тача кнопку для возврата билетов можно найти, кликнув по гамбургеру рядом
  с информацией о пассажире (три точки).


  Тестовая карта (не для асессоров):

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/20


  Информация не для Ассесроров: (Сейчас Билет ребенка без места находился НЕ под
  билетом для взрослого, это еще не реализовано)

  Перейти на вкладку Ж/Д билеты

  Выполнить покупку билетов для 1 взрослого, 1 ребенка от 5 до 10 лет и 1
  ребенка до 5 лет (поезд, места и данные пассажиров любые)
specs:
  'Поочередный возврат билетов':
    - do: |-
        Купить билеты, как описано в Preconditions
        На хэппи пейдж нажать на кнопку "Подробнее о заказе"
    - assert: >-
        * Открылась страница с полной информацией о заказе

        * Есть кнопка "Сдать билет" для детского билета с местом

        * Кнопка "Сдать билет" общая для билета взрослого и детского без места

        * Вверху страницы есть кнопки “Распечатать” (в таче нет), “Скачать
        билеты”/"Скачать билеты и страховку", “Сдать все билеты”, “…”
    - do: Кликнуть по кнопке "Сдать билет" для взрослого пассажира
    - assert: |-
        * Появилось модальное окно
        * Страница за пределами модального окна затемнена
        * В модальном окне есть заголовок "Вы сдаёте билет"
        * Ниже указана сумма к возврату (запомнить)
        * Есть предупреждение "Имейте в виду: ребенка не пустят в поезд одного."
        * Есть предупреждение "Восстановить покупку будет нельзя."
    - do: Нажать "Подтвердить"
    - assert: >-
        * На модальном окне появился лоадер

        * Через какое-то время модальное окно закрылось

        * Появилась красная надпись для этих билетов “Возврат”

        * Появилась ссылка “Скачать квитанцию” и ссылка "Скачать чек" (у
        асессоров может не быть ссылки на чек - это нормально, так как шаг
        оплаты пропускается)

        * Рядом со ссылками есть указание суммы к возврату, совпадает с
        запомненной

        * Текст информации для сданных билетов окрасился в серый цвет

        * Вверху страницы есть кнопки “Распечатать” (только в десктопе, в таче
        нет), “Скачать билеты” (в десктопе, а в таче просто "Скачать"), “Сдать
        билет" (название кнопки должно смениться, раньше было "Сдать все
        билеты")
    - do: Кликнуть "Сдать билет" для детского билета с местом
    - assert: >-
        * Появилось модальное окно возврата

        * Страница за пределами модального окна затемнена

        * В модальном окне есть заголовок “Вы сдаёте билет”

        * Ниже указана сумма к возврату (запомнить)

        * Нет предупреждения “Имейте в виду: если ребёнку не исполнилось 10, его
        не пустят в поезд одного.”

        * Есть предупреждение “Восстановить покупку будет нельзя.”
    - do: Нажать “Подтвердить”
    - assert: >-
        * На модальном окне появился лоадер

        * Через какое-то время модальное окно закрылось

        * Появилась красная надпись для этого билета “Возврат”

        * Появилась ссылка “Скачать квитанцию” и ссылка “Скачать чек”  (у
        асессоров может не быть ссылки на чек - это нормально, так как шаг
        оплаты пропускается)

        * Рядом со ссылками есть указание суммы к возврату, совпадает с
        запомненной

        * Текст информации для сданного билета окрасился в серый цвет

        * Вверху страницы пропали кнопки “Распечатать”(только в десктопе, в таче
        нет), “Скачать”, “Сдать билет”
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: ''
description: |-
  Перейти на вкладку ЖД билеты

  Открыта произвольная выдача, например, Москва-Казань на завтра
specs:
  'ЖД оркестратор: Общий вид страницы подтверждения. Отмена брони':
    - do: >-
        Выбрать места, задать данные пассажиров (произвольные данные,
        удовлетворяющие валидации), задать контактную информацию (произвольные
        данные, удовлетворяющие валидации). (Все введенные данные необходимо
        заполнить)

        Тапнуть "проверить заказ и купить"
    - assert: |-
        **Открывается окно Подтверждение.**
        В окне находится таймер бронирования (14 минут) на оплату заказа
        - есть Отменить заказ (если передумали)
        - дата, время и место отправления (соответствует выбранному поезду)
        - дата, время и место прибытия (соответствует выбранному поезду)
        - информация, что время местное
        - дополнительная информация, например, Электронная регистрация
        **Секция Проверьте поезд и места**
        - номер поезда и маршрут, название поезда (если есть)
        - вагон, вид вагона, класс вагона (все соответствует выбранным)
        - места
        - схема вагона с указанным положением мест
        **Секция Проверьте паспортные данные**
        - Фамилия, Имя, Отчество
        - стоимость билета, вид тарифа (например, полный)
        - дата рождения
        - паспортные данные или данные используемого документа
        - кнопка i информационная
        **Секция проверьте контактную информацию**
        - номер мобильного телефона
        - электронная почта
        **Секция страхование**
        - чекбокс добавить страховку, стоимость (по умолчанию выключен)
        - название страховой компании
        **Секция итоговой суммы**
        - есть кнопка "Ввести карту и оплатить"
    - do: Включить чекбокс страховки
    - assert: Итоговая сумма увеличилась ровно на указанную стоимость страховки
    - do: Проскроллировать схему вагона вправо-влево (тач)
    - assert: 'Схема свободно скроллится, верстка соответствует странице'
    - do: >-
        Тапнуть по иконке i в блоке паспортных данных (в десктопе навести
        курсор)
    - assert: >-
        Появляется информационное сообщение о том, из чего складывается
        стоимость билета: цена билета, сервисный сбор

        Общая сумма посчитана верно (цена билета + сервисный сбор)
    - do: Нажать на "Отменить заказ"
    - assert: Перешли к странице выбора мест.
manual: true
Функциональность: Оркестратор
Устройство:
  - Десктоп
  - Тач
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Реквизиты тестовой карты: 5100003697253468, 12/20, 090 (не для асессоров, шаг
  оплаты намеренно будет пропущен).

  Перейти на вкладку ЖД билеты
specs:
  'ЖД: Покупка билетов со страховкой':
    - do: >-
        Перейти на выдачу Москва - Санкт-Петербург через месяц

        Для любого поезда кликнуть по кнопке покупки

        Выбрать 3 пассажиров - 1 взрослого, 1 ребенка от 5 до 10 лет, 1 ребенка
        без места

        Выбрать места №10 и №11

        Нажать на кнопку "Указать пассажиров"

        Заполнить все поля валидными данными

        В поле электронной почты указать почту на @yandex-team.ru

        Нажать по кнопке "Проверить заказ и купить"
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * В таче внизу страницы, на десктопе справа есть корзинка со стоимостью билетов
        * В корзинке есть чекбокс для добавления страховки
    - do: Нажать на чекбокс
    - assert: >-
        * К итоговой сумме добавилась стоимость страховки
    - do: >-
        Нажать на кнопку "Ввести карту и оплатить"

        На странице оплаты ввести данные тестовой карты из описания кейса
        (асессоры пропускают)

        Нажать на кнопку "Оплатить" (асессоры пропускают, но ОР должен
        выполняться)

        На хэппи пейдж нажать на кнопку "Подробнее о заказе"
    - assert: >-
        * Открылась страница подробного заказа

        * На странице есть кнопка "Скачать билеты и страховку" (в тачах -
        "Скачать")

        * На почту пришло письмо о покупке (письмо может прийти в течение
        получаса, так как не будет чека) (асессоры пропускают и все шаги
        связанные с письмом)

        * Стоимость заказа в письме совпадает с итоговой суммой со страницы
        подтверждения (равна сумме за билеты + за страховки)

        * В письме есть блок "Страхование" с текстом "Стоимость страхового
        полиса: ... руб. Он включает страхование жизни и здоровья всех
        пассажиров и находится в том же файле, что и посадочный купон." и
        ссылкой "Подробнее об условиях"

        * Для каждого билета на странице успешной покупки есть пункт Страховка

        * При нажатии на иконку ? рядом с пунктом страховки появляется попап с
        текстом "Страхование жизни и здоровья от несчастных случаев." и ссылкой
        "Подробнее об условиях.", которая ведет на правила от Ренессанса

        * Сумма стоимостей страховки всех пассажиров совпадает с общей
        стоимостью на странице подтверждения

        * Для ребенка без места Цена билета и Сервисный сбор равны 0, Стоимость
        страховки равна 40
    - do: Нажать на кнопку "Скачать билеты и страховку" (в таче просто Скачать)
    - assert: >-
        * Произошло скачивание pdf-файла на десктопе. На таче могут быть
        вариации открытия/сохранения документа
    - do: Открыть файл
    - assert: >-
        * В файле есть электронные билеты для 3 пассажиров и страховки для 3
        пассажиров (3 разных бланка)
    - do: Кликнуть по ссылке "Подробнее об условиях" из письма
    - assert: >-
        * Открылась страница Ренессанс Страхования с подробными условиями
        страхования
    - do: Открыть чек из письма и со страницы заказа (асессоры пропускают шаг)
    - assert: >-
        * В чеке 3 позиции "Страхование поездки (страховая премия)"

        * Суммы за страховки и итоговая сумма в чеке совпадают с суммами в
        письме и на странице заказа

        * **В тестинге не проверить из-за заглушки у траста, поэтому просто
        проверить скачивание чека**
    - do: Открыть pdf-файл с билетами из письма
    - assert: >-
        * В файле есть электронные билеты для 3 пассажиров (2 бланка:
        взрослый+младенец, ребенок) и страховки для 3 пассажиров (3 разных
        бланка)
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag:
  - Smoke
  - Blocker
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Реквизиты тестовой карты: 5555 5555 5555 4444, 12/24, 395 (не для асессоров)

  Перейти на вкладку ЖД, купить билет на поезд "Москва - Санкт-Петербург" на поезд "Арктика", место №10
  Для 1 взрослого пассажира и 1 ребенка без места.
  Оформить страховку

  При прохождении кейса в поле ввода номера телефона необходимо указать действующий номер, для получения кодов из СМС и почту на yandex-team
specs:
  'Возврат билетов со страховкой':
    - do: Дойти до страницы заказа
    - assert: Есть пункт про страховку для обоих билетов
    - do: Нажать на кнопку "Сдать билет"
    - assert: Появилось модальное окно для возврата
    - do: |-
        Запомнить сумму, которая отображается как "К возврату"
        Нажать на кнопку "Подтвердить"
    - assert: >-
        * Через какое-то время появился статус Возврат
        * Появилась ссылка на квитанцию
        * На указанную почту пришло письмо о возврате
        * Сумма к возврату совпадает с суммой, которая была указана в модальном
        окне возврата
    - do: Открыть чек из письма и на странице заказа (асессоры пропускают)
    - assert: >-
        * В чеке есть две позиции "Страхование поездки (страховая премия)" и
        "Услуги перевозки пассажира ж/д транспортом"
        * Общая сумма к возврату совпадает с суммой в письме и суммой в модальном окне при возврате

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Тестовая карта (не для асессоров):

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20

  Создать заказ для 1 взрослого, 1 ребенка от 5 до 10 лет и 1 ребенка до 5 лет.

  Для этого нужно перейти на любую выдачу на вкладке ЖД, например, Москва -
  Санкт-Петербург, нажать на кнопку Выбрать место и далее следовать по шагам
  покупки.
specs:
  'Возврат сразу всех билетов':
    - do: |-
        * Купить билеты, как описано в Preconditions
        * На хэппи пейдж нажать на кнопку "Подробнее о заказе"
        * На странице полного заказа нажать "Сдать все билеты"
    - assert: |-
        * Появилось модальное окно для возврата
        * Страница за пределами модального окна затемнена
        * В модальном окне есть заголовок “Вы сдаёте билет"
        * Есть указание суммы к возврату (запомнить)
        * Есть предупреждение “Восстановить покупку будет нельзя.”
    - do: Кликнуть Подтвердить
    - assert: |-
        * На модальном окне появился лоадер
        * Пока идет возврат, статус заказа вверху страницы остается Выполнен
        (проверить только в десктопе, в таче не видно)
        * Через какое-то время модальное окно закрылось
        * Появилась красная надпись “Возврат” у каждого пассажира, в том числе у
        ребенка без места
        * Статус заказа сменился на "Отменен"
        * Появилась ссылка “Скачать квитанцию” и ссылка “Скачать чек” (у
        асессоров может не появиться ссылка на чек - это нормально, так как
        пропускается шаг оплаты)
        * Рядом со ссылками есть указание суммы к возврату (совпадает с
        запомненной)
        * Текст информации для всех билетов окрасился в серый цвет
        * Вверху страницы пропали кнопки “Распечатать”, “Скачать”, “Сдать все
        билеты”
        * Для билетов пропали действия Сдать билет и Отменить электронную
        регистрацию
        * Статус заказа вверху страницы - Отменен
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Реквизиты тестовой карты: 5100003697253468, 12/20, 090 (для асессоров шаг
  оплаты пропускается - карту вводить не нужно).
specs:
  'ЖД: Обработка случая, когда не удалось выкупить страховку':
    - do: >-
        Оформить жд заказ **со страховкой** для двух пассажиров, **для одного
        установить ФИО пассажира "Ошибка Ошибкаим Статусстраховки"**. Почту
        указать на yandex-team.

        На хэппи пейдж нажать "Подробнее о заказе"
    - assert: >-
        * Произошел переход на страницу заказа

        * Кнопка для скачивания билетов называется "Скачать билеты" (В таче 
        "Скачать")

        * На странице отображается желтое предупреждение "При покупке страховых
        полисов произошла ошибка, поэтому билеты оформлены без страховки. Деньги
        за нее вернутся в ближайшее время."

        * На почту пришло письмо о покупке, в письме нет блока про страховку, но
        есть текст "Здравствуйте, о ооо! Вы оплатили билеты и прошли электронную
        регистрацию. При покупке страховых полисов произошла ошибка, деньги за
        них разблокируются. В списке операций по вашему счёту изменится платёж,
        вместо [сумма с учетом страховки для всех пассажиров] руб. станет [сумма
        без учета страховки для всех пассажиров] руб."

        * Стоимость заказа указана без учета страховки для всех пассажиров

        * Нет пункта про страховку для билетов

        * В письме есть 2 чека: чек о покупке с 2 позициями о страховке + чек о
        возврате страховки (для всех пассажиров) - **у асессоров чеки могут не
        сформироваться, так как пропущена оплата, тогда пропускаем ОР с чеками**
    - do: |-
        Кликнуть Сдать все билеты
        Запомнить сумму к возврату
        Кликнуть Подтвердить
    - assert: >-
        * Произошел возврат двух билетов

        * На почту пришло письмо о возврате

        * Сумма к возврату в письме совпадает с суммой в модальном окне при
        возврате

        * Сумма к возврату в чеке совпадает с суммой в модальном окне при
        возврате (асессоры пропускают)
    - do: Обновить страницу заказа
    - assert: '* Желтого предупреждения о невыкупе страховки нет'
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Оплата
description: >-
  Находимся на странице подтверждения жд заказа для одного пассажира,
  **установить ФИО пассажира: "Кодтри Ошибкаим Выкупстраховки"**
specs:
  'ЖД: Обработка случая, когда при Checkout страховки возникла ошибка':
    - do: |-
        Перейти на покупку любого жд билета
        Ввести ФИО из описания
        Установить чекбокс страховки
        Нажать кнопку Ввести карту и оплатить
    - assert: >-
        * Через какое-то время появилось модальное окно c текстом "Не удалось
        купить страховой полис

        При покупке страхового полиса произошла ошибка" и двумя кнопками
        "Выбрать места заново" и "Продолжить без страховки"
    - do: Нажать на кнопку "Продолжить без страховки"
    - assert: >-
        Открылась форма оплаты (у асессоров сразу страница заказа - см ОР из
        следующего шага)
    - do: |-
        Ввести данные тестовой карты
        Нажать кнопку Оплатить
    - assert: '* Через какое-то время произошел переход на страницу хэппи пейдж'
    - do: Кликнуть "Подробнее о заказе"
    - assert: |-
        * Произошел переход на страницу заказа
        * Итоговая сумма без учета страховки
        * В расшифровке стоимости билетов нет пункта страховки
    - do: |-
        Создать еще один заказ с тем же ФИО, дойти до страницы подтверждения
        Выбрать чекбокс страховки
        Нажать кнопку Ввести карту и оплатить
    - assert: >-
        * Через какое-то время появилось модальное окно c текстом “Не удалось
        купить страховой полис

        При покупке страхового полиса произошла ошибка” и двумя кнопками
        “Выбрать места заново” и “Продолжить без страховки”
    - do: Нажать кнопку "Выбрать места заново"
    - assert: '* Произошел переход на страницу выбора мест'
    - do: Дойти до шага подтверждения
    - assert: '* Чекбокс страховки по умолчанию выключен'
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Тестовая карта (не для асессоров):

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/20

  Создать заказ для 4 взрослых пассажиров. Для этого перейти на любую выдачу на
  вкладке ЖД, например, Москва - Санкт-Петербург и нажать на кнопку Выбрать
  место. Далее следовать по шагам покупки.

  На хэппи пейдж нажать "Подробнее о заказе".
specs:
  'Кнопки возврата дизейблятся во время возврата':
    - do: |-
        Дойти до страницы заказа
        Для одного из пассажиров кликнуть по кнопке Сдать билет
    - assert: '* Появилось модальное окно возврата'
    - do: |-
        Кликнуть Подтвердить
        Сразу закрыть окно возврата, кликнув вне области окна
    - assert: >-
        * Модальное окно закрылось

        * Для всех билетов кнопка Сдать билет задизейбленна (окрашена серым
        цветом)
    - do: Кликнуть по кнопке Сдать билет для другого билета
    - assert: |-
        * Кнопка задизейблена (при наведении не подсвечивается, текст серый)
        * Появился попап с текстом "Дождитесь возврата билета"
    - do: |-
        Дождаться окончания возврата
        Кликнуть по кнопке Сдать билет еще раз
    - assert: |-
        * Кнопка не задизейблена (подсвечивается при наведении, текст черный)
        * Попап не появился
        * При нажатии открывается модальное окно возврата
    - do: >-
        Кликнуть Подтвердить

        Пока не сформировалась квитанция для второго билета, кликнуть по кнопке
        Сдать все билеты вверху страницы
    - assert: |-
        * Кнопка задизейблена (при наведении не подсвечивается, текст серый)
        * Появился попап с текстом “Дождитесь возврата билета”
    - do: |-
        Дождаться окончания возврата
        Кликнуть по кнопке Сдать все билеты
    - assert: |-
        * Кнопка активна (подсвечивается при наведении, текст черный)
        * Попап не появляется
        * Открылось модальное окно для возврата
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Тестовая карта (не для асессоров):

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/20

  Перейти на вкладку ЖД билеты

  Создать заказ для 1 взрослого на любую дату и любой поезд. Для этого перейти
  на любую выдачу, например, Москва - Санкт-Петербург и нажать на кнопку Выбрать
  место. Далее следовать по шагам покупки.

  На хэппи пейдж нажать "Подробнее о заказе"
specs:
  'ЖД: Различные случаи с модальными окнами на странице заказа':
    - do: Кликнуть по кнопке Сдать билет рядом с данными о пассажире
    - assert: |-
        * Появилось модальное окно возврата
        * Страница за пределами модального окна затемнена
    - do: Кликнуть по области вне окна
    - assert: |-
        * Окно закрылось
        * Информация на странице не изменилась (нет возвратов)
    - do: Снова кликнуть Сдать билет
    - assert: '* Открылось окно для возврата'
    - do: Кликнуть Отменить
    - assert: |-
        * Окно закрылось
        * Информация на странице не изменилась (нет возвратов)
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Перейти на выдачу Москва - Санкт-Петербург через месяц

  Для поезда 768А (Сапсан) кликнуть по кнопке покупки (если билеты распроданы,
  выбрать другую дату)

  Выбрать двух пассажиров, выбрать класс Купе-переговорная 1Р и следовать по
  шагам покупки, купить билет
specs:
  'Возврат при выкупе купе целиком':
    - do: >-
        Дойти до хэппи пейдж

        Нажать кнопку "Подробнее о заказе"

        Для одного из билетов кликнуть по кнопке Сдать билет

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-10-09_12.28.39-3w4c8.png)
    - assert: |-
        * Появилось модальное окно для возврата
        * Есть информация "Можно сдать только все билеты сразу."
    - do: Нажать Подтвердить
    - assert: |-
        * Через какое-то время осуществился возврат:
         Появились ссылки на квитанции и чеки у всех билетов (ссылок на чеки может не быть, если не успели сформироваться)
        Для всех билетов есть статус рядом с информацией о пассажире "Возврат"
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: Авиа
type: Покупка
description: >-
  **Важно:** Перед тестированием необходимо будет отключить блокировщик рекламы
  в браузере, если у вас он включен.
specs:
  'Авиа: Общий вид страницы покупки':
    - do: |-
        Перейти на страницу покупки авиабилета, для этого:
        Открыть главную страницу путешествий, вкладка Авиабилеты
        Выполнить поиск по любому популярному направлению внутри РФ туда-обратно
        В выдаче кликнуть на любой сниппет  с пересадками
    - assert: >-
        Открылась страница покупки, урл вида *avia/order/*. На ней присутствуют:

        1. (Только в десктопе) Шапка: Лого Авиа, табы (Авиабилеты Ж/д билеты
        Отели Автобусы),
         свернутая форма поиска с заполненными данными(пункты откуда- куда, даты туда-обратно, кол-во пассажиров, класс - все что не влезло скрывается многоточием),  иконка личного кабинета, кнопка войти.
        2. (Только в десктопе)Ссылка "Все варианты перелёта" назад к выдаче

        3.(Только в десктопе)"Поделиська" - сокращалка урлов с кнопкой
        скопировать

        4.(Только в десктопе)соц. кнопки: vk,ok,twitter,fb

        5.количество пассажиров в поиске, класс билетов(эконом/бизнес)

        6.Два блока с перелетами туда и обратно соответственно, каждый из
        которых состоит из :

        6.1. Заголовок пункт- пункт, дата туда-обратно, время в пути

        6.2 сегментов, в которых:

        Название Ак, номер рейса, вид самолета,

        доп инфа по самолету (расстояние между сидениями) - опционально

        время вылета, город вылета, аэропорт вылета, IATA код аэропорта вылета

        время в полете

        время прилета, город прилета, аэропорт прилета, IATA код аэропорта
        прилета, дата прилета(если прилетает в день отличный от даты вылета)

        информация о задержках(задерживается на/бывает отменён) - опционально

        инфа о багаже (Возможна оплата багажа/Бесплатный багаж)

        инфа о ручной клади (правила провоза багажа уточняйте на сайте
        авиакомпании/бесплатная ручная кладь)

        инфа об удобствах на борту (Нет Wi-Fi/Есть розетки и тд) - опционально

        6.3 Надпись о пересадке: пересадка в {пункт} {продолжительность
        пересадки}

        7. Блок с предложениями партнеров :

        Лого/название партнера

        Цена

        Кнопки купить

        Лучшая цена от авиакомпании - если есть цена от АК

        8.Кнопка С багажом от {цена} - опционально, при условии что есть
        варианты и с багажом и без. В десктопе в блоке предложений партнеров. В
        таче - сверху перед перелетами.

        9. (Только в таче) Прилипший к низу экрана блок с лучшей ценой -
        Лого/название АК/ цена/ кнопка купить

        10. Дисклеймеры

        "Пометка «Возможна оплата багажа» значит..." - опционально

        "Покупка билетов происходит на партнерских сайтах..."

        "Если на сайте партнёра указана другая цена"

        11. Блок директа

        12. (Только в десктопе) Футер
manual: true
Функциональность: Инфа на покупке
Устройство:
  - Десктоп
  - Тач
Страница: Покупка
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: tcheremnykh
feature: Автобусы. Старый фронт
type: Поиск
description: ''
specs:
  Проверка внешнего вида таблицы:
    - do: >-
        Открыть главную страницу сервиса

        Заполнить поля: Откуда - "Москва", Куда - "Санкт-Петербург", выбрать
        любую актуальную дату. Нажать "Найти"
    - assert: >-
        На странице имеется:

        - заголовок страницы, блок "Хорошие цены" с подписью "В другие дни
        поездка может быть дороже", либо "Есть дешевле!" с подписью "Проверьте
        другие даты, цены могут быть ниже" в зависимости от выдачи;

        - таблица с рейсами;

        - выбранная дата выделена желтой рамкой, кнопки со средней ценой -
        серые, кнопки с низкой ценой - зеленые;- имеются стрелочки вправо и
        влево для выбора дат, не поместившихся на экране.

        -таблица с рейсами имеет поля: Отправление (рядом стрелочка вверх),
        Прибытие, Время в пути, Цена;

        - в таблице есть снипеты с имеющимися на выбранную дату рейсами серого и
        белого цвета;

        - на снипетах есть кнопка "Выбрать" желтого цвета с подписями "есть
        свободные места" либо "осталось кол-во мест".
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: Открыта главная страница сервиса
specs:
  Дата отправления. Внешний вид:
    - do: Кликнуть по полю Дата отправления
    - assert: >-
        Открывается календарь, в нём выбрана дата на завтра (оранжевый
        квадратик), текущая дата выделена жёлтой рамкой.

        Вверху присутствуют две кнопки "сегодня", "завтра", под ними кнопки дней
        недели.

        Поле Дата отправления выделяется жёлтой рамкой.
    - do: 'Навести курсор на кнопки "сегодня", "завтра" и убрать курсор'
    - assert: >-
        При наведении курсора, по ховеру, кнопки подсвечиваются (рамка
        становится темнее)

        При убирании курсора подсветка пропадает
    - do: 'Навести курсор на кнопки дней недели, и убрать курсор'
    - assert: |-
        При наведении курсора, по ховеру, кнопки подсвечиваются оранжевым цветом
        При убирании курсора подсветка пропадает
    - do: >-
        Навести курсор на любую дату в календаре, кроме завтрашней, и убрать
        курсор
    - assert: |-
        При наведении курсора, по ховеру, кнопки подсвечиваются оранжевым цветом
        При убирании курсора подсветка пропадает
    - do: >-
        Навести курсор на завтрашнюю дату в календаре (она уже выделена
        оранжевым цветом)
    - assert: >-
        Ничего не происходит, дата как была выделена оранжевым цветом, так и
        остается после того, как убрали курсор
    - do: Навести курсор на календарь и проскроллить его
    - assert: >-
        Календарь скроллится, присутствуют 4 месяца.

        Кнопки "сегодня", "завтра" и дней недели не скроллятся вместе с
        календарём и доступны для нажатия.
    - do: >-
        Навести курсор на любую неактивную дату в календаре (в зависимости от
        текущей даты могут быть как в начале, так и в конце календаря), и убрать
        курсор
    - assert: >-
        Дата не выделяется при наведении, курсор не меняет вид на ручку; после
        того, как убрали курсор, вид также не меняется
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: ''
specs:
  Заголовок выдачи:
    - do: >-
        Открыта главная страница сервиса

        Заполнить поля: Откуда - "Москва", Куда - "Санкт-Петербург", выбрать
        любую актуальную дату. Нажать "Найти"
    - assert: >-
        Заголовок выдачи имеет вид: "Рейсы Москва — Санкт-Петербург, дата",

        Под заголовком подписи: "Найдено рейсов: кол-во рейсов" и "Время
        местное".

        Количество найденных рейсов соответствует выдаче.
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: ''
specs:
  Выдача. Элементы страницы:
    - do: >-
        Заполнить поля: Откуда - Москва, Куда - Санкт-Петербург, выбрать любую
        актуальную дату.

        Нажать Найти
    - assert: >-
        На странице имеется заголовок страницы (например: Рейсы Москва —
        Санкт-Петербург, 2 апреля).

        Блок "Хорошие цены"/"Есть дешевле!" с подписью "В другие дни поездка
        может быть дороже"/"Проверьте другие даты, цены могут быть ниже" (в
        зависимости от поиска название блока может меняться).

        Таблица с рейсами.

        https://yadi.sk/i/qtEN1jz1BQIMMA
    - do: Проверить полученные результаты поиска
    - assert: Результаты поиска соответствуют выбранным данным в шаге 1
    - do: >-
        Сравнить количество найденных рейсов, под заголовком страницы "Найдено
        рейсов: (указано кол-во)" и в таблице с рейсами
    - assert: >-
        Количество в строке "Найдено рейсов: (указано кол-во)" соответствует
        количеству в таблице с рейсами.

        Например: "Найдено рейсов: 2" в таблице с рейсами указаны 2 рейса
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: ''
specs:
  Проверка работы ховеров и кнопок в шапке таблицы с рейсами:
    - do: >-
        Открыть главную страницу тестируемого сервиса

        Заполнить поля: Откуда - "Москва", Куда - "Санкт-Петербург", выбрать
        любую актуальную дату. Нажать "Найти"
    - assert: >-
        На странице имеется:

        - заголовок страницы, блок "Хорошие цены" с подписью "В другие дни
        поездка может быть дороже", либо "Есть дешевле!" с подписью "Проверьте
        другие даты, цены могут быть ниже" в зависимости от выдачи;

        - таблица с рейсами;

        - в блоке "хорошие цены" выбранная дата выделена желтой рамкой, кнопки
        со средней ценой - серые, кнопки с низкой ценой - зеленые;- имеются
        стрелочки вправо и влево для выбора дат, не поместившихся на экране.

        -таблица с рейсами имеет поля: Отправление (рядом стрелочка вверх),
        Прибытие, Время в пути, Цена;

        - в таблице есть снипеты с имеющимися на выбранную дату рейсами серого и
        белого цвета;

        - на снипетах есть кнопка "Выбрать" желтого цвета с подписями "есть
        свободные места" либо "осталось кол-во мест".
    - do: Навести курсор на другую дату.
    - assert: |-
        По ховеру курсор меняет внешний вид.
        Дата подсвечивается черным.
    - do: Кликнуть на другую дату
    - assert: |-
        - появляется анимация с фразой "Поиск рейсов";
        - показывается выдача рейсов на выбранную дату;
        - выбранная дата выделяется желтой рамкой.
    - do: Нажать на стрелочку "вправо"
    - assert: Появляются следующие даты.
    - do: Нажать стрелочку "влево"
    - assert: Появляются предыдущие даты.
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: >-
  Сверяем данные (откуда, куда, дата) введённые в поисковую форму с данными,
  отображающимися в заголовке, над таблицей с результатами поисковой выдачи.

  На сайте автобусов получить поисковую выдачу, например из Москвы в
  Санкт-Петербург на любую дату
specs:
  Заголовок выдачи. Достоверность данных в заголовке выдачи.:
    - do: >-
        На странице выдачи, проверить внешний вид заголовка, находящегося между
        формой поиска и блока лучшей цены.
    - assert: >-
        Вёрстка корректна. Заголовок выдачи виден и не налазит на другие
        элементы

        Примерный вид:

        https://yadi.sk/d/l4G0nz5d4aq6Yg
    - do: Сравнить данные в заголовке с данными в форме поиска
    - assert: >-
        Первая строка заголовка соответствует формату: Рейсы {Откуда} - {Куда},
        {дата}

        Название города  {Откуда}, в заголовке, соответствует выбранному городу
        в поле  {Откуда},  формы поиска

        Название города  {Куда}, в заголовке, соответствует выбранному городу в
        поле  {Куда},  формы поиска

        Дата, в заголовке, соответствует выбранной дате в форме поиска


        Во второй строчке заголовка, количество найденных рейсов должно
        соответствовать кол-ву рейсов в таблице выдачи. Часовой пояс учитывается
        верно.
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: Открыта главная страница сервиса
specs:
  Выбор даты из календаря:
    - do: Кликнуть по полю Дата отправления
    - assert: >-
        Открывается календарь, по умолчанию выбрана дата на завтра. Наверху
        присутствуют две кнопки "сегодня", "завтра", под ними кнопки дней
        недели. Ниже даты на 4 месяца, активны даты на 3 месяца, начиная с
        сегодня, даты вне активного диапазона засерены. Выбранная дата отмечена
        жёлтой заливкой, сегодняшняя дата отмечена жёлтой рамкой.
    - do: 'Выбрать дату вне активного диапазона: из прошлого или будущего.'
    - assert: 'Даты вне активного диапазона задизейблены, их нельзя выбрать'
    - do: Поставить курсор в поле даты и очистить инпут
    - assert: Очистить инпут даты нельзя
    - do: Выбрать любой день следующего месяца
    - assert: 'В поле проставляется выбранная дата, календарь не закрывается'
    - do: Кликнуть мимо открытого календаря
    - assert: 'Календарь закрывается, выбранная дата остается в поле'
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: Открыта главная страница сервиса
specs:
  Таблица выдачи. Внешний вид (дубль 1234):
    - do: >-
        Заполнить поля: Откуда - "Москва", Куда - "Санкт-Петербург", выбрать
        любую актуальную дату.

        Нажать "Найти"
    - assert: >-
        Страница обновляется, появляется заголовок "Рейсы Москва —
        Санкт-Петербург, дата".

        Под заголовком: найдено рейсов: указано кол-во, Время местное.

        Присутствует ставка "Есть дешевле!" со вставкой "Проверьте другие даты,
        цены могут быть ниже" или "Хорошие цены" со вставкой "В другие дни
        поездка может быть дороже", в зависимости от выдачи.

        Во вставке с ценами на другие дни выбранный день выделен желтой рамкой.

        В таблице с результатами поиска на выбранный день присутствуют:

        - Время и место отправления

        - Время и место прибытия _(в некоторых случаях указан только город,
        вокзал не указан)_

        - Время в пути *(редко - может быть еще и рейтинг перевозчика)*

        - Цена билета

        - Кнопка выбора с оставшимся количеством свободных мест

        см. скриншот: https://yadi.sk/i/c1WhfVBGklgxQQ
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: ''
specs:
  Сортировка в таблице с рейсами:
    - do: >-
        Открыта главная страница сервиса

        Заполнить поля: Откуда - "Москва", Куда - "Санкт-Петербург", выбрать
        любую актуальную дату. Нажать "Найти"
    - assert: >-
        На странице имеется:

        - заголовок страницы, блок "Хорошие цены" с подписью "В другие дни
        поездка может быть дороже", либо "Есть дешевле!" с подписью "Проверьте
        другие даты, цены могут быть ниже" в зависимости от выдачи;

        - таблица с рейсами;

        - выбранная дата выделена желтой рамкой, кнопки со средней ценой -
        серые, кнопки с низкой ценой - зеленые;- имеются стрелочки вправо и
        влево для выбора дат, не поместившихся на экране.

        -таблица с рейсами имеет поля: Отправление (рядом стрелочка вверх),
        Прибытие, Время в пути, Цена;

        - в таблице есть снипеты с имеющимися на выбранную дату рейсами серого и
        белого цвета;

        - на снипетах есть кнопка "Выбрать" желтого цвета с подписями "есть
        свободные места" либо "осталось кол-во мест".
    - do: Кликнуть по названию "Отправление"
    - assert: |-
        Стрелочка рядом с названием смотрит вниз.
        Сортировка столбцов по убыванию.
        Сортировка корректная, без артефактов.
    - do: Кликнуть по названию "Отправленные" еще раз
    - assert: |-
        Стрелочка рядом с названием смотрит вверх.
        Сортировка столбцов по возрастанию.
        Сортировка корректная, без артефактов.
    - do: 'Повторить шаги 2- 3 для столбцов: Прибытие, Время в пути, Цена'
    - assert: Результаты такие же.
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Портал
type: Поиск
description: >-
  Форма поиска раскрывается при клике в какой-либо инпут в ней

  Открыта главная страница сервиса

  Перейти на страницу с результатами выдачи по любому направлению, например
  Москва - Санкт-Петербург на любую дату.
specs:
  Раскрытие формы при фокусе в инпуте:
    - do: Кликнуть в инпут города отправления в форме поиска
    - assert: |-
        Форма поиска раскрывается. Анимация плавная, вёрстка корректная.
        Затемнена часть страницы ниже формы поиска.
        Появляется саджест с вариантами городов или вокзалов
    - do: >-
        Кликнуть в затемнённую (серую) область, ниже хедера с формой поиска и
        вне саджеста
    - assert: >-
        Форма поиска сворачивается.  Анимация сворачивания плавная, Затемнение
        пропало.

        Саджест с вариантами городов или вокзалов скрывается
    - do: Кликнуть в инпут города прибытия в форме поиска
    - assert: |-
        Форма поиска раскрывается. Анимация плавная, вёрстка корректная.
        Затемнена часть страницы ниже формы поиска.
        Появляется саджест с вариантами городов или вокзалов
    - do: >-
        Кликнуть в затемнённую (серую) область, ниже хедера с формой поиска и
        вне саджеста
    - assert: >-
        Форма поиска сворачивается.  Анимация сворачивания плавная, Затемнение
        пропало.

        Саджест с вариантами городов или вокзалов скрывается
    - do: Кликнуть на календарь в форме поиска.
    - assert: |-
        Форма поиска раскрылась. Анимация плавная, вёрстка корректная.
        Затемнена часть страницы ниже формы поиска.
        Открылся календарь  с возможностью выбора даты
    - do: >-
        Кликнуть в затемнённую (серую) область, ниже хедера с формой поиска и
        вне календаря
    - assert: >-
        Форма поиска свернулась.  Анимация сворачивания плавная, Затемнение
        пропало.

        Календарь скрылся.
    - do: >-
        Перезагрузить страницу. Несколько раз нажать Tab  до фокуса на инпуте в
        форме поиска.
    - assert: |-
        Форма поиска раскрылась. Анимация плавная, вёрстка корректная.
        Затемнена часть страницы ниже формы поиска.
manual: true
Сервис: Портал
Устройство: Десктоп
Страница: Поиск
feature: Автобусы. Старый фронт
type: Поиск
description: >-
  В кейсе проверяется вёрстка и скролл страницы выдачи при раскрытой и свёрнутой
  форме поиска


  _Кнопки выбора места могут иметь разную ширину, не надо заводить на это баг_

  Произведен поиск автобусных билетов. Открыта страница выдачи.

  Перейти на страницу с результатами выдачи по любому направлению, например
  Москва - Нижний-Новгород на любую дату. Главное, чтобы для просмотра всех
  результатов выдачи, нужно было скроллить страницу.
specs:
  Вёрстка и скролл страницы выдачи:
    - do: >-
        Перейти на главную страницу тестируемого сервиса Яндекс.Путешествия
        https://yandex.ru/bus
    - assert: Страница открывается
    - do: |-
        Получить выдачу рейсов по маршруту (напр. Москва - Санкт-Петербург)
        Если рейсы отсутствуют, выбрать другой маршрут
    - assert: Страница выдачи отображается
    - do: Проверить корректность вёрстки страницы выдачи автобусных билетов
    - assert: >-
        Вёрстка корректна, Нет наезжающих друг на друга блоков и вышедшего за
        границы блока текста. Страница содержит:

        В хедере:
            Лого (Яндекс Путешествия).
            Форма поиска содержащая: инпут города отправления с крестиком, кнопка смены направлений, инпут города прибытия с крестиком, календарь.
            Кнопка "Найти"
            Кнопка "Войти" или юзерпик ( если уже авторизованы)
        Под хедером:
            Надпись формата "Рейсы {город отправления} - {город прибытия}, {выбранная дата}
            Чуть ниже "Найдено рейсов" и "Время  "
            Карусель с ценами билетов на даты
            Таблица с выдачей поисковые ответы в которой содержат:  время и место отправления, время и место прибытия, время в пути, цену билета, кнопку выбора мест.
    - do: Проскроллить страницу вниз
    - assert: |-
        Остаётся видимым хедер с формой поиска и результаты поиска.
        Вёрстка корректна.
    - do: >-
        Выскроллить страницу в самый верх. Тапнуть по очереди в каждый инпут
        формы поиска.
    - assert: >-
        Форма поиска разворачивается (уходит вниз, чуть ниже лого, и
        увеличивается по ширине от правого до левого краёв контента).

        Область под хедером затемняется.

        Появляется саджест с вариантами городов / вокзалов или календарь (в
        зависимости от того, куда кликнули)
    - do: >-
        Навести курсор на затемнённую область и проскроллить страницу вниз -
        вверх.
    - assert: >-
        Поисковая выдача в затемнённой области скроллится.

        Развёрнутая поисковая форма остаётся запиненной вверху и не
        сворачивается.
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: Открываем главную страницу сервиса
specs:
  Форма поиска на главной странице сервиса. Поиск рейса:
    - do: >-
        В форме поиска и продажи билетов очистить поле "Откуда" (если оно
        автоматически заполнилось) и нажать на кнопку "Найти"
    - assert: >-
        Под полем "Откуда" появляется попап с ошибкой: "Уточните пункт
        отправления".

        Под полем "Куда" появляется попап с  ошибкой: "Уточните пункт
        назначения".
    - do: Заполнить поле "Откуда" любым городом и нажать на кнопку "Найти"
    - assert: 'Под полем "Куда" появляется попап с ошибкой: "Уточните пункт назначения"'
    - do: >-
        Очистить поле "Откуда", заполнить поле "Куда" любым городом и нажать на
        кнопку "Найти".
    - assert: >-
        Под полем "Откуда" появляется попап с ошибкой:  "Уточните пункт
        отправления".
    - do: >-
        Заполнить поля: "Откуда" - "Москва", "Куда" - "Санкт-Петербург", выбрать
        любую актуальную дату.

        Нажать кнопку "Найти".
    - assert: >-
        На короткое время показывается надпись "Поиск рейсов" и пульсирует точка
        в центре, после чего на странице отображается выдача по заданному
        запросу.
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: Пользователь не авторизован
specs:
  Главная страница. Общий вид шапки:
    - do: Открыта главная страница сервиса
    - assert: >-
        Открывается страница "Поиск и продажа билетов на автобусы по России и
        СНГ"
    - do: Проверить внешний вид шапки
    - assert: |-
        В левом верхнем углу отображается Яндекс Путешествия.
        Правее табы: Авиабилеты, Ж/д билеты, Отели, Автобусы (выделен).
        В правом верхнем углу кнопка Войти.
        Вид соответствует скриншоту: https://yadi.sk/i/Sd3uVtRFZ6Xf0A
    - do: 'Навести курсор поочередно на  Авиабилеты, Ж/д билеты, Отели'
    - assert: По ховеру названия табов выделяются черным цветом
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: >-
  Вёрстка саджестов и календаря при раскрытии формы на странице выдачи

  Перейти на страницу с результатами выдачи по любому направлению, например
  Москва - Нижний-Новгород на любую дату.
specs:
  Вёрстка саджестов формы поиска:
    - do: Кликнуть в инпут города отправления в форме поиска.
    - assert: >-
        Появляется саджест с вариантами городов/вокзалов

        Вёрстка саджеста корректна. Саджест находится под инпутом, не перекрывая
        его.


        Скриншот: https://yadi.sk/i/rSNUis4UArJHaQ
    - do: Поскроллить страницу
    - assert: Саджест остаётся на месте и не съезжает.
    - do: Кликнуть в инпут города прибытия в форме поиска
    - assert: >-
        Появляется саджест с вариантами городов/вокзалов

        Вёрстка саджеста корректна. Саджест находится под инпутом, не перекрывая
        его.


        Скриншот: https://yadi.sk/d/tAgQdBnEPptudQ
    - do: Поскроллить страницу
    - assert: Саджест остаётся на месте и не съезжает.
    - do: Кликнуть на календарь в форме поиска.
    - assert: |-
        Открывается календарь с возможностью выбора даты.
        Вёрстка корректна. Календарь находится под инпутом, не перекрывая его.

        Скриншот: https://yadi.sk/i/RlfdTw9SNmrSPw
    - do: Навести курсор в затемнённую область и поскроллить страницу.
    - assert: Страница скроллится. Календарь остаётся на своём месте.
    - do: Навести курсор внутрь открывшегося саджеста с календарём.
    - assert: >-
        Содержимое внутри саджеста календаря скроллится. Страница остаётся
        неподвижной.

        (если календарь кончился, нет возможности выбрать на другие месяцы,
        может скроллиться страница)
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: ''
specs:
  'Проверка работы ховеров, кнопок и ссылок в таблице с рейсами':
    - do: |-
        Открыта главная страница сервиса
        Тапнуть по карточке любого популярного направления
    - assert: >-
        Открылась поисковая выдача, пункты отправления-прибытия соответствуют
        тем, которые были написаны на карточке.

        На странице имеется:

        - заголовок страницы, блок "Хорошие цены" с подписью "В другие дни
        поездка может быть дороже", либо "Есть дешевле!" с подписью "Проверьте
        другие даты, цены могут быть ниже" в зависимости от выдачи;

        - таблица с рейсами;

        - выбранная дата выделена желтой рамкой, кнопки со средней ценой -
        серые, кнопки с низкой ценой - зеленые;- имеются стрелочки вправо и
        влево для выбора дат, не поместившихся на экране. (*не поместившиеся
        обрезаются в блюр*)

        -таблица с рейсами имеет поля: Отправление (рядом стрелочка вверх),
        Прибытие, Время в пути, Цена;

        - в таблице есть снипеты с имеющимися на выбранную дату рейсами серого и
        белого цвета;

        - на снипетах есть кнопка "Выбрать" желтого цвета с подписями "есть
        свободные места" либо "осталось кол-во мест". _(кнопки могут
        незначительно отличаться по ширине, не надо заводить на это баг)_
    - do: Навести курсор мыши на первый снипет.
    - assert: |-
        -курсор меняет внешний вид;
        -снипет выделяется желтой рамкой (не выделяется в ие, эдж и сафари)
    - do: Кликнуть по кнопке "Выбрать"
    - assert: |-
        - появляется анимация с подписью "Загрузка";
        - происходит переход на страницу бронирования билета по выбранному рейсу
    - do: Нажать на кнопку "Назад к результатам поиска" в левом верхнем углу
    - assert: Происходит возврат на страницу выдачи
    - do: Нажать на любое другое место в снипете кроме кнопки "Выбрать"
    - assert: Под снипетом разворачивается подробная информация о рейсе
    - do: >-
        Нажать на ссылку автовокзала места отправления (*такая ссылка не везде
        есть, это не баг*)
    - assert: Открывается карта с отмеченным автовокзалом
    - do: Нажать на крестик в правом верхнем углу карты
    - assert: Карта закрывается
    - do: >-
        Нажать на ссылку автовокзала места прибытия (*такая ссылка не везде
        есть, это не баг*)
    - assert: Открывается карта с отмеченным автовокзалом
    - do: Нажать на крестик в правом верхнем углу карты
    - assert: Карта закрывается
    - do: Нажать на ссылку "прочие условия"
    - assert: >-
        Под ссылкой разворачивается текст "Возврат на сайте возможен не позднее
        чем за 15 минут до отправления автобуса"
    - do: Нажать на ссылку "скрыть" в правой части сниппета
    - assert: Подробная информация о рейсе сворачивается
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: Открыта главная страница сервиса
specs:
  Таблица с рейсами. Работа кнопок и ссылок внутри элементов:
    - do: >-
        Заполнить поля: Откуда - Москва, Куда - Санкт-Петербург, выбрать любую
        актуальную дату.

        Нажать Найти
    - assert: >-
        На странице содержится блок "Хорошие цены" с подписью "В другие дни
        поездка может быть дороже" (или "Есть дешевле!" с подписью "Проверьте
        другие даты, цены могут быть ниже"), ниже - таблица с рейсами
    - do: Навести курсор на строку в таблице
    - assert: 'Курсор меняет свой вид на руку, строка выделяется оранжевым контуром.'
    - do: Кликнуть на выбранную строку
    - assert: >-
        Под строкой раскрывается описание рейса. В правом нижнем углу есть
        кнопка Скрыть

        См. скриншот: https://yadi.sk/i/2J0arD8Irq4RSQ
    - do: Нажать на скрыть
    - assert: Описание скрывается
    - do: Кликнуть еще раз на любую строку в таблице
    - assert: Под строкой раскрывается описание рейса
    - do: Кликнуть на ссылку "Прочие условия"
    - assert: Раскрывается информация по условиям
    - do: Кликнуть на ссылку "Прочие условия" еще раз
    - assert: Информация скрывается. Верстка не ломается
    - do: >-
        Кликнуть по ссылке места отправления (например: Москва, Автовокзал
        Северные Ворота)
    - assert: >-
        Открывается попап с названием места отправления (например, Москва,
        Автовокзал Северные Ворота на карте)

        Карта центрирована на месте отправления
    - do: >-
        Кликнуть по ссылке места прибытия (например: Санкт-Петербург, Автовокзал
        №2)
    - assert: >-
        Открывается попап с названием места прибытия (например: Санкт-Петербург,
        Автовокзал №2 на карте). Вместо названия может быть "Точка прибытия на
        карте"

        Карта центрирована на месте прибытия
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: Открыта главная страница сервиса
specs:
  Форма поиска на главной странице сервиса. Инпуты откуда/куда из нулевого саджеста:
    - do: >-
        Кликнуть в первое поле Откуда. Если в поле уже заполнено значение, то
        вместо клика нажать на крестик в поле
    - assert: >-
        Поле выделено оранжевым контуром, плейсхолдер в поле "Откуда", мигает
        курсор в поле, раскрывается саджест с городами
    - do: Навести курсор на любой город в саджесте
    - assert: По ховеру пункт отправления в саджесте подсвечивается оранжевым цветом
    - do: Кликнуть на любой город
    - assert: |-
        Саджест закрывается, выбранный город проставляется в поле "Откуда".
        Поле выделено оранжевым контуром
    - do: Нажать на крестик в поле "Откуда"
    - assert: >-
        Поле очищается. Плейсхолдер в поле "Откуда".

        Саджест остается открытым, информация в нем обновляется, показывается
        список городов (кол-во городов не более 10)
    - do: Нажать на стрелку вниз на клавиатуре
    - assert: Первый город в саджесте выделяется и подсвечивается оранжевым цветом
    - do: >-
        С помощью стрелок вверх и вниз на клавиатуре, выбрать любой город и
        нажать Enter
    - assert: |-
        Саджест закрывается, выбранный город проставляется в поле "Откуда".
        Поле выделено оранжевым контуром
    - do: Кликнуть в поле "Куда"
    - assert: >-
        Фокус переходит на поле "Куда" (выделен оранжевым контуром), плейсхолдер
        в поле "Куда", курсор мигает в поле.

        Саджест открывается
    - do: Повторить шаги с 2-6 для поля "Куда"
    - assert: Результаты такие же
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Поиск
description: ''
specs:
  Таблица выдачи. Внешний вид:
    - do: Открыта главная страница сервиса
    - assert: Открылась страница "Поиск и продажа билетов на автобусы по России и СНГ"
    - do: >-
        Заполнить поля: Откуда - Москва, Куда - Санкт-Петербург, выбрать любую
        актуальную дату.

        Нажать Найти
    - assert: >-
        На странице присутствует таблица с рейсами, имеющая поля: Отправление
        (рядом стрелочка вверх), Прибытие, Время в пути, Цена и желтая кнопка
        "Выбрать" с подписью "осталось 49 мест" (кол-во может быть любым)/"есть
        свободные места"

        https://yadi.sk/i/U8cEdywmb2Xtow
    - do: Навести курсор на любую строку в таблице
    - assert: 'Курсор меняет свой вид на руку, строка выделяется желтым контуром'
    - do: Навести курсор на желтую кнопку "Выбрать"
    - assert: Кнопка немного затемняется
    - do: Кликнуть на любую строку
    - assert: >-
        Под строкой раскрывается список с подробной информацией по рейсу. В
        правом нижнем углу списка есть надпись "Скрыть" (синего цвета).

        Вид соответствует скриншоту: https://yadi.sk/i/p3Kg91WrGz0ixg
    - do: Кликнуть на "Скрыть"
    - assert: 'Список скрывается, верстка не ломается'
manual: true
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Страница заказа
description: Находимся на главной странице сервиса
specs:
  Проверка страницы бронирования. Блок с информацией об оплате:
    - do: >-
        Заполнить форму поиска и продажи билетов валидными данными (Например:
        "Откуда" - "Москва", "Куда" - "Санкт-Петербург", "Завтра") и нажать
        кнопку "Найти"
    - assert: >-
        Выдача обновляется.

        Отображается страница с рейсами по заданному запросу.

        На странице присутствует таблица с рейсами (если рейсов нет, нужно
        поменять дату на другую)
    - do: Нажать кнопку "Выбрать" возле любого рейса в таблице выдачи
    - assert: |-
        Загружается страница бронирования рейса.
        На странице присутствуют следующие блоки:
        Блок "Назад к результатам поиска"
        Блок описания рейса
        Блок с данными о пассажирах
        Блок с контактными данными
        Блок с информацией об оплате
    - do: Проверить отображение блока с информацией об оплате
    - assert: >-
        В блоке отображаются:

        Заголовок - "К оплате" с суммой заказа (сумма заказа совпадает с суммой
        из таблицы выдачи на шаге 1)

        Подзаголовок - "Включая сервисные сборы" с суммой сборов

        Жёлтая кнопка "Забронировать и оплатить"

        Под кнопкой расположен блок "Оплата банковскими картами" с логотипами
        карт

        Внешний вид блока с информацией об оплате соответствует скриншоту:
        https://yadi.sk/i/OJ5cbq3XyAXTqg
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница: Страница заказа
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Страница заказа
description: ''
specs:
  Проверка страницы бронирования. Блок описания рейса:
    - do: |-
        Перейти на главную страницу сервиса
        Выбрать любые города откуда - куда, выбрать любую дату
        Нажать "Найти"
    - assert: >-
        На странице присутствует таблица с рейсами, в каждой строке есть кнопка
        "Выбрать"
    - do: Нажать на кнопку "Выбрать"
    - assert: |-
        Открывается страница бронирования
        Скриншот: https://yadi.sk/d/nfoC9qGg_qbzwQ
    - do: Проверить "Блок описания рейса"
    - assert: |-
        Блок описания рейса соответствует скриншоту:
        https://yadi.sk/i/AAgDmSWHN1qDwQ
        В блоке есть:
        1. Время отправления: Время (ЧЧ:ММ) + Дата
        2. Город отправления, название автовокзала (в виде ссылки синего цвета)
        3. Время прибытия: Время (ЧЧ:ММ) + Дата (если прибытие не в этот день)
        4. Город прибытия, название автовокзала (в виде ссылки синего цвета)
        5. Название рейса
        6. Название перевозчика (не всегда присутствует)
        7. Транспорт (не всегда присутствует)
        8. Ссылка "Прочие условия"
        9. Ниже текст: Время отправления и прибытия — местное
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница: Страница заказа
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: ''
description: >-
  Выдержки из [Условия бронирования и приобретения электронных билетов на
  автобусы](https://yandex.ru/legal/bus_tickets_booking_conditions/) (возможны
  изменеия. но общий смысл вряд ли поменяется со временем):

  "...

  2.13. Пользователю может быть доступна функция бронирования Электронного
  билета без необходимости оплаты Электронного билета на Ресурсах Яндекса.

  ...

  3.2. ..., Пользователю предоставляется время для оплаты, при этом время сессии
  на оплату составляет 15 минут (если большее время не указано в интерфейсе
  Системы Яндекса), по истечении которых будет выдаваться сообщение об истечении
  времени ожидания и о необходимости осуществить процедуру приобретения
  Электронного билета заново.

  ...

  3.4. После нажатия Пользователем на кнопку «Оплатить» и подтверждения оплаты в
  Системе Яндекса, о чём выдаётся соответствующее сообщение, договор перевозки
  считается заключенным, Пользователю направляются Электронный билет и (или)
  маршрутная квитанция на указанный им адрес электронной почты и(или) номер
  мобильного телефона.

  ..."

  **ЗКП (записная книжка пассажира)** - личный кабинет... (см.
  [Инструкцию](https://wiki.yandex-team.ru/eva/search/assessors-testing/Testirovanie-Poezdov/)).

  Пользователь авторизован на тестируемом сервисе, получена **Выдача** на любую
  поездку на Автобусе, выбрана любая доступная поездка и заполнены валидными
  значениями данные пассажиров и контактные данные (то есть открыта страница
  бронирования и оплаты выбранной поездки и доступна кнопка для бронирования и
  оплаты - скриншот примера кнопки: https://yadi.sk/i/_MNGhc1q0g53mw ).
specs:
  Автобусы. Бронирование и Оплата. После брони:
    - do: >-
        На странице бронирования и оплаты выбранной поездки из **Предусловия**
        нажать кнопку для бронирования и оплаты. Закрыть открывшийся попап
        Оплаты банковской картой.
    - assert: >-
        Открывается страница заказа с надписью "Билеты ожидают оплату" с
        активной кнопкой Оплатить (скриншот примера страницы и кнопки:
        https://yadi.sk/i/q9LwGfKkrTQ-EQ ).

        На e-mail, указанный в контактных данных приходит письмо от сервиса.
    - do: Нажать на кнопку оплаты.
    - assert: >-
        В зависимости от количества времени прошедшего с момента нажатия кнопки
        для бронирования и оплаты (см. **Описание**):
         - прошло более 15 минут: Открывается страница заказа с надписью "Билеты аннулированы" (скриншот примера страницы: https://yadi.sk/i/OhkBF2IOURX9mA )
         - прошло менее 15 минут: Открывается попап Оплаты банковской картой  (скриншот примера попапа: https://yadi.sk/i/PU04eSy29M-z6A ).
    - do: Закрыть попап Оплаты банковской картой.
    - assert: >-
        Открывается страница заказа  с надписью "Билеты ожидают оплату" с
        активной кнопкой Оплатить (скриншот примера страницы и кнопки:
        https://yadi.sk/i/q9LwGfKkrTQ-EQ ).
    - do: >-
        В новой вкладке открыть письмо от сервиса из шага 1 и проверить данные
        указанные в письме.
    - assert: >-
        В письме присутствует  (скриншот примера письма:
        https://yadi.sk/i/UwK4x3k_9FaGQQ ):
         - Номер заказа
         - данные поездки, совпадающие с данными указанные при оформлении поездки (см. **Предисловие**)
         - данные по отправлению и прибытию
         - информация о партнере
         - кликабельная кнопка оплаты, открывающая страницу сервиса с открытым попапом Оплаты банковской картой.
    - do: Нажать на кнопку оплаты из письма.
    - assert: >-
        В зависимости от количества времени прошедшего с момента нажатия кнопки
        для бронирования и оплаты (см. **Описание**):
         - прошло более 15 минут: Открывается страница заказа с надписью "Билеты аннулированы" (скриншот примера страницы: https://yadi.sk/i/OhkBF2IOURX9mA )
         - прошло менее 15 минут: Открывается попап Оплаты банковской картой  (скриншот примера попапа: https://yadi.sk/i/PU04eSy29M-z6A ).
    - do: Закрыть попап Оплаты банковской картой (если открыт).
    - assert: >-
        Открывается страница заказа  с надписью "Билеты ожидают оплату" с
        активной кнопкой Оплатить (скриншот примера страницы и кнопки:
        https://yadi.sk/i/q9LwGfKkrTQ-EQ ).
    - do: >-
        Перейти в раздел **Мои билеты** нажав на иконку ЗКП  или название
        раздела слева вверху страницы  (скриншот примера кнопки и названия
        раздела: https://yadi.sk/i/8f5pH6wUhV5ZBg ).
    - assert: >-
        Открывается ЗКП с надписью "Мои заказы" и на ней в зависимости от
        количества времени прошедшего с момента нажатия кнопки для бронирования
        и оплаты (см. **Описание**):
         - прошло более 15 минут: Список только аннулированных и оплаченных заказов.
         - прошло менее 15 минут: Отображается только что забронированный, но не оплаченный заказ. Присутствует активная кнопка оплаты. Справа вверху пустой чекбокс рядом с текстом "Показать аннулированные" (только если есть другие заказы в другом статусе), при отметке чекбокса показываются анулированные заказы - при наличии  (скриншот примера страницы: https://yadi.sk/i/qFkkXjdz40Ng_g ).
    - do: Нажать на кнопку оплаты.
    - assert: >-
        В зависимости от количества времени прошедшего с момента нажатия кнопки
        для бронирования и оплаты (см. **Описание**):
         - прошло более 15 минут: Открывается страница заказа с надписью "Билеты аннулированы" (скриншот примера страницы: https://yadi.sk/i/OhkBF2IOURX9mA )
         - прошло менее 15 минут: Открывается попап Оплаты банковской картой  (скриншот примера попапа: https://yadi.sk/i/PU04eSy29M-z6A ).
    - do: Закрыть попап Оплаты банковской картой (если открыт).
    - assert: >-
        Открывается страница заказа  с надписью "Билеты ожидают оплату" с
        активной кнопкой Оплатить (скриншот примера страницы и кнопки:
        https://yadi.sk/i/q9LwGfKkrTQ-EQ ).
    - do: >-
        Перейти в Мои билеты, нажать на ссылку **_Детали Заказа_** справа от
        номера заказа.
    - assert: >-
        В зависимости от количества времени прошедшего с момента нажатия кнопки
        для бронирования и оплаты (см. **Описание**):
         - прошло более 15 минут: Открывается страница заказа с надписью "Билеты аннулированы" (скриншот примера страницы: https://yadi.sk/i/OhkBF2IOURX9mA )
         - прошло менее 15 минут: Открывается попап Оплаты банковской картой  (скриншот примера попапа: https://yadi.sk/i/PU04eSy29M-z6A ).
    - do: Закрыть попап Оплаты банковской картой (если открыт).
    - assert: >-
        Открывается страница заказа  с надписью "Билеты ожидают оплату" с
        активной кнопкой Оплатить (скриншот примера страницы и кнопки:
        https://yadi.sk/i/q9LwGfKkrTQ-EQ ).
    - do: >-
        Подождать когда пройдут 15 минут с момента нажатия кнопки Бронирования и
        оплаты и повторить шаги 4-7 и шаг 10.
    - assert: ОР соответствует ОР шагов 4-7 и шага 10.
    - do: >-
        [**этот и последующие шаги кейса пропустить если нет возможности
        оплатить заказ**] Повторить условия из **Предусловия** и нажать кнопку
        для бронирования и оплаты.
    - assert: >-
        Открывается попап Оплаты банковской картой  (скриншот примера попапа:
        https://yadi.sk/i/PU04eSy29M-z6A ).

        Кнопка оплаты задизейблена.
    - do: Заполнить данные карты валидными данные.
    - assert: Кнопка оплаты становится активной.
    - do: Нажать на кнопку оплаты и подтвердить оплату.
    - assert: >-
        Заказ оплачен и попап закрывается (возможно появление других попапов и
        элементов, необходимых для завершения процесса оплаты).

        Открывается страница заказа с отметкой, что заказ оплачен.

        На e-mail, указанный в контактных данных при бронировании приходит
        письмо от сервиса с уведомлением о купленных билетах и с чеком об оплате
    - do: >-
        В новой вкладке открыть полученное на предыдущем шаге письмо от сервиса
        и проверить данные указанные в письме.
    - assert: Данные в уведомлении и в чеке соответствуют данным заказа.
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: ''
description: >-
  Выдержки из [Условия бронирования и приобретения электронных билетов на
  автобусы](https://yandex.ru/legal/bus_tickets_booking_conditions/) (возможны
  изменеия. но общий смысл вряд ли поменяется со временем):

  "...

  2.13. Пользователю может быть доступна функция бронирования Электронного
  билета без необходимости оплаты Электронного билета на Ресурсах Яндекса.

  ...

  3.2. ..., Пользователю предоставляется время для оплаты, при этом время сессии
  на оплату составляет 15 минут (если большее время не указано в интерфейсе
  Системы Яндекса), по истечении которых будет выдаваться сообщение об истечении
  времени ожидания и о необходимости осуществить процедуру приобретения
  Электронного билета заново.

  ...

  3.4. После нажатия Пользователем на кнопку «Оплатить» и подтверждения оплаты в
  Системе Яндекса, о чём выдаётся соответствующее сообщение, договор перевозки
  считается заключенным, Пользователю направляются Электронный билет и (или)
  маршрутная квитанция на указанный им адрес электронной почты и(или) номер
  мобильного телефона.

  ..."

  **Выдача** - результат поиска рейсов.... (см.
  [Инструкцию](https://wiki.yandex-team.ru/eva/search/assessors-testing/Testirovanie-Poezdov/)).

  Пользователь авторизован на тестируемом сервисе, получена **Выдача** на любую
  поездку на Автобусе, выбрана любая доступная поездка и заполнены валидными
  значениями данные пассажиров и контактные данные (то есть доступна кнопка для
  бронирования и оплаты - скриншот примера кнопки:
  https://yadi.sk/i/_MNGhc1q0g53mw ).
specs:
  Проверка бронирования. Покупка билетов:
    - do: >-
        Нажать кнопку "Забронировать и оплатить" (с пустыми полями в полях
        данных пассажиров)
    - assert: >-
        Происходит подскролл к форме для данных пассажиров. Незаполненные поля
        выделяются красным текстом снизу
    - do: >-
        Ввести некорректные ФИО, дату, номер документа (например: не вводить
        отчество, в поле даты ввести 00.00.00)
    - assert: Поля с неверными данными сразу подсвечиваются красным текстом снизу
    - do: >-
        Поменять значение в поле "Документ" и внести неверные данные (нули не
        валидируются, не баг)
    - assert: Поля с неверными данными сразу подсвечиваются красным текстом снизу
    - do: Нажать кнопку "Добавить пассажира"
    - assert: >-
        Появилась вторая форма для ввода данных пассажира. Цена (поле "К
        оплате") увеличилась соответственно
    - do: Удалить одного пассажира
    - assert: >-
        Осталась одна форма для пассажира. Все данные на наделённой форме
        сохранились. Цена обновилась
    - do: >-
        Заполнить все поля корректными данными и нажать кнопку "Забронировать и
        оплатить"
    - assert: Открывается окно для ввода данных карт
    - do: >-
        [**шаг пропустить если нет возможности оплатить заказ**] Ввести данные
        банковской карты в соответствующие поля и нажать "Оплатить"
    - assert: >-
        Пользователю направляются Электронный билет и (или) маршрутная квитанция
        на указанный им адрес электронной почты и(или) номер мобильного
        телефона.
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Страница заказа
description: >-
  Пользователю доступен выбор места в автобусе при приобретении билета.

  На текущий момент выбор мест доступен не на всех автобусах, это не баг.

  Получить результаты поиска для рейсов для направления Москва — Казань на
  Завтра.

  Если Выбор места недоступен, необходимо произвести поиск подходящего рейса на
  другую дату.
specs:
  Проверка бронирования. Выбор места в автобусе:
    - do: Выбрать маршрут и нажать кнопку "Выбрать"
    - assert: >-
        Открывается страница с более подробной информацией о маршруте, с формой
        для данных пассажиров, контактами и ценой
    - do: Кликнуть "Выбрать место"
    - assert: >-
        Открывается попап с автобусными местами. Недоступные (занятые) места
        окрашены серым
    - do: Навести курсор на свободное место
    - assert: Свободное место подсвечивается жёлтым цветом по ховеру
    - do: Кликнуть на свободное место
    - assert: >-
        Попап закрывается. Кнопка "Выбрать место" сменяется кнопкой с номером
        места
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница: Страница заказа
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Покупка
description: ''
specs:
  Страница бронирования. Верстка.:
    - do: |-
        Перейти на страницу бронирования рейса:
        1. страница тестируемого сервиса
        2. Выбрать любые города откуда - куда
        3. Выбрать любую дату
        4. Нажать на кнопку Найти
        5. Нажать на Выбрать на любой результат выдачи
    - assert: Открывается страница бронирования рейса
    - do: Проверить верстку на странице бронирования рейса
    - assert: >-
        В шапке содержится:

        - лого;

        - откуда, куда, дата (совпадает с выбранными на предыдущем шаге);

        - кнопка Найти;

        - кнопка Войти (если не авторизованы) или Мои билеты + аватар/заглушка +
        логин (если авторизованы)

        https://yadi.sk/i/pgYxHaS8Mwz_Fw

        Ниже блоки:

        - < назад к результатам поиска https://yadi.sk/i/V5cEO0IujGhUcQ

        - Описание рейса https://yadi.sk/i/ZQ4NWAat6FayZg

        - Укажите пассажиров https://yadi.sk/i/Xtud5ghqcfnoBA

        - Укажите контактные данные (отделен от предыдущего пункта
        разделительной чертой) https://yadi.sk/i/n_pnWmrvTGoRzw

        - К оплате (отделен от предыдущего пункта разделительной чертой)
        https://yadi.sk/i/eCGEiXKs6T1OEw

        - Подвал


        Все элементы выровнены по левому краю, вёрстка не едет, всё выглядит
        корректно.
    - do: Проверить подвал страницы.
    - assert: |-
        В подвале есть ссылки:
        - Условия покупки билетов на автобусы
        - Пользовательское соглашение
        - Обратная связь
        - Помощь
        - © 2016–20xx ООО «Яндекс»
        https://yadi.sk/i/IgJyRVnLksZGrg
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница:
  - Покупка
  - Страница заказа
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Ввод данных
description: |-
  Находимся на странице бронирования рейса:
  1. Зайти на главную страницу сервиса
specs:
  Проверка страницы бронирования. Блок с контактными данными:
    - do: >-
        Заполнить форму поиска валидными данными (Например: "Откуда - "Москва",
        "Куда" - "Санкт-Петербург", "Завтра").

        Нажать кнопку "Найти"
    - assert: >-
        Выдача обновляется. На странице присутствует таблица с результатами
        выдачи, в которой отображаются рейсы на выбранную дату. (Если рейсов
        нет, нужно поменять дату отправления)
    - do: В таблице выдачи нажать на кнопку "Выбрать" возле любого рейса
    - assert: >-
        Выдача обновляется. На странице присутствует блок с контактными данными.

        Внешний вид блока соответствует скриншоту:
        https://yadi.sk/i/8eQFT3qsa2gqRA
    - do: Сделать клик в инпут "Телефон
    - assert: >-
        Рамка инпута окрашивается в желтый цвет, в левой части инпута появляется
        "+", курсор мигает и находится после знака "+", в правой части инпута
        появляется крестик для удаления содержимого инпута.
    - do: Ввести любой текст и любые специальные символы в инпут "Телефон"
    - assert: >-
        Текст и специальные символы не вводятся, курсор мигает и находится на
        том же месте
    - do: Ввести 11 любых цифр (от 0 до 9) в инпут "Телефон"
    - assert: >-
        Цифры вводятся корректно, после первой цифры появляется скобка "(",
        после четвёртой цифры появляется скобка ")"
    - do: Ввести ещё одну цифру (от 0 до 9) в инпут "Телефон"
    - assert: 'Цифра не вводится, курсор мигает и находится на том же месте'
    - do: Нажать крестик в правой части инпута "Телефон"
    - assert: >-
        Цифры в инпуте удаляются, остаётся "+" в левой части инпута и крестик в
        правой части инпута
    - do: Нажать ещё раз крестик в правой части инпута "Телефон"
    - assert: >-
        Рамка инпута становится серого цвета, в инпуте пропадают "+" и крестит,
        под инпутом появляется ошибка красного цвета: "Некорректный номер
        телефона"
    - do: >-
        Кликнуть в инпут "Телефон", ввести любые 10 цифр (от 0 до 9) и кликнуть
        вне инпута "Телефон"
    - assert: >-
        Рамка инпута становится серого цвета, в правой части инпута появляется
        крест красного цвета, введенные цифры отображаются в инпуте, под инпутом
        отображается текс с ошибкой красного цвета: "Некорректный номер
        телефона"
    - do: Нажать на крест красного цвета в правой части инпута
    - assert: >-
        Цифры удаляются из инпута, рамка инпута окрашивается в желтый цвет, в
        левой части инпута отображается "+", в правой части инпута крестик
        серого цвета
    - do: Сделать клик в инпут "Email"
    - assert: >-
        Рамка инпута окрашивается в желтый цвет, курсор мигает и находится в
        левой части инпута
    - do: Начать вводить любой текст в инпут "Email"
    - assert: В правой части инпута появляется крестик серого цвета
    - do: Ввести любой текст в инпут "Email" и кликнуть вне инпута
    - assert: >-
        Рамка инпута становится серого цвета, в правой части инпута отображается
        крестик красного цвета, текст отображается в инпуте, под инпутом
        отображается текст с ошибкой красного цвета: "Некорректный email" (в фф
        рамка красная, не надо заводить баг)
    - do: Кликнуть в крестик красного цвета в инпуте "Email"
    - assert: >-
        Введенный ранее текст удаляется, рамка инпута окрашивается в жёлтый
        цвет, курсор мигает и находится в левой части инпута
    - do: >-
        Ввести валидный email в инпут "Email" (например: "test@test.ru") и
        кликнуть вне инпута
    - assert: 'Рамка инпута серого цвета, в инпуте отображается введенный email'
    - do: >-
        Перейти по ссылке "Условиями покупки электронных билетов на автобусы" в
        блоке с контактными данными
    - assert: >-
        В новой вкладке открывается страница "Яндекс Правовые документы" с
        условиями бронирования и приобретения электронных билетов на автобусы
    - do: >-
        Вернуться назад на страницу бронирования. Нажать на ссылку "партнёром" в
        блоке с контактными данными
    - assert: Открывается попап с реквизитами партнёров.
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница:
  - Ввод данных
  - Страница заказа
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Ввод данных
description: |-
  Находимся на странице бронирования рейса:
  1. На главной странице сервиса
  2. Выбрать любые города откуда - куда
  3. Выбрать любую дату
  4. Тап кнопку Найти
  5. Тап Выбрать на любой результат выдачи
specs:
  Проверка страницы бронирования. Блок с данными о пассажирах:
    - do: |-
        Перейти на главную страницу сервиса
        Выбрать любые города откуда - куда, выбрать любую дату
        Нажать "Найти"
    - assert: >-
        На странице присутствует таблица с рейсами, в каждой строке есть кнопка
        "Выбрать"
    - do: Нажать на кнопку "Выбрать"
    - assert: |-
        Открывается страница бронирования
        Скриншот: https://yadi.sk/d/nfoC9qGg_qbzwQ
    - do: Проверить "Блок с данными о пассажирах"
    - assert: |-
        Блок состоит из:
        1. Названия "Укажите пассажиров"
        2. Блока для ввода данных о пассажире:
          - ссылка "Полный тариф" - цена билета в руб. и название "Любое место"
          - ФИО
          - Пол (дропдаун Мужской/Женский, Мужской по умолчанию)
          - Дата рождения (в поле плейсхолдер "дд.мм.гггг")
          - Документ (в поле "Паспорт РФ" по умолчанию)
          - Серия и номер документа (в поле плейсхолдер "1234 123456")
          - Чекбокс "Сохранить данные пассажира для быстрого оформления" (Чекнут изначально), если пользователь авторизован и нет чекбокса если не авторизован
        3. Кнопка "Добавить пассажира"
        https://yadi.sk/i/IPof9kRu-jdjfg
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница:
  - Ввод данных
  - Страница заказа
Сервис: Автобусы. Старый фронт
feature: ЖД
type: Главная
description: ''
specs:
  'ЖД: Страница популярных направлений':
    - do: >-
        Перейти на вкладку ЖД

        В блоке "Популярные ж/д направления" кликнуть по ссылке "Больше популярных направлений"
    - assert: >-
        * Произошел переход на страницу с популярными направлениями

        * На странице есть форма поиска, заголовок "Популярные железнодорожные
        направления"

        * В десктопе есть вкладки со ссылками из разных городов, ниже ссылки на
        поиски
        https://jing.yandex-team.ru/files/shenfeld/2020-04-13_18.55.23-tn1l2.png

        * В таче есть селект для выбора города, ниже ссылки на поиски
        https://jing.yandex-team.ru/files/shenfeld/2020-04-13_18.56.24-pkb41.png
    - do: Переключиться на любой другой город
    - assert: >-
        * Ссылки на поиски изменились - город отправления соответствует
        выбранному
    - do: Кликнуть по любой ссылке на поиск
    - assert: >-
        * Произошел переход на страницу выдачи на все дни, направление
        соответствует выбранному
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Главная
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Кейс не воспроизвести, так как ИМ не умеют делать кассовые возвраты в
  тестинге.

  Кейс нужен только чтобы помнить, как должно быть.

  При необходимости можно попросить разработчиков найти заказ в проде.


  РЖД статус при кассовом возврате может быть либо STRICT_BOARDING_PASS, либо
  REFUNDED.

  - Для STRICT_BOARDING_PASS фронт смотрит на список возвратов, если они есть,
  то считает это кассовым возвратом, если нет, то получением билета в кассе. В
  кейсе рассмотрен этот случай кассового возврата.

  - Для REFUNDED фронт смотрит на refunds.type, если там OFFICE_REFUND, то это
  кассовый возврат. В этом случае все тоже самое, но статус будет "Возврат".
specs:
  'ЖД: Кассовый возврат':
    - do: Перейти на страницу заказа с кассовым возвратом
    - assert: >-
        * Возле всех билетов есть приписка "Выдан посадочный купон"

        * Есть ссылка на чек возврата, нет ссылки на квитанцию возврата

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-04-13_19.10.45-vij2u.png)
manual: true
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: |-
  Кейс для проверки покупки дежурным тестировщиком.
  Реквизиты тестовой карты: 5100003697253468, 12/22, 090
specs:
  'ЖД: Покупка билетов со страховкой, шаг оплаты включен':
    - do: >-
        Перейти на выдачу Москва - Санкт-Петербург через неделю

        Для любого поезда кликнуть по кнопке покупки

        Выбрать 3 пассажиров - 1 взрослого, 1 ребенка от 5 до 10 лет, 1 ребенка
        без места

        Выбрать места

        Нажать на кнопку “Указать пассажиров”

        Заполнить все поля валидными данными

        В поле электронной почты указать почту на @yandex-team.ru

        Нажать по кнопке “Проверить заказ и купить”
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Все данные о поезде и пассажирах соответствуют выбранным
        * В корзине есть чекбокс для добавления страховки
    - do: Нажать на чекбокс
    - assert: '* К итоговой сумме добавилась стоимость страховки'
    - do: |-
        Нажать на кнопку “Ввести карту и оплатить”
        На странице оплаты ввести данные тестовой карты из описания кейса
        Нажать на кнопку “Оплатить”
        На хэппи пейдж нажать на кнопку "Подробнее о заказе"
    - assert: >-
        * Произошел переход на страницу подробного заказа для 3 пассажиров

        * На странице есть кнопка “Скачать билеты и страховку” (в таче просто
        Скачать)

        * На почту пришло письмо о покупке (письмо может прийти в течение
        получаса, так как не будет чека)

        * Стоимость заказа в письме совпадает с итоговой суммой со страницы
        подтверждения (равна сумме за билеты + за страховки)

        * В письме есть блок “Страхование” с текстом “Стоимость страхового
        полиса: … руб. Он включает страхование жизни и здоровья всех пассажиров
        и находится в том же файле, что и посадочный купон.” и ссылкой
        “Подробнее об условиях”

        * Для каждого билета на странице успешной покупки есть пункт Страховка

        * При нажатии на иконку ? рядом с пунктом страховки появляется попап с
        текстом “Страхование жизни и здоровья от несчастных случаев.” и ссылкой
        “Подробнее об условиях.”, которая ведет на правила от Ренессанса

        * Сумма стоимостей страховки всех пассажиров совпадает с общей
        стоимостью на странице подтверждения

        * Для ребенка без места Цена билета и Сервисный сбор равны 0, Стоимость
        страховки равна 40

        * Для остальных билетов стоимость страховки рассчитана в зависимости от
        стоимости билета
    - do: Нажать на кнопку “Скачать билеты и страховку” (в таче просто Скачать)
    - assert: '* Произошло скачивание pdf-файла'
    - do: Открыть чек со страницы заказа
    - assert: >-
        * В чеке 3 позиции “Страхование поездки (страховая премия)”

        * Суммы за страховки и итоговая сумма в чеке совпадают с суммами в
        письме и на странице заказа
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Отели
type: Бронирование
description: >-
  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)

  Для попадания на продовую страницу бронирований нужно сделать запрос в поиске
  Яндекса, например "отель в Москве", далее выбрать отель и кликнуть по
  предложению от Яндекс.Путешествий.
specs:
  'Отели: галка подписки':
    - do: >-
        Перейти на страницу бронирований любого отеля по инструкции из
        подготовки
    - assert: >-
        assert: на странице присутствует блок "Стоимость бронирования"

        assert:  в этом блоке есть галка "Получать рассылку Яндекс.Путешествий"
        по умолчанию выключена
    - do: заполнить форму бронирования любыми валидными данными
    - do: поставить галку рассылки
    - do: 'открыть консоль разработчика (no_autotest), нажать оплатить'
    - assert: >-
        assert: при помощи поиска найти запрос createOrder. В параметрах
        canPostMails: true

        screenshot:
        https://jing.yandex-team.ru/files/tcheremnykh/2020-04-23_16-23-04.png
    - do: 'повторить все предыдущие шаги, галку НЕ ставить'
    - assert: 'assert: в запросе createOrder  в параметрах canPostMails: false'
manual: true
Функциональность: Подписка
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Отели
type: Бронирование
description: >-
  Для генерации события soldout (все номера раскуплены) нужно дернуть ручку
  тестового контекста

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=742&partnerId=PI_TRAVELLINE&occupancy=2&forceAvailability=true&cancellation=CR_NON_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11&getOfferOutcome=OO_SOLD_OUT&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1


  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.
specs:
  (ТЛ) Обработка солдаута при переходе на бронь:
    - do: >-
        Перейти на страницу брони по сгенерированному урлу с заездом-выездом на
        завтра-послезавтра
    - assert: >-
        assert: Вместо страницы бронирования открылась страница с сообщением
        "Все номера такого типа уже забронированы" (пример
        https://jing.yandex-team.ru/files/iliasova/2020-04-24_16.40.55-ksz3k.png)

        | Ниже отображается информация об отеле:

        | Название - Вега Измайлово

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей

        | Название оффера - test

        | Информация про питание

        | Информация про кровати

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера

        | В самом низу блока об отеле расположены две кнопки:

        | Начать новый поиск и Найти номера в отеле
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: |-
        assert: Открылся модал
        | Модал содержит название отеля, фото, карту и описание от партнера
        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
    - do: Кликнуть по кнопке Начать новый поиск
    - assert: >-
        assert: Произошел переход на выдачу отелей из гео-региона бронируемого
        отеля
    - do: Вернуться на предыдущую страницу
    - do: Кликнуть по Найти номера в отеле
    - assert: >-
        assert: Открылась страница отеля Вега Измайлово с теми же параметрами
        дат и гостей
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - hotels-api
  - Blocker
Автор: iliasova
feature: Отели
type: Бронирование
description: >-
  Для генерации события soldout (все номера раскуплены) на этапе создания заказа
  нужно дернуть ручку тестового контекста

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=742&partnerId=PI_TRAVELLINE&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&partiallyRefundRate=50&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SOLD_OUT&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_SUCCESS&priceMismatchRate=1


  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.
specs:
  (ТЛ) Обработка события солдаут при создании брони:
    - do: >-
        Перейти на страницу брони по сгенерированному урлу с заездом-выездом на
        завтра-послезавтра
    - assert: 'assert: Открылась страница бронирования'
    - do: Заполнить данные гостей и контактные данные валидными значениями
    - do: Кликнуть по Оплатить
    - assert: >-
        assert: Появился лоадер с текстом "Создание заказа Создаем заказ и
        готовимся к оплате"

        | Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        | Через какое-то время произошел переход на страницу с сообщением Все
        номера такого типа уже забронированы

        | Ниже отображается информация об отеле:

        | Название - Вега Измайлово

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей - 2

        | Название оффера - test

        | Информация про питание - Завтрак включен

        | Информация про кровати

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера

        | В самом низу блока об отеле расположены две кнопки:

        | Начать новый поиск и Найти номера в отеле
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: |-
        assert: Открылся модал
        | Модал содержит название отеля, фото, карту и описание от партнера
        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
    - do: Кликнуть по кнопке Начать новый поиск
    - assert: >-
        assert: Произошел переход на выдачу отелей из гео-региона бронируемого
        отеля
    - do: Вернуться на предыдущую страницу
    - assert: >-
        assert: Произошел переход на страницу бронирования (особенность
        Тестового Контекста)
    - do: Кликнуть по Оплатить
    - assert: >-
        assert: Произошел переход на страницу с сообщением Все номера такого
        типа уже забронированы
    - do: Кликнуть по Найти номера в отеле
    - assert: >-
        assert: Открылась страница отеля Вега Измайлово с теми же параметрами
        дат и гостей
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
  - Blocker
Автор: iliasova
feature: Авиа
type: Выдача
description: >-
  Як- состояние выдачи, когда нет офферов. Бывает в трех дизайнах:

  1 - Только текст
  https://jing.yandex-team.ru/files/tcheremnykh/2020-04-27_15-03-44.png

  2 - Як с картой (В этот город офферов нет, но есть в соседние города в кеше)
  https://jing.yandex-team.ru/files/tcheremnykh/2020-04-27_15-03-56.png

  3 - Як с динамикой цен (В этот день офферов нет, но есть на соседние даты в
  кеше) https://jing.yandex-team.ru/files/tcheremnykh/2020-04-27_15-04-08.png


  Фильтрояк - состояние выдачи, когда изначально офферы были, но они все скрыты
  жесткой фильтрацией
  https://jing.yandex-team.ru/files/tcheremnykh/2020-04-27_11-56-35.png
specs: {}
manual: true
Функциональность:
  - Фильтры и сортировки
  - Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Окружение:
  - Production
  - Testing
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Обработка ошибки от бэкенда в поиске':
    - do: >-
        Перейти на вкладку ЖД

        Осуществить поиск по любому направлению, например, Москва -
        Санкт-Петербург
    - assert: '* Произошел переход на страницу поиска'
    - do: >-
        Развернуть форму поиска

        Заполнить форму данными для перепоиска (например, поменять дату)

        Открыть инструменты разработчика в браузере, вкладка Network

        Установить оффлайн режим:
        https://jing.yandex-team.ru/files/shenfeld/2020-04-29_17.10.42-1nqf7.png

        Нажать Найти
    - assert: >-
        * Произошел переход на страницу с ошибкой:
        https://jing.yandex-team.ru/files/shenfeld/2020-04-29_17.11.46-gtd0m.png
    - do: |-
        Вернуть режим онлайн в браузере
        Нажать на кнопку Обновить
    - assert: '* Произошел переход на страницу поиска по выбранному направлению и дате'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: ''
specs:
  'ЖД: Обработка ошибок от бэкенда на странице выбора мест':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на любую выдачу, например, Москва - Самара
        Для любого поезда кликнуть по кнопке покупки
    - assert: |-
        * Произошел переход на страницу выбора мест
        * Ошибок нет
    - do: >-
        Вернуться на страницу поиска

        Открыть инструменты разработчика в браузере, вкладка Network

        Установить оффлайн режим:
        https://jing.yandex-team.ru/files/shenfeld/2020-04-29_17.10.42-1nqf7.png

        Нажать на кнопку покупки для этого же поезда
    - assert: >-
        * Произошел переход на страницу выбора мест

        * Вверху страницы есть блок с данными о поезде

        * Отображается ошибка "Билеты недоступны для покупки Попробуйте позже
        ещё раз"

        https://jing.yandex-team.ru/files/shenfeld/2020-04-29_17.19.23-ymj99.png
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: Показываем через 15 минут
specs:
  'ЖД: Черный пирог в поиске':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на любую выдачу, например, Москва - Екатеринбург через неделю
    - assert: '* Открылась страница поиска'
    - do: |-
        Добавить к урлу &testOutdateTimeout=3000
        Перейти по полученной ссылке
    - assert: >-
        * Открылась страница поиска на то же направление и дату

        * Через 3 секунды появилось модальное окно с текстом "Результаты
        устарели Наличие мест и цены на 26 июня по направлению Москва — Нижний
        Новгород могли измениться" и кнопкой "Повторить поиск" (направление и
        дата соответствует выбранной)

        * Страница за окном затемнена
    - do: Нажать "Повторить поиск"
    - assert: '* Произошел переход на страницу поиска на то же направление и дату'
manual: true
Функциональность:
  - Форма поиска
  - Пирог
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: Показываем через 15 минут на выборе мест и через 30 минут на вводе данных
specs:
  'ЖД: Черный пирог на страницах покупки':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на любую выдачу, например, Москва - Казань через месяц
        Для любого поезда кликнуть по кнопке покупки
        Выбрать любое место, нажать Указать пассажиров
    - assert: '* Произошел переход на страницу ввода данных'
    - do: |-
        Добавить к урлу &testOutdateTimeout=3000
        Перейти по полученной ссылке
    - assert: >-
        * Открылась страница ввода данных на то же направление и дату

        * Через 3 секунды появилось модальное окно с текстом “Результаты
        устарели Наличие мест и цены могли измениться” и кнопкой “Выбрать места
        заново”

        * Страница за окном затемнена

        https://jing.yandex-team.ru/files/shenfeld/2020-04-29_17.45.22-godk5.png
    - do: Нажать на "Выбрать места заново"
    - assert: '* Произошел переход на страницу выбора мест для того же поезда'
manual: true
Функциональность:
  - Разное по странице выбора мест
  - Пирог
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: Отели
type: Бронирование
description: |-
  Для тестовой оплаты использовать карту
  Карта для тестовой оплаты тестовой брони: 5100002767155462
  Месяц и год: 12/22
  CVV: 454
specs:
  Бново. Бронь через тестовый контекст:
    - do: >-
        Через тестовый контекст получить ссылку на бронь со следующими
        параметрами:

        | отель Принцесса Элиза 3*

        | заезд-выезд - завтра-послезавтра

        | кол-во гостей - 2

        | политика отмены - бесплатная отмена вплоть до заезда

        | питание - только завтрак

        | имя оффера - test

        | цена 11 000
    - do: Перейти по ссылке брони
    - assert: >-
        assert: Открылась страница бронирования отеля Принцесса Элиза 3*

        | Параметры бронирования на странице соответствуют заданным на
        предыдущем шаге
    - do: 'Ввести валидные данные гостей, контактов'
    - do: Нажать Оплатить
    - assert: >-
        assert: Появился лоадер с текстом "Создание заказа Создаем заказ и
        готовимся к оплате"

        | Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        | Через какое-то время произошел переход на страницу оплаты

        |  На странице оплаты отсутствует хэдэр и футер

        | Сумма к оплате на странице оплаты совпадает с суммой при бронировании

        | Название гостиницы верное

        | Даты совпадают с выбранными, количество гостей - 2:

        ![image](https://jing.yandex-team.ru/files/rifat-k/2019-10-24_18-44-40.png)
    - do: Выбрать Новая карта и ввести данные карты из описания кейса
    - do: Кликнуть Оплатить
    - assert: >-
        assert: Вместо блока ввода данных карты появился лоадер с текстом
        "Платеж производится. Пожалуйста, подождите"

        | Далее на всю страницу появился лоадер с текстом "Оплата заказа
        Оплачиваем заказ и готовим выписку", все элементы на странице
        задизейблены

        | Через какое-то время текст поменялся на "Загрузка заказа Загружаем
        подробную информацию о заказе"

        | Далее произошел переход на хэппи пейдж
    - do: Кликнуть Подробнее о заказе
    - assert: >-
        | В блоке "Контактная информация" указаны почта и телефон, которые
        вводили ранее

        | Сумма "Стоимость отеля" совпадает с суммой на шаге бронирования

        | Даты заезда и выезда, количество ночей, данные гостей, информация о
        бесплатной отмене, тип размещения, тип питания, тип кроватей совпадают с
        информацией на шаге бронирования
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: iliasova
feature: Отели
type: ''
description: ''
specs:
  (Bnovo) Обработка солдаута при переходе на бронь:
    - do: Перейти на страницу брони по сгенерированному урлу
    - assert: >-
        assert: Вместо страницы бронирования открылась страница с сообщением
        "Все номера такого типа уже забронированы" (пример
        https://jing.yandex-team.ru/files/iliasova/2020-04-24_16.40.55-ksz3k.png)

        | Ниже отображается информация об отеле:

        | Название - Принцесса Элиза

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей

        | Название оффера - test

        | Информация про питание

        | Информация про кровати

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера

        | В самом низу блока об отеле расположены две кнопки:

        | Начать новый поиск и Найти номера в отеле
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: |-
        assert: Открылся модал
        | Модал содержит название отеля, фото, карту и описание от партнера
        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
    - do: Кликнуть по кнопке Начать новый поиск
    - assert: >-
        assert: Произошел переход на выдачу отелей из гео-региона бронируемого
        отеля
    - do: Вернуться на предыдущую страницу
    - do: Кликнуть по Найти номера в отеле
    - assert: >-
        assert: Открылась страница отеля Принцесса Элиза с теми же параметрами
        дат и гостей
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для генерации события soldout (все номера раскуплены) на этапе создания заказа
  нужно дернуть ручку тестового контекста

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=1024&partnerId=PI_BNOVO&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SOLD_OUT&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1


  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.
specs:
  (Bnovo) Обработка события солдаут при создании брони:
    - do: >-
        Перейти на страницу брони по сгенерированному урлу с заездом-выездом на
        завтра-послезавтра
    - assert: 'assert: Открылась страница бронирования'
    - do: Заполнить данные гостей и контактные данные валидными значениями
    - do: Кликнуть по Оплатить
    - assert: >-
        assert: Появился лоадер с текстом "Создание заказа Создаем заказ и
        готовимся к оплате"

        | Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        | Через какое-то время произошел переход на страницу с сообщением Все
        номера такого типа уже забронированы

        | Ниже отображается информация об отеле:

        | Название - Принцесса Элиза

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей - 2

        | Название оффера - test

        | Информация про питание - Завтрак включен

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера

        | В самом низу блока об отеле расположены две кнопки:

        | Начать новый поиск и Найти номера в отеле
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: |-
        assert: Открылся модал
        | Модал содержит название отеля, фото, карту и описание от партнера
        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
    - do: Кликнуть по кнопке Начать новый поиск
    - assert: >-
        assert: Произошел переход на выдачу отелей из гео-региона бронируемого
        отеля
    - do: Вернуться на предыдущую страницу
    - do: Кликнуть по Найти номера в отеле
    - assert: >-
        assert: Открылась страница с сообщением "Вы ищете номера в отеле
        Принцесса Элиза c 25 по 26 апреля 2020 года для двоих взрослых" (даты и
        кол-во гостей должны соответствовать актуальным для кейса)

        | Через некоторое время произошел переход на страницу отеля на серпе
        https://yandex.ru/profile/......
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
Автор: iliasova
feature: Отели
type: Бронирование
description: >-
  Для генерации ошибки  нужно дернуть ручку тестового контекста

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=742&partnerId=PI_TRAVELLINE&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_NOT_FOUND&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1


  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.


  Для тестовой оплаты использовать карту

  Карта для тестовой оплаты тестовой брони: 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  (ТЛ) Обработка ошибки при подтверждении брони:
    - do: >-
        Перейти на страницу брони по сгенерированному урлу с заездом-выездом на
        завтра-послезавтра
    - assert: 'assert: Открылась страница бронирования'
    - do: Заполнить данные гостей и контактные данные валидными значениями
    - do: Кликнуть по Оплатить
    - assert: >-
        assert: Появился лоадер с текстом "Создание заказа Создаем заказ и
        готовимся к оплате"

        | Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        | Через какое-то время произошел переход на страницу оплаты
    - do: Выбрать Новая карта и ввести данные карты из описания кейса
    - do: Кликнуть Оплатить
    - assert: >-
        assert: Вместо блока ввода данных карты появился лоадер с текстом
        “Платеж производится. Пожалуйста, подождите”

        | Далее на всю страницу появился лоадер с текстом “Оплата заказа
        Оплачиваем заказ и готовим выписку”, все элементы на странице
        задизейблены

        | Далее произошел переход на страницу ошибки при бронировании

        | Заголовок ошибки Забронировать номер не получилось. Деньги вернутся в
        течение часа

        | Ниже информация для пользователя о том, куда обратиться:

        | Ссылка на поддержку
        https://yandex.ru/support/travel/troubleshooting.html

        | Указан номер заказа в формате YA-XXXX-XXXX-XXXX

        | Ниже отображается информация об отеле:

        | Название - Вега Измайлово

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей - 2

        | Название оффера - test

        | Информация про питание - завтрак включен

        | Информация про кровати

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера

        | В самом низу блока об отеле расположены две кнопки:

        | Начать новый поиск и Найти номера в отеле
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: |-
        assert: Открылся модал
        | Модал содержит название отеля, фото, карту и описание от партнера
        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
    - do: Кликнуть по кнопке Начать новый поиск
    - assert: >-
        assert: Произошел переход на выдачу отелей из гео-региона бронируемого
        отеля
    - do: Вернуться на предыдущую страницу
    - do: Кликнуть по Найти номера в отеле
    - assert: >-
        assert: Открылась страница отеля Вега Измайлово с теми же параметрами
        дат и гостей
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
  - Blocker
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для генерации ошибки подтверждения брони нужно дернуть ручку тестового
  контекста

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=1024&partnerId=PI_BNOVO&checkinDate=2020-06-20&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_NOT_FOUND&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1


  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.

  Для тестовой оплаты использовать карту

  Карта для тестовой оплаты тестовой брони: 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  (Bnovo) Обработка ошибки при подтверждении брони:
    - do: >-
        Перейти на страницу брони по сгенерированному урлу с заездом-выездом на
        завтра-послезавтра
    - assert: 'assert: Открылась страница бронирования'
    - do: Заполнить данные гостей и контактные данные валидными значениями
    - do: Кликнуть по Оплатить
    - assert: >-
        assert: Появился лоадер с текстом "Создание заказа Создаем заказ и
        готовимся к оплате"

        | Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        | Через какое-то время произошел переход на страницу оплаты
    - do: Выбрать Новая карта и ввести данные карты из описания кейса
    - do: Кликнуть Оплатить
    - assert: >-
        assert: Вместо блока ввода данных карты появился лоадер с текстом
        “Платеж производится. Пожалуйста, подождите”

        | Далее на всю страницу появился лоадер с текстом “Оплата заказа
        Оплачиваем заказ и готовим выписку”, все элементы на странице
        задизейблены

        | Далее произошел переход на страницу ошибки при бронировании

        | Заголовок ошибки Забронировать номер не получилось. Деньги вернутся в
        течение часа

        | Ниже информация для пользователя о том, куда обратиться:

        | Ссылка на поддержку
        https://yandex.ru/support/travel/troubleshooting.html

        | Указан номер заказа в формате YA-XXXX-XXXX-XXXX

        | Ниже отображается информация об отеле:

        | Название - Принцесса Элиза

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей - 2

        | Название оффера - test

        | Информация про питание - завтрак включен

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера

        | В самом низу блока об отеле расположены две кнопки:

        | Начать новый поиск и Найти номера в отеле
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: |-
        assert: Открылся модал
        | Модал содержит название отеля, фото, карту и описание от партнера
        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
    - do: Кликнуть по кнопке Начать новый поиск
    - assert: >-
        assert: Произошел переход на выдачу отелей из гео-региона бронируемого
        отеля
    - do: Вернуться на предыдущую страницу
    - do: Кликнуть по Найти номера в отеле
    - assert: >-
        assert: Открылась страница с сообщением "Вы ищете номера в отеле
        Принцесса Элиза c 25 по 26 апреля 2020 года для двоих взрослых" (даты и
        кол-во гостей должны соответствовать актуальным для кейса)

        | Через некоторое время произошел переход на страницу отеля на серпе
        https://yandex.ru/profile/......
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для генерации ошибки нужно дернуть ручку тестового контекста

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=742&partnerId=PI_TRAVELLINE&occupancy=2&forceAvailability=true&cancellation=CR_PARTIALLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&partiallyRefundRate=50&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_UNEXPECTED_PENALTY&priceMismatchRate=2


  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.


  Для тестовой оплаты использовать карту

  Карта для тестовой оплаты тестовой брони: 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  (ТЛ) Обработка ошибки при возврате:
    - do: >-
        Забронировать заказ по ссылке из описания с заездом-выездом на
        завтра-послезавтра
    - assert: |-
        assert: Произошел переход на хэппи пейдж
        assert: На странице есть кнопка Отменить бронирование
        | Кнопка кликабельна
    - do: Кликнуть по кнопке Отменить бронирование
    - do: В раскрывшемся попапе кликнуть Отменить бронирование
    - assert: >-
        assert: Появился лоадер с текстом “Загрузка заказа Загружаем подробную
        информацию о заказе”

        | Далее открылась страница ошибки при возврате

        | Заголовок ошибки Не получилось отменить бронирование

        | Далее указан номер поддержки и номер заказа в формате
        YA-XXXX-XXXX-XXXX

        | Ниже отображается информация об отеле:

        | Название - Вега Измайлово

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей - 2

        | Название оффера - test

        | Информация про питание - Завтрак включен

        | Информация про кровати

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: |-
        assert: Открылся модал
        | Модал содержит название отеля, фото, карту и описание от партнера
        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
  - Blocker
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для генерации ошибки нужно дернуть ручку тестового контекста

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=1024&partnerId=PI_BNOVO&checkinDate=2020-06-20&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_UNEXPECTED_PENALTY&priceMismatchRate=1.1


  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.

  Для тестовой оплаты использовать карту

  Карта для тестовой оплаты тестовой брони: 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  (Bnovo) Обработка ошибки при возврате:
    - do: Забронировать заказ по ссылке из описания
    - assert: |-
        assert: Произошел переход на хэппи пейдж
        assert: На странице есть кнопка Отменить бронирование
        | Кнопка кликабельна
    - do: Кликнуть по кнопке Отменить бронирование
    - do: В раскрывшемся попапе кликнуть Отменить бронирование
    - assert: >-
        assert: Появился лоадер с текстом “Загрузка заказа Загружаем подробную
        информацию о заказе”

        | Далее открылась страница ошибки при возврате

        | Заголовок ошибки Не получилось отменить бронирование

        | Далее указан номер поддержки и номер заказа в формате
        YA-XXXX-XXXX-XXXX
manual: true
Устройство: Десктоп
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Автор: iliasova
feature: ЖД
type: Подтверждение
description: >-
  Описание логики (не для асессоров):

  По требованию партнера отправляем контакты пассажиров для уведомлений об
  изменении расписания.

  В приоритете поля для отправки контактов на вводе данных - отправляем их.

  Если поля не заполняли, и есть контакты для пассажира в ЗКП, отправляем их
  (независимо от чекбокса "Использовать для всех пассажиров в случае отмены или
  переноса поезда")

  Если пассажир один, или установлен чекбокс, для всех пассажиров из заказа
  отправляем данные из заказа (кроме тех пассажиров, у кого есть данные в ЗКП -
  тогда отправляем их).

  Незалогинены.

  Перейти на вкладку ЖД, выбрать любое направление и поезд, перейти по кнопке
  покупки.
specs:
  'ЖД: Передача контактных данных партнеру из полей на вводе данных':
    - do: >-
        На странице выбора мест установить 2 взрослых пассажиров, 1 ребенка с
        местом и 1 ребенка без места

        Выбрать любые места на схеме вагона

        Нажать Указать пассажиров
    - assert: >-
        * Произошел переход на страницу ввода данных

        * Внизу страницы по умолчанию установлен чекбокс "Использовать для всех
        пассажиров в случае отмены или переноса поезда"
    - do: Снять чекбокс уведомлений под контактной информацией
    - assert: >-
        * Развернулись поля ввода

        * Заголовками полей ввода являются названия пассажиров ("1. Взрослый",
        итд)

        * Если какие-то поля ФИО на странице ввода данных уже были
        предзаполнены, то отображается это ФИО

        * Для детей поля ввода контактов не отображаются

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-05-21_18.52.46-zdg2o.png)
    - do: >-
        Заполнить все поля в форме выше валидными данными (кроме последних двух
        полей для отправки уведомлений)
    - assert: >-
        * ФИО взрослых пассажиров подставились в заголовки полей контактных
        данных
    - do: |-
        Заполнить первое поле любой валидной почтой
        Заполнить второе поле любым валидным телефоном
        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Ошибок нет
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Необходимо авторизоваться. Можно использовать учетную запись:
  vladlen@yandex.ru password: v12345678


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)


  Перейти в ЛК (та же иконка в правом верхнем углу)

  Перейти в раздел Пассажиры

  Любому из пассажиров добавить почту и телефон, установить галку согласия

  Любому другому пассажиру добавить только телефон, установить галку согласия

  https://jing.yandex-team.ru/files/shenfeld/2020-03-25_18.17.41-5xl5i.png
specs:
  'ЖД: Подстановка контактов пассажиров в поля для уведомлений':
    - do: Перейти на вкладку ЖД
    - do: |-
        Выбрать любое направление
        Выбрать любой поезд и нажать на кнопку покупки
        Установить 2 взрослых пассажиров
        Выбрать любые два места на схеме вагона
        Нажать Указать пассажиров
    - assert: >-
        * Произошел переход на страницу ввода данных

        * Внизу страницы по умолчанию установлен чекбокс "Использовать для всех
        пассажиров в случае отмены или переноса поезда"
    - do: Снять чекбокс
    - assert: '* Появились два поля для ввода контактов для уведомлений'
    - do: >-
        Выбрать из интентов для первого взрослого того пассажира, которому
        добавили почту и телефон в ЛК, а для второго - того, кому добавили
        только телефон
    - assert: >-
        * Данные пассажиров подставились в поля (могут подставиться не все, если
        не проходят валидацию - тогда дозаполнить)

        * Для пассажира с почтой и телефоном в поля с контактами для уведомлений
        подставилась почта

        * Для пассажира с телефоном в поля с контактами для уведомлений
        подставился телефон
    - do: Нажать Проверить заказ и купить
    - assert: '* Произошел переход на страницу подтверждения заказа'
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Для одного пассажира не просим вводить контакты для отправки уведомлений -
  передаем контакты из ЗКП, если там нет, то из заказа.
specs:
  'ЖД: Галка согласия на отправку уведомлений отсутствует для 1 пассажира':
    - do: |-
        Перейти на вкладку ЖД
        Выбрать любое направление
        Выбрать любой поезд и нажать на кнопку покупки
        Выбрать любое место на схеме вагона
        Нажать Указать пассажиров
    - assert: >-
        * Произошел переход на страницу ввода данных

        * Внизу страницы под блоком с контактами нет чекбокса "Использовать для
        всех пассажиров в случае отмены или переноса поезда"
    - do: |-
        Заполнить поля валидными данными
        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Ошибок нет
    - do: |-
        Вернуться на выбор мест
        Выбрать 1 взрослого пассажира, 1 ребенка с местом и 1 ребенка без места
        Выбрать места
        Нажать Указать пассажиров
    - assert: >-
        * Произошел переход на страницу ввода данных

        * Внизу страницы под блоком с контактами нет чекбокса “Использовать для
        всех пассажиров в случае отмены или переноса поезда”
    - do: |-
        Заполнить поля валидными данными
        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Ошибок нет
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: ''
description: ''
specs: {}
manual: true
Сервис: Отели
feature: Отели
type: Бронирование
description: >-
  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Тач. Модальное окно с описанием от партнера на странице бронирования отеля:
    - do: >-
        Перейти на страницу бронирования любого отеля по инструкции из
        подготовки
    - assert: Открылась страница бронирования
    - do: Кликнуть по названию отеля
    - assert: >-
        * Открылось модальное окно с описанием отеля

        * Есть обязательная информация: название, адрес

        * Необязательная (зависит от отеля) - карта с указанием расположения
        отеля, фото отеля, полная информация о расположении, размещении,
        условиях и услугах
    - do: >-
        Пролистать до конца всю информацию в модальном окне

        При наличии ссылки "Все особенности отеля" кликнуть на нее (наличие
        ссылки зависит от количества особенностей, предлагаемых отелем)
    - assert: >-
        * Открылся полный список особенностей

        * Ссылка пропала

        * Свернуть список больше невозможно

        * В самом конце окна есть информация, откуда предоставлены данные об
        отеле (независимо от наличия ссылки про особенности и клика на нее)
    - do: >-
        Свайпать влево в области фото (не карты!), пока не появится следующее
        фото
    - assert: '* Появилось второе фото'
    - do: Полистать таким способом вправо и влево
    - assert: '* Фото перемещаются соответственно направлению'
    - do: Пролистать до конца фотографии
    - assert: |-
        * Отображается одно из фото
        * Возможности листать вперед нет
        * Можно свайпать влево
    - do: Кликнуть по кнопке закрытия
    - assert: '* Окно закрылось'
    - do: >-
        Снова открыть модальное окно с описанием отеля

        Кликнуть по области вне окна (если модал открыт на все окно, кликнуть по
        крестику)
    - assert: '* Окно закрылось'
    - do: |-
        Повторить пункты 1-8, вместо названия отеля нажать на
        * ссылку "Описание отеля от партнера"
        * адрес отеля
    - assert: Ожидаемый результат должен полностью соответствовать описанным в п.1-8
manual: true
Функциональность: Бронирование
Устройство: Тач
Страница: Бронирование
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: iliasova
feature: Авиа
type: Страница покупки
description: ''
specs:
  'Авиа: Проверка всплывающего окна для тарифов на странице покупки':
    - do: открыть главную страницу путешествий, вкладка Авиабилеты
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи.
    - do: |-
        Открыть фильтр Авиакомпании.
        Поставить чекбокс напротив S7 Airlines
    - assert: На выдаче остались только предложения от авиакомпании S7.
    - do: Кликнуть по сниппету первого предложения (не по кнопке Купить и не по багажной информации)
    - assert: >-
        Открылась страница покупки для выбранного предложения. Для выбранного
        рейса отображается тарифная информация:

        Десктоп https://jing.yandex-team.ru/files/gouken67/Тарифная%20информация.png
        Тач https://jing.yandex-team.ru/files/kuklina/2022-06-27_16-38-55.png

        **ВАЖНО:** Название тарифа может быть любым - не обязательно точно
        такое, как на скриншоте. Но если нет названия тарифа совсем - вернитесь
        на выдачу и найдите такой вариант, где тариф будет.
    - do: |-
        Для десктопа: Кликнуть по иконке (?) возле названия тарифа.
        Для тачей: Кликнуть по раскрывающей стрелочке возле названия тарифа
    - assert: Появилось окно/шторка с информацией о тарифе.
    - do: Кликнуть вне появившегося окна/шторки.
    - assert: Окно закрылось.
    - do: |-
        Открыть окно ещё раз.
        Для десктопа: Кликнуть по крестику в верхнем углу.
        Для тачей: Закрыть "шторку", потянув её вниз.
    - assert: Окно открылось и закрылось вновь.
    - do: |-
        Для десктопа: Открыть окно ещё раз.
        Кликнуть по ссылке "Правила применения тарифа Авиакомпании".
    - assert: Открылась новая страница, ведущая на правила применения тарифа.
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница покупки
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
Автор: gouken67
feature: Автобусы. Старый фронт
type: Главная
description: >-
  Проверка корректности загрузки главной страницы и ее элементов в портале
  тревел
specs:
  Автобусы. Общий вид главной страницы:
    - do: Зайти на главную страницу автобусов в портале тревел
    - assert: |-
        На странице есть
        - форма поиска
        - seo блок “Билеты на автобусы по России и СНГ”
        - seo блок “Как купить билеты на Яндекс.Путешествиях”
    - do: >-
        Только десктоп: Выполнить поиск Москва- Санкт-Петербург, после получения
        выдачи вернуться на главную страницу
    - assert: 'Только десктоп: Под блоком поиска появился блок "недавние поиски"'
    - do: >-
        Установить в тюне (https://yandex.ru/tune) Екатеринбург (Свердловская
        область, Россия), обновить главную Путешествий, раздел "Автобусы"
    - assert: >-
        В форме поиска город отправления - Екатеринбург

        SEO блок “Билеты на автобусы по России и СНГ” состоит из трех частей
          - первая часть состоит из картинки, заголовка "Электронные билеты на автобус" и текста "Выходить из дома не обязательно: билеты на автобус можно купить онлайн"
          - вторая часть состоит из картинки, заголовка "Своевременная информация о возврате" и текста "С условиями возврата денег за билеты можно ознакомиться ещё до покупки"
          - третья часть состоит из картинки, заголовка "Поддержка контакт-центра" и текста
        "Вы всегда можете обратиться за помощью через эту форму или по телефону
        8 800 511-71-04". Ссылка на форму ведет на
        https://yandex.ru/support/travel/troubleshooting.html#feedback__bus
    - do: >-
        Установить в тюне (https://yandex.ru/tune) Москва, обновить главную
        Путешествий, раздел “Автобусы”
    - assert: >-
        В форме поиска город отправления - Москва

        SEO блок “Билеты на автобусы по России и СНГ” состоит из трех частей, в
        третьей части проверить текст, сменился номер телефона “Вы всегда можете
        обратиться за помощью через эту форму или по телефону 8 495 780-41-85”
manual: true
Устройство:
  - Тач
  - Десктоп
Сервис: Автобусы. Старый фронт
Функциональность: работа с главной страницей
Страница: Главная
Тестирование асессорами: Нет
Окружение: Testing
Tag: Blocker
feature: Автобусы. Старый фронт
type: Поиск
description: Проверка корретности загрузки страницы поиска и ее элементов
specs:
  Автобусы. Общий вид выдачи:
    - do: |-
        Перейти по url на выдачу
                      Откуда: Москва
                      Куда: Воронеж
        Когда: завтра
    - assert: >-
        Открылась выдача, поиск произошел на дату "Завтра"

        Выдача соответствует параметрам поиска: откуда, куда, дата отбытия

        На странице появился блок с фильтрами и блок сортировки выдачи.

        Блок поиска свернулся в компактный, состоит из пунктов отправления,
        прибытия, даты и лупы.

        Блок сниппета состоит из двух частей, отделенных разделителем

        в левой части

        - время отправления, дата отправления, место отправления

        - время прибытия, дата прибытия, место прибытия

        - время в пути в часах и минутах или только в часах, название компании
        перевозчика

        в правой части

        - стоимость в рублях с приставкой "от"

        - если есть указание количества мест (зависит от партнера) - проверяем
        "{число} мест/места". Если нет - пропускаем проверку

        - кнопка "Выбрать места"
manual: true
Устройство: Десктоп
Сервис: Автобусы. Старый фронт
Функциональность: 'Поиск, общий вид выдачи'
Страница: Поиск
Тестирование асессорами: Нет
Окружение: Testing
Tag: Blocker
feature: Автобусы. Старый фронт
type: Покупка
description: >-
  Проверка корретности загрузки страницы поиска и ее элементов, бронирование
  билета
specs:
  Автобусы. Бронирование незалогин:
    - do: |-
        Открыть главную страницу путешествий, вкладка Автобусы
        Пользователь не залогинен
        Открыть произвольную выдачу, например, Москва - Рязань на завтра
        На произвольном сниппете нажать кнопку выбора мест
    - assert: >-
        Открылась страница покупки билета.

        Состоит из

        - лого путешествий, блока поиска, кнопки Войти

        - блока с информацией о рейсе с указанием время и место отправления и
        прибытия, инфо о рейсе и транспорте, указанием что время отправления и
        прибытия местное и кнопкой-ссылкой на Прочие условия

        - блока "Укажите пассажиров" с кнопками о тарифе и месте, информацией о
        фио, пол, дате рождения, документе с серией-номером и кнопкой добавления
        багажа

        - блока "Укажите контактные данные"

        - блока "К оплате" с указанием суммы билета, информацией о величине
        сервисного сбора и кнопкой "Забронировать и оплатить"
    - do: >-
        Задать данные пассажиров (произвольные данные, удовлетворяющие
        валидации), задать контактную информацию (произвольные данные,
        удовлетворяющие валидации). (Все введенные данные необходимо
        заполнить).

        Нажать кнопку "Забронировать и оплатить", под ней информация о доступных
        способах оплаты.
    - assert: >-
        Открывается окно Оплата картой.

        В окне находится

        - блок "Ваши карты" с кнопкой "Новая карта"

        - блок с данными карты, пустой, поля для ввода номера карты с кнопкой
        "Вставить", срока действия и CVC/CVV

        - блок текста "Защищено сертификатом SSL Сайт отвечает стандартам
        безопасности Visa и Mastercard"

        - таймер бронирования (15 минут) на оплату заказа

        - чекбокс для сохранения карты

        - сумма покупки и кнопка "Оплатить"
    - do: Закрыть окно оплаты
    - assert: >-
        На странице появился блок "Билеты ожидают оплату", состоит из

        - номера заказа

        - блок с информацией о билете, место пассажира, статус оплаты, ФИО и
        данные о документе, стоимость билета.

        Кнопка “Забронировать и оплатить” поменялась и стала кнопкой "Оплатить",
        под ней информация о доступных способах оплаты.
    - do: |-
        Открыть главную страницу путешествий, вкладка Автобусы
        Залогиниться пользователем
        Открыть произвольную выдачу, например, Москва - Рязань на завтра
        На произвольном сниппете нажать кнопку “Выбрать места”
    - assert: >-
        Открылась страница покупки билета.

        В хедере появился логин пользователя и кнопка "Мои билеты"

        Контактные данные заполнены имеющимися данными из профиля пользователя
        (телефон, емейл)

        Данные о пассажире заполнились данными из ЗКП.
    - do: Очистить поле ФИО или кликнуть по крестику в этом поле.
    - assert: Открывается список пассажиров из ЗКП в дропдауне
    - do: Выбрать любого другого пассажира
    - assert: Все поля с информацией о пассажира заполнились данными нового пассажира
    - do: Кликнуть по кнопке "Мои билеты"
    - assert: >-
        Открылась страница "Мои заказы"

        На странице отображаются заказы, которые пользователь бронировал.

        Блок состоит из

        - заголовок "Мои заказы", чекбокс "Показать аннулированные"

        - номера заказа, даты оплаты, кнопки "Детали заказа"

        - инфо о времени и дате отправления

        - инфо о времени, дате и месте прибытия

        - инфо о номере места в автобусе, статусе билета (Подтвержден, Ожидает
        оплаты, Возвращено, Аннулировано), ФИО, документе и стоимости билета
manual: true
Устройство: Десктоп
Сервис: Автобусы. Старый фронт
Страница:
  - Покупка
  - Страница заказа
  - Подтверждение
Тестирование асессорами: Нет
Окружение: Testing
feature: Автобусы. Старый фронт
type: Покупка
description: >-
  Авторизоваться на сервисе и забронировать любой билет. Запомнить данные
  бронирования.

  Вернуться на страницу сервиса
specs:
  Отображение брони в сервисе и в почте:
    - do: Тап Мои билеты в шапке сервиса
    - assert: |-
        Открыта страница Мои заказы.

        (иконка билетов может сливаться с фоном, не надо заводить на это баг)
    - do: Проверить наличие и корректность брони из предусловия.
    - assert: 'Бронь отображается, данные корректны.'
    - do: 'Перейти в почту, указанную при бронировании.'
    - assert: >-
        На почте есть письмо, подтверждающее успешное бронирование, данные
        бронирования корректны.
manual: true
Функциональность: Бронирование
Устройство: Тач
Страница:
  - Покупка
  - Страница заказа
  - Подтверждение
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Ввод данных
description: >-
  _При бронировании и добавлении более одного пассажира крестик закрытия окна
  может накладываться на "любое место", на этот баг не надо заводить кейс._


  _В поле номера иностранного документа можно вводить любые символы, не надо
  заводить на это кейс._

  Перейти к бронированию места на любом доступном рейсе.
specs:
  Заполнение данных на странице бронирования:
    - do: >-
        Заполнить поля ФИО, Дата рождения, Серия и номер документа невалидными
        данными.
    - assert: >-
        В поля Дата рождения, Серия и номер документа невозможно ввести буквы
        или количество цифр, превышающее формат.

        После того, как из поля с невалидными данными пропадает фокус, под полем
        появляется красная подсказка, в полях ФИО, Дата рождения - красный
        крестик.
    - do: 'Проскроллить страницу вниз, нажать Забронировать и оплатить.'
    - assert: >-
        Страница подскролливается к полям ввода данных. Под полями с невалидными
        данными есть подсказки.
    - do: Очистить заполненные поля и повторить шаг 2.
    - assert: Результат соответствует ожиданию.
    - do: Нажать на кнопку Добавить пассажира
    - assert: 'Появляется вторая форма для ввода данных, аналогичная первой'
    - do: >-
        Заполнить поля двух форм валидными данными. Нажать  Забронировать и
        оплатить.
    - assert: >-
        Переход к странице Оплата билетов с формой для ввода данных банковской
        карты. Стоимость та же, что на странице бронирования.
manual: true
Функциональность: Бронирование
Устройство: Тач
Страница:
  - Ввод данных
  - Покупка
  - Страница заказа
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Бронирование
description: >-
  *Выпадушка типов билетов или тарифа может быть сдвинута на пиксель вправо.
  Видно бордер элемента формы под выпадушкой. Не надо заводить на это баг*

  Находимся на странице автобусов портала путешествий
specs:
  Страница бронирования.:
    - do: >-
        Перейти на страницу бронирования. Для этого тапнуть по результатам
        поиска для любого направления.
    - assert: Находимся на странице бронирования.
    - do: Проверить шапку страницы.
    - assert: >-
        В шапке есть:

        - Яндекс Путешествия слева;

        - Кнопка Войти справа (если не авторизованы) / Иконка истории покупок и
        аватар авторизованного пользователя (если авторизованы);

        - Ниже стрелка назад и заглавие страницы "Бронирование".

        https://yadi.sk/i/yXQbSa28ko7lgw
    - do: Проверить блок информации о рейсе.
    - assert: >-
        - Нитка со станцией отправления (Время отправления, дата отправления,
        город, вокзал) и станцией прибытия (Время отправления, дата отправления,
        город, вокзал);

        - Время в пути;

        - Оценка отзыв на транспортную компанию; _(есть не всегда)_

        - Текст "Время отправления и прибытия местное";

        - Ссылка "О рейсе".

        https://yadi.sk/i/S4bKAtW6dPTvwg
    - do: Проверить блок "Укажите пассажиров".
    - assert: >-
        - Название блока: "Укажите пассажиров";

        - Выпадушка выбора типа билета (Полный/ детский) + сумма за билет;

        - Правее кнопка "Выбрать место";

        - Инпут "ФИО";

        - Выпадушка "Пол";

        - Инпут "Дата рождения" с placeholder дд.мм.гггг;

        - Выпадушка "Документ";

        - Далее инпут "Серия и номер документа" для Паспорт РФ. (Для других
        вариантов документов будут свои инпуты)'

        - Чекбокс "Сохранять данные пассажира для быстрого оформления";

        - Кнопка "Добавить пассажира".

        https://yadi.sk/i/QxJOz2NeFsrQDg
    - do: Проверить блок "Укажите контактные данные".
    - assert: >-
        - Название блока "Укажите контактные данные";

        - Инпут "Телефон"

        - Инпут "Email"

        - Текст "Нажимая кнопку перехода к оплате заказа, вы соглашаетесь с"
        гипертекст "Условиями покупки электронных билетов на автобусы";

        - Текст "Данные предоставлены" гипертекст "партнером.";

        https://yadi.sk/i/J26I2gkcvNQXDQ
    - do: Проверить блок "К оплате".
    - assert: >-
        - Текст "К оплате" и итоговая сумма за билеты болдом;

        - Текст "Включая сервисные сборы" и сумма сервисных сборов;

        - Желтая кнопка "Забронировать и оплатить";

        - Текст "Оплата банковскими картами" и изображения карт, доступных для
        оплаты.

        https://yadi.sk/i/apaSgYkP9hI-5Q
    - do: Проверить подвал страницы.
    - assert: |-
        - Ссылка "Условие покупки билетов на автобусы";
        - Ссылка "Пользовательское соглашение";
        - Ссылка "Обратная связь";
        - Ссылка "Помощь";
        - Товарный знак <<Яндекс>>
        https://yadi.sk/i/hquz2mL4cp443A
manual: true
Функциональность: Бронирование
Устройство: Тач
Страница:
  - Бронирование
  - Страница заказа
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: ''
description: Пользователь не авторизован на сервисе
specs:
  Поиск и переход в рейс для бронирования:
    - do: Перейти на страницу автобусов портала путешествий
    - assert: >-
        Открыта главная страница сервиса Яндекс.Путешествия, в поле "Откуда"
        указан город текущего местонахождения, поле "Куда" пустое, в поле даты :
        текущая дата
    - do: >-
        Тапнуть на кнопку "Войти" в правом верхнем углу и авторизоваться в
        аккаунт-менеджере
    - assert: Происходит авторизация и возврат на главную страницу
    - do: Тапнуть в поле "Откуда"
    - assert: >-
        Открывается попап, сверху текстовое поле с городом, ниже может быть
        саджест, клавиатура поднята
    - do: >-
        Очистить текстовое поле тапом на кнопку "Назад" на клавиатуре, ввести
        название любого города отправления и тапнуть на поиск/ввод на клавиатуре
    - assert: >-
        Попап закрывается, открыта главная страница, в поле "Откуда" введено
        название города
    - do: >-
        Тапнуть в поле "Куда" и повторить шаг 4 введя название любого города
        прибытия
    - assert: В поле "Куда" введено название города
    - do: >-
        Тапнуть в любое место поля с датой, в открывшемся попапе установить
        любую дату
    - assert: Выбранная дата установлена
    - do: >-
        Снова тапнуть в поле "Откуда", повторить шаг 4, введя город из саджеста
        после ввода первых букв любого города отправления
    - assert: 'Попап закрывается, в поле "Откуда" введено название города'
    - do: Повторить предыдущий шаг для поля "Куда"
    - assert: 'Попап закрывается, в поле "Откуда" введено название города'
    - do: Нажать на желтую кнопку "Найти" ниже блока "Откуда-Куда"
    - assert: >-
        Открывается страница автобусных рейсов для выбранного направления. Если
        рейсов нет, открывается заглушка, в этом случае сделать поиск по другим
        направлениям.
    - do: Тапнуть на любой сниппет на выдаче
    - assert: Происходит переход на страницу "Бронирование"
manual: true
Функциональность: Бронирование
Устройство: Тач
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Поиск
description: >-
  Получить выдачу для маршрута с несколькими рейсами в день (например,
  Екатеринбург-Челябинск)
specs:
  Автобусы. Вид и функциональность страницы выдачи:
    - do: Проверить внешний вид шапки
    - assert: >-
        В шапке содержится лого и кнопка Войти (для неавторизованного
        пользователя) или иконка Мои билеты и аватар (для авторизованного).

        Под шапкой свернутая форма поиска, карусель с ценами на последующие
        даты, фильтры сортировки.
    - do: Проверить внешний вид списка рейсов.
    - assert: |-
        Каждый блок рейса содержит:
        - название перевозчика (не всегда)
        - время отправления и прибытия
        - время в пути
        - пункты отправления и прибытия
        - цену билета
    - do: Проверить подвал страницы.
    - assert: |-
        В подвале 5 ссылок:
        Партнерам
        Условия покупки билетов на автобусы
        Справка
        Обратная связь
        Реклама на сервисе
        Пользовательское соглашение
        Яндекс (часть копирайта)
    - do: Кликнуть каждую из ссылок подвала
    - assert: Ссылки ведут на соответствующие страницы.
    - do: Проскроллить список рейсов.
    - assert: >-
        Список скроллится, блоки рейсов выглядят одинаково. Есть блоки рекламы
        после 3 рейсов, затем через 10.
    - do: >-
        Дважды тапнуть на каждый из фильтров сортировки, начиная с Прибытия (или
        любого неактивного, без ^ рядом)
    - assert: >-
        После первого тапа рядом с названием фильтра появляется стрелка (^),
        список сортируется по выбранному параметру от меньшего к большему. После
        второго тапа стрелка меняет направление, список сортируется от большего
        к меньшему.
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Поиск
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Поиск
description: >-
  Проверяется функциональность и внешний вид поля "Дата" формы поиска на главной
  странице ресурса.
specs:
  Форма поиска на главной. Поле "Дата". Внешний вид и функциональность.:
    - do: 1. Перейти на главную страницу сервиса.
    - assert: >-
        Проверить отображение поля "Дата" на форме поиска:

        1. В поле "Дата" отображается текущая дата черным шрифтом в формате
        ДД.ММ.ГГГГ. (Может отображаться дата на завтра)

        2. Поле "Дата" располагается под полем "Куда".

        3. Дата выровнена по левому краю.

        4. По правому краю располагается серая кнопка выбора даты в виде иконки
        таблицы.

        5. Дата и кнопка выбора даты не наезжают на другие элементы формы
        поиска.
    - do: Заполнить поля "Откуда и "Куда" (например Москва и Санкт-Петербург).
    - assert: Поля "Откуда" и "Куда" содержат пункт отправления и назначения.
    - do: Тапнуть на дату в поле "Дата".
    - assert: Появилось окно с календарем выбора даты.
    - do: Выбрать любую дату
    - assert: |-
        1. Окно выбора даты скрывается.
        2. В поле "Дата" отображается выбранная дата.
    - do: Тапнуть на кнопку выбора даты
    - assert: 'Появилось окно с календарем выбора даты, аналогичное в шаге 3.'
    - do: Повторить шаг 4
    - assert: ОР аналогичен из шага 4.
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Поиск
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Поиск
description: >-
  Проверяется функциональность и внешний вид полей "Откуда" и "Куда" формы
  поиска на главной странице ресурса.

  В настройках девайса активирована опция "Автоповорот экрана".

  Открыта главная страница сервиса.
specs:
  Форма поиска на главной. Поля "Откуда" и "Куда". Внешний вид и функциональность.:
    - do: 'Проверить отображение полей "Откуда" и "Куда" на форме поиска:'
    - assert: >-
        1. Элементы формы не наезжают друг на друга и на другие элементы окна.

        2. Поле "Откуда" содержит место отправления черным цветом в соответствии
        с текущим местоположением. В случае отсутствия отображается плейсхолдер
        "Откуда".

        3. Плейсхолдеры "Откуда" и "Куда" серого цвета и имеют выравнивание
        слева и отцентрированы по вертикали.

        4. Форма растянута на ширину экрана с небольшими отступами.
    - do: Тапнуть в поле "Откуда".
    - assert: Открывается форма поиска.
    - do: Выбрать в поле "Откуда" любое место отправления.
    - assert: |-
        1. Закрывается окно выбора.
        2. В поле "Откуда" содержится выбранное место отправления.
    - do: >-
        Выбрать в поле "Откуда" длинное место отправления, например
        "Санкт-Петербург, метро "Черная речка".
    - assert: Длинный текст обрезается.
    - do: Повторить шаги 2-4 для поля "Куда".
    - assert: 'ОР аналогичен, как для шагов 2-4.'
    - do: Перевернуть девайс в альбомную ориентацию.
    - assert: 'Верстка не "едет", отображение соответствует ОР из шага 1.'
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Поиск
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Поиск
description: >-
  Проверяется функциональность и внешний вид стрелочек для смены направлений
  формы поиска на главной странице ресурса.

  Перейти на главную страницу сервиса.
specs:
  Форма поиска на главной. Стрелочки для смены направлений. Внешний вид и функциональность.:
    - do: Проверить отображение стрелочек для смены направлений.
    - assert: >-
        1. Стрелочки  черного цвета, выровнены по правому краю и располагаются
        посередине между полей "Откуда" и "Куда".

        2. Линия, разделяющая поля "Откуда" и "Куда" не наезжает на стрелочки.

        3. Стрелочки, не наезжают друг на друга и на границу формы (расстояние
        до границы такое же, как и для текста слева формы).

        4. Стрелочки направлены в противоположные стороны.
    - do: >-
        Заполнить поля "Откуда и "Куда" любыми значениями пунктов отправления и
        назначения.
    - assert: Поля "Откуда" и "Куда" содержат пункт отправления и назначения.
    - do: Тапнуть на стрелочки.
    - assert: Содержимое полей "Откуда" и "Куда" поменялось местами.
    - do: Удалить текст из полей "Откуда" и "Куда".
    - assert: 'Текст удалился, отображаются плейсхолдеры.'
    - do: Тапнуть на стрелочки.
    - assert: Плейсхолдеры остаются на своих местах.
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Поиск
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Поиск
description: Открыта главная страница сервиса
specs:
  Внешний вид формы поиска на выдаче:
    - do: >-
        Заполнить форму поиска на главной (Куда, Откуда, дата). Нажать кнопку
        Найти.
    - assert: |-
        Открыта страница выдачи результатов поиска.
        Форма поиска в свернутом виде под шапкой страницы:
        - маршрут
        - дата и уточнение "время местное"
        - лупа
    - do: Тап на лупу.
    - assert: >-
        Под шапкой разворачивается форма поиска, аналогичная форме поиска на
        главной.

        Поля Куда и Откуда, кнопка смены направления, поле выбора даты и кнопка
        Найти.
    - do: 'Осуществить новый поиск, изменив данные в каждом из полей.'
    - assert: >-
        Открыта страница выдачи результатов поиска по новым параметрам. Форма
        поиска в свернутом виде.
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Поиск
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Поиск
description: Открыта главная страница тестируемого сервиса
specs:
  Лучшие цены на выдаче. Блок "Есть дешевле!":
    - do: >-
        С главной страницы по блоку популярных направлений получить выдачу с
        прайслайном, это блок с ценами по дням.
    - assert: >-
        Загружаются результаты поиска по выбранному направлению.

        На странице присутствует блок "Есть дешевле!".

        В блоке присутствует текст "Проверьте другие даты, цены могут быть ниже"
        или "Хорошие цены. В другие дни поездка может быть дороже"

        В блоке присутствуют кнопки с ценой и датой.
    - do: Проскроллить кнопки с ценами и датами влево-вправо до конца
    - assert: >-
        Кнопки в блоке скроллятся плавно, отсутствуют графические артефакты в
        блоке.

        Среди кнопок присутствуют выделенные зеленым цветом (с самой низкой
        ценой). (зеленых кнопок может не быть)
    - do: Нажать на любую кнопку
    - assert: >-
        Загружаются новые результаты поиска рейсов по этому же направлению на
        дату, указанную на кнопке.

        На странице присутствует рейс с ценой, указанной на кнопке (+ комиссия
        _то есть цена будет всегда выше на сумму комиссии_ )
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Поиск
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Поиск
description: >-
  Проверяется функциональность и внешний вид кнопки "Найти" формы поиска на
  главной странице ресурса.
specs:
  Форма поиска на главной. Кнопка "Найти". Внешний вид и функциональность.:
    - do: Перейти на главную страницу сервиса и проверить кнопку "Найти"
    - assert: >-
        1. Кнопка "Найти" желтого цвета с черным текстом посередине.

        2. Ширина кнопки такая же, как у формы поиска.

        3. Кнопка "Найти" не наезжает на форму поиска и на другие элементы,
        расположенные ниже кнопки.

        https://yadi.sk/i/tb5L93MAamib3A
    - do: Заполнить поля "Откуда и "Куда" (например Москва и Санкт-Петербург).
    - assert: >-
        Поля "Откуда" и "Куда" содержат пункт отправления и назначения.

        При тапе на инпут, открывается поле для ввода, поднимается клавиатура,
        есть саджест.
    - do: Тапнуть в поле "Дата" и выбрать любое число
    - assert: >-
        Открывается календарь, с кнопками "Удалить", "Отмена", "Установить".
        (системный календарь на ios)

        После выбора даты, поле "Дата" корректно заполнилось.
    - do: Тапнуть на кнопку смены маршрутов.
    - assert: Города поменялись местами.
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Поиск
Сервис: Автобусы. Старый фронт
Окружение: Production
feature: Автобусы. Старый фронт
type: Бронирование
description: ''
specs:
  Автобусы. Основной флоу бронирования незалогин:
    - do: |-
        Открыть главную страницу путешествий, вкладка Автобусы
        Открыть выдачу Москва - Воронеж на завтра
        Кликнуть на кнопку "Выбрать места" в сниппете выдачи
    - assert: Открылась страница бронирования рейса
    - do: В блоке “Укажите пассажиров” заполнить поля валидными данными
    - do: Кликнуть по кнопке  “Забронировать и оплатить”
    - assert: >-
        Открылась форма для ввода данных карты и оплаты

        Таймер на оплату 15 минут, сумма билета корректная и соответствует сумме
        на предыдущем шаге
    - do: Нажать кнопку "Оплатить"
    - assert: >-
        Открылась страница с

        - данными о рейсе, маршрут совпадает со страницей подтверждения

        - блоком "Как подготовиться к поездке"

        - номером и данными о заказе, данные пассажира и стоимость билета
        совпадают со страницей подтверждения

        Присутствуют кнопки "Вернуть билет" и "Печать билета"
manual: true
Устройство: Десктоп
Сервис: Автобусы. Старый фронт
Функциональность: Покупка
Страница:
  - Бронирование
  - Страница заказа
  - Подтверждение
Тестирование асессорами: Нет
Окружение: Testing
feature: Отели
type: ''
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.

  Для попадания на тестовую страницу бронирования отелей см. travel-644

  Для попадания на продовую страницу бронирований нужно сделать запрос в поиске
  Яндекса, например "отель в Москве", далее выбрать отель и кликнуть по
  предложению от Яндекс.Путешествий.
specs: {}
manual: true
Сервис: Отели
feature: ЖД
type: Оплата
description: 'Не для асессоров, нужен шаг оплаты.'
specs:
  'ЖД: Ошибка подтверждения заказа у партнера после оплаты':
    - do: |-
        Перейти на вкладку ЖД билеты
        Перейти на любой поиск, например, Москва - Екатеринбург
        Для любого поезда кликнуть по кнопке покупки Выбрать место
        Выбрать любое место в вагоне
        Нажать Указать пассажиров
        Ввести ФИО: Коддва Ошибкаим Подтверждение
        Остальные поля заполнить любыми валидными данными
        Нажать Проверить заказ и купить
        Нажать Перейти к оплате
        Ввести данные тестовой карты (например, 5100003697253468, 12/20, 090)
        Нажать Оплатить
    - assert: >-
        * Появился лоадер с текстом "Подождите, идет оплата билетов"

        * Через 30 секунд сообщение сменилось на "Процесс оплаты занимает больше
        времени, чем обычно. Подождите ещё 3 минуты"

        * Количество минут уменьшается соответственно прошедшему времени

        * После сообщения, что осталась 1 минута, цикл начинается заново
    - do: |-
        Перейти на созданный заказ в админке
        Перейти на заказ по ссылке
    - assert: >-
        * Нет действий по заказу (скачать, распечатать, сдать билет, отменить
        ЭР)
    - do: >-
        Дождаться, когда статус в админке поменяется на Отменен (15 минут, но
        может быть больше)
    - assert: >-
        * На странице оплаты появилось модальное окно с сообщением "Не удалось
        выкупить билет. Попробуйте ещё раз. Не волнуйтесь, деньги не списались.
        Если проблема повторяется, свяжитесь со службой поддержки по номеру 8
        800 511-71-04 или через форму обратной связи." (для МО другой телефон)
    - do: Нажать Выбрать места заново
    - assert: '* Произошел переход на страницу выбора мест'
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: Добавить пример с билетами в кассе.
specs:
  'ЖД: Причины отсутствия цен':
    - do: |-
        Перейти на вкладку ЖД билеты
        Перейти на поиск Москва - Санкт-Петербург на завтра
    - assert: >-
        * Для сниппетов, у которых нет кнопки покупки, есть надпись "Места
        закончились" (если нет, поискать на других поисках на ближайшие даты)

        * Верстка для этих сниппетов не едет
    - do: >-
        Перейти на поиск Москва - Екатеринбург на дату >90 и <120 дней от
        текущей
    - assert: '* После прогрузки цен не появилось приписок "Места закончились"'
    - do: Перейти на поиск Москва - Калуга на дату >10 дней от текущей
    - assert: >-
        * Для поездов с перевозчиком ЦППК нет кнопок покупки и нет приписки
        "Места закончились"
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: ''
specs:
  'ЖД: Корректность переключения мест между вагонами':
    - do: |
        Перейти на вкладку ЖД
        Перейти на поиск Екатеринбург - Пермь
        Перейти на страницу выбора мест
        Просмотреть все типы и выбрать тот  в котором есть несколько вагонов (отображаются один за другим одновременно)
        Если такого типа нет, выбрать другой поезд
        Тапнуть по месту в первом по счету вагоне
    - assert: Место выбралось, окрасилось в желтый
    - do: Тапнуть по месту во втором вагоне
    - assert: Выбор снялся с места в первом вагоне и установился на место во втором вагоне
    - do: |
        Несколько раз перевыбрать место в разных вагонах
        В том числе проверить случай, когда выбираем место в самом низу страницы
        https://jing.yandex-team.ru/files/shenfeld/2020-06-26_12.21.38-lz4iy.png
    - assert: |
        * Места выбираются корректно
        * Подсказки со стоимостью отображаются у выбранных мест
        * Не происходит перехода на другие страницы

manual: true
Функциональность: Схемы вагонов
Устройство: Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Главная
description: ''
specs:
  'ЖД: Редирект с промо-сайта':
    - do: 'Перейти на https://mir.trains.yandex.ru/'
    - assert: '* Произошел редирект на https://travel.yandex.ru/trains/'
    - do: 'Перейти по ссылке https://mir.trains.yandex.ru/robots.txt'
    - assert: |-
        * Редирект не происходит, открывается карта сайта:
        User-agent: *
        Disallow: /
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: ''
specs:
  'ЖД: Попап со сбором за весь заказ':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск Москва - Санкт-Петербург
        Перейти по кнопке Выбрать место для любого поезда
        Выбрать 2 пассажиров, 2 места, ввести любые данные пассажиров
        Нажать Проверить заказ и купить
    - assert: >-
        * Рядом с общей стоимостью есть иконка i

        * При наведении появляется попап с двумя позициями: цена билетов и
        сервисный сбор

        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2020-06-26_12.38.23-x6bx7.png

        Десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2020-06-26_12.38.59-68w7j.png
    - do: >-
        Посчитать сумму за все билеты и сумму сбора за все билеты (для этого
        посмотреть расшифровку по билетам)

        https://jing.yandex-team.ru/files/shenfeld/2020-06-26_12.40.29-pttr2.png
    - assert: >-
        * Общие суммы в позициях цена билетов и сервисный сбор из шага 1
        совпадают с суммами цен и сервисных сборов за два билета
    - do: |-
        Установить чекбокс "Добавить страховку"
        Навести на иконку i рядом с общей суммой заказа
    - assert: '* В попапе появилась позиция Страховка со стоимостью'
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: ''
description: >-
  При некоторых кликах новая страница будет открываться в той же вкладке, а это
  значит события в консоли будут затираться очень быстро после клика. Поэтому
  рекомендуется использовать видеозапись экрана, чтобы при ее просмотре в
  замедленном режиме увидеть всё.
specs:
  События на бой странице отеля при клике на Яндекс.Путешествия:
    - do: 'Получить выдачу отелей (например, в Подмосковье)'
    - assert: Отображается страница выдачи со сниппетами отелей
    - do: >-
        Нажать Выбрать у сниппета с самым выгодным предложением от Яндекса
        (выгодное предложение всегда возле кнопки Выбрать)
    - assert: Открывается бой страница отеля
    - do: Открыть консоль браузера (F12) -> Console
    - assert: Отображается открытая консоль
    - do: >-
        Дописать к урлу страницы параметр ?_ym_debug=1 (если уже есть какие-то
        параметры в урле, то добавляем &_ym_debug=1) и перейти по полученной
        ссылке
    - assert: Отображается страница отеля
    - do: Клик на ссылку Яндекс.Путешествия в блоке с ценами
    - assert: В консоли на странице отеля не отображаются никакие события Reach goal
manual: true
Сервис: Отели
Tag: form-6463058
feature: Отели
type: ''
description: >-
  При некоторых кликах новая страница будет открываться в той же вкладке, а это
  значит события в консоли будут затираться очень быстро после клика. Поэтому
  рекомендуется использовать видеозапись экрана, чтобы при ее просмотре в
  замедленном режиме увидеть всё.
specs:
  События на бой странице отеля при клике на Забронировать:
    - do: 'Получить выдачу отелей (например, в Подмосковье)'
    - assert: Отображается страница выдачи со сниппетами отелей
    - do: >-
        Нажать Выбрать у сниппета с самым выгодным предложением от Яндекса
        (выгодное предложение всегда возле кнопки Выбрать)
    - assert: Открывается бой страница отеля
    - do: Открыть консоль браузера (F12) -> Console
    - assert: Отображается открытая консоль
    - do: >-
        Дописать к урлу страницы параметр ?_ym_debug=1 (если уже есть какие-то
        параметры в урле, то дописать &_ym_debug=1) и перейти по полученной
        ссылке
    - assert: Отображается страница отеля
    - do: Клик на Забронировать
    - assert: В консоли на странице отеля не отображаются никакие события Reach goal
manual: true
Сервис: Отели
Tag: form-6463058
feature: Отели
type: ''
description: >-
  Работа исключения из отправки статистики в метрику для ссылки Яндекс
  Путешествий - по клику на нее событие не регистрируется, поскольку она ведет
  на страницу отеля, а не на бронирование.

  Открыт тестовый стенд:

  https://travel.crowdtest.yandex.ru
specs:
  События не отображаются на поисковой выдаче при клике на ссылку Яндекс.Путешествий:
    - do: Перейти на вкладку "Отели"
    - assert: Вкладка "Отели" открывается
    - do: >-
        Перейти к поисковой выдаче и задать релевантные параметры в поисковой
        форме или выбрать любой город в блоке "Популярные места"
    - assert: Открывается поисковая выдача по отелям
    - do: Открыть консоль браузера в DevTools (обычно F12 -> Console )
    - assert: Консоль открывается
    - do: 'Добавить в конце урл гет-параметр: &_ym_debug=1 и перезагрузить страницу'
    - assert: >-
        Страница обновляется и прогружается (если выдача не загружается, то
        попробуйте сменить город в поисковой форме и повторить шаг)
    - do: >-
        Найти на одной из карточек отелей (снизу справа на десктопах) в
        поисковой выдаче ссылку Яндекс.Путешествия и кликнуть на неё

        https://yadi.sk/i/1KAeVMnacELVjQ


        Яндекс.Путешествия чаще встречаются на выдаче если в поисковой форме
        выбрать регион Республика Крым
    - assert: >-
        В консоли нет события, которое начинается с Reach goal и содержит
        hotels_search_partner_redirect
manual: true
Сервис: Отели
Tag: form-6463058
feature: Отели
type: ''
description: >-
  О **Выдаче**, **Сниппетах** и прочем необходимом для тестирования написано в
  [Инструкции](https://wiki.yandex-team.ru/eva/testing/Projects/Travel/)

  Проверяем, что определенные события отображаются в консоли при определенных
  кликах:

  * На странице поиска отелей при кликах на разные элементы сниппета

  * На странице отеля при клике на ссылку партнера|Яндекс путешествий и
  кнопке **Выбрать**

  **Как проверять, что цели регистрируются:**
   * Перейти на нужную страницу в портале
   * Открыть консоль браузера (F12) -> Console
   * В урл добавить в конце &_ym_debug=1
   * Кликнуть enter (для перезагрузки страницы и применения параметра)
   * Произвести действие (всегда разное в зависимости от того, кого событие проверяем) - в консоли должно появиться событие, которое начинается с Reach goal - эта фраза характерна для всех целей, которые будут отправлены в метрику. В той же строке следом за Goal id будет идти название события
   Для удобства в консоли можно отфильтровать по слову "reach" только события из метрики https://jing.yandex-team.ru/files/iliasova/2020-08-31_14.29.52-bnapt.png

  **Какие цели регистрируются в метрике**
  На поиске:
   * hotels_search_page_card_hotel_name_click - при клике на название отеля в снипете
   * hotels_search_page_card_hotel_reviews_click - при клике в отзывы на снипете
   * hotels_search_page_card_operator_button_click - по клику в Выбрать на снипете
   * hotels_search_page_card_hotel_click - по клику на остальные элементы снипета (ведущих к открытию страницы отеля)
  
  На странице отеля: 
   * hotels_hotel_page_partner_redirect - в блоке партнерских офферов по клику на название или логотип партнера или кнопке **Выбрать**.
   * hotels_hotel_page_main_tab_offer_click - аналогично предыдущему событию + по клику в Забронировать для офферов Яндекса

  **Примечательно, что при некоторых кликах новая страница будет открываться в
  той же вкладке, а это значит события в консоли будут затираться очень быстро
  после клика. В этом случае можем посоветовать использовать видеозапись экрана,
  чтобы при ее просмотре в замедленном режиме увидеть всё.**


  В кейсе могут использоваться следующие терминыы и сокращения:


  Кликнуть - нажать левой кнопкой мыши (ЛКМ) при нахождении курсора над
  элементом или местом страницы, на который нужно нажать.

  ОР -  ожидаемый результат.

  Остальное можно найти в
  [Глоссарий](https://wiki.yandex-team.ru/eva/search/assessors-testing/Glossarijj/).

  Пользователь находится на главной странице тестируемого сервиса
  https://travel.crowdtest.yandex.ru .
specs:
  'Метрика. Регистрация событий по переходу на партнеров со страницы отеля': 
    - do: Перейти на таб **Отели** и получить **Выдачу** по Москве на любые даты.
    - assert: Открывается список **Сниппетов** по введенному поисковому запросу.
    - do: >-
        На любом сниппете кликнуть на имя отеля
    - assert: >-
        Открывется страница отеля
        В консоли регается событие hotels_search_page_card_hotel_name_click
    - do: >-
        Вернуться на поиск и кликнуть в отзывы на любом снипете
    - assert: >-
        Открывется страница отеля
        В консоли регается событие hotels_search_page_card_hotel_reviews_click
    - do: >-
        Вернуться на поиск и кликнуть в Выбрать на любом снипете
    - assert: >-
        Открывется страница отеля
        В консоли регается событие hotels_search_page_card_operator_button_click
    - do: >-
        Вернуться на поиск
        В фильтрах выбрать Кешбэк плюса (дождаться обновления выдачи)
        Кликнуть в любой элемент на любом снипете (кроме имени отеля, отзывов и кнопки Выбрать)
    - assert: >-
        Открывется страница отеля
        В консоли регается событие hotels_search_page_card_hotel_click        
    - do: >-
        На странице отеля найти блок предложений от Яндекса (с фотками и кнопкой Забронировать)
        Нажать Забронировать
    - assert: В консоли регается hotels_hotel_page_main_tab_offer_click
    - do: >-
        Осуществить поиск по любой зарубежной локации, например по Кракову
        Кликнув на сниппет, перейти на страницу любого отеля
        Найти блок с предложениями от партнеров
        Кликнуть на Выбрать у любого оффера в этом блоке
    - assert: в консоли регаются события hotels_hotel_page_main_tab_offer_click и hotels_hotel_page_partner_redirect
    - do: >-
        Вернуться на стр отеля
        Повторить действия в том же блоке для логотипа партнера и названия
    - assert: ОР аналогичен предыдущему
manual: true
Сервис: Отели
Тестирование асессорами: Да
Tag: form-6463058
feature: Авиа
type: Страница покупки
description: >-
  Поделиська - функциональность, которая позволяет поделиться найденным
  рейсом/направлением в соцсетях.

  На выдаче это будет такая кнопка:

  ![image](https://jing.yandex-team.ru/files/gouken67/Кнопка%20для%20репоста%20в%20соцсети.png)

  На странице покупки - иконки соцсетей в правом верхнем углу


  **Информация для асессоров:** После того, как вставите ссылку, скопированную
  из дропдауна, необходимо будет изменить адрес при её вставке:
  travel-test.yandex.ru нужно заменить на travel.crowdtest.yandex.ru
specs:
  'Авиа: Проверка работы функциональности поделиськи':
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты

        Заполнить форму поиска билетов:
        * Откуда: Екатеринбург
        * Куда: Санкт-Петербург
        * Туда: 5 число следующего месяца, дату обратно не ставить.
        * Пассажиры: 1 взрослых
        * Класс: Эконом

        Нажать кнопку “Найти”.
    - assert: Открылась страница выдачи для указанного направления.
    - do: >-
        Нажать на кнопку:

        ![image](https://jing.yandex-team.ru/files/gouken67/Кнопка%20для%20репоста%20в%20соцсети.png)
    - assert: >-
        Открылся дропдаун с сокращённой ссылкой и 3-мя пунктами соцсетей:

        ![image](https://jing.yandex-team.ru/files/gouken67/Дропдаун%20соцсети-1.png)
    - do: >-
        Скопировать ссылку из дропдауна.

        Вставить ссылку в новом окне браузера в адресную строку.

        **Для асессоров:** Заменить https://travel-test.yandex.ru на
        https://travel.crowdtest.yandex.ru

        Перейти по ссылке в новом окне браузера.
    - assert: >-
        Открывается та же выдача, что была в предыдущем окне. Если были
        применены фильтры, их значения тоже будут переданы.
    - do: 'Нажать на строку Вконтакте, Одноклассники, Twitter, Facebook.'
    - assert: >-
        Открываются окна соответствующих соцсетей, в которых предлагается
        запостить сокращённую ссылку.
    - do: >-
        Запостить сокращённую ссылку во Вконтакте (отправить сообщение самому
        себе).
    - assert: Сообщение успешно отправлено.
    - do: Кликнуть по произвольному варианту на выдаче (не по кнопке Купить).
    - assert: Осуществился переход на страницу покупки для выбранного варианта.
    - do: |-
        Скопировать сокращённую ссылку из строки рядом с кнопками соцсетей.
        Перейти по ссылке в новом окне браузера.
    - assert: 'Открывается та же страница покупки, что была в предыдущем окне.'
    - do: 'Кликнуть по иконкам Вконтакте, Одноклассники, Twitter, Facebook.'
    - assert: >-
        Открываются окна соответствующих соцсетей, в которых предлагается
        запостить сокращённую ссылку.
    - do: >-
        Запостить сокращённую ссылку во Вконтакте (отправить сообщение самому
        себе).
    - assert: Сообщение успешно отправлено.
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница:
  - Страница покупки
  - Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Страница покупки
description: ''
specs:
  'Авиа: Страница покупки -  При обновлении страницы цены от партнёров не изменяются':
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты

        Заполнить форму поиска билетов:
        * Откуда: Екатеринбург
        * Куда: Санкт-Петербург
        * Туда: 5 число следующего месяца, дату обратно не ставить.
        * Пассажиры: 1 взрослых
        * Класс: Бизнес

        Нажать кнопку “Найти”.
    - assert: Открылась страница выдачи для указанного направления.
    - do: Кликнуть по любому из сниппетов (не по жёлтой кнопке с ценой).
    - assert: Осуществился переход на страницу покупки для выбранного варианта.
    - do: |-
        Запомнить цены от партнёров.
        Обновить страницу.
    - assert: После обновления страницы цены от партнёров не изменились.
    - do: Нажать на кнопку Купить напротив самого выгодного предложения.
    - assert: >-
        Осуществился переход на сайт партнёра. Стоимость предложения совпадает с
        той, что была указана на странице покупки.
    - do: |-
        Вернуться на страницу покупки.
        Открыть форму поиска.

        Заполнить её данными:
        * Откуда: Екатеринбург
        * Куда: Санкт-Петербург
        * Туда: 5 число следующего месяца, дату обратно не ставить.
        * Пассажиры: 1 взрослый, 1 ребёнок, 1 младенец
        * Класс: Эконом

        Нажать кнопку “Найти”.
    - assert: Открылась страница выдачи для указанного направления.
    - do: Кликнуть по любому из сниппетов (не по жёлтой кнопке с ценой).
    - assert: Осуществился переход на страницу покупки для выбранного варианта.
    - do: |-
        Запомнить цены от партнёров.
        Обновить страницу.
    - assert: После обновления страницы цены от партнёров не изменились.
    - do: Нажать на кнопку Купить напротив самого выгодного предложения.
    - assert: >-
        Осуществился переход на сайт партнёра. Стоимость предложения совпадает с
        той, что была указана на странице покупки.
manual: true
Функциональность: Инфа на покупке
Устройство:
  - Десктоп
  - Тач
Страница: Страница покупки
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Выдача - Футер не отображается при скролле':
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты

        Заполнить форму поиска билетов:
        * Откуда: Ереван
        * Куда: Нью-Йорк
        * Туда: 5 число следующего месяца, дату обратно не ставить.
        * Пассажиры: 1 взрослых
        * Класс: Эконом

        Нажать кнопку “Найти”.
    - assert: Открылась страница выдачи для указанного направления.
    - do: Проскроллить страницу несколько раз.
    - assert: >-
        При скролле страницы футер не отображается, после блока Динамики цен
        через каждые 10 вариантов происходит дозагрузка новых вариантов
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Выдача - Асинхронное применение фильтров':
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты

        Заполнить форму поиска билетов:
        * Откуда: Екатеринбург
        * Куда: Санкт-Петербург
        * Туда: 5 число следующего месяца, дату обратно не ставить.
        * Пассажиры: 1 взрослых
        * Класс: Эконом

        Нажать кнопку “Найти”.
    - assert: Открылась страница выдачи для указанного направления.
    - do: |-
        Раскрыть фильтр Время вылета/прилёта.
        Выбрать галочки фильтра в произвольном порядке, но как можно быстрее.
    - assert: >-
        Во время проставления фильтров они не применяются сразу. Все значения
        фильтра после того, как был выбран последний фильтр (если точнее -
        спустя 700 мс после этого).
    - do: >-
        Сбросить значения фильтра.

        Повторить проделанные действия для остальных фильтров: Багаж, Пересадки,
        Аэропорты, Авиакомпании.
    - assert: 'Фильтры работают так же, как было описано в п. 2.'
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: gouken67
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить url страницы на этапе оформления
  заказа.

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._
specs:
  Автобусы.Партнеры. Etraffic:
    - do: |-
        Поиск по партнеру Етраффик
        - Москва - Владимир
        - Барнаул - Горняк
        - Горно-Алтайск — Барнаул
    - assert: 'Маршрут по партнеру Етраффик найден, доступен для букинга'
    - do: |-
        Заполните данные, необходимые для оформления билета
        Нажмите кнопку Оплатить
    - assert: 'Открылась форма для оплаты, ошибок нет'
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить URL СТРАНИЦЫ на этапе ОФОРМЛЕНИЯ
  заказа (т.е. страницы ввода данных пассажира).

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._
specs:
  Автобусы.Партнеры. Unitiki-new:
    - do: |-
        Поиск по партнеру Юнитики
        - Волгогорад -  Ростов на дону
        - Пермь - Кунгур
        - Нижний Новгород - Москва
    - assert: 'Маршрут партнера Юнитики найден, доступен для букинга'
    - do: |-
        Заполните данные, необходимые для оформления билета
        Нажмите кнопку Оплатить
    - assert: 'Открылась форма для оплаты, ошибок нет'
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить url страницы на этапе оформления
  заказа.

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._
specs:
  Автобусы.Партнеры. OK:
    - do: |-
        Поиск по партнеру ОднаКасса
        - Москва - Одинцово
        - Дмитров-Яхрома
        - Ярославль - Кострома
    - assert: 'Маршрут партнера ОднаКасса найден, доступен для букинга'
    - do: |-
        Заполните данные, необходимые для оформления билета
        Нажмите кнопку Оплатить
    - assert: 'Открылась форма для оплаты, ошибок нет'
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить url страницы на этапе оформления
  заказа.

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._
specs:
  Автобусы.Партнеры. SKS:
    - do: |-
        Поиск по партнеру Скс
        - Санкт Петербург - Чудово
        - Санкт Петербург - Парфино
    - assert: 'Маршрут партнера СКС найден, доступен для букинга'
    - do: |-
        Заполните данные, необходимые для оформления билета
        Нажмите кнопку Оплатить
    - assert: 'Открылась форма для оплаты, ошибок нет'
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить url страницы на этапе оформления
  заказа.

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._
specs:
  Автобусы.Партнеры. Noy:
    - do: |-
        Поиск по партнеру Ной
        - Камышин - Саратов
        - Ялта - Волгоград
        - Камышин - Волгоград
    - assert: 'Маршрут партнера Ной найден, доступен для букинга'
    - do: |-
        Заполните данные, необходимые для оформления билета
        Нажмите кнопку Оплатить
    - assert: 'Открылась форма для оплаты, ошибок нет'
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить url страницы на этапе оформления
  заказа.

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._
specs:
  Автобусы.Партнеры. Yugavtotrans:
    - do: |-
        Поиск по партнеру Югавтотранс
        - Таганрог - Москва
        - Ялта - Минск
        - Ростов-на-дону - Москва
    - assert: 'Маршрут партнера Ной найден, доступен для букинга'
    - do: |-
        Заполните данные, необходимые для оформления билета
        Нажмите кнопку Оплатить
    - assert: 'Открылась форма для оплаты, ошибок нет'
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: Портал
type: Главная
description: ''
specs:
  Главная. Рекламный блок:
    - do: Перейти на вкладку "Авиабилеты"
    - assert: >-
        Под формой поиска расположен рекламный блок (содержание может
        отличаться)

        Десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2021-02-11_13.22.50-hdxtn.png

        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2021-02-11_13.23.14-vyj0i.png
    - do: Перейти на вкладку "Ж/Д билеты"
    - assert: >-
        Под формой поиска в десктопе отображается блок рекламы:

        Десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2021-02-11_13.25.15-k11qo.png


        Тач:
        https://jing.yandex-team.ru/files/tcheremnykh/2021-04-26_17-07-59.png (в
        данном примере - баннер с акцией "мир")
    - do: Перейти на вкладку "Отели"
    - assert: >-
        Под формой поиска расположен рекламный блок (содержание может
        отличаться)

        Также на тестинге под формой есть чекбокс Продовые офферы

        Десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2021-02-11_13.27.07-chsu3.png

        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2021-02-11_13.27.44-0084w.png
    - do: Перейти на вкладку "Автобусы"
    - assert: >-
        Под формой поиска  расположен рекламный блок (содержание может
        отличаться)
         Десктоп (если есть предыдущие поиски, то блок рекламы под ними, если нет - то под формой поиска): https://jing.yandex-team.ru/files/shenfeld/2021-02-11_13.29.03-io113.png
        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2021-02-11_13.28.16-bs73t.png
manual: true
Функциональность: работа с главной страницей
Устройство:
  - Тач
  - Десктоп
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
feature: Авиа
type: Выдача
description: >-
  Нейтральный вид подсказки - серая подсказка динамики цен
  (https://yadi.sk/i/p-9baYTU3EQGAg)
specs:
  Подсказки динамики цен. Отсутствие подсказок для рейсов бизнес-класса:
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - assert: Страница открылась корректно
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Бизнес
        Нажать кнопку “Найти”
    - assert: Открылась страница выдачи. Подсказка Динамики цен отсутствует.
manual: true
Функциональность: Динамика
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
feature: Авиа
type: Выдача
description: ''
specs:
  Динамика цен. Работа фильтров. Скролл при применении фильтров (тач):
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Нажать кнопку “Найти”
    - assert: Открыта страница выдачи
    - do: >-
        Нажать на кнопку "Смотреть весь календарь" 
        https://jing.yandex-team.ru/files/arhey/2021-11-29T08:57:02Z.1a3aced.png
    - assert: |-
        Открылась страница с динамикой цен.
        https://jing.yandex-team.ru/files/kuklina/Screenshot_2022-05-30-17-49-03-210_com.android.chrome.jpg
    - do: Выбрать фильтр "Без пересадок"
    - assert: |-
        Выдача перезагрузилась, изменилась в соответствии с выбранным фильтром.
        Кнопки "Без пересадок" и "Все фильтры" - темно-серого цвета
        https://jing.yandex-team.ru/files/arhey/2021-11-29T09:03:51Z.3493885.png
    - do: Нажать на кнопку "Смотреть полный календарь"
    - assert: |-
        Открылся полный календарь цен
        https://jing.yandex-team.ru/files/arhey/2021-11-29T09:02:43Z.f5fbb8d.png
    - do: Выбрать фильтр "С багажом"
    - assert: |-
        Выдача  перезагрузилась, изменилась в соответствии с выбранным фильтром.
        Кнопки "Без пересадок", "С багажом" и "Все фильтры" - темно-серого цвета
    - do: Проскроллить выдачу динамики цен
    - assert: Список скроллится
    - do: Вернуться по кнопке назад на страницу выдачи и проверить фильтры
    - assert: >-
        Фильтры на странице выдачи применены. В выдаче только варианты без
        пересадок и с багажом.
manual: true
Функциональность:
  - Динамика
  - Фильтры и сортировки
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: ''
specs:
  Динамика цен. Изменение размерности:
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: |-
        Нажать на кнопку "Смотреть весь календарь"
        https://jing.yandex-team.ru/files/arhey/2021-11-29T08:57:02Z.1a3aced.png
    - assert: Открывается страница с динамикой цен.
    - do: Нажать на кнопку "Смотреть полный календарь" под блоками
    - assert: 'Открывается список всех будущих дат, список скроллится.'
manual: true
Функциональность: Динамика
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: >-
  Нейтральный вид подсказки - серая подсказка динамики цен
  (https://yadi.sk/i/p-9baYTU3EQGAg)
specs:
  Подсказки динамики цен. Влияние фильтров на подсказку Динамики цен:
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: эконом
        Нажать кнопку “Найти”
    - assert: Открывается страница выдачи
    - do: |-
        Нажать на кнопку "Открыть календарь цен"
        https://jing.yandex-team.ru/files/gouken67/1324_1.png
    - assert: |-
        Открывается страница с динамикой цен.
        https://jing.yandex-team.ru/files/gouken67/1324_2.png
    - do: |-
        Дождаться, пока на Динамике цен прогрузятся цены на все 7 дней.
        Закрыть окно Динамики.
    - assert: |-
        Происходит возврат к выдаче
        Отображаются подсказки для динамики без фильтров
        https://jing.yandex-team.ru/files/gouken67/1324_1.png
    - do: >-
        Применить поочерёдно фильтр багажа, фильтр Без пересадок, любой другой
        фильтр из Пересадок, Время вылета/прилёта.
    - assert: >-
        Подсказка Динамики цен может меняться всякий раз, когда происходит
        применение фильтра, либо его снятие.

        Подсказка может также остаться прежней (это будет значить, что
        применённый/снятый фильтр ни на что не повлиял - скорее всего, так будет
        с фильтром Без пересадок).

        Подсказка никогда не принимает нейтральный вид.

        https://jing.yandex-team.ru/files/gouken67/1324_3.png
    - do: |-
        Сбросить все фильтры.
        Применить поочерёдно фильтр Аэропорты, фильтр Авиакомпании.
    - assert: >-
        Подсказка Динамики цен может меняться всякий раз, когда происходит
        применение фильтра, либо его снятие.

        Подсказка может также остаться прежней (это будет значить, что
        применённый/снятый фильтр ни на что не повлиял).


        https://jing.yandex-team.ru/files/gouken67/1324_3.png
    - do: Применить произвольную комбинацию фильтров
    - assert: >-
        Подсказка Динамики цен может меняться всякий раз, когда происходит
        применение фильтра, либо его снятие.

        Подсказка может также остаться прежней (это будет значить, что
        применённый/снятый фильтр ни на что не повлиял).


        https://jing.yandex-team.ru/files/gouken67/1324_3.png
manual: true
Функциональность: Динамика
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Динамика цен. Переход по дням:
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: |-
        Нажать на кнопку "Смотреть весь календарь"
        https://jing.yandex-team.ru/files/gouken67/1325.png
    - assert: |-
        Открывается страница с динамикой цен.
        https://yadi.sk/i/ifxpRNvpVLm4WA
    - do: 'Тапнуть на любой блок, отличный от 5 числа'
    - assert: Открывается выдача на выбранный день
manual: true
Функциональность: Динамика
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: ''
specs:
  Динамика цен. Соответствие производственному календарю:
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Нажать кнопку “Найти”
    - assert: Открыта страница выдачи
    - do: |-
        Нажать на кнопку "Открыть календарь цен"
        https://jing.yandex-team.ru/files/papulova/koDOFDju3p.png
    - assert: |-
        Открывается страница с динамикой цен.
        https://jing.yandex-team.ru/files/papulova/HXJkC2vzxe.png
    - do: Проверить соответствие производственному календарю
    - assert: >-
        Выходные дни недели и праздники выделены красным. Например: вт, ср -
        текст красного цвета.

        https://yadi.sk/i/mfElsVoazR9SNQ
manual: true
Функциональность: Динамика
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Динамика цен. Внешний вид при переходе с выдачи.:
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: |-
        Нажать на кнопку "Открыть календарь цен"
        https://yadi.sk/i/zDjBstolOrMBRA
    - assert: >-
        Открывается страница с динамикой цен.

        1) Есть фильтры “С Багажом”, “Без пересадок”

        2) Кнопка всех фильтров

        3) Кнопка "Показать полный календарь"

    - do: Кликнуть по кнопке Смотреть полный календарь
    - assert: |
        График в виде блоков по каждому дню где:


        1) Выбран день вылета, блок с жёлтой окантовкой

        2) Автоматически происходит опрос партнёров(если нет цен) для +- 3 дня
        от выбранной даты.

        3) Дни, для которых цена известна, белого цвета, цена в правом углу
        блока. Дни, для которых цена минимальна выделены зелёным цветом. Дни для
        которых цена не найдена белого цвета и есть кнопка Найти в правом углу
        блока

        4) Все блоки имеют число, месяц и день недели в левом углу блока.


        https://yadi.sk/i/ifxpRNvpVLm4WA
manual: true
Функциональность: Динамика
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: ЖД
type: Страница заказа
description: >-
  Кейс проверяет:

  - Что нельзя сменить статус ЭР

  - Возврат билетов, когда осталось больше 2 часов до отправления (возвращается
  100%)

  * Перейти на вкладку ЖД

  * Выполнить поиск Москва - Калуга на завтра

  * Для поездов с перевозчиком ЦППК кликнуть по кнопке покупки (если нет
  поездов, поискать на следующие ближайшие даты или другие направления  Москва -
  Текстильщики, Москва - Рязань, Текстильщики - Заокский)

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-08-17_16.04.57-26bfm.png)

  * Купить билет на 1 пассажира, данные пассажира ввести любые

  * На хэппи пейдж нажать "Подробнее о заказе"
specs:
  'ЖД: ЭР и возврат для поездов ЦППК':
    - do: Купить билет по описанию в Preconditions
    - assert: >-
        * Произошел переход на страницу заказа

        * Нет иконки у билета "Без электронной регистрации"

        * Есть кнопка "Сдать билет"

        * Нет кнопки "Отменить электронную регистрацию"

        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2020-08-17_16.12.27-46u5d.png

        Десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2020-08-17_16.12.53-ibmxg.png
    - do: |-
        Открыть расшифровку цены
        Запомнить позиции: цена билета и сервисный сбор
        https://jing.yandex-team.ru/files/shenfeld/2020-08-17_16.16.25-pn4s3.png
    - do: Нажать Сдать билет
    - assert: |-
        * Открылось модальное окно возврата
        * Сумма к возврату = цена билета + (сервисный сбор - 69,4)
    - do: Нажать Подтвердить
    - assert: >-
        * Через какое-то время осуществился возврат

        * У билета появился статус "Возврат"

        * Сумма к возврату на странице совпадает с суммой к возврату в модальном
        окне
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Кейс проверяет:

  - Что вернуть билет можно в любом момент до отправления поезда со станции
  посадки пассажира

  - Что при возврате билета менее чем за 2 часа до отправления возвращается 50%
  от цены билета

  * Перейти на вкладку ЖД

  * Найти такой поезд ЦППК на сегодня, чтобы отправление было как можно скорее
  (можно смотреть на Москва - Калуга, Москва - Рязань, Москва - Орехово-Зуево,
  Москва - Тула)

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-08-17_16.04.57-26bfm.png)

  * Купить билеты на 2 взрослых пассажиров, данные пассажиров любые

  * На хэппи пейдж нажать "Подробнее о заказе"



  **Для асессоров:** Кейс требует ожидания после покупки билета и до отправления
  поезда. Поэтому можно купить билет в отдельной вкладке, далее проходить
  следующие кейсы, дождаться прохождения нужного времени для выполнения шага 2 и
  вернуться к этому кейсу.

  Если поездов на выдаче с отправлением в пределах времени которое вы можете
  выждать нет, пропускайте кейс.
specs:
  'ЖД: Возврат в ЦППК возможен до отправления поезда':
    - do: Перейти на страницу заказа для поезда из Preconditions
    - assert: '* Есть кнопка Сдать билет для обоих билетов'
    - do: |-
        Дождаться, когда до отправления поезда останется 15 минут
        Обновить страницу
    - assert: >-
        * Появился текст на желтом фоне "Через 15 минут вернуть билет онлайн
        будет нельзя. Вы сможете сдать его в кассе вокзала."
    - do: |-
        Раскрыть расшифровку стоимости одного из билетов
        Запомнить позиции: цена билета и сервисный сбор
        https://jing.yandex-team.ru/files/shenfeld/2020-08-17_16.16.25-pn4s3.png
        Нажать Сдать билет для одного из билетов
    - assert: |-
        * Появилось модальное окно возврата
        * Сумма к возврату равна цена билета*0,5 + (сервисный сбор - 69,40)
    - do: Нажать Подтвердить
    - assert: >-
        * Через какое-то время осуществился возврат

        * У билета появился статус “Возврат”

        * Сумма к возврату на странице совпадает с суммой к возврату в модальном
        окне
    - do: |-
        Дождаться времени отправления поезда
        Обновить страницу
    - assert: >-
        * Для второго билета пропала кнопка Сдать билет, появилась ссылка Можно
        сдать в кассе
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  * Перейти на вкладку ЖД
  * Выполнить поиск Москва - Калуга на завтра
  * Для поездов с перевозчиком ЦППК кликнуть по кнопке покупки (если нет
  поездов, поискать на следующие ближайшие даты или другие направления:  Москва - Калуга, Москва - Рязань, Текстильщики - Заокский)

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-08-17_16.04.57-26bfm.png)
specs:
  'ЖД: Детские билеты в поезда ЦППК':
    - do: Перейти на страницу выбора мест для поезда из Preconditions
    - assert: |
        * Есть два контрола выбора билетов - взрослый и детский с местом
        * Подпись под детским билетом "Билеты со скидкой для детей младше 7 лет"
        * Для взрослого билета есть приписка "Ребенок до 5 лет едет на одном месте со взрослым."
    - do: |
        Выбрать один взрослый и один детский билет
        Выбрать любые места
        Нажать Указать пассажиров
    - assert: |
        * Открылась страница ввода данных
        * На странице есть форма с заголовками для двух пассажиров: Взрослый и
        Ребёнок (до 7 лет)
    - do: |
        Заполнить все поля валидными данными
        Дату рождения для ребенка ввести такую, чтобы его возраст был 6 лет
        Нажать Проверить заказ и купить
    - assert: |
        * Произошел переход на страницу подтверждения
        * Ошибок нет
    - do: |
        Вернуться на шаг ввода данных
        Ввести дату рождения ребенка такую, чтобы ему было меньше 5 лет
        Нажать Проверить заказ и купить
    - assert: |
        * Произошел переход на страницу подтверждения
        * Ошибок нет
    - do: |
        Вернуться на шаг ввода данных
        Ввести дату рождения ребенка такую, чтобы ему было больше 7 лет
        Нажать Проверить заказ и купить
    - assert: |
        * Переход на страницу подтверждения не произошел
        * Поле с датой подсвечивается и появляется ошибка "Возраст пассажира не
        соответствует тарифу."

manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  * Перейти на вкладку ЖД

  * Выполнить поиск Москва - Рязань на завтра

  * Для поездов с перевозчиком ЦППК (в таче перевозчика можно увидеть по тапу на
  иконку вопроса) кликнуть по кнопке покупки (если нет поездов, поискать на
  следующие ближайшие даты)

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-08-17_16.04.57-26bfm.png)
specs:
  'ЖД: В ЦППК не пропускаем одного пассажира на два места':
    - do: |-
        Перейти на страницу выбора мест для поезда из подготовки
        Выбрать двух взрослых пассажиров
        Выбрать места
        Нажать Указать пассажиров
    - assert: '* Открылась страница ввода данных'
    - do: >-
        Заполнить поля: ФИО, дата рождения, пол произвольными данными, а тип
        документа и номер документа указать одинаковый (например, паспорт РФ
        6505 111111)

        Нажать Проверить заказ и купить
    - assert: >-
        * Перехода на следующий шаг не произошло

        * Появилась ошибка у поля с номером документа "Этот документ используется для другого пассажира. Укажите другой документ."
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  * Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_FAILURE&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  * В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Не удалось получить цены страховки':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск Москва - Санкт-Петербург через месяц
        Для любого поезда кликнуть по кнопке Выбрать место
        На странице выбора мест выбрать любое место в любом вагоне
        Нажать Указать пассажиров
    - assert: '* Произошел переход на страницу ввода данных'
    - do: >-
        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить все поля валидными данными

        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * На странице нет блока для добавления страховки
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Оплата
description: >-
  * Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_FAILURE&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  * В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Не удалось подтвердить страховку':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск Москва - Санкт-Петербург через месяц
        Для любого поезда кликнуть по кнопке Выбрать место
        На странице выбора мест выбрать любое место в любом вагоне
        Нажать Указать пассажиров
    - assert: '* Произошел переход на страницу ввода данных'
    - do: >-
        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить все поля валидными данными

        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * На странице есть блок для добавления страховки
    - do: |-
        Запомнить итоговую сумму без страховки
        Выбрать страховку
        Нажать Ввести карту и оплатить
    - assert: >-
        * Осуществился переход на страницу оплаты

        * Через какое-то время появилось модальное окно c текстом "Не удалось
        купить страховой полис

        При покупке страхового полиса произошла ошибка" и двумя кнопками
        "Выбрать места заново" и "Продолжить без страховки"
    - do: Нажать на кнопку "Продолжить без страховки"
    - assert: '* Открылась форма оплаты'
    - do: |-
        Ввести данные тестовой карты
        Например: 5100003697253468, 12/20, 090
        Нажать Оплатить
    - assert: '* Произошел переход на страницу хэппи пейдж'
    - do: Нажать "Подробнее о заказе"
    - assert: |-
        - Открылась страница заказа с подробными данными о заказе
        - Рядом с ценами за билеты нет позиции "Страховка"
        - Итоговая сумма равна сумме без страховки на странице подтверждения
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  * Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_FAILURE&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  * В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Не удалось получить сумму к возврату':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Москва - Санкт-Петербург через месяц

        Для любого поезда кликнуть по кнопке Выбрать место

        На странице выбора мест выбрать любое место в любом вагоне

        Нажать Указать пассажиров

        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить все поля валидными данными

        Нажать Проверить заказ и купить

        Нажать Перейти к оплате

        Заполнить данные тестовой карты, например: 5100003697253468, 12/20, 090

        Нажать Оплатить

        Нажать "Подробнее о заказе"
    - assert: |-
        * Произошел переход на страницу заказа
        * Есть кнопка Сдать билет
    - do: Кликнуть по кнопке Сдать билет
    - assert: >-
        * Появилось модальное окно с ошибкой “Не удалось выполнить операцию” и
        кнопкой "Перезагрузить страницу"
    - do: Кликнуть "Перезагрузить страницу"
    - assert: |-
        * Страница обновилась
        * Для билета есть кнопка Сдать билет
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  * Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_FAILURE&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  * В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Не удалось провести возврат':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Москва - Санкт-Петербург через месяц

        Для любого поезда кликнуть по кнопке Выбрать место

        На странице выбора мест выбрать любое место в любом вагоне

        Нажать Указать пассажиров

        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить все поля валидными данными

        Нажать Проверить заказ и купить

        Нажать Перейти к оплате

        Заполнить данные тестовой карты, например: 5100003697253468, 12/20, 090

        Нажать Оплатить

        Нажать "Подробнее о заказе"
    - assert: |-
        * Произошел переход на страницу заказа
        * Есть кнопка Сдать билет
    - do: Кликнуть по кнопке Сдать билет
    - assert: '* Появилось модальное окно с суммой к возврату'
    - do: Нажать Подтвердить
    - assert: >-
        * Появилась ошибка "Не удалось выполнить операцию" и кнопкой
        "Перезагрузить страницу"
    - do: Нажать Перезагрузить страницу
    - assert: |-
        * Страница обновилась
        * Возврат не произошел, кнопка Сдать билет доступна
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  * Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=10&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  * В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Кассовый возврат':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Москва - Санкт-Петербург через месяц

        Для любого поезда кликнуть по кнопке Выбрать место

        На странице выбора мест выбрать любое место в любом вагоне

        Нажать Указать пассажиров

        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить все поля валидными данными

        Нажать Проверить заказ и купить

        Нажать Перейти к оплате

        Заполнить данные тестовой карты, например: 5100003697253468, 12/20, 090

        Нажать Оплатить

        Нажать Подробнее о заказе
    - assert: '* Произошел переход на страницу заказа'
    - do: |-
        Выждать 10 секунд
        Обновить страницу
    - assert: |-
        * Пропала кнопка Сдать билет
        * Вместо кнопки Сдать есть приписка "Возврат"
        * Есть ссылка на чек возврата
        * Нет ссылки на квитанцию возврата
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  * Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=10&alwaysTimeoutAfterConfirmingInSeconds=0

  * В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Получение билета в кассе':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Москва - Санкт-Петербург через месяц

        Для любого поезда кликнуть по кнопке Выбрать место

        На странице выбора мест выбрать любое место в любом вагоне

        Нажать Указать пассажиров

        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить все поля валидными данными

        Нажать Проверить заказ и купить

        Нажать Перейти к оплате

        Заполнить данные тестовой карты, например: 5100003697253468, 12/20, 090

        Нажать Оплатить

        Нажать Подробнее о заказе
    - assert: '* Произошел переход на страницу заказа'
    - do: |-
        Выждать 10 секунд
        Обновить страницу
    - assert: >-
        * Над заказом есть текст на желтом фоне “Вернуть билет онлайн нельзя,
        так как вы получили бумажный билет в кассе или терминале. Вы можете
        сдать билет в кассе.”

        * Есть приписка “Выдан посадочный купон” рядом с билетом

        * Нет действий Сдать и Отменить ЭР

        * Есть кнопки Скачать и Распечатать (в десктопе)

        * Есть кнопка Скачать (в таче)

        https://jing.yandex-team.ru/files/shenfeld/2020-09-23_19.00.48-5asrf.png
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: ''
description: >-
  * Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  * В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Покупка со страховкой и успешный возврат':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск Москва - Санкт-Петербург через месяц
        Для любого поезда кликнуть по кнопке Выбрать место
        На странице выбора мест выбрать любое место в любом вагоне
        Нажать Указать пассажиров
    - assert: '* Произошел переход на страницу ввода данных'
    - do: >-
        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить все поля валидными данными

        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Есть блок для добавления страховки
    - do: >-
        Установить чекбокс страховки

        Нажать Перейти к оплате

        Заполнить форму оплаты данными тестовой карты, например:
        5100003697253468, 12/20, 090

        Нажать Оплатить
    - assert: >-
        * Произошел переход на страницу успешного заказа

        * У каждого билета есть позиция Страховка

        * Сумма за билеты со страховкой совпадает с суммой за билеты на шаге
        подтверждения
    - do: Нажать Сдать билет
    - assert: '* Появилось модальное окно с суммой к возврату'
    - do: Нажать Подтвердить
    - assert: |-
        * Появился статус "Возврат" у билета
        * Пропала кнопка "Сдать билет"
        * Появился чек на возврат, квитанция на возврат
        * Сумма к возврату совпадает с суммой в модальном окне
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Для асессоров**: чтобы выполнить кейс, нужно будет выждать 15 минут на шаге
  3. Можно открыть нужную страницу в отдельной вкладке и пока ждете, выполнять
  другие кейсы.
specs:
  'ЖД: Покупка с перебронированием':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск (например, Москва - Пермь, Москва - Санкт-Петербург)
        Для любого поезда кликнуть по кнопке Выбрать место
        На странице выбора мест выбрать несколько пассажиров и места в вагонах
        Нажать Указать пассажиров
        Заполнить все поля валидными данными
        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Время на оплату 30 минут
    - do: Установить чекбокс страховки
    - assert: '* Страховка добавилась в заказ, сумма к оплате изменилась'
    - do: 'Дождаться, когда останется меньше 15 минут на оплату'
    - assert: >-
        * На странице нет изменений (может на несколько секунд пропасть блок
        страховки и снова вернуться - считаем это нормой)

        * Отсчет времени продолжается

        * Данные о местах, поезде, пассажирах, страховке и сумме к оплате не
        изменились
    - do: |-
        Нажать Перейти к оплате
        Ввести данные карты (асессоры пропускают)
        Нажать Оплатить (асессоры пропускают)
        На хэппи пейдж нажать на кнопку "Подробнее о заказе"
    - assert: >-
        * Произошел переход на страницу подробного заказа

        * Данные о местах, поезде, пассажирах, страховке и сумме к оплате
        соответствуют данным на странице подтверждения заказа
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: ''
specs:
  'ЖД: Перебронирование на оплате':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск (например, Москва - Пермь, Москва - Санкт-Петербург)
        Для любого поезда кликнуть по кнопке Выбрать место
        На странице выбора мест выбрать несколько пассажиров и места в вагонах
        Нажать Указать пассажиров
        Заполнить все поля валидными данными
        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Время на оплату 30 минут
    - do: Установить чекбокс страховки
    - assert: '* Страховка добавилась в заказ, сумма к оплате изменилась'
    - do: 'Дождаться, когда останется меньше 15 минут на оплату'
    - assert: >-
        * На странице нет изменений

        * Отсчет времени продолжается

        * Данные о местах, поезде, пассажирах, страховке и сумме к оплате не
        изменились
    - do: Обновить страницу
    - assert: |-
        * На странице нет изменений
        * Отсчет времени продолжается
        * Данные о местах, поезде, пассажирах и сумме к оплате не изменились
        * Страховка сбросилась
    - do: |-
        Добавить страховку
        Нажать Перейти к оплате
        Ввести данные карты (асессоры пропускают)
        Нажать Оплатить (асессоры пропускают)
    - assert: '* Произошел переход на страницу хэппи пейдж'
    - do: Нажать "Подробнее о заказе"
    - assert: >-
        * Данные на странице заказа о местах, поезде, пассажирах, страховке и
        сумме к оплате соответствуют данным на странице подтверждения заказа
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Был баг - если в заказе была страховка и платеж создавался после переброни,
  страховка выкупалась два раза.
specs:
  'ЖД: Создание оплаты после перебронирования':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск (например, Москва - Пермь, Москва - Санкт-Петербург)
        Для любого поезда кликнуть по кнопке Выбрать место
        На странице выбора мест выбрать несколько пассажиров и места в вагонах
        Нажать Указать пассажиров
        Заполнить все поля валидными данными
        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Время на оплату 30 минут
    - do: >-
        Добавить страховку

        Нажать перейти к оплате

        Дождаться, когда на оплату останется меньше 15 минут

        Провалить оплату - ввести неверный cvc 228 (данные карты:
        5100003697253468, 090, 12/20)
    - assert: '* Произошла ошибка'
    - do: Нажать "К оплате"
    - assert: '* Снова открылась форма оплаты'
    - do: |-
        Ввести верные данные карты
        Нажать Оплатить
        Нажать Подробнее о заказе
    - assert: |-
        * Произошел переход на страницу заказа
        * В заказе есть страховка
        * Страховка оплачена 1 раз (проверить в чеках или письме)
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Для асессоров**: чтобы выполнить кейс, нужно будет выждать 15 минут на шаге
  2. Можно открыть нужную страницу в отдельной вкладке и пока ждете, выполнять
  другие кейсы.
specs:
  'ЖД: Перебронирование, когда нет схемы':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Усинск - Микунь

        Кликнуть по кнопке Выбрать место для поезда 305Я

        Для класса с текстом "Для этих вагонов нет схем, места выбираются
        автоматически" нажать на кнопку Указать пассажиров

        ![image](https://jing.yandex-team.ru/files/shenfeld/2021-01-14_11.55.00-grhoh.png)

        На странице выбора мест выбрать несколько пассажиров и места в вагонах

        Нажать Указать пассажиров

        Заполнить все поля валидными данными

        Нажать Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Время на оплату 30 минут
    - do: |-
        Запомнить номер выданных мест
        Дождаться, когда останется меньше 15 минут на оплату
    - assert: >-
        * Ошибок нет

        * На странице нет изменений (может на несколько секунд пропасть блок
        страховки и снова вернуться - считаем это нормой)

        * Отсчет времени продолжается

        * Номера мест не изменились
    - do: |-
        Нажать Перейти к оплате
        Ввести данные карты (не для асессоров)
        Нажать Оплатить (не для асессоров)
        Нажать Подробнее о заказе на странице хэппи пейдж
    - assert: |-
        * Произошел переход на страницу заказа
        * Номера мест совпадают с номерами на странице подтверждения
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить url страницы на этапе оформления
  заказа.

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._



  **Партнер выключен**
specs: {}
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: Автобусы. Старый фронт
type: ''
description: |-
  Сервис автобусы в портале путешествий, на главной портала вкладка Автобусы.

  Кейс для проверки покупки дежурным тестировщиком.

  Покупка в проде, реквизиты карты тут https://nda.ya.ru/t/ZsomFJMy3Wxefs
specs:
  Автобусы. Покупка:
    - do: >-
        - В тестируемом сервисе в форме поиска ввести Москва - Санкт-Петербург,
        нажать кнопку "Найти"

        - В полученной выдаче выбрать любой рейс, нажать кнопку "Выбрать"

        - В форме ввода данных пассажира ввести корректные ФИО, дату рождения,
        номер документа

        - В форме ввода контактных данных указать валидный номер телефона и свой
        рабочий емейл для получения билета (@yandex-team.ru)

        - Нажать кнопку оплаты
    - assert: >-
        - Получили выдачу с рейсами по заданному маршруту

        - Открылась страница заказа, данные соответствуют поисковому запросу

        - Появилась форма оплаты траста для ввода данных карты, сумма соотв
        сумме на странице заказа

        - На почту пришло подтверждение бронирования, в письме есть данные по
        заказу, которые соответствуют данным на странице заказа
    - do: |-
        - Ввести данные карты для оплаты
        - Оплатить заказ
    - assert: >-
        - Открылась страница  с данными о заказе, баннером "Как подготовиться к
        поездке" и данными билета (место, фио, документ, сумма) с кнопками
        возврата и печати билета

        - На почту пришло письмо с билетом, в письме есть данные по заказу,
        которые соответствуют данным на странице заказа и сам билет

        - На почту также должно прийти письмо с электронным чеком
    - do: Нажать кнопку возврата билета
    - assert: >-
        Открылась форма с данными билета, суммой и кнопкой возврата, сумма
        возврата меньше стоимости билета в размере комиссии
    - do: Нажать кнопку "Вернуть"
    - assert: >-
        - Открылось окно с подтверждением процедуры возврата и кнопкой "Хорошо",
        есть информация о сумме возврата, времени зачисления денежных средств

        - На почту пришло письмо о возврате заказа и письмо с чеком возврата
    - do: В окне подтверждения возврата нажать кнопку "Хорошо"
    - assert: >-
        - На странице заказа в блоке с данными билета статус изменился на
        "Возвращено", кнопка возврата отсутствует
    - do: Нажать кнопку печати билета
    - assert: >-
        В новом окне открылся электронный билет, данные соответствуют данным в
        заказе
manual: true
Устройство: Десктоп
Сервис: Автобусы. Старый фронт
Функциональность: Бронирование
Тестирование асессорами: Нет
Окружение: Production
Tag: draft(jjon)
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Не инициируем новый поиск при возвращении на выдачу':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на выдачу Санкт-Петербург - Москва через месяц
    - assert: '* Загрузилась выдача'
    - do: Для одного из поездов кликнуть по кнопке Выбрать место
    - assert: |-
        * Произошел переход на страницу выбора мест
        * Номер поезда совпадает с номером, по которому переходили с выдачи
    - do: Нажать кнопку Назад в браузере
    - assert: >-
        * Произошел переход обратно на выдачу Санкт-Петербург - Москва, дата
        поиска та же

        * Выдача отобразилась не сразу - сначала был лоадер загрузки
    - do: Кликнуть по кнопке Выбрать место для другого поезда
    - assert: |-
        * Произошел переход на страницу выбора мест
        * Номер поезда совпадает с номером, по которому переходили с выдачи
    - do: Обновить страницу
    - assert: '* Остались на шаге выбора мест'
    - do: Нажать в хлебных крошках вверху страницы "Выбор поезда"
    - assert: >-
        * Произошел переход обратно на выдачу Санкт-Петербург - Москва, дата
        поиска та же

        * Выдача отобразилась не сразу - сначала появился лоадер загрузки
    - do: >-
        Установить фильтры - например, купе

        Кликнуть по кнопке Выбрать место для любого поезда на отфильтрованной
        выдаче
    - assert: |-
        * Произошел переход на страницу выбора мест
        * Номер поезда совпадает с номером, по которому переходили с выдачи
    - do: Нажать в хлебных крошках вверху страницы “Выбор поезда”
    - assert: >-
        * Произошел переход обратно на выдачу Санкт-Петербург - Москва, дата
        поиска та же

        * Выдача отобразилась не сразу - был лоадер загрузки

        * Установленные фильтры сброшены
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  * Для поездов, оборудованных СИОП, можно вернуть билет в любое время до
  отправления поезда со станции посадки пассажира

  * Для поездов, оборудованных СИОП, нет понятия электронная регистрация



  Проверяем на поезде, который уже ушел
  https://rasp.yandex.ru/thread/002YE_0_2?from_search=1&number=002Э
specs:
  'ЖД: Возврат на поезд с СИОП':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Хабаровск - Владивосток на завтра

        Для поезда 002Э кликнуть по кнопке Выбрать место

        Следовать по шагам покупки до страницы успешного заказа (место любое,
        данные пассажиров любые)

        На хэппи пейдж нажать "Подробнее о заказе"
    - assert: >-
        * Открылась страница заказа

        * На странице есть кнопки Сдать билет

        * На странице нет кнопок для смены статуса ЭР

        десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2020-09-07_13.47.43-q1i72.png

        тач:
        https://jing.yandex-team.ru/files/shenfeld/2020-09-07_13.48.08-o3dk2.png
    - do: |-
        Нажать Сдать билет
        В модальном окне нажать Подтвердить
    - assert: |-
        * Осуществился возврат билета
        * Кнопки Сдать пропали
        * Ошибок нет
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  - Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_FAILURE&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  - В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Ошибка при бронировании':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Москва - Санкт-Петербург через месяц

        Для любого поезда кликнуть по кнопке Выбрать место

        На странице выбора мест выбрать любое место в любом вагоне

        Нажать Указать пассажиров

        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить поля любыми валидными данными

        Нажать Проверить заказ и купить
    - assert: |-
        - Переход на страницу подтверждения не произошел
        - Отображается ошибка "Что-то пошло не так
        Mocked fail scenario"
        с кнопкой "Выбрать места заново"
    - do: Нажать "Выбрать места заново"
    - assert: '- Произошел переход на страницу выбора мест'
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  - Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=10

  - В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Ошибка получения данных о заказе':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Москва - Санкт-Петербург через месяц

        Для любого поезда кликнуть по кнопке Выбрать место

        На странице выбора мест выбрать любое место в любом вагоне

        Нажать Указать пассажиров

        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        заполнить поля любыми валидными данными

        Нажать Проверить заказ и купить

        Нажать Ввести карту и оплатить

        Ввести данные тестовой карты

        Нажать Оплатить
    - assert: '- Произошел переход на страницу заказа'
    - do: |-
        Выждать 10 секунд
        Перезагрузить страницу заказа
    - assert: >-
        - Страница не открывается

        - Отображается ошибка "Произошла ошибка

        Не удалось загрузить данные о заказе. Попробуйте позднее. Если проблема
        повторяется, свяжитесь со службой поддержки по номеру 8 800 511-71-04
        или через форму обратной связи."

        с кнопками "Вернуться на главную" и "Перезагрузить страницу"
    - do: Нажать "Перезагрузить страницу"
    - assert: |-
        - Страница обновилась
        - Отображается ошибка
    - do: Нажать "Вернуться на главную"
    - assert: '- Произошел переход на главную портала'
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  - Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_FAILURE&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  - В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Ошибка добавления страховки (автовозврат)':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Москва - Санкт-Петербург через месяц

        Для любого поезда кликнуть по кнопке Выбрать место

        На странице выбора мест выбрать любое место в любом вагоне

        Нажать Указать пассажиров

        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить поля любыми валидными данными

        Нажать Проверить заказ и купить

        Установить чекбокс страховки

        Нажать Ввести карту и оплатить

        Ввести данные тестовой карты

        Нажать Оплатить
    - assert: >-
        - Произошел переход на страницу заказа

        - На странице отображается желтое предупреждение "При покупке страховых
        полисов произошла ошибка, поэтому билеты оформлены без страховки. Деньги
        за нее вернутся в ближайшее время."

        - В билетах нет пункта "Страховка"

        - Итоговая сумма указана без учета страховки
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Оплата
description: >-
  - Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_FAILURE&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  - В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Ошибка подтверждения брони в ИМ':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск Москва - Санкт-Петербург через месяц

        Для любого поезда кликнуть по кнопке Выбрать место

        На странице выбора мест выбрать любое место в любом вагоне

        Нажать Указать пассажиров

        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить поля любыми валидными данными

        Нажать Проверить заказ и купить

        Нажать Ввести карту и оплатить

        Ввести данные тестовой карты

        Нажать Оплатить
    - assert: '- Появился лоадер загрузки'
    - do: Подождать несколько секунд
    - assert: >-
        - Появилось модальное окно с ошибкой "Что-то пошло не так

        Не удалось выкупить билет. Попробуйте ещё раз. Не волнуйтесь, деньги не
        списались. Если проблема повторяется, свяжитесь со службой поддержки по
        телефону 8 800 511-71-04."
    - do: Нажать "Выбрать места заново"
    - assert: '- Произошел переход на страницу выбора мест'
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
    Поскольку невозвратный тариф - это акционная вещь, то самые актуальные данные
    по ним будут у РЖД: https://www.rzd.ru/ru/9332
specs:
    'ЖД: Переключение невозвратного тарифа в корзине':
        - do: |
              Перейти на вкладку ЖД
              Перейти на поиск Москва - Санкт-Петербург через месяц
              Выбрать поезд "Сапсан" или "Мегаполис"
        - assert: Произошел переход на страницу выбора мест
        - do: |
              Выбрать двух взрослых пассажиров
              Выбрать класс 2Т
              На схеме выбрать 2 места в последнем купе (места 33-36)
        - assert: |
              - Выбранные места окрасились в желтый
              - В корзине появилась информация о тарифах (в десктопе корзина справа, в
              таче появляется по тапу на иконку ?)

              скрин десктоп:
              https://jing.yandex-team.ru/files/shenfeld/2020-09-11_13.12.26-yp7ju.png
              скрин тач:
              https://jing.yandex-team.ru/files/shenfeld/2020-09-11_13.12.02-4wtsx.png
              - В корзине есть баттон для переключения невозвратного/обычного тарифа
              - По умолчанию выбран возвратный тариф
              - Есть указание общей стоимости для обоих тарифов
              - Есть указание размера скидки для невозвратного тарифа
              - Сумма за два билета равна сумме по стандартному тарифу
        - do: |
              Выбрать невозвратный тариф
              Нажать на ссылку "Подробнее" в корзине в информации о невозвратном
              тарифе
        - assert: |
              - Развернулся текст "Места [выбранные места] со скидкой по невозвратному
              тарифу. При сдаче такого билета деньги вернутся не полностью. Возврат
              полной стоимости возможен только в определенных случаях."
        - do: Кликнуть по ссылке "Возврат"
        - assert: Произошел переход в новой вкладке на страницу с правилами возврата
        - do: |
              Вернуться на страницу выбора мест
              Переключить тариф на Стандартный
        - assert: |
              - Тариф переключился
              - Сумма к оплате изменилась (стала больше)
        - do: Перевыбрать места - 32 и 33
        - assert: |
              - В корзине поменялась сумма за невозвратный тариф
              - В приписке про невозвратный тариф указано только место 33: "Место 33
              со скидкой по невозвратному тарифу"
        - do: |
              Нажать "Указать пассажиров"
              Ввести любые данные
              В корзине переключить тариф на стандартный, затем вернуть на невозвратный
        - assert: |
              - Тариф в корзине переключается
              - При переключении меняется сумма к оплате
        - do: Нажать Проверить заказ и купить
        - assert: |
              - Произошел переход на страницу подтверждения
              - В корзине больше нельзя переключить тариф
              - Номера мест могут отличаться от тех, которые выбирали! Главное, чтобы
              совпадало кол-во: 1 невозвратный, 1 обычный
              - В приписке про невозвратный тариф указано только одно место (номер
              этого места может отличаться от предыдущих шагов, если места при
              бронировании были изменены!): "Место 33 со скидкой по невозвратному
              тарифу"
              - Цены за билеты отличаются друг от друга - билет по невозвратному
              тарифу дешевле

              скрин корзины:
              https://jing.yandex-team.ru/files/shenfeld/2020-09-11_13.45.13-ajw1z.png

manual: true
Функциональность: Бронь с разными условиями
Устройство:
    - Тач
    - Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
    Также невозвратные можно поискать на:

    Москва - Санкт-Петербург, поезд 726Ч, вагон 1

    Москва - Адлер поезд 104В, вагон 9

    Москва - Ростов-на-Дону, поезд 020С, класс 2Э, вагон 4.


    НО: Поскольку невозвратный тариф - это акционная вещь, то самые актуальные
    данные по ним будут у РЖД: https://www.rzd.ru/ru/9332


    **Асессорам:** Если не удалось найти указанный в шагах тариф, повторите кейс
    для данных, которые будут по ссылке.
specs:
    'ЖД: Покупка с невозвратным тарифом':
        - do: |-
              Перейти на вкладку ЖД
              Сделать поиск Москва - Санкт-Петербург через неделю
              Для поезда 020У кликнуть по кнопке покупки
        - assert: '- Произошел переход на страницу выбора мест'
        - do: >-
              Выбрать класс 1У (в СВ), вагон номер 5

              На схеме выбрать любое место в этом вагоне

              скрин:
              https://jing.yandex-team.ru/files/shenfeld/2021-01-14_12.19.33-ah25y.png
        - assert: >-
              - Выбранное место окрасилось в желтый

              - В корзине появилась информация о тарифе (в десктопе корзина справа, в
              таче появляется по тапу на иконку со знаком вопроса

              скрин десктоп:
              https://jing.yandex-team.ru/files/shenfeld/2021-03-24_15.30.23-fre19.png

              скрин тач:
              https://jing.yandex-team.ru/files/shenfeld/2021-03-24_15.31.29-83kzi.png

              - В корзине есть баттон для переключения невозвратного/обычного тарифа

              - По умолчанию выбран возвратный тариф
        - do: |-
              Выбрать невозвратный тариф
              Нажать Указать пассажиров
              Ввести любые валидные данные пассажира
              Нажать Проверить заказ и купить
        - assert: >-
              - Произошел переход на страницу подтверждения

              - В корзине указано выбранное место, и есть информация, что это место по
              невозвратному тарифу
        - do: |-
              Нажать Ввести карту и оплатить
              Ввести данные тестовой карты (асессорам не надо)
              Нажать Оплатить (асессорам не надо)
              На хэппи пейдж нажать на кнопку "Подробнее о заказе"
        - assert: >-
              - Произошел переход на страницу полного заказа

              - На странице есть текст на желтом фоне "В вашем заказе есть билеты по
              невозвратному тарифу. При сдаче такого билета деньги вернутся не
              полностью. Возврат полной стоимости возможен только в определенных
              случаях."
        - do: Нажать по ссылке "Возврат" в тексте
        - assert: >-
              - Произошел переход на страницу поддержки с информацией о правилах
              возврата
        - do: |-
              Вернуться на Яндекс.Путешествия
              Нажать Сдать билет
        - assert: '- Появилось модальное окно с суммой к возврату'
        - do: |-
              Запомнить сумму
              Нажать Подтвердить
        - assert: |-
              - Через несколько секунд осуществился возврат
              - Рядом с билетом появился статус "Возврат"
              - Сумма к возврату совпадает с суммой в модальном окне
              - Текст на желтом фоне про возврат пропал
manual: true
Функциональность: Действия с заказом
Устройство:
    - Тач
    - Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Поскольку невозвратный тариф - это акционная вещь, то самые актуальные данные
  по ним будут у РЖД: https://www.rzd.ru/ru/9332
specs:
  'ЖД: Нельзя сделать общий возврат для заказа с невозвратным и обычным тарифом':
    - do: >-
        Перейти на вкладку ЖД

        Перейти на поиск

        Москва - Йошкар-Ола на завтра

        Перейти по кнопке Выбрать место

        Найти вагон с невозвратными тарифами (обычно есть для последних мест в
        вагоне):

        скрин десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2021-01-27_17.17.01-z6y37.png

        скрин тач:
        https://jing.yandex-team.ru/files/shenfeld/2021-01-27_17.17.35-dyrc9.png


        Если ни в одном вагоне нет невозвратного тарифа, поискать в поездах на
        другие даты
    - do: >-
        Выбрать 2 взрослых пассажира

        В вагоне с невозвратным тарифом выбрать одно место с невозвратным
        тарифом, а второе обычное:

        скрин десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2021-01-27_17.19.58-5wd4p.png

        скрин тач:
        https://jing.yandex-team.ru/files/shenfeld/2021-01-27_17.19.19-belwp.png
    - assert: >-
        - В корзине появилась информация, что одно из мест по невозвратному
        тарифу (для тача корзина раскрывается по иконке вопроса у цены)
    - do: |-
        Нажать Указать пассажиров
        Ввести любые валидные данные
        Нажать Проверить заказ и купить
    - assert: >-
        - Произошел переход на страницу подтверждения

        - Для одного из мест применен невозвратный тариф (номера мест могут
        отличаться от предыдущих шагов, если по факту были выданы другие места)
    - do: |-
        Нажать Ввести карту и оплатить
        Ввести данные тестовой карты (асессорам не надо)
        Нажать Оплатить
        Нажать Подробнее о заказе
    - assert: >-
        - Произошел переход на страницу успешного заказа

        - Под блоком с информацией о поезде, рядом с кнопками Скачать,
        Распечатать итд нет действия "Сдать билеты"

        - Есть кнопки Сдать билет отдельно для каждого билета
manual: true
Функциональность: Покупка
Устройство:
  - Тач
  - Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: Портал
type: Главная
description: ''
specs:
  Клик по логотипу Путешествий ведет на главную соответствующей вертикали:
    - do: |-
        Перейти на главную
        Выполнить любой поиск на вкладке авиа (например, Москва - Сочи)
        На странице выдачи кликнуть по логотипу Путешествий в шапке
    - assert: '- Произошел переход на главную, вкладка авиа'
    - do: >-
        Последовательно перейти на поиск всех остальных вертикалей (ЖД, отели,
        автобусы)

        Кликнуть по логотипу Путешествий
    - assert: >-
        - Происходит переход на главную, на вкладку соответствующей вертикали, с
        которой выполнили клик по логотипу
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Главная
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: Бронирование
description: Быть незалогином
specs:
  Промокод недоступен незалогинам:
    - do: 'Перейти на страницу бронирования для любого отеля, на любые даты'
    - assert: |-
        Открылась страница бронирования.
        В корзинке есть галка "У меня есть промокод", по умолчанию выключена.
        Поле инпут для промокода и кнопка "Применить" не показывается.
    - do: Включить галку "У меня есть промокод"
    - assert: >-
        Поле инпут для промокода и кнопка "Применить" не показываются.

        Появилась надпись "Использование промокодов доступно только после
        авторизации"
manual: true
Функциональность: Промокод
Устройство:
  - Тач
  - Десктоп
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
feature: Отели
type: Бронирование
description: Залогиниться
specs:
  Неуспешное применение промокода:
    - do: 'Перейти на страницу бронирования для любого отеля, на любые даты'
    - assert: >-
        Открылась страница бронирования.

        В корзинке есть галка "У меня есть промокод", по умолчанию выключена.
        Поле инпут для промокода и кнопка "Применить" не показывается.
    - do: Включить галку "У меня есть промокод"
    - assert: |-
        Появилось Поле инпут для промокода и кнопка "Применить"
        Кнопка по умолчанию неактивна
    - do: 'В инпут написать промокод "EXPIRED", нажать применить'
    - assert: Появился тултип "Истек срок действия промокода"
    - do: 'В инпут написать промокод "NOT_APPLICABLE", нажать применить'
    - assert: >-
        Появился тултип "Промокод не может быть применен к данному заказу/ не
        соответствует условиям применения"
manual: true
Функциональность: Промокод
Устройство:
  - Тач
  - Десктоп
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
feature: Отели
type: Бронирование
description: Залогиниться
specs:
  Успешное применение промокода:
    - do: 'Перейти на страницу бронирования для любого отеля, на любые даты'
    - assert: >-
        Открылась страница бронирования.

        В корзинке есть галка "У меня есть промокод", по умолчанию выключена.
        Поле инпут для промокода и кнопка "Применить" не показывается.
    - do: Включить галку "У меня есть промокод"
    - assert: Появилось Поле инпут для промокода и кнопка "Применить"
    - do: >-
        Если есть чекбоксы предоплаты и полной оплаты, выбрать Оплатить
        полностью

        Запомнить итоговую сумму заказа
    - do: 'В инпут написать промокод "SUCCESS", нажать применить'
    - assert: |-
        Инпут, кнопка и галка задизейблились
        В блоке с промокодом появилась сумма скидки: "− 200 ₽"
        Появилась ссылка "Отменить"
        Сумма заказа стала на 200р меньше, чем была в п.3
    - do: >-
        Заполнить информацию о гостях и контактную информацию любыми валидными
        данными.

        Нажать оплатить.
    - assert: |-
        Открылась страница с формой оплаты.
        Сумма к оплате соответствует сумме из п.4
    - do: Оплачиваем заказ
    - assert: Открылась страница успешной брони happy page
    - do: Нажать Подробнее о заказе
    - assert: >-
        Сумма заказа соответствует сумме из п.4

        В корзинке есть информация о примененном промокоде: "Скидка по промокоду
        SUCCESS − 200 ₽"
manual: true
Функциональность: Промокод
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
feature: Отели
type: Бронирование
description: Залогиниться
specs:
  Промокод отклонен на этапе бронирования:
    - do: 'Перейти на страницу бронирования для любого отеля, на любые даты'
    - assert: >-
        Открылась страница бронирования.

        В корзинке есть галка "У меня есть промокод", по умолчанию выключена.
        Поле инпут для промокода и кнопка "Применить" не показывается.
    - do: Включить галку "У меня есть промокод"
    - assert: Появилось Поле инпут для промокода и кнопка "Применить"
    - do: Запомнить итоговую сумму заказа
    - do: 'В инпут написать промокод "SUCCESS_ALREADY_APPLIED", нажать применить'
    - assert: |-
        Инпут, кнопка и галка задизейблились
        В блоке с промокодом появилась сумма скидки: "− 200 ₽"
        Появилась ссылка "Отменить"
        Сумма заказа стала на 200р меньше, чем была в п.3
    - do: >-
        Заполнить информацию о гостях и контактную информацию любыми валидными
        данными.

        Нажать оплатить.
    - assert: >-
        Остались на странице бронирования.

        Появился попап:

        Надпись: "Промокод отклонен Вы можете оплатить заказ полностью без
        применения промокода либо отменить его"

        Две кнопки: отменить заказ, оплатить

        Две цены: без скидки и со скидкой
    - do: Нажать кнопку "Отменить заказ"
    - assert: |-
        Открылась страница бронирования
        Галка "У меня есть промокод" отжата
        Поле инпут для промокода и кнопка "Применить" не показывается.
        Сумма без учета скидки(из п.3)
    - do: |-
        Повторить пп.4,5
        Нажать "Оплатить"
    - assert: Открылась форма оплаты заказа. Сумма без скидки.
    - do: |-
        Оплатить заказ
        На хэппи пейдж нажать Подробнее о заказе
    - assert: |-
        Открылась страница заказа
        Сумма "Оплачено" без скидки.
        Лейбла с промокодом нет
    - do: Повторить пп 4-8 с промокодом SUCCESS_NOT_APPLICABLE
manual: true
Функциональность: Промокод
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
feature: Отели
type: Бронирование
description: Залогиниться
specs:
  'Отели: Рефреш формы траста':
    - do: 'Перейти на страницу бронирования для любого отеля, на любые даты'
    - assert: >-
        Открылась страница бронирования.

        В корзинке есть галка "У меня есть промокод", по умолчанию выключена.
        Поле инпут для промокода и кнопка "Применить" не показывается.
    - do: Включить галку "У меня есть промокод"
    - assert: Появилось Поле инпут для промокода и кнопка "Применить"
    - do: Запомнить итоговую сумму заказа
    - do: 'В инпут написать промокод "AUTOTEST_PROMOCODE_200", нажать применить'
    - assert: |-
        Инпут, кнопка и галка задизейблились
        В блоке с промокодом появилась сумма скидки: "− 200 ₽"
        Запомнить итоговую сумму
    - do: >-
        Заполнить информацию о гостях и контактную информацию любыми валидными
        данными.

        Нажать оплатить.
    - assert: |-
        Открылась страница с формой оплаты.
        Сумма к оплате соответствует сумме из п.4
    - do: Обновить страницу
    - assert: |-
        Остались на странице с трастом
        Показался попап "Ошибка оплаты Вы отменили платеж."
        В нем две кнопки: Отменить заказ, Попробовать еще раз
        Сумма c учетом промокода
    - do: Нажать на кнопку Отменить заказ
    - assert: |-
        Попап закрылся
        Открылась страница бронирования
        Промокод не применен
    - do: |-
        Применить промокод
        Повторить пп 6,7
        Нажать на кнопку Попробовать еще раз
    - assert: |-
        Попап скрылся
        Открылась форма траста
    - do: Завершить оплату
    - assert: Открылась страница успешного заказа
    - do: Нажать Подробнее о заказе
    - assert: Сумма соответствует сумме с учетом промокода
manual: true
Функциональность: Промокод
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
feature: Отели
type: Бронирование
description: Залогиниться
specs:
  'Отели: Рефреш формы траста с попапом ошибки оплаты':
    - do: 'Перейти на страницу бронирования для любого отеля, на любые даты'
    - assert: >-
        Открылась страница бронирования.

        В корзинке есть галка "У меня есть промокод", по умолчанию выключена.
        Поле инпут для промокода и кнопка "Применить" не показывается.
    - do: Включить галку "У меня есть промокод"
    - assert: Появилось Поле инпут для промокода и кнопка "Применить"
    - do: Запомнить итоговую сумму заказа
    - do: 'В инпут написать промокод "AUTOTEST_PROMOCODE_200", нажать применить'
    - assert: |-
        Инпут, кнопка и галка задизейблились
        В блоке с промокодом появилась сумма скидки: "− 200 ₽"
        Появилась ссылка "Отменить"
        Сумма заказа стала на 200р меньше, чем была в п.3
    - do: >-
        Заполнить информацию о гостях и контактную информацию любыми валидными
        данными.

        Нажать оплатить.
    - assert: |-
        Открылась страница с формой оплаты.
        Сумма к оплате соответствует сумме из п.4
    - do: Нажать на кнопку оплатить заказ
    - assert: >-
        Открылась страница успешной брони happy page

        Сумма заказа соответствует сумме из п.4

        В корзинке есть информация о примененном промокоде: "Скидка по промокоду
        SUCCESS − 200 ₽"
    - do: Обновить страницу
    - assert: |-
        Остались на странице с трастом
        Показался попап "Ошибка оплаты Вы отменили платеж."
        В нем две кнопки: Отменить заказ, Попробовать еще раз
        Сумма c учетом промокода
    - do: Обновить страницу
    - assert: Попап снова показался
    - do: Нажать на кнопку Попробовать еще раз
    - assert: |-
        Попап скрылся
        Открылась форма траста
    - do: Завершить оплату
    - assert: Открылась страница успешного заказа
    - do: Нажать Подробнее о заказе
    - assert: Сумма соответствует сумме с учетом промокода
manual: true
Функциональность: Промокод
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  'ТК Авиа: Изменение цены при переходе на бой':
    - do: >-
        Дернуть ручку тестового контекста
        https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_PRICE_CHANGED&checkAvailabilityBeforeBookingOutcome=CAO_SUCCESS&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_SUCCESS&mqEventOutcome=MEO_NO_EVENT

        Положить значение из "token" в куку variantTestContext, из
        "payment_token" в куку paymentTestContext
    - do: Перейти на страницу бронирования
    - assert: >-
        Открылась страница бронирования

        Появился модал "Цена изменилась". У него две кнопки: "Продолжить
        бронирование","Вернуться к результатам поиска"
    - do: Нажать "Продолжить бронирование"
    - assert: >-
        Модал закрылся

        В корзинке появилась вторая цена и в блоке тарифов и в блоке итого.
        Новая цена на 10р больше исходной.

        В корзинке появился лейбл "Цена изменилась после уточнения предложения у
        Авиакомпании."
    - do: |-
        Запомнить новую цену.
        Заполнить данные о пассажирах валидными данными
        Нажать кнопку "Оплатить"
    - assert: Открылась страница с трастом
    - do: Выполнить оплату
    - assert: Открылась страница  happy page "Вы успешно забронировали билеты"
    - do: Кликнуть по кнопке Подробнее о заказе.
    - assert: |-
        Перешли на страницу заказа в ЛК.
        Оплаченная сумма в корзинке равна той, что мы запомнили в п.3
manual: true
Функциональность: Бронирование
Устройство:
  - Тач
  - Десктоп
Сервис: Авиа
Tag: TK
feature: ЖД
type: Главная
description: ''
specs:
  'ЖД: Блок перелинковки на вкладке':
    - do: |-
        Перейти на вкладку ЖД
        Промотать страницу вниз
    - assert: >-
        - Внизу страницы есть блок перелинковки:

        Десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2020-10-19_16.19.17-01zyu.png

        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2020-10-19_16.19.40-79tf2.png
    - do: Кликнуть по одной из ссылок
    - assert: '- Открывается страница с расписанием для выбранного направления'
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Главная
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: ''
specs:
  'ЖД: Ошибка "Нет мест по указанным требованиям"':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на любой поиск (например, Москва - Казань)
        Для любого поезда кликнуть по кнопке покупки
    - assert: '- Произошел переход на страницу выбора мест'
    - do: 'Выбрать любое место, нажать Указать пассажиров'
    - assert: '- Произошел переход на ввод данных'
    - do: Скопировать ссылку на эту страницу и открыть в новой вкладке
    - assert: '- Открылась страница ввода данных в тот же поезд и на те же места'
    - do: В одной из вкладок нажать Проверить заказ и купить
    - assert: '- Произошел переход на страницу подтверждения'
    - do: Во второй вкладке нажать Проверить заказ и купить
    - assert: |-
        - Перехода на страницу подтверждения не произошло
        - Появилась ошибка в модальном окне "Что-то пошло не так
        Нет мест по указанным требованиям" с кнопкой "Выбрать места заново"
    - do: Нажать Выбрать места заново
    - assert: >-
        - Произошел переход на выбор мест

        - Раскрыт тот класс, который выбирали до этого

        - Место, которое забронировано в первой вкладке, недоступно для выбора
        (отображается как занятое)
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  'Boy авиа: успешная оплата с 3dsecure2':
    - do: >-
        Перейти на страницу бронирования любого направления на любую дату 1
        взрослый
    - assert: Открылась страница бронирования
    - do: |-
        Запомнить сумму к оплате
        Ввести валидные данные пассажиров и контактные данные
        Нажать оплатить
    - assert: Открылась страница оплаты
    - do: |-
        Ввести карту 5555 5555 5555 5599 12/24 123
        Нажать оплатить
    - assert: >-
        Во фрейме появилась форма 3ds2, примерный внешний вид:
        https://jing.yandex-team.ru/files/tcheremnykh/Screenshot_4.png
    - do: Нажать на кнопку success
    - assert: >-
        Открылась страница happy page //(успешность или неуспешность не
        проверяем во избежание флапов)

        Сумма заказа совпадает с суммой из п2
manual: true
Функциональность: Бронирование
Устройство:
  - Тач
  - Десктоп
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag: Blocker
feature: Авиа
type: Оплата
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  'ТК Авиа: Изменение цены при оплате на бой':
    - do: >-
        Дернуть ручку тестового контекста
        https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_SUCCESS&checkAvailabilityBeforeBookingOutcome=CAO_PRICE_CHANGED&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_SUCCESS&mqEventOutcome=MEO_SUCCESS

        Положить значение из "token" в куку variantTestContext  (paymentContext
        пустой)
    - do: Перейти на страницу бронирования
    - assert: Открылась страница бронирования
    - do: |-
        Заполнить данные о пассажирах валидными данными
        Запомнить сумму заказа
        Нажать кнопку "Оплатить"
    - assert: >-
        Открылась страница оплаты с трастом

        Появился модал "Цена изменилась" с кнопками "Вернуться к результатам
        поиска" и "Продолжить бронирование"

        Запомнить сумму2 из этого модала
    - do: |-
        Нажать Продолжить бронирование
        (карту не вводим, ТК сам сэмулирует оплату автоматически)
    - assert: >-
        Открылась страница  happy page "Вы успешно забронировали билеты"

        Оплаченная сумма в корзинке равна сумме2, которую мы запомнили в п.3

        Цена у единственного пассажира в корзинке также равна сумме2, которую мы
        запомнили в п.3
manual: true
Функциональность: Бронирование
Устройство:
  - Тач
  - Десктоп
Страница: Оплата
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
feature: ЖД
type: ''
description: ''
specs: {}
manual: true
Сервис: ЖД
feature: Авиа
type: Оплата
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  'ТК Авиа: Не подтверждение оплаты аэрофлотом':
    - do: >-
        Дернуть ручку тестового контекста
        https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_SUCCESS&checkAvailabilityBeforeBookingOutcome=CAO_SUCCESS&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_PAYMENT_FAILED&mqEventOutcome=MEO_SUCCESS

        Положить значение из "token" в куку variantTestContext, из
        "payment_token" в куку paymentTestContext
    - do: Перейти на страницу бронирования
    - assert: Открылась страница бронирования
    - do: |-
        Заполнить данные о пассажирах валидными данными
        Нажать Оплатить
    - assert: Открылась страница sad page "Мы не смогли подтвердить заказ"
manual: true
Функциональность: Бронирование
Устройство:
  - Тач
  - Десктоп
Страница: Оплата
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
feature: Авиа
type: Оплата
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  'ТК Авиа: Вариант стал недоступен на этапе подтверждения после оплаты':
    - do: >-
        Дернуть ручку тестового контекста
        https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_SUCCESS&checkAvailabilityBeforeBookingOutcome=CAO_SUCCESS&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_VARIANT_NOT_AVIALABLE&mqEventOutcome=MEO_SUCCESS

        Положить значение из "token" в куку variantTestContext, из
        "payment_token" в куку paymentContext
    - do: Перейти на страницу бронирования
    - assert: Открылась страница бронирования
    - do: |-
        Заполнить данные о пассажирах валидными данными
        Запомнить сумму заказа
        Нажать Оплатить заказ (страницы оплаты не будет, тк оплата замокана)
    - assert: Открылась страница sad page "Мы не смогли подтвердить заказ"
manual: true
Функциональность: Бронирование
Устройство:
  - Тач
  - Десктоп
Страница: Оплата
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
feature: Авиа
type: Направления
description: ''
specs:
  'Авиа: Общий вид страницы направления':
    - do: 'Открыть страницу направления: /avia/routes/moscow--sochi/'
    - assert: >-
        Примерный внешний вид десктоп:
        https://jing.yandex-team.ru/files/tcheremnykh/ррор.png

        Примерный внешний вид тач:
        https://jing.yandex-team.ru/files/tcheremnykh/screencapture-travel-yandex-ru-avia-routes-moscow-sochi-2020-10-28-14_30_50.png

        На странице присутствуют блоки:

        * Поисковая форма

        * Динамика цен

        * Блок навигации

        * Блок когда лучше лететь

        * Блок прямых рейсов

        * Блок рейсов с пересадками

        * Блок соседних городов

        * Блок вопросов (Все вопросы по умолчанию развернуты)

        * Блок обратных билетов
    - do: Проверка блока "динамика цен"
    - assert: >-
        При открытии страницы у каждого столбика есть цена. Если цены нет -
        происходит опрос партнеров (желтый спиннер)

        [Только десктоп] По умолчанию выбран размер- неделя

        По умолчанию все фильтры отжаты

        По клику на цену попадаем на выдачу (/avia/search/result/) с
        соответствующим днем и направлением

        При включении фильтра цены меняются (если не меняются, проверить, что
        минимальная цена на выдаче с фильтром и без совпадает)

        Фильтры пробрасываются на выдачу (включить фильтр, кликнуть на цену ->
        на выдаче этот фильтр должен быть включен)
    - do: Проверка блока навигации
    - assert: >-
        При клике на каждый пункт из навигации страница скроллится к выбранному
        блоку
    - do: Проверка блока "Когда лучше лететь"
    - assert: >-
        Примерный текст: "Самый выгодный месяц для перелёта — {месяц}. Билет на
        самолёт будет стоить около {цена} ₽. Это на {процент}% ниже средней
        стоимости за год.

        {месяц}— самый популярный месяц направления. Цены на авиабилеты обычно
        на {процент}% ниже средней стоимости."
    - do: Проверка блока прямых рейсов
    - assert: >-
        Примерный текст: "Самая низкая цена прямого рейса у компании {АК}—
        {цена} ₽."

        Ниже таблица АК - цена

        Цена- ссылка,  при клике на нее попадаем на выдачу с предвыбранным
        соответствующем фильтром авиакомпании

        На выдаче есть прямые рейсы
    - do: Проверка блока непрямых рейсов
    - assert: >-
        Примерный текст: "{АК} предлагает самую низкую стоимость авиаперелёта с
        пересадками — {цена} ₽."

        Ниже таблица АК - цена

        Цена- ссылка,  при клике на нее попадаем на выдачу с предвыбранным
        соответствующем фильтром авиакомпании
    - do: Проверка блока соседних городов
    - assert: >-
        Заголовок: "Авиабилеты в города недалеко от {город}"

        Текст: "Проверьте, нет ли подходящих авиарейсов в соседние города
        прилёта, — возможно, вы найдёте более комфортные даты или сэкономите на
        билетах."

        Ниже таблица город- цена

        Город - ссылка. При клике ведет на страницу направления. Город откуда-
        тот же, город куда- соответствует кликнутому
    - do: Блок вопросов
    - assert: |-
        Все вопросы по умолчанию развернуты
        Ак, аэропорты, время полета примерно соответствует реальности
    - do: Блок обратных билетов
    - assert: |-
        Таблица из одной строки, города (поменяны местами) - цена
        Города- ссылка, при клике ведет на страницу направления
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Направления
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: tcheremnykh
feature: Авиа
type: Оплата
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  'ТК Авиа: Ошибка оплаты':
    - do: >-
        Дернуть ручку тестового контекста
        https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_SUCCESS&checkAvailabilityBeforeBookingOutcome=CAO_SUCCESS&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_PAYMENT_FAILED&mqEventOutcome=MEO_NO_EVENT

        Положить значение из "token" в куку variantTestContext, из
        "payment_token" в куку paymentContext
    - do: Перейти на страницу бронирования
    - assert: Открылась страница бронирования
    - do: |-
        Заполнить данные о пассажирах валидными данными
        Нажать Оплатить заказ (страницы оплаты не будет, тк оплата замокана)
    - assert: Открылась страница sad page "Мы не смогли подтвердить заказ"
manual: true
Функциональность: Бронирование
Устройство:
  - Тач
  - Десктоп
Страница: Оплата
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
feature: Автобусы. Старый фронт
type: ''
description: >-
  Нужно провести исследовательское тестирование сайта автобусов на старом
  фронте, смотрим на все функциональности, верстку страниц, поиск рейсов,
  контент, бронирование (можно дойти до этапа оплаты)

  Подозрительные тикеты заводим в задачи.
specs: {}
manual: true
Сервис: Автобусы. Старый фронт
Tag: Исследовательское
feature: ЖД
type: Выдача
description: Десктоп
specs:
  'ЖД: Страница направления':
    - do: |-
        Перейти на вкладку ЖД
        Выполнить поиск Москва - Санкт-Петербург на любую дату
    - assert: '- Произошел переход на страницу поиска'
    - do: >-
        Внизу страницы в хлебных крошках кликнуть по ссылке "Купить билеты на
        поезда Москва — Санкт-Петербург"
    - assert: >-
        - Произошел переход на страницу направления для Москва — Санкт-Петербург

        - Календарь развернут

        - Форма поиска заполнена "Москва — Санкт-Петербург"

        - Под формой поиска заголовок "Купить билеты на поезд Москва —
        Санкт-Петербург" и текст "Выберите дату отправления, чтобы узнать
        расписание поездов, проверить наличие мест, сравнить стоимость ж⁠/⁠д
        билетов и купить их онлайн."

        - Ниже заголовок "Расписание поездов из Москвы в Санкт-Петербург на
        завтра" (может быть указано послезавтра, если рейсов на завтра нет)

        - Отображается 5 сниппетов

        - Под сниппетами кнопка "Посмотреть все поезда на завтра" (может быть
        указано послезавтра)

        скрин:
        https://jing.yandex-team.ru/files/shenfeld/2020-12-03_18.44.42-5avif.png
    - do: Нажать по кнопке "Посмотреть все поезда на завтра"
    - assert: >-
        - Развернулся список всех рейсов на дату поиска + 4 часа от следующей
        даты
    - do: |-
        Промотать страницу вниз
        Нажать "Посмотреть рейсы обратно"
    - assert: >-
        - В новой вкладке открылась такая же страница направления, но для рейса
        обратно
    - do: Для любого сниппета нажать на кнопку Выбрать место
    - assert: '- Открылась страница покупки билета в выбранный поезд'
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Тач: Страница направления':
    - do: |
        Перейти на вкладку ЖД
        Выполнить поиск Москва - Санкт-Петербург на любую дату
    - assert: Произошел переход на страницу поиска
    - do: |
        Внизу страницы в хлебных крошках кликнуть по ссылке "Купить билеты на
        поезда Москва — Санкт-Петербург"
    - assert: |
        * Произошел переход на страницу направления для Москва — Санкт-Петербург
        * Есть заголовок "Купить билеты на поезд Москва — Санкт-Петербург" и
        текст "Выберите дату отправления, чтобы узнать расписание поездов,
        проверить наличие мест, сравнить стоимость ж⁠/⁠д билетов и купить их
        онлайн."
        * Под заголовком отображается развернутая форма поиска
        * Форма поиска заполнена "Москва — Санкт-Петербург", дата поиска не
        заполнена, есть кнопка "Найти"
        * Под формой заголовок "Расписание поездов из Москвы в Санкт-Петербург
        на ХХХ" (где ХХХ - это завтрашняя дата или послезавтра, если рейсов на завтра нет)
        * Отображается 5 сниппетов
        * Под сниппетами кнопка "Посмотреть все поезда на ХХХ" (где ХХХ - это завтрашняя дата
        или послезавтра, если рейсов на завтра нет)

        скрин:
        https://jing.yandex-team.ru/files/arhey/2022-02-14T17:18:11Z.3a44c5a.png
    - do: Нажать по кнопке "Посмотреть все поезда на завтра"
    - assert: |
        * Развернулся список всех рейсов на дату поиска + 4 часа от следующей
        даты
    - do: |
        Промотать страницу вниз
        Нажать "Посмотреть рейсы обратно"
    - assert: |
        * В новой вкладке открылась такая же страница направления, но для рейса
        обратно
    - do: Для любого сниппета нажать на кнопку Выбрать место
    - assert: Открылась страница выбора мест в выбранный поезд

manual: true
Функциональность: Содержание выдачи
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Поиск через форму со страницы направления':
    - do: >-
        Открыть страницу направления для Москва - Екатеринбург (на выдаче может не быть мест или крутиться лоадер загрузки):

        Тестинг: https://travel-test.yandex.ru/trains/moscow--yekaterinburg/

        Прод: https://travel.yandex.ru/trains/moscow--yekaterinburg/

        **Стенд асессоров:**
        https://travel.crowdtest.yandex.ru/trains/moscow--yekaterinburg/
    - assert: '- Открылась страница направления, вверху расположена форма поиска'
    - do: >-
        Изменить пункты отправления/прибытия в форме поиска на "Москва - Санкт-Петербург",
        выбрать произвольную дату

        Нажать Найти
    - assert: '- Произошел переход на страницу выдачи для выбранного направления и даты'
manual: true
Функциональность: Форма поиска
Устройство:
  - Тач
  - Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Страница-заглушка, когда дофильтровали до 0':
    - do: |-
        Перейти на вкладку ЖД
        Заполнить форму поиска: Санкт-Петербург - Москва, дата любая
        Нажать Найти
    - assert: '- Произошел переход на выдачу'
    - do: >-
        Установить фильтры:

        - скоростные поезда - Сапсан

        - цена - переместить бегунки максимально близко друг к другу, чтобы не
        было доступных вариантов
    - assert: >-
        - Фильтры применились

        - Отображается страница:
        https://jing.yandex-team.ru/files/shenfeld/2020-12-03_19.18.12-zfwmv.png

        - Есть текст: "Нет подходящих вариантов

        Ни один вариант из результатов поиска не соответствует заданным
        фильтрам.

        Пожалуйста, сбросьте один или несколько фильтров."

        - Есть кнопки для снятия фильтров
    - do: Нажать на крестик у фильтра Цены
    - assert: |-
        - Фильтр снялся
        - Отображается выдача, отфильтрованная по Сапсанам
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Тач
  - Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs: {}
manual: true
Страница: Выдача
Сервис: ЖД
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги в кейсе, где требуется ввести данные
  карты и нажать кнопку Оплатить, нужно пропустить и продолжать прохождение
  кейса.**


  Данные тестовой карты:

  5100003697253468

  12/20

  090
specs:
  'ЖД: Покупка на часть пересадки, тач':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на выдачу Москва - Тихвин на любую дату
    - assert: |-
        * Открылась выдача с рейсами с пересадками
        ![](https://jing.yandex-team.ru/files/semirka/Screenshot_42.png)
    - do: Нажать "Маршрут и цены" для одного из сниппетов
    - assert: |-
        - Открылось окно с двумя рейсами
        - Есть кнопка под нижним рейсом "Выбрать места"
        ![](https://jing.yandex-team.ru/files/semirka/Screenshot_43.png)
    - do: Кликнуть по кнопке "Выбрать места"
    - assert: >-
        * Открылась страница выбора мест ( в этой же вкладке )

        * На странице  есть первый поезд, обведен желтой окантовкой, второй
        поезд.

        ![](https://jing.yandex-team.ru/files/semirka/Screenshot_44.png)
    - do: >-
        Выбрать любое место, нажать кнопку "Далее"

        Желтой окантовкой выделился второй поезд , выбрать место для него и по
        шагам покупки дойти до Хеппи Пейдж
    - assert: |-
        * Вверху страницы заказа отображается заголовок "Билет оформлен!"
        * Отображаются два сегмента.
        * Есть информация о пересадке (время, вокзал)
        * Данные о рейсах совпадают с данными на выдаче
        * Есть тексты "Отправили подтверждение на почту ***@yandex.ru и сохранили в разделе Мои поездки"
        ![](https://jing.yandex-team.ru/files/papulova/R7FFJxi2vA.png)
    - do: Кликнуть по кнопке "Подробнее о заказе"
    - assert: >-
        * В (этой же) вкладке открылась страница полного заказа для рейса, на
        который купили билеты
manual: true
Функциональность: Покупка
Устройство: Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Happy page
description: ''
specs:
  'ЖД: Общий вид happy page':
    - do: >-
        Открыть выдачу Москва - Екатеринбург через месяц

        Кликнуть по кнопке “Выбрать место” для поезда со свободными
        платцкартными местами

        Выбрать любое свободное плацкартное место

        Кликнуть по кнопке перехода на следующий шаг покупки “Указать
        пассажиров”.

        Заполнить все поля валидными данными

        Кликнуть по кнопке перехода на следующий шаг покупки “Проверить заказ и
        купить”.

        Кликнуть по кнопке перехода на следующий шаг покупки “Ввести карту и
        оплатить”.

        Оплатить заказ (асессоры пропускают оплату)

        Дождаться загрузки страницы Happy page
    - assert: >-
        На Happy page отображаются:

        - блок с информацией о рейсе

        - заголовок "Билет оформлен", текст "Отправили подтверждение на почту ***@yandex.ru. Только для залогина текст "сохранили в разделе "Мои поездки"
        
        - для залогина на десктопе уведомление "Билет сохранен в ваши поездки" и красный кружок у иконки чемодана. На таче только красный кружок на бургер-меню

        - номер заказа

        - кнопка "Подробнее о заказе"

        - кнопки "Скачать" и "Распечатать" (в таче только "Скачать")

        - телефон поддержки

        - блок с промокодом (баннер), какой это баннер зависит от текущей акции,
        может не быть совсем

        - карта с отелями, ссылка "Выбрать подходящий отель", на десктопе один раскрытый блок с отелем, на таче только синие пины с ценами

        - футер
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Happy page
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Авиа
type: Happy page
description: ''
specs:
  'Авиа: Общий вид happy page':
    - do: >-
        Выполнить поиск авиабилетов по направлению Екатеринбург - Новосибирск

        Отфильтровать рейсы авиакомпании "Аэрофлот" при помощи фильтра
        авиакомпаний

        Кликнуть по любому сниппету в центральной части
        Скрин десктоп: https://jing.yandex-team.ru/files/kuklina/2022-05-16_14-16-55-1.png
    - assert: >-
        Откроется странице рейса
    - do: >-
        На открывшейся странице кликнуть по кнопке "Купить" для Я.Путешествий (блок
        "Продает авиакомпания" или "Лучшая цена от авиакомпании")
        Скрин десктоп: https://jing.yandex-team.ru/files/kuklina/2022-05-16_19-02-46.png

        Заполнить форму пассажира и форму контактов валидными данными

        Нажать по кнопке "Оплатить"

        Оплатить заказ

        Дождаться загрузки страницы Happy page
    - assert: >-
        На Happy page отображаются:


        - блок с информацией о рейсе

        - заголовок "Билет оформлен", текст "Отправили подтверждение на почту ***@yandex.ru. Только для залогина текст "сохранили в разделе "Мои поездки"
        
        - для залогина на десктопе уведомление "Билет сохранен в ваши поездки" и красный кружок у иконки чемодана. На таче только красный кружок на бургер-меню

        - номер заказа

        - кнопка "Подробнее о заказе"

        - телефон поддержки

        - блок с промокодом (баннер), какой это баннер зависит от текущей акции,
        может не быть совсем

        - карта с отелями, ссылка "Выбрать подходящий отель", на десктопе один раскрытый блок с отелем, на таче только синие пины с ценами

        - футер
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Happy page
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Авиа
type: Happy page
description: >-
  Как попасть на страницу бронирования аэрофлота:


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **Асессорам заменить в урле travel-test на travel.crowdtest** - должна
  открыться страница бронирования с формой ввода данных пассажиров
specs:
  'Авиа: карусели на happy page':
    - do: >-
        Перейти на страницу бронирования Аэрофлота как описано в Description,
        для направления Москва - Санкт-Петербург, только туда

        Ввести любые валидные данные пассажира

        Нажать Оплатить

        Заполнить форму оплаты данными тестовой карты: 5555 5555 5555 5599 12/24
        123 (асессоры пропускают)

        Нажать Оплатить
    - assert: >-
        - Появился лоадер

        - Через какое-то время произошел переход на страницу хэппи пейдж

        - Внизу страницы есть блок "Отели в Санкт-Петербурге на [ночь прилета]"

        - Отображается 5 отелей, для каждого есть фото, название, рейтинг (может
        не быть), цена ОТ, станция метро (только десктоп)

        - Есть кнопка "Все отели Санкт-Петербурга"

        Десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2020-12-18_16.39.57-qatct.png

        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2020-12-18_16.39.41-ls8uq.png
    - do: |-
        **Только десктоп**
        Пролистать карусель отелей до конца вправо
    - assert: |-
        - Отели листаются
        - Появляется стрелка "Назад"
        - В конце карточек дизейблится стрелка "Вперед"
        - На последней карточке блок с кнопкой "Все отели Санкт-Петербурга"
    - do: |-
        **Только десктоп**
        Пролистать карусель отелей до конца влево
    - assert: |-
        - Отели листаются
        - Появляется стрелка "Вперед"
        - В начале карточек дизейблится стрелка "Назад"
    - do: Нажать на любой отель
    - assert: |-
        - В новой вкладке открылась страница отеля для выбранного отеля
        - В урле есть параметр ytp_referer=avia_hp_hotelpage
    - do: |-
        Вернуться на вкладку с хэппи пейдж
        Нажать на кнопку "Все отели Санкт-Петербурга" (под списком отелей)
    - assert: |-
        - Произошел переход на страницу поиска отеля для Санкт-Петербурга
        - В урле есть параметр ytp_referer=avia_hp_hotelpage
    - do: >-
        **Только десктоп**

        Пролистать карусель до конца и нажать на кнопку "Все отели
        Санкт-Петербурга" на карточке
    - assert: >-
        - Произошел переход в новой вкладке на страницу поиска отеля для
        Санкт-Петербурга

        - В урле есть параметр ytp_referer=avia_hp_hotelpage
    - do: Аналогично повторить проверку для карусели с афишей на дни поездки
    - assert: >-
        - карусель нормально выглядит, все картинки и описание на месте

        - карусель листается

        - работают переходы по карточке афишы, в урле добавляются параметры
        utm_medium=happy-page&utm_source=yandex-travel

        - кнопка просмотра всех мероприятий работает, параметру в урле
        добавляются
    - do: Аналогично повторить проверку для карусели аудиогида
    - assert: |-
        - карусель нормально выглядит, все картинки и описание на месте
        - карусель листается
        - работают переходы по карточке афишы
        - кнопка просмотра всех гидов работает
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Happy page
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Happy page
description: >-
  Перейти на вкладку ЖД

  Выполнить поиск по направлению Москва - Санкт-Петербург

  Кликнуть по кнопке Выбрать место

  Купить билет на одного пассажира (следовать по шагам покупки, данные пассажира
  любые)
specs:
  'ЖД: блок отелей на happy page':
    - do: Дойти до хэппи пейдж
    - assert: >-
        - Внизу страницы есть блок "Х вариантов проживания в Санкт-Петербурге"
        - Отображается карта Санкт-Петербурга с размеченными отелями
        - На десктопе есть один предраскрытый отель, на таче нет
        - Есть кнопка "Выбрать подходящий отель"

        Десктоп:
        https://jing.yandex-team.ru/files/arhey/2022-01-12T07:38:05Z.b7f5620.png

        Тач:
        https://jing.yandex-team.ru/files/arhey/2022-01-12T07:38:05Z.b7f5620.png
    - do: Нажать на любое место на карте
    - assert: |-
        - Произошел переход на страницу поиска отеля для Санкт-Петербурга
        - В куках в девтулз есть параметр ytpReferer=trains_hp_search
        https://jing.yandex-team.ru/files/papulova/35y7yajfy7.png
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Happy page
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Отели
type: Бронирование
description: ''
specs:
  Отели. Бронь в рассрочку (с промокодом):
    - do: |-
        Залогиниться
        Через ТК создать офферы в отель Вега Измайлово (ID отеля 742) со следующими параметрами:
        2 взрослых, 1 ребенок (в поле Количество гостей указать "2-1")
        1 ночь (заезд не раньше чем через 4 дня)
        Выбрать оффер с бесплатной отменой, которая не оканчивается сегодня
    - assert: >-
        В блоке корзинки со стоимостью есть чекбоксы для оплаты в рассрочку и
        полностью

        В чекбоксе рассрочки есть указание, до какого числа и времени нужно внести доплату
        и ссылка "Подробнее", по клику на которую открывается попап/шторка с информацией о рассрочке
    - do: Выбрать чекбокс в рассрочку
    - assert: |-
        Чекбокс активировался
        Итоговая цена к оплате равна сумме рассрочки
    - do: >-
        В корзинке над рассрочками активировать чекбокс "У меня есть промокод" и
        ввести промокод SUCCESS

        Нажать Применить
    - assert: >-
        Чекбокс промокода и поле для ввода стали неактивными

        В чекбоксе предоплаты сумма для доплаты уменьшилась на сумму промокода
        (500р)

        Сама сумма рассрочки в чекбоксе и итоговая внизу не изменились

        Сумма в чекбоксе полной оплаты уменьшилась на сумму промокода (500р)
    - do: |-
        Заполнить валидными данными гостей и контактную инфу
        Кликнуть "Забронировать"
    - assert: >-
        Отображается лоадер создания заказа
        Далее происходит переход на страницу Happy Page
        В заголовке указано "Отель забронирован"
        Есть указание, сколько нужно доплатить и до какого числа и времени
        Сумма доплаты совпадает с суммой полной оплаты на бронировании (с учетом
        скидки), так как бронирование без предоплаты
  
    - do: Кликнуть по ссылке "Подробнее о заказе"
    - assert: >-
        В  этой же вкладке открылась страница заказа

        Есть инфа о предоплате "Предоплачено 0₽ из ХХХ ₽"

        Ниже указано, сколько нужно доплатить, до какого числа и времени и есть
        кнопка Доплатить

        Все суммы и даты с временем совпадают с инфой на бронировании
    - do: |-
        Пролистать ниже до блока стоимости отеля
        Кликнуть на раскрывашке
    - assert: >-
        В блоке указана общая стоимость заказа и есть разбивка цен за ночи и
        налоги + скидка (500р) - совпадают с инфой на брони

manual: true
Функциональность:
  - Рассрочки
  - Промокод
Устройство:
  - Тач
  - Десктоп
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: iliasova
feature: Отели
type: Бронирование
description: >-
  Для выполнения кейса нужно иметь бронь, оплаченную в рассрочку, для этого
  можно пройти кейс https://testpalm.yandex-team.ru/travel/testcases/2237
specs:
  Отели. Доплата бронирования (с промокодом):
    - do: 'Перейти на страницу заказа, оплаченного в рассрочку (с промокодом)'
    - assert: |-
        Открылась страница заказа в лк
        На странице есть кнопка Доплатить и сумма доплаты
    - do: Кликнуть Доплатить
    - assert: >-
        В новой вкладке появился лоадер Подготовка оплаты проверяем заказ и
        готовимся к оплате

        Далее в той же вкладке произошел переход на оплату

        В форме оплаты указана сумма, равная сумме доплаты на
        странице заказа
    - do: Ввести данные карты и нажать Оплатить
    - assert: |-
        После прокрутки всех необходимых лоадеров попадаем на хэппи пейдж
        В заголовке отображается "Отель оплачен полностью"
        Информация про внесении доплаты отсутствует
    - do: Кликнуть по кнопке Подробнее о заказе
    - assert: |-
        Произошел переход на страницу заказа в лк
        В верху страницы отсутствует информация о рассрочке и доплате
    - do: |-
        В блоке Стоимости кликнуть на ссылку "Чеки и документы" и выбрать пункт "Детали заказа"
    - assert: >-
        Открылся блок с детализацией

        В блоке есть итоговая сумма заказа (с учетом скидки) и 
        стоимость за ночи + указание скидки (500р)
    - do: Закрыть детализацию и выбрать пункт "Чек на платёж"
    - assert: |-
        В модале открылся чек прихода
        Итоговая сумма в чеке равна сумме бронирования (с учетом скидки)
    - do: |-
        Закрыть модал по крестику
        
manual: true
Функциональность:
  - Рассрочки
  - Промокод
Устройство:
  - Тач
  - Десктоп
Страница:
  - Бронирование
  - Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: iliasova
feature: Отели
type: Страница заказа
description: >-
  В тестинге очень часто бывают недоступны чеки возврата, это связано с трастом.
  При невозможности выполнения только последнего шага с открытием чека возврата
  кейс считать выполненным успешно.

  Для выполнения кейса нужно иметь бронь, оплаченную в рассрочку, для этого
  можно пройти кейс https://testpalm.yandex-team.ru/testcase/travel-2237
specs:
  Отели. Возврат брони в рассрочку:
    - do: 'Перейти на страницу забронированного заказа'
    - assert: |-
        Открылась страница заказа в лк
        Есть информация о сумме рассрочки
        Ниже есть активная кнопка отмены брони
    - do: |-
        Кликнуть по кнопке Отменить бронирование
        В открывшемся окне подтвердить отмену
    - assert: >-
        После закрытия окна и перезагрузке страницы отображается заголовок "Бронирование отменено бесплатно"
        В блоке стоимости отеля указана общая стоимость заказа (с учетом скидки)
   
manual: true
Функциональность:
  - Рассрочки
  - Промокод
Устройство:
  - Тач
  - Десктоп
Страница: Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: iliasova
feature: Отели
type: Страница заказа
description: >-
  В тестинге очень часто бывают недоступны чеки возврата, это связано с трастом.
  При невозможности выполнения только последнего шага с открытием чека возврата
  кейс считать выполненным успешно.

  Для выполнения кейса нужно иметь бронь, оплаченную в два этапа (предоплата +
  доплата), для этого можно пройти кейс
  https://testpalm.yandex-team.ru/testcase/travel-2238
specs:
  Отели. Возврат брони после доплаты:
    - do: >-
        Перейти на страницу заказа, оплаченного в два этапа (бронирование +
        доплата) с промокодом
    - assert: |-
        Открылась страница заказа в лк
        На странице нет информации про рассрочку и доплату
        Ниже есть активная кнопка отмены брони
    - do: |-
        Кликнуть по кнопке Отменить бронирование
        В открывшемся попапе подтвердить отмену
    - assert: >-
        После закрытия попапа и перезагрузке страницы отображается стандартная
        страница возврата

        В блоке стоимости отеля указана общая стоимость заказа (с учетом
        промокода)

        В верху страницы есть ссылка "Чеки и документы"
    - do: Кликнуть на ссылку "Чеки и документы""
    - do: Кликнуть на чек платежа
    - assert: |-
        Открылся модал чека прихода
        Сумма в чеке равна сумме бронирования
    - do: |-
        Закрыть модал по крестику
    - do: >-
        Кликнуть на ссылку чека возврата - если есть текст, что чек
        пока недоступен - перезагрузить страницу
    - assert: |-
        Открылся модал чека возврата прихода
        Сумма в чеке равна сумме бронирования
    
manual: true
Функциональность:
  - Рассрочки
  - Промокод
Устройство:
  - Тач
  - Десктоп
Страница: Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: iliasova
feature: Отели
type: Страница заказа
description: >-
  Для выполнения кейса нужно иметь бронь, оплаченную в рассрочку, для этого
  можно пройти кейс https://testpalm.yandex-team.ru/testcase/travel-1398
specs:
  Отели. Обработка ошибки при доплате брони:
    - do: 'Перейти на страницу заказа, оплаченного в рассрочку (с промокодом)'
    - assert: |-
        Открылась страница заказа в лк
        На странице есть кнопка Доплатить и сумма доплаты (с учетом промокода)
    - do: Кликнуть Доплатить
    - assert: >-
        В новой вкладке появился лоадер Подготовка оплаты проверяем заказ и
        готовимся к оплате

        Далее в той же вкладке произошел переход на оплату

        В форме оплаты есть "Доплата" и указана сумма, равная сумме доплаты на
        странице заказа
    - do: Обновить страницу или ввести данные карты с CVC 999 и нажать Оплатить
    - assert: >-
        После прокрутки лоадеров на странице оплаты появляется модал с указанием
        причины ошибки оплаты, суммой и двумя кнопками - Отмена и Попробовать
        еще раз

        Сумма в модале совпадает с суммой доплаты на предыдущем шаге
    - do: Кликнуть по кнопке Отмена
    - assert: >-
        Произошел переход на страницу заказа в лк

        Внешний вид страницы не изменился - есть инфа про рассрочку и доплату и
        кнопка Доплатить
    - do: Повторить шаги 2-3
    - assert: ОР соответствует результатам в 2-3
    - do: Кликнуть в модале Попробовать еще раз
    - assert: >-
        Загрузилась форма оплаты

        В форме есть заголовок Доплата и указана сумма доплаты, совпадающая с
        суммой на странице заказа
    - do: |-
        Ввести валидные данные карты
        Нажать Оплатить
    - assert: >-
        После прогрузки всех необходимых лоадеров произошел переход на хэппи
        пейдж

        В заголовке отображается "Отель оплачен полностью"

        Информация про внесении доплаты отсутствует
manual: true
Функциональность:
  - Рассрочки
  - Промокод
Устройство:
  - Тач
  - Десктоп
Страница: Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: iliasova
feature: Записная книжка
type: Пассажиры
description: >-
  Общий кейс для быстрой проверки.


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит. Если вы оказались
  на passport.yandex.ru- замените вручную на passport-test.yandex.ru**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)

  Залогинены, находимся на главной.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678

  **Важно: Удаляйте, пожалуйста, только тех пользователей, которые сами и создаёте. Не удаляйте пользователей с фамилией Транслитерированный**
specs:
  Добавление и удаление пассажира:
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)
    - do: >-
        Нажать кнопку Добавить

        ![image](https://jing.yandex-team.ru/files/iliasova/2019-11-24_12.33.51-wcyzg.png)
    - assert: '* Открылась форма заполнения данных'
    - do: |-
        Заполнить форму добавления пассажира:
        - ФИО - любое валидное
        - дата рождения, например 01.01.2000
        - пол любой
        - гражданство - Россия
        - документ - Паспорт РФ, номер 6505111111

        Нажать кнопку Сохранить
    - assert: >-
        * Форма закрылась

        * В списке пассажиров появился новый пассажир с заданным именем,
        остальные данные соответствуют введенным
    - do: Для созданного пассажира нажать "Удалить пассажира"
    - assert: |-
        - Появилось модальное окно "Удалить пассажира?
        Удалятся данные всех документов и бонусных карт"
    - do: 'Нажать "Да, удалить"'
    - assert: |-
        - Окно закрылось
        - Появился лоадер
        - Отображается страница с пассажирами
        - В списке пассажиров нет удаленного пассажира
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
feature: Записная книжка
type: Пассажиры
description: >-
  Общий кейс для проверки взаимодействия с ЗКП.


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678. Если вы не можете залогиниться-
  убедитесь, что вы находитесь в тестовом паспорте (passport-test.yandex.ru), а
  не в продовом

  **Важно: Удаляйте, пожалуйста, только те документы, которые сами и создаёте. Не трогайте пользователей с фамилией Транслитерированный**
specs:
  Добавление и удаление документа:
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Выбрать любого пассажира из списка
    - assert: >-
        * Для десктопа под текущим документом есть кнопки для добавления других
        документов

        * Для тача есть кнопка "Добавить документ", по ней открывается список
        документов

        ![image](https://jing.yandex-team.ru/files/iliasova/2019-06-10_17.05.11.png)
    - do: Нажать на многоточие (В таче нажать на + Добавить документ)
    - assert: >-
        * Раскрылся весь список документов - паспорт РФ, загран, свидетельство о
        рождении, военный билет, паспорт моряка, другой документ

        * В таче раскрылся список всех документов
    - do: Нажать на Заграничный паспорт гражданина РФ
    - assert: |-
        * Открылась форма добавления документа
        * Название документа Заграничный паспорт гражданина РФ
    - do: |-
        Заполнить форму любыми валидными значениями
        Для заграна:
        * ФИО латиницей
        * Серия и номер - 9 цифр без пробелов
        Нажать сохранить
    - assert: >-
        * Документ добавился выбранному пассажиру, данные соответствуют
        введённым
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
feature: Отели
type: Бронирование
description: >-
  Для воспроизведения сценария нужно дернуть ручку ТК и забрать booking_url на
  выходе

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=742&partnerId=PI_TRAVELLINE&occupancy=2&forceAvailability=true&cancellation=CR_PARTIALLY_REFUNDABLE&pansionType=PT_BB&offerName=testoffer&priceAmount=100000&partiallyRefundRate=30&partiallyRefundableInMinutes=0&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1&ignorePaymentScheduleRestrictions=true
specs:
  Отели. Отмена брони со штрафом в рассрочку:
    - do: >-
        Перейти на страницу брони оффера с действующим периодом штрафа в
        рассрочку
    - assert: |-
        Отрылась страница бронирования
        Есть информация об отмене со штрафом
        Указана сумма штрафа
        В блоке стоимости есть опции предоплаты и полной оплаты
        Сумма предоплаты совпадает с суммой штрафа за отмену
    - do: |-
        Выбрать опцию предоплаты
        Ввести валидные данные
        Кликнуть Оплатить
    - assert: |-
        Произошел переход на страницу оплаты
        Сумма к оплате совпадает с суммой штрафа на предыдущей странице
    - do: |-
        Ввести данные карты и кликнуть Оплатить
        В форме 3ds ввести код 200 и кликнуть Submit
    - assert: >-
        После прокрутки всех необходимых лоадеров отобразилась хэппи пейдж

        На странице есть инфа о необходимости внести доплату с указанием крайней
        даты и числа

        Есть сумма доплаты, равная полной стоимости отеля (указанной на брони) -
        предоплата
    - do: Кликнуть Подробнее о заказе
    - assert: |-
        Открылась страница заказа
        На странице есть суммы предоплаты, доплаты и полной стоимости (наверху)
        Все суммы совпадают с изначальными на странице бронирования
        В таймлайне ниже есть два периода - штрафной и неотменяемый
        Пометка сегодняшней даты стоит на штрафном периоде
        Сумма штрафа в таймлайне равна сумме предоплаты
        Ниже активна кнопка Отменить бронирование
    - do: Кликнуть Отменить бронирование
    - assert: >-
        В открывшемся окне есть информация о сумме штрафа, равной сумме
        предоплаты
    - do: Кликнуть Отменить бронирование
    - assert: |-
        После закрытия окна страница обновляется
        Вверху появляется заголовок Бронирование отменено
        Ниже указано, что удержан штраф и указана сумма штрафа
        Сумма штрафа равна предоплате
        По клику по ссылке "Чеки и документы" есть ссылки на чек платежа и чек возврата
    - do: Кликнуть на ссылку чека платежа
    - assert: |-
        Открылся модал чека прихода
        Сумма в чеке равна сумме рассрочки
    - do: >-
        Закрыть модал по крестику

        Кликнуть на чек возврата (если появляется попап что чек еще оформляется,
        перезагрузить страницу, если не поможет пару раз - скипнуть эту
        проверку, на тестинге часто не доступны чеки возврата)
    - assert: |-
        Открылся модал чека возврата прихода
        Сумма в чеке равна полной стоимости заказа за вычетом предоплаты
manual: true
Функциональность: Рассрочки
Устройство:
  - Тач
  - Десктоп
Страница:
  - Бронирование
  - Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag:
  - Smoke
  - TK
Автор: iliasova
feature: Отели
type: Бронирование
description: |-
  Для тестовой оплаты использовать карту
  Карта для тестовой оплаты тестовой брони: 5100002767155462
  Месяц и год: 12/22
  CVV: 454
specs:
  Дельфин. Бронь через ТК:
    - do: >-
        Дернуть ручку ТК из описания, изменив дату заезда - не ранее чем через 4
        дня от текущей даты

        Перейти на бронь
    - assert: |-
        Открылась страница брони отеля Ялта Интурист 4*
        заезд-выезд - заезд указанный в ручке, выезд через день
        кол-во гостей - 2
        политика отмены - бесплатная отмена вплоть до заезда
        питание - завтрак включен
        имя оффера - Номер тестовый
        цена 100 000
    - do: |-
        Ввести валидные данные гостей, контактов
        Нажать Оплатить
    - assert: >-
        assert: Появился лоадер с текстом "Создание заказа Создаем заказ и
        готовимся к оплате"

        | Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        | Через какое-то время произошел переход на страницу оплаты

        |  На странице оплаты отсутствует хэдэр и футер

        | Сумма к оплате на странице оплаты совпадает с суммой при бронировании

        | Название гостиницы верное

        | Даты совпадают с выбранными, количество гостей - 2:

        ![image](https://jing.yandex-team.ru/files/rifat-k/2019-10-24_18-44-40.png)
    - do: |-
        Выбрать Новая карта и ввести данные карты из описания кейса
        Кликнуть Оплатить
    - assert: >-
        Вместо блока ввода данных карты появился лоадер с текстом "Платеж
        производится. Пожалуйста, подождите"

        Далее на всю страницу появился лоадер с текстом "Оплата заказа
        Оплачиваем заказ и готовим выписку", все элементы на странице
        задизейблены

        Через какое-то время текст поменялся на "Загрузка заказа Загружаем
        подробную информацию о заказе"

        Далее произошел переход на хэппи пейдж

        На странице указаны почта и телефон, которые вводили ранее

        Даты заезда и выезда совпадают с данными на бронировании
    - do: Кликнуть Подробнее о заказе
    - assert: >-
        Открылась страница заказа

        Сумма в "Стоимость отеля" совпадает с суммой на шаге бронирования

        Данные гостей, информация о бесплатной отмене, тип размещения, тип
        питания, тип кроватей совпадают с информацией на шаге бронирования
manual: true
Функциональность: Бронирование
Устройство:
  - Тач
  - Десктоп
Страница:
  - Бронирование
  - Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: iliasova
feature: Отели
type: ''
description: ''
specs:
  Дельфин. Обработка солдаута при переходе на бронь:
    - do: Перейти на страницу брони по сгенерированному урлу
    - assert: >-
        assert: Вместо страницы бронирования открылась страница с сообщением
        "Все номера такого типа уже забронированы" (пример
        https://jing.yandex-team.ru/files/iliasova/2020-04-24_16.40.55-ksz3k.png)

        | Ниже отображается информация об отеле:

        | Название - Ялта Интурист

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей

        | Название оффера - Номер тестовый

        | Информация про питание

        | Информация про кровати

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера

        | В самом низу блока об отеле расположены две кнопки:

        | Начать новый поиск и Найти номера в отеле
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: >-
        assert: Открылся модал

        | Модал содержит название отеля, адрес, фото (может отсутствовать),
        карту и описание от партнера

        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
    - do: Кликнуть по кнопке Начать новый поиск
    - assert: >-
        assert: Произошел переход на выдачу отелей из гео-региона бронируемого
        отеля
    - do: Вернуться на предыдущую страницу
    - do: Кликнуть по Найти номера в отеле
    - assert: >-
        assert: Открылась страница отеля Ялта Интурист с теми же параметрами дат
        и гостей
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для генерации события soldout (все номера раскуплены) на этапе создания заказа
  нужно дернуть ручку тестового контекста

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=2399&partnerId=PI_DOLPHIN&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2%D1%8B%D0%B9&priceAmount=100000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SOLD_OUT&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1


  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.
specs:
  Дельфин. Обработка события солдаут при создании брони:
    - do: >-
        Перейти на страницу брони по сгенерированному урлу с заездом-выездом на
        завтра-послезавтра
    - assert: 'assert: Открылась страница бронирования'
    - do: Заполнить данные гостей и контактные данные валидными значениями
    - do: Кликнуть по Оплатить
    - assert: >-
        assert: Появился лоадер с текстом "Создание заказа Создаем заказ и
        готовимся к оплате"

        | Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        | Через какое-то время произошел переход на страницу с сообщением Все
        номера такого типа уже забронированы

        | Ниже отображается информация об отеле:

        | Название - Ялта Интурист

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей - 2

        | Название оффера - Номер тестовый

        | Информация про питание - Завтрак включен

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера

        | В самом низу блока об отеле расположены две кнопки:

        | Начать новый поиск и Найти номера в отеле
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: >-
        assert: Открылся модал

        | Модал содержит название отеля, адрес, фото (может отсутствовать),
        карту и описание от партнера

        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
    - do: Кликнуть по кнопке Начать новый поиск
    - assert: >-
        assert: Произошел переход на выдачу отелей из гео-региона бронируемого
        отеля
    - do: Вернуться на предыдущую страницу
    - do: Кликнуть по Найти номера в отеле
    - assert: >-
        assert: Открылась страница отеля Ялта Интурист на завтра-послезавтра, 2
        взрослых
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для генерации ошибки нужно дернуть ручку тестового контекста (поменять дату
  заезда на актуальную)

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=2399&partnerId=PI_DOLPHIN&checkinDate=2021-02-19&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2%D1%8B%D0%B9&priceAmount=100000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_UNEXPECTED_PENALTY&priceMismatchRate=1.1



  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.

  Для тестовой оплаты использовать карту

  Карта для тестовой оплаты тестовой брони: 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Дельфин. Обработка ошибки при возврате:
    - do: >-
        Забронировать заказ по ссылке из описания с датой заезда не ранее, чем
        через 4 дня от текущего

        Перейти на страницу заказа
    - assert: |-
        assert: Открылась страница заказа
        assert: На странице есть кнопка Отменить бронирование
        | Кнопка кликабельна
    - do: Кликнуть по кнопке Отменить бронирование
    - do: В раскрывшемся попапе кликнуть Отменить бронирование
    - assert: >-
        assert: Появился лоадер с текстом “Загрузка заказа Загружаем подробную
        информацию о заказе”

        | Далее открылась страница ошибки при возврате

        | Заголовок ошибки Не получилось отменить бронирование

        | Далее указан номер поддержки и номер заказа в формате
        YA-XXXX-XXXX-XXXX
manual: true
Устройство: Десктоп
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для генерации ошибки подтверждения брони нужно дернуть ручку тестового
  контекста

  https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=2399&partnerId=PI_DOLPHIN&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2%D1%8B%D0%B9&priceAmount=100000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_PRICE_MISMATCH&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1



  При ответе с кодом 200 в booking_page_url будет содержаться урл страницы
  брони.

  Для тестовой оплаты использовать карту

  Карта для тестовой оплаты тестовой брони: 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Дельфин. Обработка ошибки при подтверждении брони (waitlist):
    - do: >-
        Перейти на страницу брони по сгенерированному урлу с заездом-выездом на
        завтра-послезавтра
    - assert: 'assert: Открылась страница бронирования'
    - do: Заполнить данные гостей и контактные данные валидными значениями
    - do: Кликнуть по Оплатить
    - assert: >-
        assert: Появился лоадер с текстом "Создание заказа Создаем заказ и
        готовимся к оплате"

        | Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        | Через какое-то время произошел переход на страницу оплаты
    - do: Выбрать Новая карта и ввести данные карты из описания кейса
    - do: Кликнуть Оплатить
    - assert: >-
        assert: Вместо блока ввода данных карты появился лоадер с текстом
        “Платеж производится. Пожалуйста, подождите”

        | Далее на всю страницу появился лоадер с текстом “Оплата заказа
        Оплачиваем заказ и готовим выписку”, все элементы на странице
        задизейблены

        | Далее произошел переход на страницу ошибки при бронировании

        | Заголовок ошибки Забронировать номер не получилось. Деньги вернутся в
        течение часа

        | Ниже информация для пользователя о том, куда обратиться:

        | Ссылка на поддержку
        https://yandex.ru/support/travel/troubleshooting.html

        | Указан номер заказа в формате YA-XXXX-XXXX-XXXX

        | Ниже отображается информация об отеле:

        | Название - Ялта Интурист

        | Адрес и рейтинг

        | Даты заезда и выезда - завтра и послезавтра

        | Кол-во гостей - 2

        | Название оффера - Номер тестовый

        | Информация про питание - завтрак включен

        | Справа от названия отеля есть фото отеля

        | Под фото название отеля от партнера и ссылка Описание отеля от
        партнера

        | В самом низу блока об отеле расположены две кнопки:

        | Начать новый поиск и Найти номера в отеле
    - do: Кликнуть по ссылке Описание отеля от партнера
    - assert: >-
        assert: Открылся модал

        | Модал содержит название отеля, адрес, фото (может отсутствовать),
        карту и описание от партнера

        | Вверху модала есть крестик для закрытия
    - do: Кликнуть по крестику над модалом
    - assert: 'assert: Модал закрылся'
    - do: Кликнуть по кнопке Начать новый поиск
    - assert: >-
        assert: Произошел переход на выдачу отелей из гео-региона бронируемого
        отеля
    - do: Вернуться на предыдущую страницу
    - do: Кликнуть по Найти номера в отеле
    - assert: >-
        assert: Открылась страница отеля Ялта Интурист на завтра-послезавтра, 2
        взрослых.
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: TK
Автор: iliasova
feature: ЖД
type: ''
description: >-
  * Дернуть ручку тестового контекста:
  https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0

  * В ответе запомнить токен из поля test_context_token
specs:
  'ТК ЖД: Бронирование в Сапсан с дорожной картой':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск Москва - Санкт-Петербург через месяц
        Для любого Сапсана кликнуть по кнопке Выбрать место
        На странице выбора мест выбрать любое место в любом вагоне
        Нажать Указать пассажиров
    - assert: '* Произошел переход на страницу ввода данных'
    - do: >-
        Добавить к урлу параметр trainTestContextToken со значением полученного
        токена

        Перейти по полученной ссылке

        Заполнить все поля валидными данными

        Заполнить поле Дорожная карта значением 9001900090068

        Нажать Проверить заказ и купить
    - assert: >-
        * Произошел переход на страницу подтверждения

        * В корзине со стоимостью отображается "Тариф карта", место и сумма к
        оплате за билет

        * В блоке "Проверьте паспортные данные" отображается тариф от партнера -
        "КАРТА" и сумма за билет
manual: true
Устройство:
  - Десктоп
  - Тач
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - TK
  - orkestrator
Автор: shenfeld
feature: Отели
type: Happy page
description: >-
  Установить в tune https://yandex.ru/tune/ местоположение Москва

  Перейти на поиск отелей в Санкт-Петербурге для 2 взрослых и 1 ребенка

  Для любого отеля с бронированием на Я.Путешествиях перейти на страницу
  бронирования

  Заполнить все поля валидными данными, оплатить заказ.


  Тестовая карта:

  5100003697253468 12/24 090
specs:
  'Отели: транспортная карусель на happy page':
    - do: 'Дойти до хэппи пейдж отеля, как описано в Preconditions'
    - assert: >-
        - на странице есть блок "У нас можно купить билеты до Санкт-Петербурга"

        тач:
        https://jing.yandex-team.ru/files/shenfeld/2021-03-23_16.41.06-n307c.png

        десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2021-03-23_16.41.24-uuc3i.png

        (варианты типов транспорта могут отличаться в зависимости от наличия
        рейсов по направлению)
    - do: Нажать "Найти перелет"
    - assert: >-
        - в новой вкладке открывается страница поиска авиабилетов по направлению
        Москва - Санкт-Петербург

        - дата поиска - за один день до заселения в отель

        - поиск выполнен для пассажиров: 2 взрослых, 1 ребенок (информация
        заполнена в форме поиска)
    - do: |-
        Вернуться на хэппи пейдж
        Нажать "Купить билет" для ЖД карточки
    - assert: >-
        - в новой вкладке открывается страница поиска поездов по направлению
        Москва - Санкт-Петербург

        - дата поиска - за один день до заселения в отель
    - do: |-
        Вернуться на хэппи пейдж
        Нажать "Купить билет" для автобусной карточки (если есть)
    - assert: >-
        - в новой вкладке открывается страница поиска автобусов по направлению
        Москва - Санкт-Петербург

        - дата поиска - за один день до заселения в отель
    - do: |-
        __Этот шаг выполнять только в таче__
        Вернуться на хэппи пейдж
        Поскроллить варианты транспорта вправо, затем влево
    - assert: >-
        - варианты транспортов скроллятся плавно, скроллбар не отображается,
        верстка корректная
manual: true
Функциональность: Покупка
Устройство:
  - Тач
  - Десктоп
Страница: Happy page
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: Авиа
type: Happy page
description: >-
  В кейсе проверяется блок:
  https://jing.yandex-team.ru/files/shenfeld/2021-03-30_11.19.23-ysbu0.png

  Выполнить покупку авиабилета. Для этого:

  - выполнить поиск туда-обратно, например, Москва - Сочи

  - отфильтровать по партнеру Аэрофлот

  - перейти по предложению от Аэрофлота на страницу бронирования

  - заполнить данные пассажира, перейти к оплате

  - ввести данные тестовой карты: 5555 5555 5555 5599 12/24 123

  - нажать Оплатить
specs:
  'Авиа: блок с данными о рейсе, блок промокода, кнопки действий на happy page':
    - do: Дойти до хэппи пейдж по инструкции из Preconditions
    - assert: >-
        - на странице отображается номер заказа, заголовок "Билет оформлен", текст "Отправили подтверждение на почту ***@yandex.ru. Только для залогина текст "сохранили в разделе "Мои поездки"
        
        - для залогина на десктопе уведомление "Билет сохранен в ваши поездки" и красный кружок у иконки чемодана. На таче только красный кружок на бургер-меню

        - в блоке с данными о рейсах вся информация совпадает с выбранными
        рейсами: номера рейсов, время отправления/прибытия, города, даты.

        - есть блок с контактными данными - все данные совпадают с заполненными
        на шаге бронирования.

        - ниже отображается блок промокода: указан промокод, размер скидки,
        дата, до которой можно воспользоваться:
        https://jing.yandex-team.ru/files/papulova/n9kdoNb9Rc.png
    - do: Нажать на кнопку "Подробнее о заказе"
    - assert: >-
        - произошел переход на страницу заказа авиа в личном кабинете с
        подробными данными о рейсах/пассажирах/стоимости
    - do: |-
        Вернуться браузерной кнопкой "Назад" на хэппи пейдж
        Кликнуть в блоке с промокодом по ссылке "Подробнее"
    - assert: >-
        - произошел переход на страницу "Правила акции. Условия использования
        Промокодов"
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Happy page
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Happy page
description: >-
  В кейсе проверяется блок:
  https://jing.yandex-team.ru/files/shenfeld/2021-03-30_11.35.32-o4s0s.png

  Выполнить покупку ЖД-билета. Для этого:

  - перейти на вкладку ЖД

  - выполнить поиск, например, Москва - Санкт-Петербург на дату через месяц от текущей

  - для любого поезда кликнуть по кнопке Выбрать место и выбрать в любом вагоне местно под №10 (если все места заняты, поискать на другую дату)

  - следовать по шагам покупки до страницы успешной покупки билета

  Данные тестовой карты: 5555 5555 5555 5599 12/24 123 (асессорам не надо)
specs:
  'ЖД: блок с данными о рейсе, блок промокода, кнопки действий на happy page':
    - do: Дойти до хэппи пейдж по инструкции из Preconditions
    - assert: >-
        - на странице отображается номер заказа, текст "Билет оформлен"

        - в блоке с данными о рейсе вся информация совпадает с выбранным рейсом:
        номер рейса, время отправления/прибытия, станции, даты, выбранные
        вагон/место.

        - ниже отображается блок промокода: указан промокод, размер скидки,
        дата, до которой можно воспользоваться:
        десктоп - https://jing.yandex-team.ru/files/ea-timofeev/zA62XgLhE5.png,
        тач - https://jing.yandex-team.ru/files/ea-timofeev/skUGFden6T.png
    - do: Нажать на кнопку "Подробнее о заказе"
    - assert: >-
        - произошел переход на страницу заказа ЖД в личном кабинете с подробными
        данными о рейсе/пассажирах/стоимости
    - do: |-
        Вернуться браузерной кнопкой "Назад" на хэппи пейдж
        Кликнуть в блоке с промокодом по ссылке "Условия акции"
    - assert: >-
        - произошел переход на страницу "Правила акции. Условия использования
        Промокодов"
    - do: |-
        Вернуться на хэппи пейдж
        Нажать "Скачать"
    - assert: '- произошло скачивание билета в формате pdf'
    - do: Нажать "Распечатать" (только в десктопе)
    - assert: '- открылось окно для печати билета'
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Happy page
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Авиа
type: Выдача
description: ''
specs:
  Авиа. Проверка информации о багаже и возврате на выдаче:
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты

        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом

        Нажать кнопку “Найти”
    - assert: >-
        В результате поиска есть варианты без багажа.

        Информация о багаже:
        Для безбагажных вариантов иконка с чемоданом чёрная, для вариантов с багажом - зелёная с указанием веса.
        В десктопе на сниппете указано количество багажных мест.
        На таче при отсутствии багажа отображается чёрная иконка с крестиком и знаком рубля.

        Информация о ручной клади:
        Для вариантов без ручной клади иконка с сумкой чёрная, для вариантов с ручной кладью - зелёная с указанием веса.
        На таче при отсутствии ручной клади отображается чёрная иконка с крестиком и знаком рубля.
        Если неизвестен допустимый вес для ручной клади или допустимые габариты клади меньше стандартных (например,
        авиакомпании Победа и ЮТэйр), рядом с иконкой будут указаны габариты.

        Десктоп: https://jing.yandex-team.ru/files/kuklina/2022-05-12_20-11-13.png
        Тач: https://jing.yandex-team.ru/files/kuklina/Screenshot_2022-05-12-20-03-19-814_com.android.chrome.jpg
    - do: |-
        Выбрать тариф без багажа. Запомнить информацию на сниппете.
        Кликнуть в область багажной информации или по желтой кнопке
        Десктоп: https://jing.yandex-team.ru/files/kuklina/2022-05-12_19-00-37.png
        Тач: https://jing.yandex-team.ru/files/kuklina/2022-05-12_20-18-38-1.png
    - assert: >-
        Откроектся попап-окно / шторка с надписью "Выберите тариф", "Выбрать тариф" или "О тарифе" и доступными тарифами (минимум 1 тариф).
        Тарифы = карточки доступных вариантов услуг для этого рейса.
        Карточка содержит информацию о ручной клади, информацию о багаже, информацию о возврате и стоимость.
        Не всегда в тарифах будут присутствовать все эти показатели. 

        Среди тарифов есть варинат, где информация о ручной клади, багаже ("Без багажа") и стоимость совпадает с инфромацией на сниппете.

        Информация о возврате:
        Для варианта без возврата билета черная иконка в виде косого креста и черный текст о возврате,
        для варианта с платным возвратом черная иконка со знаком рубля и черный текст.
        Для варианта с бесплатным возвратом зеленая иконка-галочка и зеленый текст.

        Десктоп: https://jing.yandex-team.ru/files/kuklina/2022-05-12_18-59-07.png
        Тач: https://jing.yandex-team.ru/files/kuklina/Screenshot_2022-05-12-20-04-26-922_com.android.chrome.jpg
    - do: |-
        Закрыть окно / шторку с тарифами.
    - assert: >-
        Окно / шторка закрывается.
    - do: >-
        Кликнуть по сниппету в центральной части.

        Десктоп: https://jing.yandex-team.ru/files/kuklina/2022-05-16_14-16-55.png
        Тач: https://jing.yandex-team.ru/files/kuklina/2022-05-16_14-19-54.png
    - assert: >-
        Открывается страница покупки. Величина и вес ручной клади и багажа ("Без багажа",
        "Возможна оплата багажа" и т.п.) совпадает с тем, что указано на сниппете.
        Добавляется информация о возврате.

        Важно: для ручной клади может быть указано просто "Включена" (например,
        для вариантов от Победы).
    - do: |-
        Вернуться на выдачу
        На выдаче активировть фильтр "С багажом"
    - assert: >-
        Все варианты на выдаче сожержат зеленую иуонку багажа.
        В таче: на иконке багажа указан допустимый вес.
        В десктопе: рядом с зеленой иконкой указано количество багажных мест и их вес.

        Запомнить багажную информацию и информацию о ручной клади на любом сниппете.
        Кликнуть по сниппету в его центральной части.

        Десктоп: https://jing.yandex-team.ru/files/kuklina/2022-05-16_14-16-55.png
        Тач: https://jing.yandex-team.ru/files/kuklina/2022-05-16_14-19-54.png
    - assert: >-
        Открывается страница покупки. Величина и вес ручной клади и багажа совпадает с тем, что указано на сниппете.
        Добавляется информация о возврате.

        Важно: для ручной клади может быть указано просто "Включена" (например,
        для вариантов от Победы).
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Тач
  - Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка отображения выдачи для нескольких пассажиров':
    - do: |-
        Зайти на главную,
        На вкладке авиа ввести в поля

        - откуда - Екатеринбург
        - куда - Москва
        - туда - завтра
        - обратно не заполняем
        - пассажиры: 2 взрослых, 1 ребёнок, 1 младенец

        Кликнуть "Найти"
    - assert: >-
        Произошел переход на страницу выдачи. Для каждого предложения под
        кнопкой с ценой написано "за всех пассажиров".

        Screen: https://jing.yandex-team.ru/files/gouken67/travel_1423.png
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Regress
Автор: gouken67
feature: ЖД
type: Подтверждение
description: >-
  Кейс будет отрабатывать, если в одном купе есть достаточное количество
  свободных мест, но места выбираются в разных купе (фишка экспресса).

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Предупреждение при смене мест при брони':
    - do: Открыть выдачу Москва - Санкт-Петербург поездами через месяц
    - do: >-
        Для поезда, у которого есть свободные места в купе, кликнуть по кнопке
        "Выбрать место"
    - do: Установить два взрослых пассажира
    - do: Выбрать тип вагона Купе
    - do: >-
        Выбрать 2 места в разных купе, таких, чтобы подходили под описание кейса

        ![image](https://jing.yandex-team.ru/files/shenfeld/2021-04-16_15.57.42-ic7lo.png)
    - do: Кликнуть по кнопке "Указать пассажиров"
    - do: Заполнить все поля валидной информацией
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: >-
        * Произошел переход на страницу подтверждения

        * При смене мест при брони - показываем желтый блок - "Выбранные места успели купить.
        Мы подобрали другие. Если они не подходят — выберите заново. Введенные
        данные сохранятся." и кнопкой "Выбрать места заново". 
        Если смены мест не было, не показываем блок
        
        * На схеме одно из выбранных мест заменено другим местом
    - do: Кликнуть по кнопке "Выбрать места заново"
    - assert: |-
        * Осуществился переход на страницу выбора мест, в класс с тем же вагоном
        * Выбранные места сбросились
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Пример ссылки на выбор мест для пересадок:
  https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-111T13.50&fromId=c213&fromName=Москва&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10
specs:
  'ЖД+ЖД: Бронирование и данные о рейсах на странице подтверждения':
    - do: >-
        Перейти на страницу выбора мест в первый поезд, для сложного заказа с
        пересадкой

        Выбрать двух взрослых пассажиров

        Запомнить данные о рейсах (номера поездов, время отправления/прибытия,
        пункты отправления/прибытия, данные о пересадке)

        Выбрать любые места в первом поезде

        Нажать "Далее"
    - assert: '- открылась страница выбора мест во второй поезд'
    - do: |-
        Выбрать любые места
        Нажать Указать пассажиров
    - assert: '- открылась страница ввода данных'
    - do: |-
        Ввести любые валидные данные
        Нажать Проверить заказ и купить
    - assert: >-
        - открылась страница подтверждения

        - в блоке с данными о рейсах все данные совпадают с шагом выбора мест
        (номера поездов, время отправления/прибытия, пункты
        отправления/прибытия, информация о пересадке)

        - в блоке с данными о рейсах появились бейджи для рейсов "Электронная
        регистрация"

        - в блоке "Вагон и места" для обоих поездов есть: направление, данные о
        выбранных местах, схема вагона с выбранными местами

        - в блоке "Пассажиры" для обоих пассажиров есть приписки с направлением
        каждого рейса, номером места и тарифом

        - все данные совпадают с выбранными на предыдущих шагах
manual: true
Функциональность: 'ЖД+ЖД: Пересадки'
Устройство:
  - Тач
  - Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Happy page
description: >-
  Пример ссылки на выбор мест для пересадок:
  https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-111T13.50&fromId=c213&fromName=Москва&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10
specs:
  'ЖД+ЖД: Данные о рейсах на happy page':
    - do: >-
        Перейти на страницу выбора мест в первый поезд, для сложного заказа с
        пересадкой

        Запомнить данные о рейсах (номера поездов, время отправления/прибытия,
        пункты отправления/прибытия, данные о пересадке)

        Выбрать любое место

        Далее следовать по шагам покупки до страницы хэппи пейдж (место любое,
        данные пассажиров любые)
    - assert: >-
        - открылась хэппи пейдж
        
        - есть текст "Билет оформлен" и "Отправили подтверждение на почту ***@yandex.ru. Для залогина текст "сохранили в разделе "Мои поездки"
        
        - для залогина на десктопе есть уведомление "Билет сохранен в ваши поездки" и красный кружок у иконки чемодана. На таче только красный кружок у бургер-меню

        - вверху страницы есть блок с данными о рейсах

        - все данные (номера поездов, время отправления/прибытия, пункты
        отправления/прибытия, информация о пересадке) совпадают с предыдущими
        шагами

        - под блоком с данными о рейсах есть кнопки: Подробнее о заказе,
        Распечатать (только десктоп), Скачать
manual: true
Функциональность: 'ЖД+ЖД: Пересадки'
Устройство:
  - Тач
  - Десктоп
Страница: Happy page
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Пример ссылки на выбор мест для пересадок:
  https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-111T13.50&fromId=c213&fromName=Москва&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10
specs:
  'ЖД+ЖД: Хлебные крошки':
    - do: >-
        Перейти на страницу выбора мест в первый поезд, для сложного заказа с
        пересадкой
    - assert: |-
        - находимся на вкладке "Выбор мест (поезд 1)"
        - вкладка "Выбор поезда" доступна для выбора
        - остальные вкладки заблокированы
    - do: |-
        Выбрать двух взрослых пассажиров
        Выбрать место для первого пассажира
    - assert: '- вкладка "Выбор мест (поезд 2)" неактивна'
    - do: Выбрать место для второго пассажира
    - assert: '- вкладка "Выбор мест (поезд 2)" стала активной'
    - do: Нажать на "Выбор мест (поезд 2)"
    - assert: |-
        - открылась страница выбора мест во второй поезд
        - все предыдущие вкладки доступны для выбора
        - все последующие вкладки заблокированы
    - do: Выбрать одно место
    - assert: '- вкладка "Данные пассажиров" неактивна'
    - do: Выбрать второе место
    - assert: '- вкладка "Данные пассажиров" стала активной'
    - do: Кликнуть по вкладке "Данные пассажиров"
    - assert: |-
        - открылась страница ввода данных
        - все предыдущие вкладки доступны для выбора
        - все последующие вкладки заблокированы
    - do: |-
        Ввести любые валидные данные
        Нажать "Проверить заказ и купить"
    - assert: |-
        - произошел переход на вкладку "Подтверждение"
        - все предыдущие вкладки доступны для выбора
        - все последующие вкладки заблокированы
    - do: Кликнуть по вкладке "Выбор мест (поезд 1)"
    - assert: >-
        - произошел переход на страницу выбора мест в первый поезд

        - вкладки "Выбор поезда", "Выбор мест (поезд 1)" и "Выбор мест (поезд
        2)" доступны, остальные заблокированы
manual: true
Функциональность: 'ЖД+ЖД: Пересадки'
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Проверяем блок:
  https://jing.yandex-team.ru/files/shenfeld/2021-04-20_11.00.34-ih6sh.png


  Пример ссылки на выбор мест для пересадок:
  https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-111T13.50&fromId=c213&fromName=Москва&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10
specs:
  'ЖД+ЖД: Блок с данными о рейсах на выборе мест':
    - do: >-
        Перейти на страницу выбора мест в первый поезд, для сложного заказа с
        пересадкой и со сменой вокзала
    - assert: >-
        - открывается шаг выбора мест

        - вверху страницы есть блок с данными о рейсах

        - в блоке есть заголовок с пунктами отправления/прибытия для полного
        маршрута, дата отправления, день недели

        - для обоих поездов есть данные: перевозчик (только в десктопе), номер и
        название поезда, время и дата отправления/прибытия, время в пути,
        приписка "Время местное", пункты отправления/прибытия

        - блок с первым поездом выделен желтой рамкой

        - есть информация о пересадке: иконка с бегущим человеком и текст:
        __Пересадка в [город пересадки] ([вокзал1] → [вокзал2]) — 6 ч 8 мин__
    - do: |-
        Выбрать любое место в первом поезде
        Нажать "Далее"
    - assert: |-
        - произошел переход на шаг выбора мест во второй поезд
        - в блоке с данными о рейсах рамкой выделен второй рейс
manual: true
Функциональность: 'ЖД+ЖД: Пересадки'
Устройство:
  - Тач
  - Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Бронируем места в оба поезда со схемой.


  Пример ссылки на выбор мест для пересадок:
  https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-111T13.50&fromId=c213&fromName=Москва&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10
specs:
  'ЖД+ЖД: Корзинка в таче':
    - do: >-
        Перейти на страницу выбора мест в первый поезд, для сложного заказа с
        пересадкой

        Выбрать 1 взрослого пассажира, 1 ребенка с местом, 1 ребенка без места
    - assert: >-
        - внизу отображается корзинка с кнопкой Далее, заголовком "Стоимость
        билетов" и направлением для первого рейса
    - do: |-
        Выбрать тип вагона Плацкарт
        Выбрать любые места
    - assert: |-
        - корзина переместилась под схему
        - отображается стоимость за 2 места
    - do: Нажать на иконку вопроса
    - assert: >-
        - открылось окно с расшифровкой стоимости

        - есть заголовок с направлением движения первого поезда

        - отображается стоимость за все билеты, для ребенка без места стоимость
        = 0

        - есть чекбокс постельного белья, установлен

        - есть сумма Итого, она включает сумму за все билеты в первый поезд
    - do: Нажать "Далее"
    - assert: |-
        - произошел переход на страницу выбора мест во второй поезд
        - внизу страницы в корзинке появился блок с направлением второго рейса
    - do: Выбрать любые места в плацкарте
    - assert: |-
        - корзина переместилась к схеме
        - отображается стоимость за 2 места во втором поезде
    - do: Нажать на иконку вопроса
    - assert: >-
        - открылось окно с расшифровкой стоимости

        - есть 2 блока, в заголовках направление движения первого и второго
        поезда

        - отображается стоимость за все билеты, для ребенка без места стоимость
        = 0

        - есть чекбокс постельного белья для обоих рейсов, установлен

        - есть сумма Итого, она включает сумму за все билеты в оба поезда
    - do: Снять чекбокс "Постельное белье" для второго рейса
    - assert: |-
        - чекбокс снялся
        - сумма Итого уменьшилась на сумму за белье
    - do: |-
        Нажать Указать пассажиров
        Ввести любые данные
        Нажать Проверить заказ и купить
    - assert: >-
        - открылась страница подтверждения заказа

        - внизу страницы в корзине есть два блока: с билетами на первый рейс и
        на второй

        - для каждого блока есть заголовок с направлением рейса

        - в блоке с билетами во второй рейс нет информации о белье, в блоке с
        первым рейсом есть текст "Бельё включено в стоимость"

        - есть сумма Итого, она совпадает с суммой за все билеты на оба рейса
    - do: Установить чекбокс страховки
    - assert: '- сумма Итого увеличилась на сумму страховки'
manual: true
Функциональность: 'ЖД+ЖД: Пересадки'
Устройство: Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Пример ссылки на выбор мест для пересадок:
  https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-111T13.50&fromId=c213&fromName=Москва&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10
specs:
  'ЖД+ЖД: Блок с выбором пассажиров':
    - do: >-
        Перейти на страницу выбора мест в первый поезд, для сложного заказа с
        пересадкой
    - assert: >-
        - находимся на вкладке "Выбор мест (поезд 1)"

        - в блоке "Укажите количество билетов" есть текст: __Количество
        пассажиров на всех частях маршрута должно быть одинаковым.__
    - do: |-
        Выбрать 2 взрослых пассажиров
        Выбрать любые места
        Нажать "Далее"
    - assert: >-
        - открылась страница выбора мест для второго поезда

        - в блоке "Укажите количество билетов" есть текст: __Количество
        пассажиров на всех частях маршрута должно быть одинаковым.__

        - в блоке "Укажите количество билетов" все селекты заблокированы,
        выбрано 2 взрослых пассажира
manual: true
Функциональность: 'ЖД+ЖД: Пересадки'
Устройство:
  - Тач
  - Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить url страницы на этапе оформления
  заказа.

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._
specs:
  Автобусы.Партнеры. Busfor:
    - do: |-
        Поиск по партнеру Эколайнс
        - Пермь - Кунгур
        - Краснокамск - Пермь
        - Одесса - Киев
        - Питер - Москва
    - assert: 'Маршрут партнера Басфор найден, доступен для букинга'
    - do: |-
        Заполните данные, необходимые для оформления билета
        Нажмите кнопку Оплатить
    - assert: 'Открылась форма для оплаты, ошибок нет'
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: ЖД
type: Выдача
description: >-
  Пример поиска с пересадками

  https://travel-test.yandex.ru/trains/moscow--novoduginskaya/?when=after-tomorrow

  https://travel-test.yandex.ru/trains/yekaterinburg--krasnodar/?when=after-tomorrow


  Сложный заказ=заказ с пересадками

  Перейти на вкладку ЖД билеты
specs:
  'ЖД+ЖД: Выдача с пересадками':
    - do: >-
        do

        выполнить поиск москва-новодугинская

        assert

        открылась выдача, соответствующая условиям поиска, на странице
        присутствует заголовок с пунктами отправления-прибытия, фильтра и
        сниппеты, а также инфо баннер о том, что найдены маршруты только с
        пересадками


        do

        в выдаче присутствуют сниппеты сложного заказа

        assert

        в сниппете есть информация о пересадке, при наличии билетов есть одна
        кнопка для покупки билетов на весь маршрут (2 билета на 2 поезда)


        do

        в сниппете клик на "маршрут и цены"

        assert

        расхлопнулись подробности маршрута,

        - присутствуют два поезда,

        - информация о пересадке,

        - время отправления и прибытия для каждого поезда,

        - время в пути,

        - информация о номере поезда и перевозчике,

        - количестве мест на разных тарифах и стоимость
manual: true
Функциональность: 'ЖД+ЖД: Пересадки'
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Blocker
feature: ЖД
type: Страница заказа
description: >-
  Пример поиска с пересадками

  https://travel-test.yandex.ru/trains/moscow--novoduginskaya/?when=after-tomorrow

  https://travel-test.yandex.ru/trains/yekaterinburg--krasnodar/?when=after-tomorrow

  Перейти на вкладку ЖД билеты

  Купить билет на поезд с пересадкой для семьи из родителя с младенцем и ребенка
  с местом со страховкой

  Открыть ЛК
specs:
  'ЖД+ЖД: сложный заказ в ЛК, подробности заказа':
    - do: Открыть заказ с пересадкой в ЛК
    - assert: |-
        открылась страница заказа, на ней есть
        - номер заказа со статусом
        - блок с данными о маршруте и поездах
        - кнопки печати, скачать билеты и кнопка возврата всех билетов
        - блок с данными о пассажирах
        - блок с контактной информацией
    - do: проверим блок с данными о поездах
    - assert: >-
        в блоке есть

        - заголовок с начальной и конечной станцией всего маршрута, дата поездки

        - два блока с информацией о двух поездах, в каждом блоке есть
          - название перевозчика
          - номер поезда и его маршрут
          - информация о вагоне, тарифе и местам (два места)
          - дата и время отправления, время в пути
          - город и станция отправления и прибытия
        - блоки поездов разделяет информация о пересадке, есть город со станцией
        и время пересадки

        - в конце блока с поездами есть номера заказов РЖД (2 номера)
    - do: проверим блок с данными пассажиров
    - assert: |-
        В блоке есть три пассажира, у каждого есть
        - фио пассажира
        - данные о документе
        - данные о дате рождения
        - пол пассажира
        - данные о билетах (2 билета), в каждом блоке билета содержится
          - пункты отправления и прибытия, место, тариф, информация о страховке
          - у тарифа и страховки есть иконки вопроса с ховером по клику, в ховере тарифа инфо о цене и сборе, в ховере страховки инфо о страховке со ссылкой на подробные условия
          -  кнопка сдачи билета и кебаб (при наличии электронной регистрации) с кнопкой отмены ЭР
        - инфо о сумме за все билеты и страховки
        - ссылка на скачивание чека оплаты и на полные условия страховки
    - do: проверим блок контактной информации
    - assert: |-
        в блоке есть
        - текст о том, что билет отправлен на почту
        - адрес эл почты
        - номер тел
manual: true
Функциональность: 'ЖД+ЖД: Пересадки'
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Blocker
feature: Отели
type: ''
description: ''
specs:
  'Отели: Сео страницы':
    - do: Перейти на /hotels/moscow/
    - assert: |-
        |

        Страница открылась

        Контент соответствует лендингу (отели Москвы)
    - do: |-
        Перейти на

        */hotels/moscow/filter-pool/

        */hotels/yekaterinburg/filter-5-star/
    - assert: >-
        |


        Страница открылась


        Контент соответствует лендингу


        В хлебных крошках есть название фильтра (например "5*"), скриншот:
        https://jing.yandex-team.ru/files/tcheremnykh/2021-05-21_17-47-23.png
    - do: >-
        Перейти на 1 крошку назад (название города), вернуться бразуерной
        кнопкой назад
    - assert: 'фильтр применился, контент соответствует лендингу'
    - do: внизу страницы нажать на  кнопку "Все предложения"
    - assert: 'открылась полная выдача, применен соответствующий фильтр'
    - do: 'вернуться на лендинг, нажать на сниппет отеля'
    - assert: открылась форма выбора дат
    - do: выбрать даты и нажать Найти номера
    - assert: открылась страница отеля
manual: true
Устройство: Десктоп
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Автобусы. Старый фронт
type: Партнеры
description: >-
  **Для определения партнера нужно проверить url страницы на этапе оформления
  заказа.

  Имя написано сразу после поискового запроса и перед ид заказа.**


  _Для поисков райдов можно также воспользоваться запросом YQL
  https://nda.ya.ru/t/35r5fssQ3WxHaR

  Нужно выставить вчерашнюю дату и поставить корректное именование партнера в
  supplierCode_


  **При нахождении хотя бы одного корректного рейса нужного партнера можно
  переходить к следующему кейсу.**


  _В одной поисковой выдаче могут быть рейсы как одного партнера, так и
  нескольких, иногда рейсов партнера может не быть на выдаче совсем, а иногда
  может быть один рейс партнера среди множества рейсов другого. Стоит
  просмотреть всю выдачу, иногда стоит поискать на другие даты, есть шансы найти
  других партнеров для других кейсов._
specs:
  Автобусы.Партнеры. Atlasbus:
    - do: |-
        Поиск по партнеру Атласбас
        - Челябинск - Миасс
        - Миасс - Челябинск
    - assert: 'Маршрут партнера Атласбас найден, доступен для букинга'
    - do: |-
        Заполните данные, необходимые для оформления билета
        Нажмите кнопку Оплатить
    - assert: 'Открылась форма для оплаты, ошибок нет'
manual: true
Устройство: Десктоп
Страница: Партнеры
Сервис: Автобусы. Старый фронт
feature: Портал
type: Главная
description: ''
specs:
  Портал. Автовыбор саджеста в форме поиска при потере фокуса:
    - do: >-
        Перейти на главную авиа

        В поле Откуда ввести Моск

        Не выбирая саджест из списка кликнуть по полю Куда (в таче перейти назад
        по стрелке)
    - assert: В поле Откуда подставился саджест Москва
    - do: |-
        В Куда ввести Санкт
        Кликнуть по след полю (в таче перейти назад по стрелке)
    - assert: В Куда подставился саджест Санкт-Петербург
    - do: >-
        Повторить шаги для ЖД, автобусов и отелей (в отелях одно поле и
        называется по другому)
    - assert: >-
        Ожидаемый результат должен соответствовать предыдущему - при уходе с
        поля (если что то вводили) подставляется первый релевантный саджест из
        поиска.
    - do: |-
        Перейти на выдачу авиа с любыми параметрами
        Повторить шаги 1-2
    - assert: Ожидаемый результат должен соответствовать 1-2
    - do: >-
        Повторить шаги 1-2 на выдаче жд, автобусов и отелей (для отелей только
        шаг 1)
    - assert: Ожидаемый результат должен соответствовать 1-2
manual: true
Функциональность: Форма поиска
Устройство:
  - Тач
  - Десктоп
Страница:
  - Главная
  - Выдача
Сервис: Портал
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: iliasova
feature: ЖД
type: Страница заказа
description: |-
  Кейс для проверки покупки дежурным тестировщиком.
  Реквизиты тестовой карты: 5100002767155462, 12/22, 454

  Пересадочные рейсы можно найти
  москва-тихвин
  москва-питер
  пермь-анапа
  серов-ростов на дону
specs:
  'ЖД+ЖД: Покупка и возврат билетов с пересадкой, шаг оплаты включен':
    - do: >-
        Перейти на выдачу Москва - Санкт-Петербург через неделю

        Для поезда с пересадкой кликнуть по кнопке покупки

        Выбрать 3 пассажиров - 1 взрослого, 1 ребенка от 5 до 10 лет, 1 ребенка
        без места

        Выбрать места на первый поезд

        Выбрать места на второй поезд

        Нажать на кнопку “Указать пассажиров”

        Заполнить все поля валидными данными

        В поле электронной почты указать почту на @yandex-team.ru

        Нажать по кнопке “Проверить заказ и купить”
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Все данные о поезде и пассажирах соответствуют выбранным
    - do: |-
        Нажать на кнопку “Ввести карту и оплатить”
        На странице оплаты ввести данные тестовой карты из описания кейса
        Нажать на кнопку “Оплатить”
        На хэппи пейдж нажать на кнопку "Подробнее о заказе"
    - assert: >-
        * Произошел переход на страницу подробного заказа для 3 пассажиров

        * На странице есть кнопка “Скачать билеты” (в таче просто Скачать)

        * На почту пришло письмо о покупке (письмо может прийти в течение
        получаса, так как не будет чека)

        * Стоимость заказа в письме совпадает с итоговой суммой со страницы
        подтверждения

        * Для ребенка без места Цена билета и Сервисный сбор равны 0
    - do: Нажать на кнопку “Скачать билеты” (в таче просто Скачать)
    - assert: '* Произошло скачивание pdf-файла'
    - do: Открыть чек со страницы заказа
    - assert: >-
        * итоговая сумма в чеке совпадают с суммами в письме и на странице
        заказа
    - do: Нажать на кнопку “Сдать билет” для одного из билетов
    - assert: '* Появилось модальное окно возврата'
    - do: |-
        Запомнить сумму, которая отображается как “К возврату”
        Нажать на кнопку “Подтвердить”
    - assert: >-
        * Через какое-то время появился статус Возврат

        * Через какое-то время сформировалась КРС

        * На указанную почту пришло письмо о возврате

        * Сумма к возврату в письме и на странице заказа совпадает с суммой,
        которая была указана в модальном окне возврата
    - do: Открыть чек и КРС на странице заказа
    - assert: >-
        * В чеке есть “Услуги перевозки пассажира ж/д

        транспортом”

        * Общая сумма к возврату совпадает с суммой в письме и суммой в
        модальном окне при возврате

        * Произошло скачивание квитанции о возврате
manual: true
Функциональность:
  - Действия с заказом
  - 'ЖД+ЖД: Пересадки'
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Отели
type: Выдача
description: >-
  Кейс проверяет, что тексты отсутствия предложений актуальные, т.к ранее теряли
  обновленную версию несколько раз при разработке новых фич.
specs:
  Отели. Тексты отстуствия предложениий на поиске и стр отеля:
    - do: |-
        Перейти на выдачу отелей по запросу
        Зимбабве
        Даты любые
        2 гостя
    - assert: |-
        Открылась отельная выдача
        На выдаче есть список отелей
    - do: В списке выбрать любой отель и кликнуть по нему
    - assert: Произошел переход на страницу отеля
    - do: |-
        Установить максимальное кол-во взрослых и детей
        поставить флаг в чек-бокс "Продовые офферы"
        Поискать предложения на новое кол-во гостей
    - assert: >-
        Остались на странице отеля, но кол-во гостей в форме обновилось

        Внизу есть блок с текстом "На эти даты для $ гостей не нашлось
        предложений", где $ - общее кол-во гостей (взрослые + дети)

        Ниже кнопка "Найти другие предложения"


        P.S если предложения есть (в том числе предложения от партнеров), вернуться на выдачу и повторить п.2, выбрав
        другой отель
manual: true
Устройство:
  - Тач
  - Десктоп
Страница:
  - Выдача
  - Страница отеля
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
Автор: iliasova
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Выдача - Блок Динамики цен с кнопками':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку "Найти"
    - assert: >-
        Открылась страница выдачи.

        На выдаче присутствует блок Динамики цен с кнопками.

        Десктоп: https://jing.yandex-team.ru/files/gouken67/1442_1_desktop.png

        Тач: https://jing.yandex-team.ru/files/gouken67/1442_1_touch.png

        Десктоп: В блоке 7 кнопок с ценами: кнопка для текущего дня и 6 кнопок
        за +- 3 ближайших дня.

        Тач: В блоке 3 кнопки с ценами и одна кнопка Смотреть. Кнопки с ценами
        содержат цены и даты для текущего дня и +-1 ближайших дня.

        Цены на кнопках могут меняться на более дешёвые.
    - do: >-
        Кликнуть по кнопке с примерной ценой / кнопке с надписью "Цена
        неизвестна" (если такие есть).
    - assert: Открывается окно Динамики цен.
    - do: |-
        **Если шаг 4 неактуален**
        Для десктопа: кликнуть по ссылке Смотреть весь календарь.
        Для тача: Кликнуть по кнопке Смотреть все.
    - assert: Открывается окно Динамики цен.
    - do: |-
        Дождаться, когда будут получены все цены за неделю.
        Запомнить полученные цены.
        Закрыть окно Динамики цен.
    - assert: 'Цены в блоке Динамики цен стали такими же, как и в окне Динамики цен.'
    - do: |-
        Десктоп: Кликнуть по ссылке Подписаться на изменение цены
        Тач: Тапнуть по ползунку Подписаться на изменение цены.
    - assert: |-
        Появляется окно для подписки на изменение цены.
        https://jing.yandex-team.ru/files/gouken67/1442_2.png
    - do: |-
        Закрыть окно подписки.
        Кликнуть по кнопке с известной ценой.
    - assert: >-
        Осуществляется переход на выдачу Екатеринбург - Санкт-Петербург для
        выбранного дня. Самая дешёвая цена на выдаче совпадает с тем, что было
        указано на кнопке в блоке Динамики цен.
manual: true
Функциональность: Динамика
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Выдача - Скролл в блоке Динамики цен':
    - do: 'Открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца
        Обратно: любое другое число следующего месяца
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку "Найти"
    - assert: >-
        Открылась страница выдачи.

        На выдаче присутствует блок Динамики цен с кнопками.
        Для некоторых кнопок вместо цены может быть указано "Цена неизвестна".
        Цены на кнопках могут меняться на более дешёвые.

        https://jing.yandex-team.ru/files/gouken67/1443_2.png
    - do: |-
        Доскроллить блок Динамики цен до последней кнопки.
        Кликнуть по Смотреть весь календарь.
    - assert: >-
        Открывается окно Динамики цен.
        Выбрана вкладка Таблица цен. Клетка, соответствующая датам Туда-Обратно на выдаче, выделена жёлтым цветом.
        Происходит обновление цен для промежутков, на которые цена была неизвестна (лежат по диагонали от выделенной клетки), а также на 6 дополнительных клеток вокруг жёлтой.

        https://jing.yandex-team.ru/files/gouken67/1443_3.png
    - do: |-
        Дождаться, когда цены для всех промежутков будут известны.
        Закрыть окно Динамики цен.
        Проскроллить блок Динамики цен до самого левого блока.
    - assert: >-
        Цены в блоке Динамики цен соответствуют тем, что были получены в окне
        Динамики цен. Вёрстка не едет.
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Regress
Автор: gouken67
feature: Авиа
type: Выдача
description: Находиться на главной странице сайта. Выбрать Авиабилеты.
specs:
  'Авиа: Як (пустой поиск)':
    - do: >-
        Выполнить поиск авиабилетов по направлению Ухта - Капо-Ватикано, на
        пятое число следующего месяца для одного пассажира эконом класса.

        (Если по направлению указанному в кейсе есть билеты на выдаче, то
        подобрать направление по которому нет предложений.(Выбирать город без
        аэропорта, например: Шаля - Москва, Ухта - Канаш).
    - assert: >-
        Выдача - нет вариантов.

        Вместо офферов - текст "Нет вариантов. Мы не нашли билетов на это
        направление. Давайте поищем куда-нибудь еще!"
        Примерный внешний вид (Десктоп):
        https://jing.yandex-team.ru/files/molox/image_2021-07-26_13-08-56.png
        Примерный внешний вид (Тач):
        https://jing.yandex-team.ru/files/molox/image_2021-07-26_17-14-51.png
manual: true
Функциональность:
  - 'Поиск, общий вид выдачи'
  - Як
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: 'Зайти на сайт, перейти в раздел Авиа.'
specs:
  'Авиа: Як с картой (пустой поиск)':
    - do: >-
        Выбрать направление Ухта-Сосьва на 5-ое число следующего месяца ,
        эконом-класс 1 пассажир.

        Если по данному направлению есть предложения, выбрать другое
        направление:

        (Москва - Ванавара, Красноярск - Туруханск, Москва - Игарка,
        Москва-Озерск, Екатеринбург-Канаш, Волгоград-Новочебоксарск)
    - assert: >-
        **Ожидаемый Результат в выдаче:**

        Для десктопа:

        Ухта - Сосьва, 5-ое число следующего месяца.

        Примерный заголовок  "До Сосьвы можно добраться прилетев в один из
        городов по соседству"

        Под заголовком присутствует карта с пином города, до которого искали
        билеты

        На карте, пинами отмечены соседние города

        Справа есть меню выбора

        В меню выбора: список соседских городов указанных на карте.

        Примерный внешний вид десктоп:
        https://jing.yandex-team.ru/files/semirka/image_2021-07-26_13-37-13.png


        **Ожидаемый Результат в выдаче:**

        Для тача:

        Ухта - Сосьва, 5-ое число следующего месяца.
         Заголовок: "Нет вариантов"
        Подзаголовок: "Мы не нашли билетов на это направление. Давайте поищем куда-нибудь еще!"

        Примерный внешний вид тач:
        https://jing.yandex-team.ru/files/semirka/image_2021-07-26_17-28-46.png
    - do: |-
        **Только для Десктоп**
        Нажать на город "Игрим" на карте.
    - assert: >-
        Окно выдачи обновилось.

        В выдаче направление изменилось на Ухта - Игрим, дата осталась без
        изменений.
    - do: |-
        Вернутся на предыдущую страницу
        Нажать на город "Игрим" в меню справа
    - assert: >-
        Assert: Окно выдачи обновилось

        В выдаче направление изменилось на Ухта - Игрим дата осталась без
        изменений.
manual: true
Функциональность:
  - 'Поиск, общий вид выдачи'
  - Як
Устройство:
  - Тач
  - Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: >-
  Если нет блока "В {город} есть рейсы в другие дни", то меняем дату или
  направление полета.

  (Например: Красноярск - Полярный, Якутск - Батагай).

  (Например: 1 число, 5 число, 12 число, можно изменить месяц).

  Находиться на главной странице сайта. Выбрать Авиабилеты.
specs:
  'Авиа: Як с динамикой цен (пустой поиск)':
    - do: >-
        Выполнить поиск авиабилетов по направлению Красноярск - Туруханск, на
        завтра.
    - assert: |-
        **На таче** Заголовок "Нет вариантов", текст "Мы не нашли билетов на это направление. Давайте поищем куда-нибудь еще!", фильтры и график отсутствуют (для тачей на этом кейс окончен)
        Примерный внешний вид (тач): https://jing.yandex-team.ru/files/kuklina/Screenshot_2022-07-06-13-43-32-732_com.android.chrome.jpg
        **На десктопе** Заголовок "В {город} есть рейсы в другие дни"

        Примерный внешний вид (Десктоп):
        https://jing.yandex-team.ru/files/kuklina/2022-05-23_14-37-02.png

        В блоке есть следующие элементы:

        1) Размерность - Неделя/Месяц.

        2) Есть фильтры "Без пересадок", “С Багажом”, “Пересадки”,"Время" (десктоп)

        3) График цен на соседние даты.

        Отображается график в виде гистограммы, где:

        1) Выбран день вылета, столбец жёлтого цвета

        2) Автоматически происходит опрос партнёров (если изначально нет цен на
        какие-то даты) для +- 3 дня от выбранной даты - отображаются лоадеры на
        столбиках

        3) Дни, для которых цена известна, светло серого цвета, под столбцами
        указана цена. Дни, для которых цена не известна, - в полосочку, под
        столбцами - кнопка "Найти"

        4) Есть ватерлиния - пунктирная линия, построенная относительно
        выбранного столбца.
        
    - do: 'Выбрать день, для которого есть цена. Нажать на цену под столбиком.'
    - assert: >-
        Assert: Открылась выдача, направление то же, дата соответствует той,
        которая выбрана в динамике цен.
manual: true
Функциональность:
  - 'Поиск, общий вид выдачи'
  - Як
Устройство:
  - Тач
  - Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
feature: Авиа
type: Выдача
description: 'Зайти на сайт, перейти в раздел Авиа.'
specs:
  Як с картой ( поиск билетов до города без аэропорта):
    - do: >-
        Выбрать направление Москва-Озерск,   туда- 5-ое число следующего месяца,
        1 пассажир, эконом-класс

        Если по этому направлению есть предложение, выбрать другое направление:
        (Екатеринбург-Канаш,  Волгоград-Новочебоксарск)
    - assert: >-
        Результат в выдаче:

        Направление Москва-Озерск , 5-ое число следующего месяца, 1 пассажир,
        эконом-класс.

        На таче - фраза "Нет вариантов. Мы не нашли билетов на это направление. Давайте поищем куда-нибудь еще!", карта отсутствует

        На десктопе - Примерный заголовок "До Озерска можно добраться прилетев в один из
        городов по соседству"

        Под заголовком присутствует карта с пином города, до которого искали
        билеты.

        На карте пинами отмечены города по соседству

        На карте справа, есть меню выбора

        В меню выбора, список соседских городов указанных на карте.

        Примерный внешний вид десктоп -
        https://jing.yandex-team.ru/files/semirka/image_2021-07-26_13-37-13.png
manual: true
Функциональность:
  - 'Поиск, общий вид выдачи'
  - Як
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Smoke
feature: Отели
type: Выдача
description: >-
  Объект считается расположенным рядом с отелем, если отель находится на
  расстоянии не боле 1,5 км от объекта.
specs:
  Отели. Фильтр Рядом:
    - do: |-
        Зайти на главную страницу, вкладка Отелей.
        Заполнить поисковую форму следующим образом:

        Куда: Адлер
        Даты: через неделю на 2 ночи
        Гости: Любые

        Нажать кнопку Найти
    - assert: >-
        Переходим на выдачу Отелей.

        На выдаче видим отели Адлера. У большинства отелей указано "N м до моря", где N - расстояние

        https://jing.yandex-team.ru/files/iliasova/2022-01-09_18.23.18-2x8ye.png
    - do: |-
        Открыть фильтры.
        Выставить значение Аэропорт в группе Рядом.
        Вернуться на выдачу по нажатию на кнопку Искать цены.
    - assert: >-
        На выдаче появились отели с местностью "Рядом с аэропортом". Могут
        отображаться также отели с "N м до моря".

        На карте остались только те отели, которые расположены рядом с
        аэропортом.
    - do: |-
        Сбросить значение фильтра.
        Открыть форму поиска.
        Изменить пункт Куда на Екатеринбург.
        Нажать кнопку Найти.
    - assert: Получена выдача для Екатеринбурга на указанные даты.
    - do: |-
        Открыть фильтры.
        Выставить значение Парк в группе Рядом.
        Вернуться на выдачу по нажатию на кнопку Искать цены.
    - assert: >-
        На выдаче появились отели с лейблом "N м до центра"
        Могут отображаться также отели с местностью "Рядом с центром" или "Рядом с парком".
        На карте остались только те отели, которые расположены рядом с
        парком/центром.
    - do: Кликнуть по одному из сниппетов
    - assert: |-
        Переходим на страницу отеля.
        На странице отеля указан тот же лейбл, что и на сниппете в выдаче
manual: true
Функциональность:
  - Фильтры и сортировки
  - Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница:
  - Выдача
  - Страница отеля
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: gouken67
feature: Отели
type: Выдача
description: ''
specs:
  Отели. Фильтр  До центра:
    - do: |-
        Зайти на главную страницу, вкладка Отелей.
        Заполнить поисковую форму следующим образом:

        Куда: Северодвинск
        Даты: через неделю на 2 ночи
        Гости: Любые

        Нажать кнопку Найти
    - assert: >-
        Переходим на выдачу Отелей.

        На выдаче видим отели Северодвинска. У большинства отелей указана
        местность.

        https://jing.yandex-team.ru/files/ea-timofeev/LmmmWNdXQw.png
    - do: |-
        Открыть фильтры.
        Выставить значение Меньше 1 км в фильтре До центра.
        Вернуться на выдачу по нажатию на кнопку Искать цены.
    - assert: |-
        На выдаче остались только отели с местностью "Рядом с центром" и "N м до центра", где N - расстояние (вместо м может быть в км), не превыщаюшее 1 км.
        Количество отелей на карте уменьшилось.
    - do: >-
        Изменить значение в фильтре До центра на "Меньше 2 км" и вернуться на
        выдачу по кнопке Искать цены.
    - assert: |-
        На выдаче есть отели с местностью "Рядом с центром" и "Рядом с парком" и "N м до центра", где N - расстояние (вместо м может быть в км), не превыщаюшее 2 км.
        Количество отелей на карте немного увеличилось.
    - do: >-
        Изменить значение в фильтре До центра на "Меньше 3 км" и вернуться на
        выдачу по кнопке Искать цены.
    - assert: |-
        На выдаче есть отели с местностью "Рядом с центром" и "Рядом с парком" и "N м до центра", где N - расстояние (вместо м может быть в км), не превыщаюшее 3 км.
        Количество отелей на карте немного увеличилось снова.
    - do: На десктопе 'Кликнуть по пину на карте для отеля, расположенного рядом с центром.'
    - do: >- 
        На таче перейти в режим карты
        Кликнуть по пину на карте для отеля, расположенного рядом с центром.
        Кликнуть в любое место открывшейся шторки 
    - assert: |-
        Переходим на страницу отеля.
        После адреса указан один из трех лейблов
        * "Рядом с центром"
        * "Рядом с парком"
        * "N м до центра"
        Лейбл должен совпадать с тем, что был на сниппете в выдаче
manual: true
Функциональность:
  - Фильтры и сортировки
  - Содержание выдачи
Устройство:
  - Тач
  - Десктоп
Страница:
  - Выдача
  - Страница отеля
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: gouken67
feature: Отели
type: Страница отеля
description: >-
  В таче может отличаться порядок и внешний вид элементов, но важно чтобы они
  были.

  Залогиниться под любым профилем.
specs:
  Страница отеля. Клики в отзывах.:
    - do: нажать на любую сортировку.
    - assert: отзывы отсортировались согласно сортировке
    - do: Нажать на любой фильтр
    - assert: >-
        Фильтр применился (загорелся желтым) к отзывам, остались только отзывы
        подходящие по фильтру.
    - do: нажать на "..." что бы раскрыть скрытые фильтры.
    - assert: скрытые фильтры раскрылись.
    - do: Кликнуть на лайк/дизлайк
    - assert: >-
        Лайк или дизлайк добавился к существующим, лайк отметился зеленым
        цветом, а дизлайк красным. Есть возможность поставить только что то
        одно.
    - do: Кликнуть по лайк/дизлайк что бы снять лайк/дизлайк.
    - assert: 'лайк/дизлайк исчез, лайк/дизлайк снова пустые с синей рамкой.'
    - do: Кликнуть по любому пользователю в отзывах.
    - assert: Произошел переход на профиль пользователя.
    - do: Вернуться на страницу отеля.
    - assert: находимся на главной странице отеля.
manual: true
Страница: Страница отеля
Сервис: Отели
feature: Отели
type: Страница отеля
description: Быть на главной отеля имеющего фотографии.
specs:
  Страница отеля. Фото на главной отеля.:
    - do: Нажать большое фото на главной странице.
    - assert: >-
        Открылось модальное окно с фото-галереей. Открылось фото которое мы
        выбрали. Большое фото является первым фото в галерее.
                Выбранное фото в ленте помечается пониженной яркостью.
    - do: кликнуть по открывшейся фотографии
    - assert: произошел переход на правую фотографию
    - do: кликнуть на правый элемент скролла (стрелочка вправо)
    - assert: произошел переход на правую фотографию.
    - do: кликнуть по левому элементу скролла (стрелочке влево)
    - assert: произошел скролл на левую фотографию.
    - do: кликнуть по любой фотографии из галереи снизу модального окна
    - assert: >-
        открылось выбранное фото. если нажали на фото из левой части галери, то
        галерия продвинется влево, если вправо, то продвинется вправо.
    - do: >-
        закрыть модальное окно нажав на крестик или на задний темный фон за
        модальным окном.
    - assert: мы на главной странице отеля.
manual: true
Страница: Страница отеля
Сервис: Отели
feature: Отели
type: Страница отеля
description: >-
  Залогиниться и быть на главной отеля Radisson Slavyanskaya Hotel & Business
  Center, Moscow 4*.(Должны быть отзывы других людей)

  Добавить параметр в URL - &srcParams=travel%3AenabledTestUgc%3Dtrue
specs:
  Страница отеля. Создание отзыва.(Есть другие отзывы):
    - do: В блоке отзывов кликнуть по любому кол-ву звезд.
    - assert: >-
        Открылось модальное окно с возможностью изменения звезд и написанием
        комментария
    - do: Изменить кол-во звезд и написать любой комментарий
    - assert: 'Кол-во звезд изменяется (звезды горят желтым), комментарий заполнен'
    - do: Кликнуть по кнопке "Отправить"
    - assert: >-
        Модальное окно с отзывом закрылось и появилось модальное окно с
        благодарностью.
    - do: Кликнуть по кнопке "Понятно"
    - assert: >-
        Модальное окно закрылось, наш отзыв опубликован.

        Проверить совпадает ли кол-во звезд которое мы указывали с тем что
        указано в опубликованном отзыве.
manual: true
Функциональность: Отзывы
Страница: Страница отеля
Сервис: Отели
Тестирование асессорами: Нет
Автор: molox
feature: Отели
type: Страница отеля
description: >-
  Залогиниться и быть на главной отеля Sunbird Guest House Harare 3*.(Не должно
  быть отзывов других людей)

  Добавить параметр в URL - &srcParams=travel%3AenabledTestUgc%3Dtrue
specs:
  Страница отеля. Создание отзыва.(Нет других отзывов):
    - do: В блоке отзывов кликнуть по любому кол-ву звезд
    - assert: Откроется модальное окно с оценкой и комментарием
    - do: Изменить кол-во звезд и написать любой комментарий
    - assert: 'Кол-во звезд изменяется (звезды горят желтым), комментарий заполнен'
    - do: Кликнуть по кнопке "Отправить"
    - assert: >-
        Модальное окно с отзывом закрылось и появилось модальное окно с
        благодарностью.
    - do: Кликнуть по кнопке "Понятно"
    - assert: >-
        Модальное окно закрылось, наш отзыв опубликован.

        Проверить совпадает ли кол-во звезд которое мы указывали с тем что
        указано в опубликованном отзыве.
manual: true
Функциональность: Отзывы
Страница: Страница отеля
Сервис: Отели
Тестирование асессорами: Нет
Автор: molox
feature: Отели
type: Страница отеля
description: |-
  Разлогиниться и быть на главной отеля Sunbird Guest House Harare 3*
  Добавить параметр в URL - &srcParams=travel%3AenabledTestUgc%3Dtrue
specs:
  Страница отеля. Создание отзыва.(Без залогина):
    - do: В блоке отзывов кликнуть по любому кол-ву звезд
    - assert: Откроется страница с входом в свой профиль
    - do: Залогиниться
    - assert: >-
        По завершению входа, открывается модальное окно с возможностью дать
        оценку и написать комментарий.
    - do: Кликаем по любому кол-ву звезд и пишем любой комментарий
    - assert: 'Кол-во звезд изменяется (звезды горят желтым), комментарий заполнен'
    - do: Кликаем по кнопке "Отправить"
    - assert: >-
        Модальное окно с отзывом закрылось и появилось модальное окно с
        благодарностью.
    - do: Кликнуть по кнопке "Понятно"
    - assert: >-
        Модальное окно закрылось, наш отзыв опубликован.

        Проверить совпадает ли кол-во звезд которое мы указывали с тем что
        указано в опубликованном отзыве.
manual: true
Функциональность: Отзывы
Страница: Страница отеля
Сервис: Отели
Тестирование асессорами: Нет
Автор: molox
feature: Отели
type: Страница отеля
description: |-
  Добавить параметр в URL - &srcParams=travel%3AenabledTestUgc%3Dtrue
  Находиться на главной странице отеля МетаМосква 3*
specs:
  Страница отеля. Сортировка + теги:
    - do: В блоке отзывов прокликать по всем вариантам сортировки
    - assert: >-
        Примененная сортировка выделяется черным цветом и отзывы соответствуют
        выбранной сортировке
    - do: >-
        Прокликать по всем возможным тегам. Если их много то некоторые будут
        скрываться за тегом "..."(Нажать на него и продолжить проверку).
    - assert: |-
        Выбранный тег может быть только один.
        Выбранный тег окрашивается в желтый цвет.
        Выбранный тег применяется на отзывы. (Отзывы содержат тему тега)
        Выбранная сортировка применяется на все теги.
manual: true
Функциональность: Отзывы
Страница: Страница отеля
Сервис: Отели
Тестирование асессорами: Нет
Автор: molox
feature: Портал
type: Главная
description: >-
  Портал путешествий в браузере Internet explorer не работает, отображаем
  заглушку о том, что браузер устарел.

  Для выполнения кейса нужно установить браузеры

  - Internet explorer

  - edge

  - яндекс браузер

  - chrome

  - firefox

  - опера

  - safari (только для Apple устройств)
specs:
  Портал путешествий. Заглушка IE:
    - do: >-
        Открыть портал путешествий в браузере internet explorer (ТОЛЬКО ДЛЯ ДЕСКТОПА). Пройтись по
        вкладкам авиабилеты, жд, отели, автобусы.
    - assert: >-
        Видим заглушку с информацией, что браузер устарел, иконку и ссылки на
        страницы загрузки других браузеров

        - яндекс.браузер

        - хром

        - опера

        - фаерфокс

        - эдж


        Все ссылки работают, проверьте их
    - do: >-
        Открыть портал путешествий в браузере Яндекс.Браузер. Пройтись по
        вкладкам авиабилеты, жд, отели, автобусы.
    - assert: 'Портал открывается, страницы всех вертикалей отображаются.'
    - do: >-
        Открыть портал путешествий в браузере Chrome. Пройтись по вкладкам
        авиабилеты, жд, отели, автобусы.
    - assert: 'Портал открывается, страницы всех вертикалей отображаются.'
    - do: >-
        Открыть портал путешествий в браузере Opera. Пройтись по вкладкам
        авиабилеты, жд, отели, автобусы.
    - assert: 'Портал открывается, страницы всех вертикалей отображаются.'
    - do: >-
        Открыть портал путешествий в браузере Firefox. Пройтись по вкладкам
        авиабилеты, жд, отели, автобусы.
    - assert: 'Портал открывается, страницы всех вертикалей отображаются.'
    - do: >-
        *Пропустите этот шаг, если вы тестируете не на устройстве apple*


        Открыть портал путешествий в браузере Safari. Пройтись по вкладкам
        авиабилеты, жд, отели, автобусы.
    - assert: 'Портал открывается, страницы всех вертикалей отображаются.'
    - do: >-
        *Пропустите этот шаг, если вы тестируете не на устройстве c ОС Android*


        Открыть портал путешествий в браузере Android browser. Пройтись по
        вкладкам авиабилеты, жд, отели, автобусы.
    - assert: 'Портал открывается, страницы всех вертикалей отображаются.'
    - do: >-
        Открыть портал путешествий в браузере Edge. Пройтись по вкладкам
        авиабилеты, жд, отели, автобусы.
    - assert: 'Портал открывается, страницы всех вертикалей отображаются.'
manual: true
Функциональность: Переход на сервис
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
feature: Авиа
type: Выдача
description: 'Быть на главной, выбрать Авиа'
specs:
  'Авиа: проверка наличия описания самостоятельной пересадки в сниппетах и на странице покупки':
    - do: |-
        Открыть главную страницу путешествий, вкладка Авиабилеты.
        Заполнить форму поиска билетов.
        Откуда: Москва
        Куда: Пхукет
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
        Нажать кнопку "Найти".
    - assert: Открылась выдача согласно введенным данным
    - do: |-
        Найти сниппеты в которых есть самостоятельная пересадка (self-connect):
        Для десктопа - https://jing.yandex-team.ru/files/molox/сампер.png
        Для тача - https://jing.yandex-team.ru/files/molox/таччи.png
    - assert: >-
        Надпись о самостоятельной пересадке должна всегда находиться последней,
        иметь иконку человека с чемоданом
    - do: >-
        (Шаг только для десктопа) - Навести курсор мыши на любую надпись
        "Самостоятельная пересадка"
    - assert: При наведении мыши открывается окно с подробной информацией о пересадке
    - do: Кликнуть по сниппету содержащему самостоятельную пересадку в описании
    - assert: Откроется страница покупки с информаций о рейсе
    - do: Обратить внимание на надпись "Самостоятельная пересадка"
    - assert: >-
        Надпись "Самостоятельная пересадка" находится под названием маршрута
        и выделена красным цветом.


        Скрин для десктопа -
        https://jing.yandex-team.ru/files/molox/десктопп.png

        Скрин для тача - https://jing.yandex-team.ru/files/molox/таччч.png
    - do: >-
        Для десктопа - Навести мышкой на любую надпись "Самостоятельная
        пересадка" на странице покупки

        Для тача - Тапнуть по любой надписи "Самостоятельная пересадка"
    - assert: >-
        Для десктопа - При наведении мыши открывается окно с подробной
        информацией о пересадке. Скрин -
        https://jing.yandex-team.ru/files/molox/дескшторка.png

        Для тача - Откроется шторка с подробной информацией о самостоятельной
        пересадке. Скрин - https://jing.yandex-team.ru/files/molox/тачшторка.png
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница:
  - Выдача
  - Страница покупки
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
Автор: molox
feature: ЖД
type: Happy page
description: >-
  Сейчас реализована возможность менять % наценки в поездах. На данном этапе %
  применяется сразу ко всем поездам. Есть исключения: Ласточка-электричка и ЦППК
  - % наценки всегда 11.

  Для поездов ЦППК  Москва-Текстильщики на завтра. Дойти до страницы хеппи пейдж
  запомнить номер заказа, телефон, дату (когда был оформлен заказ).

  Для поездов "обычных" Москва-Санкт-Петербург на завтра. Дойти до страницы
  хеппи пейдж, запомнить номер заказа, телефон, дату (когда был оформлен заказ).
specs:
  'ЖД - Бандиты : Какой процент наценки  был применен к заказу':
    - do: >-
        Для поездов ЦППК  Москва-Текстильщики на завтра. Дойти до страницы хеппи
        пейдж запомнить номер заказа, телефон, дату (когда был оформлен заказ).
    - do: >-
        Оформить еще один заказ для поездов "обычных" Москва-Санкт-Петербург на
        завтра. Дойти до страницы хеппи пейдж, запомнить номер заказа, телефон,
        дату (когда был оформлен заказ).
    - do: >-
        Перейти в  тестовую админку -
        https://travel-orders-admin-testing.common.yandex-team.ru/

        Найти заказ созданный в 1 шаге (ЦППК).

        Провалиться в заказ

        Сделать поиск по странице

        Ввести в поиске fix
    - assert: >-
        В "исходном коде заказа" есть строка "bandit_type\":\"fix11  (на данном
        этапе всегда 11)

        ![Пример](https://jing.yandex-team.ru/files/semirka/Screenshot_80.png)
    - do: |-
        Вернуться на главную админки
        Найти заказ созданный в шаге 2 (обычные поезда)
        Провалиться в заказ
        Сделать поиск по странице
        Ввести в поиске fix
    - assert: >-
        В "исходном коде заказа" есть строка "bandit_type":"fix15 (может
        меняться в зависимости от примененного процента - на данном этапе 15)
manual: true
Функциональность:
  - Только бэкенд
  - Динамика
Устройство: Десктоп
Страница:
  - Happy page
  - Страница покупки
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
feature: Комод
type: Главная
description: ''
specs:
  Комод. Пресеты с историей поисков в авиа:
    - do: >-
        Зайти на главную авиа. Выполнить поиск по любому направлению на любые
        даты с любым количеством пассажиров любого класса. Запомнить данные.
        Вернуться на главную
    - assert: >-
        * Если раньше пресетов не было, то под строкой поиска появился серый
        пресет с данными поиска (в пресете отображается только направление,
        дата, количество пассажиров и иконка самолета, но сохраняется и класс)

        * Если уже были пресеты, то появился еще один с данными поиска


        https://jing.yandex-team.ru/files/papulova/s6382ct2Rx.png
    - do: Сделать еще 3 поиска с другими данными
    - assert: |-
        * Отображается не больше 3 последних поисков
        * Новые пресеты появляются с левой стороны
    - do: >-
        Перейти на главную Яндекса - yandex.ru

        Выполнить поиск по запросу "самолет Москва Екатеринбург". В колдуне на
        выдаче поменять даты на любые другие.
    - assert: Вернуться на главную авиа. Появился пресет с данными из колдуна
    - do: Нажать на любой пресет
    - assert: >-
        * Открылась выдача авиа с данными из пресета (направление, даты, кол-во
        пассажиров, класс)
manual: true
Сервис: Комод
Устройство:
  - Тач
  - Десктоп
Страница:
  - Главная
  - Колдунщик
Автор: papulova
feature: Комод
type: ''
description: ''
specs:
  Комод. Пресеты истории поисков в жд и автобусах:
    - do: >-
        Перейти на главную Ж/Д. Выполнить поиск по любому направлению на любую
        дату. Вернуться на главную
    - assert: >-
        * Если раньше пресетов не было, то под строкой поиска появился серый
        пресет с данными поиска (в пресете отображается только направление, дата
        и иконка поезда)

        * Если уже были пресеты, то появился еще один с данными поиска


        https://jing.yandex-team.ru/files/papulova/OYBXuWhPla.png
    - do: Сделать еще 3 поиска с другими данными
    - assert: |-
        Отображается не больше 3 последних поисков
        Новые пресеты появляются с левой стороны
    - do: Нажать на любой пресет
    - assert: Открылась выдача жд с данными из пресета
    - do: Перейти на вкладку Автобусы. Повторить шаг 1
    - assert: >-
        Если раньше пресетов не было, то под строкой поиска появился серый
        пресет с данными поиска (в пресете отображается направление, дата, цена
        и время рейсов (если они есть) или надпись "нет рейсов", если их нет, и
        иконка автобуса)

        Если уже были пресеты, то появился еще один с данными поиска


        https://jing.yandex-team.ru/files/papulova/orsC7Z0yli.png
    - do: Повторить шаг 2 для автобусов
    - assert: ОР как в шаге 2
    - do: Нажать на любой пресет
    - assert: Открылась выдача автобусов в данными из пресета
manual: true
Сервис: Комод
feature: Авиа
type: Поиск
description: >-
  Так же стоит провести проверки на других городах: Анталья

  Быть на главной странице портала. Выбрать Авиа. Поля "Откуда" и "Куда" должны
  быть пустыми
specs:
  'Авиа: саджесты для одноименных городов и аэропортов':
    - do: Кликнуть по полю ввода "Откуда"
    - assert: |-
        Развернулись саджесты городов
        screen: https://jing.yandex-team.ru/files/molox/123.png
    - do: Ввести в поле ввода "Откуда" - Соч
    - assert: |-
        В саджестах должно быть одно предложение - Сочи
        screen: https://jing.yandex-team.ru/files/molox/1234-1.png
    - do: Кликнуть по полю ввода "Куда"
    - assert: Развернулись саджесты городов
    - do: Ввести в поле ввода "Куда" - Лиссаб
    - assert: |-
        В саджестах должно быть одно предложение - Лиссабон
        screen: https://jing.yandex-team.ru/files/molox/555.png
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Поиск
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Автор: molox
feature: Портал
type: Главная
description: >-
  To-do: добавить кейс или описать в этом проверку футеров на других страницах
  (лк, зкп, покупки на сервисах).
specs:
  Портал. Футер на главной странице:
    - do: Зайти на главную
    - assert: Находимся на вкладке Авиабилеты
    - do: Проскроллить страницу вниз до конца
    - assert: >-
        * Внизу страницы есть футер

        * В разделе "Авиабилеты в разных странах" ссылки: Авиабилеты Украина,
        авиабилеты Казахстан, Авиабилеты Турция

        * В разделе "Сервисы" ссылка Расписание транспорта

        * В разделе "Партнерство и помощь" ссылки: Партнерам, Справка, Обратная
        связь, Реклама на сервисе, Пользовательское соглашение

        * В разделе "Мы в социальных сетях" 4 ссылки на соц. сети

        * В разделе "Подбор авиабилетов" ссылки на Google Play и Apple Store (в
        таче либо одно либо другое, в зависимости от ОС)

        * Возле ссылки на Яндекс есть копирайт
    - do: Проскроллить страницу вверх
    - assert: '* Футер не липнет к низу экрана'
    - do: 'Перейти на вкладку Ж/Д билеты, поскроллить страницу вниз'
    - assert: >-
        - Внизу страницы есть футер

        - В разделе "Авиабилеты в разных странах" ссылки: Авиабилеты Украина,
        авиабилеты Казахстан, Авиабилеты Турция

        - В разделе "Сервисы" ссылка Расписание транспорта

        - В разделе "Партнерство и помощь" ссылки: Партнерам, Условия покупки
        билетов на поезда, Справка, Обратная связь, Реклама на сервисе,
        Пользовательское соглашение

        - В разделе "Мы в социальных сетях" 4 ссылки на соц. сети

        - В разделе "Подбор авиабилетов" ссылки на Google Play и Apple Store

        - Возле ссылки на Яндекс есть копирайт
    - do: 'Перейти на вкладку Отели, поскроллить страницу вниз'
    - assert: >-
        - Внизу страницы есть футер

        - В разделе "Авиабилеты в разных странах" ссылки: Авиабилеты Украина,
        авиабилеты Казахстан, Авиабилеты Турция

        - В разделе "Сервисы" ссылка Расписание транспорта

        - В разделе "Партнерство и помощь" ссылки: Партнерам, Добавить свой
        объект размещения, Условия акции, Справка, Обратная связь, Реклама на
        сервисе, Пользовательское соглашение

        - В разделе "Мы в социальных сетях" 4 ссылки на соц. сети

        - В разделе "Подбор авиабилетов" ссылки на Google Play и Apple Store

        - Возле ссылки на Яндекс есть копирайт
    - do: 'Перейти на вкладку Автобусы, поскроллить страницу вниз'
    - assert: >-
        - Внизу страницы есть футер

        - В разделе "Авиабилеты в разных странах" ссылки: Авиабилеты Украина,
        авиабилеты Казахстан, Авиабилеты Турция

        - В разделе "Сервисы" ссылка Расписание транспорта

        - В разделе "Партнерство и помощь" ссылки: Партнерам, Условия покупки
        билетов на автобусы, Справка, Обратная связь, Реклама на сервисе,
        Пользовательское соглашение

        - В разделе "Поможем с заказом" номер телефона

        - В разделе "Мы в социальных сетях" 4 ссылки на соц. сети

        - В разделе "Подбор авиабилетов" ссылки на Google Play и Apple Store

        - Возле ссылки на Яндекс есть копирайт
    - do: Открыть ссылки в футере для каждой вкладки
    - assert: >-
        * Ссылка на Яндекс открывается в той же вкладке

        * Остальные страницы открываются в новой вкладке, содержание
        соответствует названию ссылки
manual: true
Функциональность: Переход на сервис
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Портал
type: Главная
description: ''
specs:
  В поиске всегда 5 саджестов:
    - do: Зайти на главную
    - do: |-
        Кликнуть по полю Откуда
        Очистить поле
    - assert: Появилось 5 саджестов
    - do: Выбрать любой из предложенных саджестов
    - do: |-
        Для десктопа: поле Куда раскрылось автоматически
        Для тачей: кликнуть по полю Куда
    - assert: '* Появилось 5 саджестов'
    - do: Выбрать любой из предложенных саджестов
    - do: Заполнить остальные поля формы любыми валидными значениями
    - do: Кликнуть Найти
    - assert: >-
        * Осуществился переход на Яндекс.Путешествия, выдача на вкладке
        авиабилеты
    - do: 'Вернуться на главную Путешествий, обновить страницу'
    - do: Кликнуть по полю Откуда
    - assert: '* Появилось 5 саджестов'
    - do: Кликнуть по полю Куда
    - assert: '* Появилось 5 саджестов'
    - do: Выполнить шаги 2-10 для вкладки ЖД билеты
    - assert: |-
        * ОР совпадает
        * В шаге 7 вместо перехода на авиа переход на поиск ЖД
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Портал
type: Главная
description: 'В тюне установлена Москва https://yandex.ru/tune/'
specs:
  3 выбранных саджеста запоминаются:
    - do: Зайти на главную в режиме инкогнито
    - do: 'Кликнуть по полю Откуда, стереть Москва'
    - assert: |-
        * Появилось 5 саджестов
        * Все саджесты отображаются на белом фоне
    - do: 'Вписать в поле Ростов-на-дону, выбрать из саджестов'
    - do: Кликнуть по полю Куда
    - assert: |-
        * Появилось 5 саджестов
        * Все саджесты отображаются на белом фоне
    - do: Выбрать Санкт-Петербург
    - do: 'Заполнить все остальные поля любыми валидными данными, кликнуть Найти'
    - assert: '* Произошел переход на сервис Яндекс.Авиабилеты'
    - do: 'Вернуться на сервис Путешествий, обновить страницу'
    - do: Кликнуть по полю Откуда
    - assert: |-
        * Появилось 5 саджестов
        * Все саджесты отображаются на белом фоне
        * Все саджесты соответствуют городу Москва
    - do: Стереть Москва из поля Откуда
    - assert: >-
        * Появилось 5 саджестов

        * Самый верхний саджест на желтом фоне - Ростов-на-Дону

        * Остальные 4 саджеста на белом фоне

        * Над саджестами есть текст "Вы искали"

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2018-12-28_15-32-33.png)
    - do: Выбрать саджест Москва
    - do: Кликнуть по полю Куда
    - assert: |-
        * Появилось 5 саджестов
        * Верхний саджест на желтом фоне - Санкт-Петербург
        * Среди саджестов нет варианта Москва
        * Остальные 4 саджеста на белом фоне
        * Над саджестами есть текст "Вы искали"
    - do: Выбрать Сочи
    - do: 'Заполнить остальные поля валидными значениями, кликнуть Найти'
    - assert: '* Произошел переход на Яндекс.Авиабилеты'
    - do: 'Вернуться на главную Путешествий, обновить страницу'
    - do: 'Кликнуть по полю Откуда, стереть Москва'
    - assert: >-
        * Появилось 5 саджестов

        * Первый саджест - Москва, второй - Ростов-на-Дону. Эти саджесты
        расположены на желтом фоне

        * Есть текст "Вы искали"

        * Остальные 3 саджеста на белом фоне
    - do: 'Вписать в поле Анапа, выбрать из саджестов'
    - do: Кликнуть по полю Куда
    - assert: |-
        * Появилось 5 саджестов
        * Верхний саджест на желтом фоне - Сочи
        * Второй саджест на желтом фоне - Санкт-Петербург
        * Есть текст “Вы искали”
        * Остальные 3 саджеста на белом фоне
    - do: Выбрать Санкт-Петербург
    - do: 'Заполнить все поля валидными значениями, кликнуть Найти'
    - assert: '* Произошел переход на Яндекс.Авиабилеты'
    - do: 'Вернуться на Путешествия, обновить страницу'
    - do: 'Кликнуть по полю Откуда, стереть Москва'
    - assert: |-
        * Появилось 5 саджестов
        * Первый саджест - Анапа, второй - Москва, третий - Ростов-на-Дону
        * Первые три саджеста расположены на желтом фоне, остальные 2 на белом
        * Есть текст "Вы искали"
    - do: 'Вписать в поле Мурманск, выбрать из саджестов'
    - do: Кликнуть по полю Куда
    - assert: |-
        * Появилось 5 саджестов
        * Верхний саджест на желтом фоне - Сочи
        * Второй саджест на желтом фоне - Санкт-Петербург
        * Есть текст “Вы искали”
        * Остальные 3 саджеста на белом фоне
    - do: 'Выбрать Анапа, заполнить все поля валидными данными, кликнуть Найти'
    - assert: '* Произошел переход на Яндекс.Авиабилеты'
    - do: 'Вернуться на Путешествия, обновить страницу'
    - do: 'Кликнуть по полю Откуда, стереть Москва'
    - assert: |-
        * Появилось 5 саджестов
        * Первый саджест Мурманск, второй - Анапа, Третий - Москва
        * Саджеста Ростов-на-Дону нет
        * Первые три саджеста расположены на желтом фоне, остальные 2 на белом
        * Есть текст “Вы искали”
    - do: Выбрать саджест Анапа
    - do: Кликнуть по полю Куда
    - assert: |-
        * Появилось 5 саджестов
        * Верхний саджест на желтом фоне - Сочи
        * Второй саджест на желтом фоне - Санкт-Петербург
        * Есть текст “Вы искали”
        * Остальные 3 саджеста на белом фоне
        * Саджеста Анапа нет
    - do: Повторить шаги 1-28 для вкладки Ж/Д билеты
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Главная
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Авиа
type: Главная
description: >-
  Временно убрали рецепты с авиа, после восстановления нужно вернуть кейс.


  Логика карточек на Авиа сейчас примерно следующая:

  показываем направления из города пользователя

  если таких нет/мало - показываем/добиваем направлениями из столицы области
  (картинка https://nda.ya.ru/3UYtPo)

  если таких нет/мало - показываем/добиваем направлениями из столицы страны

  Если регион пользователя вне страны нацверсии, то в целях сео, нужно
  показывать направления из столицы страны нацверсии.
specs:
  Проверка рецептов на странице авиа:
    - do: 'Открыть https://yandex.ru/tune. Указать Самара Самарская область'
    - do: 'Открыть https://travel.yandex.ru/avia/'
    - assert: >-
        * Под формой поиска билетов и просо блоком есть блок с рецептами
        (Дешёвые авиабилеты на популярные направления

        ). Всего 5 рецептов. Все представленные направления из Самары

        * Карточка рецепта содержит:

        Город вылета - Москва

        Город прилёта - тот в который есть рейсы из Москвы

        Дата полёта

        Цена
    - do: 'Открыть https://yandex.ru/tune. Указать Прага Чехия'
    - do: 'Открыть https://travel.yandex.ru/avia/'
    - assert: >-
        * Под формой поиска билетов блок с рецептами. Всего 5 рецептов. Все
        представленные направления из Москвы
manual: true
Функциональность: Рецепты
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Авиа
type: Главная
description: >-
  Ждет восстановления рецептов.


  **Для асессоров**: При переходе по рецептам (рецепты - это карточки
  направлений на главной) будет переход во внутренний тестинг, поэтому нужно
  заменить в урле https://front.avia.tst.yandex.ru на
  https://avia-frontend.crowdtest.yandex.ru/ (остальные параметры в урле не
  менять)
specs:
  'Авиа: Проверка перехода с рецептов':
    - do: 'Открыть https://yandex.ru/tune. Указать Москва'
    - do: Открыть главную
    - assert: '* Под формой поиска билетов блок с рецептами.'
    - do: Кликнуть по первой карточке
    - assert: >-
        * Открылась страница авиа, поля поиска предзаполнены данными, как в
        рецепте, для десктопа - открыт календарь для выбора даты.
manual: true
Функциональность:
  - Переход на сервис
  - Рецепты
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Smoke
feature: Авиа
type: Главная
description: >-
  Ждет восстановления рецептов.


  **Для асессоров**: При переходе по карточкам будет переход во внутренний
  тестинг, поэтому нужно заменить в урле https://front.avia.tst.yandex.ru на
  https://avia-frontend.crowdtest.yandex.ru/ (остальные параметры в урле не
  менять)
specs:
  'Авиа: Проверка перехода с рецептов (клик по цене)':
    - do: 'Открыть https://yandex.ru/tune. Указать Москва'
    - do: 'Открыть главную страницу сервиса, вкладка Авиабилеты'
    - assert: '* Под формой поиска билетов блок с рецептами.'
    - do: Кликнуть по первой карточке (по цене)
    - assert: >-
        * Открылась страница динамики. Направление и дата совпадает с указанным
        в карточке
manual: true
Функциональность:
  - Переход на сервис
  - Рецепты
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
feature: Портал
type: Главная
description: ''
specs:
  Портал. Календарь скроллится до верной даты (заполнена дата Туда):
    - do: |-
        Зайти на главную Авиа
        Кликнуть на инпут Туда
    - assert: Открылся календарь на начале текущего месяца
    - do: Выбрать любой день следующего месяца
    - assert: |-
        * Календарь Туда скрылся, календарь Обратно раскрылся
        * Календарь Обратно проскроллился до выбранной даты из поля Туда
        * Все даты до даты Туда недоступны для выбора
    - do: >-
        Выполнить шаги 1-2 для вкладки Отели (вместо Туда-Заезд, вместо
        Обратно-Выезд)
    - assert: ОР совпадает
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: automation (iliasova)
Автор: tcheremnykh
feature: Портал
type: Главная
description: ''
specs:
  Портал. Календарь скроллится до верной даты (дата Туда не заполнена):
    - do: |-
        Зайти на главную Авиа
        Кликнуть на инпут Обратно
    - assert: Открылся календарь на начале текущего месяца
    - do: Выбрать любую дату
    - assert: Календарь скрылся
    - do: Выполнить шаги 1-2 для вкладки Отели (вместо Обратно-Выезд)
    - assert: ОР совпадает
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: automation (iliasova)
Автор: tcheremnykh
feature: Портал
type: Главная
description: ''
specs:
  '[Тач] Портал. Ввод в поля формы поиска':
    - do: |-
        Открыть главную, вкладка авиа
        Кликнуть на инпут Откуда
    - assert: |-
        * Заполненное поле при клике очищается, сразу появляются саджесты
        * Есть плейсхолдер “Откуда”
        * В поле стоит курсор
    - do: Начать вводить пункт отправления
    - assert: '* После каждого изменения саджест обновляется'
    - do: Выбрать из саджеста любой вариант
    - assert: '* Произошел переход на главную с заполненным полем Откуда'
    - do: Кликнуть на поле с инпутом Куда
    - assert: '* Раскрылись саджесты'
    - do: Повторить шаги 2-3 для инпута Куда
    - assert: '- ОР совпадает'
    - do: Кликнуть по календарю Туда
    - assert: '- Развернулся календарь'
    - do: Кликнуть по любой дате в календаре
    - assert: |-
        - Календарь свернулся
        - Поле Туда заполнено выбранной датой
    - do: Нажать на Найти
    - assert: |-
        * Осуществился переход на страницу поиска
        * Дата и пункты отправления/прибытия соответствуют введенным
    - do: 'Повторить шаги 1 - 8 для ЖД, Отелей, автобусов'
    - assert: >-
        * ОР совпадает

        * Поля ввода для разных вкладок могут отличаться, но логика одна:
        саджесты/календари разворачиваются, после выбора значения сворачиваются
manual: true
Функциональность: Форма поиска
Устройство: Тач
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag:
  - Smoke
  - Blocker
Автор: tcheremnykh
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)


  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678 _(если по нажатию на кнопку Войти
  открывается продовый паспорт passport.yandex.ru, необходимо в другой вкладке
  открыть паспорт тестинга https://passport-test.yandex.ru и авторизоваться в
  нем тестовым аккаунтом)_
specs:
  Проверка валидации полей формы добавления пассажира (негативные тесты):
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)
    - do: >-
        Нажать кнопку добавить пассажира внизу страницы

        ![image](https://jing.yandex-team.ru/files/iliasova/2019-11-24_12.33.51-wcyzg.png)
    - assert: |-
        * Открылась форма ввода данных
        * Страница за формой затемнилась (для десктопа)
    - do: Нажать кнопку "Сохранить"
    - assert: >-
        * Обязательные поля выделились красным, появился title с подсказкой

        ![image](https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-02-05_09-20-54.png)
    - do: |-
        Заполнить ФИО валидными данными
        Заполнить дату рождения валидным значением (например, 01.01.1992)
        Выбрать любой пол
    - do: >-
        Проверить валидацию серии и номера всех документов. Для этого поочередно
        выбирать каждый документ и нажимать кнопку сохранения после ввода
        данных, НЕ соответствующих правилам, а именно:

        * Паспорт - 9 цифр без пробелов

        * Загранпаспорт - 8 цифр без пробелов

        * Свидетельство о рождении - русские буквы и шесть цифр. Без пробелов и
        тире.

        * Военный билет - две латинские буквы и семь цифр

        * Паспорт моряка - русские буквы и семь цифр
    - assert: |-
        * Поле серии и номера обводится красной подсветкой
        * Появляется попап с подсказкой, какой формат номера нужно указать
              * паспорт - введите 10 цифр без пробелов
              * загранпаспорт - введите 9 цифр без пробелов
              * свидетельство о рождении - введите латинские буквы, русские буквы и шесть цифр. Без пробелов и тире. Например XIАБ123456
              * военный билет - введите две русские буквы и семь цифр. Без пробелов и тире.
              * паспорт моряка - введите латинские буквы и семь цифр. Без пробелов. Например, XX1234567
    - do: |-
        В селекте документа выбрать паспорт
        Заполнить поле с номером - 10 цифр без пробелов
        Установить дату рождения 20.01.1000
        Нажать Сохранить
    - assert: >-
        * Появилась подсказка “Проверьте дату рождения”, поле с датой обведено
        красным

        * Поле с номером документа прошло валидацию - не подсвечивается красным
    - do: |-
        Заполнить поле с датой рождения датой в будущем
        Нажать Сохранить
    - assert: '* Появилась подсказка “Дата рождения указана в будущем”'
    - do: |-
        Заполнить верную дату рождения - например, 01.01.2000
        Выбрать нероссийское гражданство
        Заполнить данные документа любым значением
        Заполнить срок годности до прошлого дня
    - assert: >-
        * Появилась подсказка “Документ уже не действует”, поле со сроком
        годности подсвечено красным
    - do: >-
        Выбрать загранпаспорт, заполнить все валидными значениями, поле
        "Действует до" оставить пустым. Сохранить
    - assert: 'Поле не обязательное, подсветки нет, сохранено успешно'
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит. Если вы оказались
  на passport.yandex.ru- замените вручную на passport-test.yandex.ru**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)

  Залогинены, находимся на главной.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  'Добавление пассажира, только обязательные поля':
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)
    - do: >-
        Нажать кнопку добавить пассажира

        ![image](https://jing.yandex-team.ru/files/iliasova/2019-11-24_12.33.51-wcyzg.png)
    - assert: '* Открылась форма заполнения данных'
    - do: |-
        Заполнить форму добавления пассажира, только обязательные поля:
        - дата рождения, например 01.01.2000
        - пол любой
        - гражданство - Россия
        - документ - Паспорт РФ, номер 6505111111

        Нажать кнопку Сохранить
    - assert: >-
        * Форма закрылась

        * В списке пассажиров появился новый пассажир с именем Безымянный,
        остальные данные соответствуют введенным
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Blocker
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)


  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  'Добавление пассажира, все поля на латинице':
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Нажать кнопку Добавить

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-09_14.27.48-id02b.png)
    - assert: '* Открылась форма заполнения данных'
    - do: |-
        Заполнить форму добавления пассажира значениями:
        Фамилия - Zdraviy
        Имя - Alesha
        Отчество - Vasiliy
        Гражданство - Казахстан
        Остальные поля любыми валидными данными
    - assert: '* В поле Документ подставился Другой документ'
    - do: Нажать кнопку Сохранить
    - assert: >-
        * Форма добавления документа закрылась

        * В списке пассажиров появился новый пассажир, все поля соответствуют
        ведённым значениям
    - do: |-
        Кликнуть по пассажиру в списке пассажиров
        Кликнуть "редактировать" рядом с документом
        ![image](https://jing.yandex-team.ru/files/iliasova/2019-07-17_13.21.56.png)
    - assert: >-
        * Заполнены все поля кроме Фамилия Имя Отчество

        ![image](https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-02-05_10-11-57.png)
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Blocker
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)


  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  'Добавление пассажира, все поля на кириллице':
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Нажать кнопку Добавить

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-09_14.27.48-id02b.png)
    - assert: |-
        * Открылась форма заполнения данных
        * Страница за формой затемнилась
    - do: |-
        Заполнить форму добавления пассажира:
        * Фамилия - Здравый
        * Имя - Алёша
        * Отчество - Василий
        * Гражданство - Россия
        * Документ - Заграничный паспорт гражданина РФ
        * Остальные поля любыми валидными значениями
        Нажать кнопку Сохранить
    - assert: >-
        * Форма свернулась

        * В списке пассажиров появился новый пассажир, данные соответствуют
        введенным
    - do: |-
        Выбрать созданного пассажира
        Кликнуть редактировать рядом с документом
         ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-09_14.57.51-4dz8t.png)
    - assert: >-
        * Заполнены все поля, кроме Фамилия на латинице, Имя на латинице,
        Отчество на латинице

        ![image](https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-02-05_10-15-00.png)
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Blocker
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)


  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678. Если вы не можете залогиниться-
  убедитесь, что вы находитесь в тестовом паспорте (passport-test.yandex.ru), а
  не в продовом
specs:
  Добавление всех документов пассажиру:
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры” (на тачах Пассажиры находятся внутри бургера)

        Выбрать любого пассажира из списка. Если пассажира нет, нужно его создать по кнопке "Добавить"
    - assert: >-
        * Для десктопа под текущим документом есть кнопки для добавления других
        документов

        * Для тача есть кнопка "Добавить документ", по ней открывается список
        документов

        ![image](https://jing.yandex-team.ru/files/iliasova/2019-06-10_17.05.11.png)
    - do: Нажать на многоточие (В таче нажать на + Добавить документ)
    - assert: >-
        * Раскрылся весь список документов - паспорт РФ, загран, свидетельство о
        рождении, военный билет, паспорт моряка, другой документ

        * В таче раскрылся список всех документов
    - do: Нажать на Заграничный паспорт гражданина РФ
    - assert: |-
        * Открылась форма добавления документа
        * Название документа соответствует выбранному
    - do: |-
        Заполнить форму любыми валидными значениями
        Для заграна:
        * ФИО латиницей
        * Серия и номер - 9 цифр без пробелов
        Нажать сохранить
    - assert: >-
        * Документ добавился выбранному пассажиру, данные соответствуют
        введённым

        ![image](https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-02-05_10-22-54.png)
    - do: >-
        Повторить шаги 2-4 для документов:

        * свидетельство о рождении (номер - две римские цифры, две русские
        буквы, 6 цифр)

        * другой документ (гражданство- Украина, номер - две лат. буквы и шесть
        цифр, напр. es123456)

        * военный билет (номер - две русские буквы, семь цифр)

        * паспорт моряка (номер - две римские цифры, семь цифр)
    - assert: >-
        Документы добавились выбранному пассажиру, данные соответствуют
        введённым
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Blocker
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Редактирование документа:
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Выбрать любого пассажира из списка, такого, чтобы у него был документ
        паспорт РФ

        Нажать кнопку Редактировать на документе Паспорт РФ

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-09_15.25.52-khywt.png)
    - assert: '* Открылась форма редактирования документа'
    - do: >-
        Изменить значение серии и номера документа на невалидные данные
        (например, "1")

        Нажать Сохранить
    - assert: |-
        * Поле серии и номера обводится красной подсветкой
        * Появился попап с подсказкой, какого формата данные нужно ввести
    - do: >-
        Изменить данные серии и номера поля на новые валидные, чтобы отличались
        от изначальных данных (например, 6505111111)

        Нажать Сохранить
    - assert: '* Данные изменились в соотвествии с введёнными'
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - Smoke
  - Blocker
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: *Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)


  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Удаление документа у пассажира с одним документом:
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Выбрать любого пассажира из списка, такого, чтобы у него был всего один
        документ. Если такого пользователя нет, его нужно создать.

        Нажать кнопку Удалить на документе пассажира (иконка корзины в
        правом верхнем углу у документа)
    - assert: >-
        * На сниппете документа появился вопрос "Удалить [тип документа]?" и
        кнопки “Да, удалить”, “Нет”
    - do: 'Нажать "Да, удалить"'
    - assert: >-
        * Документ удалился, появилась надпись "Без документов вы не сможете
        купить билет или забронировать номер."

        https://jing.yandex-team.ru/files/iliasova/2019-12-01_14.34.25-apen0.png
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)


  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Удаление документа у пассажира с двумя и более документами:
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Выбрать любого пассажира из списка, такого, чтобы у него было 2 или
        больше документов. Если такого пассажира нет, его нужно создать.

        Нажать кнопку Удалить на любом из документов пассажира (иконка корзины в
        правом верхнем углу у документа)
    - assert: >-
        * На сниппете документа появился вопрос "Удалить [вид документа]" и
        кнопки “Да, удалить”, “Нет”
    - do: 'Нажать "Да, удалить"'
    - assert: '* Выбранный документ удалился, остальные документы остались'
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Записная книжка
type: Пассажиры
description: >-
  Кейс также проверяет заглушку для случая, когда нет ни одного пассажира.


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)

  Залогинены, находимся на главной.

  Для тестирования необходим аккаунт, в котором нет пассажиров.

  Для этого можно создать новый аккаунт.

  Асессоры могут пользоваться в тестинге тестовым аккаунтом: vladlen2, пароль:
  v12345678

  Если у этого аккаунта уже есть пассажиры, необходимо их удалить перед началом
  прохождения кейса.
specs:
  'Создание и удаление пассажира с одним документом, когда нет других пассажиров':
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”
    - assert: >-
        * Нет доступных пассажиров для выбора

        * Отображается заглушка с кнопкой:

        ![image](https://jing.yandex-team.ru/files/ea-timofeev/qqoWikAYWo.png)
    - do: Кликнуть Добавить первого пассажира
    - assert: '* Открылась форма ввода данных пассажира'
    - do: |-
        Заполнить все поля любыми валидными данными
        Кликнуть Сохранить
    - assert: >-
        * Форма свернулась

        * Появился пассажир с одним документом, все данные соответствуют
        введенным
    - do: Кликнуть по кнопке "Удалить пассажира" внизу страницы
    - assert: >-
        *  Появилось модальное окно с вопросом "Удалить пассажира?

        Удалятся данные всех документов и бонусных карт" и двумя кнопками "Да,
        удалить", "Нет"
    - do: 'Нажать "Да, удалить"'
    - assert: >-
        * Пассажир удалился

        * Снова отображается заглушка "У вас нет пассажиров", страница выглядит
        как в шаге 1
manual: true
Функциональность: Действия в записной книжке
Устройство: Десктоп
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)


  Если по какой-то причине в аккаунте не окажется ни одного подходящего
  пассажира, то нужно добавить пассажира с двумя любыми документами.

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  'Удаление пассажира  с двумя и более документами, при нескольких пассажирах':
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Выбрать любого пассажира из списка, такого, чтобы у него было 2 или
        больше документов. Если такого пассажира нет, его нужно создать.

        Нажать кнопку Удалить пассажира внизу страницы
    - assert: >-
        *  Появился попап с вопросом "Удалить пассажира?

        Удалятся данные всех документов и бонусных карт" и кнопками  "Да,
        удалить", "Нет"
    - do: 'Нажать "Да, удалить"'
    - assert: |-
        * Попап закрылся
        * Страница открыта на другом пассажире - если тестируем в десктопе
        * Страница открыта на списке пассажиров - если тестируем в таче
        * Выбранный пассажир пропал из списка пассажиров
        * Остальные пассажиры остались в списке
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)


  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Редактирование имени пассажира:
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Выбрать любого пассажира из списка

        Нажать кнопку редактировать пассажира

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-09_17.46.04-e3gmk.png)
    - assert: >-
        * Открылась форма редактирования пассажира

        ![image](https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-02-05_11-02-07.png)
    - do: 'Изменить любые данные, нажать сохранить'
    - assert: '* Данные изменились в соответсвии с введёнными'
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
tlds: ru
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - Smoke
  - Blocker
feature: Комод
type: Мои поездки
description: >-
  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
  Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (Рядом с кнопкой
  Войти в десктопе. В таче ссылка "Мои поездки" в шторке) > кликнуть Войдите в аккаунт > Авторизоваться тестовым аккаунтом
  (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был именно тестовый
  аккаунт, т.к. через свой аккаунт не впустит

  Открыта главная страница портала Путешествий

  Пользователь авторизован
specs:
  Страница Мои поездки (десктоп):
    - do: >-
        Перейти в Мои поездки по иконке в правом верхнем углу страницы

        ![image](https://jing.yandex-team.ru/files/papulova/eb3ToZhxiV.png)
    - assert: >-
        * Осуществился переход на страницу личного кабинета в раздел Мои поездки

        * Вверху страницы есть заголовок "Мои поездки"

        * У каждой поездки есть заголовок, даты и картинка

        * Сначала отображаются актуальные поездки (с датами в будущем)

        * Актуальные поездки отсортированы по возрастанию, начиная с самой близкой к текущей дате в будущем

        * Под сниппетами есть ссылка "Найти свой заказ"

        * Внизу страницы в блоке "Прошлые и отмененные поездки" есть кнопка "Показать еще" (для аккаунтов с большим количеством заказов)

    - do: Проскроллить страницу вниз и кликнуть по кнопке "Показать еще"
    - assert: Показались еще 20 заказов (или все оставшиеся, если их меньше 20). Прошлые и отмененные заказы отсортированы по убыванию, начиная с самой близкой
        даты к текущей в прошлом
    - do: Кликнуть в меню паспорта в правом верхнем углу. Кликнуть "Выйти"
    - assert: '* Произошел переход на страницу поиска заказа'
manual: true
Функциональность: Поиск заказа
Устройство: Десктоп
Страница: Мои поездки
tlds: ru
Сервис: Комод
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: papulova
feature: ЖД
type: Билеты и бронирования
description: >-
  **Для асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти в десктопе и в боковом меню, клик по трем полоскам) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  Для того, чтобы создать тестовый заказ, нужно:

  * Залогиниться (для тестинга асессоры могут пользоваться аккаунтом
  vladlen@yandex.ru password: v12345678)

  * Перейти на вкладку ЖД

  * Сделать поиск по любому направлению на дату через месяц от текущей(в тестинге желательно использовать
  поиск из Москвы, например, Москва - Санкт-Петербург)

  * Для любого поезда, на который можно купить билеты кликнуть по кнопке Выбрать место
  * Выбрать любой вагон, а в нем выбрать место №10 и №11

  * Далее следовать по шагам покупки


  Для оплаты в тестинге можно использовать карту: 5100003697253468 01/20 090
  (асессорам не надо вводить карту)


  **Информация для асессоров: шаг оплаты в тестинге намеренно пропускается, это
  нормально. Данные карты вводить не нужно, переход на страницу заказа
  произойдет без шага оплаты.**

  - Сделать заказ по инструкции из описания на 2 взрослых, 1 ребенка от 5 до 10
  лет и 1 ребенка без места

  - Находимся на главной Путешествий, залогинены.
specs:
  Отображение информации на бронировании ЖД на странице заказов:
    - do: >-
        Перейти на страницу "Мои поездки", кликнув по иконке личного
        кабинета в правом верхнем углу (для тача "Мои поездки" скрыта в  бургер меню в правом верхнем углу)
    - assert: '* Осуществился переход на страницу с поездками'
    - do: Найти поездку (по дате и направлению). Перейти внутрь поездки
    - assert: >-
        * На карточке заказа есть информация: пункты отправления и прибытия,
        дата, номер, фирменность (если есть)
        и название поезда (начальная и конечная станции), кнопки "Скачать" и "Распечатать" 
        Для тача только кнопка "Скачать"

        * Вся информация на сниппете соответствует созданному заказу
        
    - do: Кликнуть по сниппету заказа
    - assert: '* Произошел переход на страницу созданного заказа'
    - do: >-
        В созданном заказе сдать билет - детский без места и взрослый (кнопка будет только у взрослого билета)
        
    - assert: >-
        * Внизу сниппета появилась серая плашка
        Десктоп https://jing.yandex-team.ru/files/arhey/2022-01-14T09:04:37Z.c2c8236.png
        Тач https://jing.yandex-team.ru/files/arhey/2022-01-14T09:05:49Z.7af95b5.png

        * Сумма к возврату соответствует сумме в чеке из письма о возврате (в
        тестинге чека может не быть - пропускаем ОР)

        * Статус заказа Выполнен
    - do: |-
        Сдать оставшийся билет
    - assert: >-
        * Статус заказа Отменен

        * На серой плашке внизу поменялся текст на "Возврат двух билетов"

        * Сумма к возврату изменилась - соответствует сумме первого и второго
        возвратов

        * Информация о пассажирах на бронировании отображается серым цветом
manual: true
Функциональность: Поиск заказа
Устройство:
  - Десктоп
  - Тач
Страница: Билеты и бронирования
tlds: hard
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag:
  - automation (iliasova)
  - Smoke
  - Blocker
Автор: shenfeld
feature: ЖД
type: Главная
description: >-
  Рецепты больше не зависят от геолокации. Можно адаптировать кейс под проверку
  заполнения поля Откуда.



  Кейс проверяет 3 случая:

  * город с ж/д сообщением - столица

  * город с ж/д сообщением

  * город без ж/д сообщения
specs:
  Блок "Выгодные предложения по ж/д билетам":
    - do: |-
        Установить в тюне Москва https://yandex.ru/tune
        Перейти на главную Путешествий, вкладка Ж/д билеты
    - assert: >-
        * На странице есть блок "Выгодные предложения по ж/д билетам"

        * На карточках есть картинки городов и информация: откуда, куда, цена с
        припиской "от" (цены может не быть)
    - do: |-
        Перейти в тюн
        Установить в тюне Микунь (республика Коми, Россия)
        Обновить главную Путешествий, раздел ж/д билеты
    - assert: >-
        * В блоке “Выгодные предложения по ж/д билетам” 3 карточки

        * Информация на 2х последних карточках изменилась (пункты
        отправления/прибытия, цены)
              * пункт отправления - из Микуни
    - do: |-
        Перейти в тюн
        Установить в тюне Ханты-Мансийск
        Обновить главную Путешествий, раздел ж/д билеты
    - assert: >-
        * В блоке “Выгодные предложения по ж/д билетам” 3 карточки

        * Информация на 2х последних карточках изменилась (пункты
        отправления/прибытия, цены)
              * пункт отправления на карточках - из Сургута
manual: true
Функциональность: Рецепты
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Blocker
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Переход на поиск с формы поиска':
    - do: |-
        Перейти на главную Путешествий, вкладка ж/д билеты
        В поле Откуда ввести Москва
        В поле Куда ввести Санкт-Петербург
        В поле даты выбрать любую доступную дату
        Кликнуть Найти
    - assert: >-
        * Произошел переход на выдачу поездами из Москвы в Санкт-Петербург на
        выбранную дату, вкладка ЖД билеты

        * В поле даты указана выбранная дата в формате "день месяц" (например,
        "28 февраля")
    - do: |-
        Вернуться на главную Путешествий, вкладка ж/д билеты
        В поле Откуда ввести Екатеринбург
        В поле Куда ввести Самара
        В поле дата раскрыть календарь, выбрать сегодняшнюю дату
        Кликнуть Найти
    - assert: >-
        * Произошел переход на выдачу поездами из Екатеринбурга в Самару на
        сегодня

manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Smoke
  - Blocker
Автор: shenfeld
feature: Отели
type: ''
description: >-
  **Асессорам** при переходе на бронирование нужно заменить
  https://travel-test.yandex.ru/ на https://travel.crowdtest.yandex.ru/
specs:
  Соответствие информации при переходе с серпа на бронирование отелей:
    - do: >-
        Перейти на выдачу на серпе по запросу radisson slavyanskaya с
        параметрами:
        https://yandex.ru/search/?text=%D1%80%D1%8D%D0%B4%D0%B8%D1%81%D1%81%D0%BE%D0%BD%20%D1%81%D0%BB%D0%B0%D0%B2%D1%8F%D0%BD%D1%81%D0%BA%D0%B0%D1%8F&clid=1955453&win=305&lr=213&srcparams=GEOV%3Asource%3DYandexTravel%3Ahttp%3A%2F%2Ftravel-hotels-offercache-test.yandex.net&srcparams=GEOV_SLOW%3Asource%3DYandexTravel%3Ahttp%3A%2F%2Ftravel-hotels-offercache-test.yandex.net&srcparams=GEOV%3Aexperimental%3Dmiddle_yandex_travel_Exp3436%3D1
    - assert: >-
        На странице отображается колдунщик отелей, есть переход на
        Яндекс.Путешествия

        ![image](https://jing.yandex-team.ru/files/shenfeld/2021-01-29_09.57.47-mdqfd.png)
    - do: >-
        Кликнуть по предложению от Яндекса (если нет предложения от Яндекса, то
        надо кликнуть по кнопке Все предложения)
    - assert: >-
        * Осуществился переход на страницу бронирования отеля на
        Яндекс.Путешествиях

        * Информация на выдаче соответствует информации на странице
        бронирования: название отеля, дата заезда и выезда, цена, количество
        гостей, фото отеля, тип размещения
    - do: >-
        Вернуться на выдачу на Яндексе

        Изменить даты заезда и выезда так, чтобы получить несколько ночей

        Изменить количество пассажиров - 3 взрослых, 1 ребенок 2 года и 1
        ребенок 12 лет

        Кликнуть Показать (если номеров на эти даты не нашлось, поискать на
        другие даты)

        В открывшемся окне Кликнуть по любому предложению от Яндекса
    - assert: |-
        * Осуществился переход на страницу отеля
        * Даты заезда и выезда соответствуют указанным на выдаче
        * Указано количество гостей: 3 взрослых, 2 детей: 2 и 12 лет
        * Присутствует блок с предложениями отеля
    - do: Кликнуть по предложению Яндекса в блоке предложений на странице отеля.
    - assert: >-
        * Осуществился переход на страницу бронирования отелей на
        Яндекс.Путешествиях

        * Даты заезда и выезда соответствуют указанным на выдаче

        * Количество ночей посчитано верно

        * Указаны гости: 3 взрослых, 2 детей: 2 и 12 лет

        * В блоке с полями ввода данных гостей отображаются 5 гостей - 3
        взрослых и 2 ребенка с указанием возраста - 2 и 12 лет

        * В корзинке со стоимостью справа указана итоговая сумма за выбранное
        количество ночей, она соответствует сумме на выдаче
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag: hotels-api
Автор: shenfeld
feature: Отели
type: ''
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)

  Для попадания на продовую страницу бронирований нужно сделать запрос в поиске
  Яндекса, например “отель в Москве”, далее выбрать отель и кликнуть по
  предложению от Яндекс.Путешествий.
specs:
  Блок описания отеля на странице бронирования отеля:
    - do: >-
        Перейти на страницу бронирований любого отеля по инструкции из
        подготовки

        P.S лучше всего выбрать отель с возможностью бесплатной отмены (для
        выполнения пунктов 2-5), а отель без бесплатной отмены проверить
        отдельно.
    - assert: |-
        * На странице есть информация об отеле:
              * хлебные крошки (Название регина (берется из страницы поиска) - Название отеля - Бронирование - Оплата). Активна крошка Бронирование
              * название
              * оценка
              * адрес
              * даты заеда и выезда
              * количество гостей
              * тип размещения
              * фото номера
              * информация о бесплатной отмене
              * тип питания
              * тип кроватей
              * услуги
              * условия заселения.
        https://jing.yandex-team.ru/files/tcheremnykh/2020-01-27_15-19-40.png
    - do: Навести курсор на иконку ? рядом с информацией о бесплатной отмене
    - assert: '* Появился указатель-рука'
    - do: Кликнуть по иконке
    - assert: >-
        * Появился попап с информацией о бесплатной отмене: до какой даты и
        времени можно отменить бесплатно, до какой даты и времени со штрафом,
        сумма штрафа  (эти два пункт могут отсутствовать как правило, зависит от
        дальности даты заезда и кол-ва ночей), после какой даты и времени
        стоимость не возвращается
    - do: Кликнуть по крестику на попапе
    - assert: '* Попап закрылся'
    - do: |-
        Снова кликнуть по иконке информации
        Кликнуть вне раскрывшегося паопапа
    - assert: '* Попап закрылся'
    - do: Кликнуть по ссылке Еще в блоке Услуги
    - assert: |-
        * Развернулись все услуги
        * Все услуги перечислены через ·
    - do: Кликнуть по ссылке Условия заселения
    - assert: >-
        * Развернулся текст с условиями

        * Стрелка на ссылке
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-25_17-34-11.png)
        перевернулась:
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-25_17-35-00.png)
    - do: Кликнуть по ссылке Условия заселения еще раз
    - assert: |-
        * Текст с условиями свернулся
        * Стрелка на ссылке перевернулась
manual: true
Функциональность: Бронирование отелей
Устройство: Десктоп
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: ''
description: >-
  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Скролл и сужение основных страниц в отелях:
    - do: |-
        Перейти на страницу бронирования из подготовки для любого отеля
        Сузить до минимальной ширины окно браузера
    - assert: '* По мере сужения элементы не наезжают друг на друга, верстка не едет'
    - do: |-
        Вернуться к обычной ширине экрана
        Проскроллить страницу до конца вниз
    - assert: >-
        * При скролле корзинка со стоимостью справа не скроллится со страницей -
        всегда остается на месте
    - do: >-
        Сузить окно браузера по длине так, чтобы полностью отображалась корзинка
        со стоимостью

        Проскроллить страницу вниз до конца
    - assert: |-
        * В самом верху отображается хедер с меню портала
        * По мере пролистывания страницы
             * верстка не едет
             * все блоки отображаются друг за другом, также, как и при максимальной длине окна браузера
        * По окончании пролистывания отображается футер
    - do: |-
        **Не для асессоров**: Повторить шаги 1-3 для страниц
              * Оплаты
              * Заказа после оплаты
              * Отмены бронирования
    - assert: >-
        Результат аналогичен описанным в соответствующих пунктах

        ! На странице оплаты и отмены после шага 2 не ищем корзинку со
        стоимостью (ибо ее там нет)
manual: true
Функциональность: Бронирование
Устройство: Десктоп
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: Отели
type: ''
description: >-
  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Модальное окно с описанием от партнера на странице бронирования отеля:
    - do: >-
        Перейти на страницу бронирования любого отеля по инструкции из
        подготовки (урл брони /hotels/book/*)

        Навести курсор на название отеля
    - assert: |-
        * Появился указатель-рука
        * Цвет текста поменялся на красный
    - do: Кликнуть по названию отеля
    - assert: >-
        * Открылось модальное окно с описанием отеля

        * Есть обязательная информация: название, локация

        * Необязательная (зависит от отеля) - карта с указанием расположения
        отеля, фото отеля, полная информация о расположении, размещении,
        условиях и услугах

        * Фон затемнился
    - do: >-
        Пролистать до конца всю информацию в модальном окне

        При наличии ссылки "Все особенности отеля" кликнуть на нее (наличие
        ссылки зависит от количества особенностей, предлагаемых отелем)
    - assert: >-
        * Открылся полный список особенностей

        * Ссылка пропала (если была)

        * В самом конце окна есть информация, откуда предоставлены данные об
        отеле
    - do: >-
        Если фото есть: кликнуть по кнопке перехода к следующему фото

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-25_18-14-40.png)

        Если фото нет - пропустить это шаг и следующие 2 шага
    - assert: >-
        * Появилось второе фото

        * Первое фото переместилось на место карт

        (В случае, когда первое фото не влезло целиком- по клику на стрелку
        дооткроется 1 фото, по следующим кликам- фото будут перелистываться)
    - do: Несколько раз кликнуть по кнопкам на фото Вперед и Назад
    - assert: '* Фото перемещаются соответственно нажатым кнопкам'
    - do: Пролистать до конца фотографии
    - assert: >-
        * Последняя фотография отображается первой

        * Кнопка Вперед становится неактивной (ее может быть не видно на темном
        фото, так как она становится полупрозрачной, важно проверить, что вперед
        перейти нельзя)

        * Доступна кнопка Назад
    - do: Навести на кнопку закрытия окна в правом верхнем углу
    - assert: '* Появился указатель-рука'
    - do: Кликнуть по кнопке закрытия
    - assert: '* Окно закрылось'
    - do: |-
        Снова открыть модальное окно с описанием отеля
        Кликнуть по области вне окна
    - assert: '* Окно закрылось'
    - do: |-
        Повторить пункты 1-9, вместо названия отеля нажать на
        * ссылку "Описание отеля от партнера"
        * адрес отеля
    - assert: Ожидаемый результат должен полностью соответствовать описанным в п.1-9
manual: true
Функциональность: Бронирование
Устройство: Десктоп
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: ''
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.

  Кейс проверяет корзинку со стоимостью, ссылки под ней, а так же модальное окно
  с реквизитами организаций:

  ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-26_18-15-38.png)

  В таче корзинка расположена внизу страницы.

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)

  Для попадания на продовую страницу бронирований нужно сделать запрос в поиске
  Яндекса, например “отель в Москве”, далее выбрать отель и кликнуть по
  предложению от Яндекс.Путешествий.
specs:
  Корзинка со стоимостью и ссылки на странице бронирования отелей:
    - do: >-
        Перейти на страницу бронирования на одну ночь для любого отеля по
        инструкции из подготовки
    - assert: >-
        * Справа есть корзинка со стоимостью и кнопкой Оплатить. Для тачей -
        корзинка должна быть расположена внизу, под блоком Контакты.

        * Есть пункты: 1 ночь и сумма, налоги и сборы и сумма, итоговая сумма
        (равна сумме за ночь и сбор), указание даты и времени для бесплатного
        возврата (либо указание "Нет бесплатной отмены)", чекбокс "Получать
        рассылку Яндекс.Путешествий"

        * Под корзинкой есть текст со ссылками "Нажимая «Оплатить», вы
        соглашаетесь с пользовательским соглашением, условиями бронирования.

        Мы подтвердим бронирование и спишем полную сумму с вашей карты сегодня.

        Данные об отеле предоставлены продавцами-партнёрами"

        * Чекбокс "Получать рассылку Яндекс.Путешествий" по умолчанию не выбран
    - do: >-
        Навести курсор на иконку вопроса возле бесплатной отмены (если она есть;
        если нет - пропускаем п. 2-4)
    - assert: '* Появился указатель-рука'
    - do: Кликнуть по иконке вопроса
    - assert: >-
        * Появился попап с указанием даты и времени для бесплатного возврата
        (совпадает с датой на корзинке), даты и времени с которого стоимость не
        возвращается
    - do: Кликнуть по области вне попапа
    - assert: '* Попап закрылся'
    - do: Кликнуть по чекбоксу “Получать рассылку Яндекс.Путешествий”
    - assert: '* Галка установилась'
    - do: Кликнуть по ссылке "пользовательским соглашением"
    - assert: |-
        * Открылась страница с пользовательским соглашением
        https://yandex.ru/legal/travel_termsofuse
    - do: Кликнуть по ссылке "условиями бронирования"
    - assert: >-
        * Открылась страница с условиями бронирования отелей на сервисе
        "Яндекс.Путешествия"

        https://yandex.ru/legal/hotels_booking_conditions
    - do: Кликнуть по ссылке "продавцами-партнерами"
    - assert: >-
        * Открылось модальное окно "Реквизиты"

        * Фон за окном затемнился

        * В окне есть реквизиты организаций: отеля, партнера, Яндекса

        * Для каждой организации есть информация: ОГРН, фактический и
        юридический адреса, время работы (фактического может не быть, если он
        совпадает с юридическим)
    - do: Кликнуть по области вне модального окна
    - assert: '* Окно закрылось'
    - do: |-
        Вернуться на поиск отелей
        Сделать поиск того же отеля на на 1 гостя на 4 ночи
        Перейти на предложение Яндекс.Путешествий
    - assert: >-
        * Открылась страница бронирования отеля на Яндекс.Путешествиях

        * В корзинке указано количество ночей - 4 ночи

        * Рядом с указанием количества ночей есть иконка для раскрытия
        выпадающего списка
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-26_18-06-44.png)
    - do: Навести курсор на иконку
    - assert: '* Появился указатель-рука'
    - do: Кликнуть по иконке
    - assert: >-
        * Развернулся список

        * Иконка сменилась на
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-26_18-07-52.png)

        * В списке перечислены 4 ночи в формате "1 ночь, 2 ночь..." с указанием
        стоимости за каждую ночь

        * Сумма за 4 ночи равна сумме этих стоимостей
    - do: Кликнуть по иконке выпадающего списка
    - assert: '* Список свернулся'
    - do: 'Если есть бесплатная отмена, кликнуть на иконку вопроса возле нее'
    - assert: >-
        Появился попап с указанием даты и времени для бесплатного возврата
        (совпадает с датой на корзинке), датой и времени, с которого стоимость
        не возвращается
    - do: Кликнуть по области вне попапа
    - assert: Попап закрылся
manual: true
Функциональность: Бронирование отелей
Устройство:
  - Десктоп
  - Тач
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: ''
description: >-
  Для прохождения кейса нужно быть залогиненным.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678


  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Валидация полей ввода имени и фамилии на странице бронирования отеля (негативный кейс):
    - do: >-
        Перейти на страницу бронирования отелей по инструкции из подготовки для
        1 взрослого пассажира

        Не заполняя поля ввода, кликнуть по кнопке Оплатить
    - assert: |-
        * Все поля ввода подсветились красным
        * Для первого поля есть подсказка "Заполните поле"
    - do: Начать вводить в поле имени латинские символы
    - assert: '* Красная подсветка пропала'
    - do: Начать вводить в поле фамилии кириллические символы
    - assert: '* Красная подсветка пропала'
    - do: |-
        Заполнить остальные поля валидными данными (телефон 89111111111)
        Кликнуть по кнопке Оплатить
    - assert: '* Произошел переход на следующую страницу'
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: ''
description: >-
  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Валидация полей контактов на странице бронирования отелей (негативный кейс):
    - do: >-
        Перейти на страницу бронирования для любого отеля для одного гостя по
        инструкции из подготовки

        Заполнить поля имени и фамилии валидными данными, поля почты и телефона
        не заполнять (стереть, если поля непустые)

        Кликнуть по кнопке Оплатить
    - assert: |-
        * Перехода на следующий шаг не произошло
        * Поля почты и телефона подсвечиваются красным
        * У поля почты есть подсказка "Заполните поле"
    - do: |-
        Заполнить поле телефона значением 8911111111
        В поле почты ввести латинские символы
    - assert: |-
        * У поля телефона пропала красная подсветка
        * У поля почты не пропала красная подсветка
        * Подсказка сменилась на "Электронная почта указана неверно"
    - do: |-
        Добавить в поле с почтой символ @ и латинские символы
        Кликнуть по кнопке Оплатить
    - assert: |-
        * Перехода на следующий шаг не произошло
        * Поле с почтой подсвечивается красным
        * Есть подсказка "Электронная почта указана неверно"
    - do: |-
        Добавить в поле с почтой .ru
        Кликнуть по кнопке Оплатить
    - assert: |-
        * После добавления .ru красная подсветка и подсказка пропали
        * После клика на Оплатить произошел переход на страницу оплаты
    - do: |-
        Вернуться на страницу бронирования отеля
        Ввести в поле телефона 9 цифр
        Кликнуть по кнопке Оплатить
    - assert: |-
        * Появилась подсказка "Номер должен содержать не менее 10 цифр"
        * Поле подсвечивается красным
    - do: |-
        Изменить поле телефона на 8911111111
        Кликнуть по кнопке Оплатить
    - assert: |-
        * После добавления цифры поле перестало подсвечиваться красным
        * После нажатия на кнопку Оплатить произошел переход на страницу оплаты
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: Страница заказа
description: >-
  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  'Успешная оплата отельного заказа, совпадение информации на всех шагах':
    - do: >-
    
        * Через ТК создать офферы в отель Вега Измайлово (ID отеля 742) на любые даты для 1 взрослого и 1 ребенка 2 года (в поле Количество гостей указать "1-2")

        * Перейти на страницу бронирования

        * Заполнить все поля валидными данными

        * Если в корзинке стоимости есть чекбоксы предоплаты, выбрать чекбокс
        Оплатить полностью

        * Запомнить информацию: даты и время въезда и выезда, название и адрес
        отеля, ФИ и контакты гостей, тип размещения, тип питания, тип кроватей,
        даты и время для бесплатной оплаты, сумма к оплате

        * Кликнуть по кнопке Оплатить
    - assert: >-
        * Появился лоадер с текстом "Создание заказа Создаем заказ и готовимся к
        оплате"

        * Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        * Через какое-то время произошел переход на страницу оплаты

        *  На странице оплаты отсутствует хэдэр и футер

        * Сумма к оплате на странице оплаты совпадает с суммой при бронировании

        * Название гостиницы верное

        * Даты совпадают с выбранными, количество гостей - 2:

        ![image](https://jing.yandex-team.ru/files/rifat-k/2019-10-24_18-44-40.png)
    - do: |-
        * Выбрать Новая карта и ввести данные карты из описания кейса
        * Кликнуть Оплатить
    - assert: >-
        * Вместо блока ввода данных карты появился лоадер с текстом "Платеж
        производится. Пожалуйста, подождите"

        * Далее на всю страницу появился лоадер с текстом "Оплата заказа
        Оплачиваем заказ и готовим выписку", все элементы на странице
        задизейблены

        * Через какое-то время текст поменялся на "Загрузка заказа Загружаем
        подробную информацию о заказе"

        * Далее произошел переход на хэппи пейдж

        - На странице отображается номер заказа, текст "Отель забронирован"

        * Все данные об отеле совпадают с выбранными (название, даты, контактные
        данные)
    - do: Нажать на кнопку "Подробнее о заказе"
    - assert: >-
        * Наверху страницы есть ссылка "Мои поездки"

        * Стоимость отеля совпадает с суммой на шаге бронирования

        * Даты заезда и выезда, количество ночей, данные гостей, информация о
        бесплатной отмене, тип размещения, тип питания, тип кроватей совпадают с
        информацией на шаге бронирования
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - orkestrator
  - Smoke
  - migration(iliasova)
Автор: shenfeld
feature: Отели
type: ''
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  Общий вид страницы отельного заказа:
    - do: >-
        Создать заказ по инструкции из описания для любого количества гостей и
        любых дат
    - assert: >-
        * Произошел переход на страницу заказа

        * На странице есть
             * хэдэр
             * текст об успешном бронировании, номер заказа у нас и в отеле
             * контактные данные гостя (телефон и мейл)
             * кнопки распечатать (в тачах нет), скачать и отменить (только для отменяемых броней)
             * блок с информацией о гостинице с фото
             *  под фото указано название отеля от партнера
             * блок с информацией о гостях и датах
             * блок с информацией о бесплатной отмене
             * блок с информацией от партнера
        * Справа есть корзинка с расшифровкой стоимости (оплата за каждую ночь,
        налоги и сборы и итоговая сумма)
    - do: >-
        Навести курсор на иконку вопроса возле бесплатной отмены (если она есть;
        если нет - пропускаем п. 3-5)
    - assert: '* Появился указатель-рука'
    - do: Кликнуть по иконке вопроса
    - assert: >-
        * Появился попап с указанием даты и времени для бесплатного возврата,
        периодом дат, в рамках которого отмена со штрафом, а также суммой штрафа
        (если несколько ночей), и датой и временем, начиная с которого стоимость
        не возвращается

        * Все даты и суммы соответствуют указанным при бронировании
    - do: Кликнуть по области вне попапа
    - assert: Попап закрылся
    - do: |-
        Снова открыть попап
        Кликнуть по крестику
    - assert: Попап закрылся
    - do: Навести курсор на телефон технической поддержки
    - assert: Появился указатель-рука
    - do: Кликнуть по номеру
    - assert: >-
        * Открылось окно (для Windows с предложением выбрать программу,
        например, скайп, для Mac приложение FaceTime)
    - do: |-
        Вернуться на страницу
        Кликнуть по стрелке на фото
    - assert: '* Фото пролистываются'
    - do: Покликать по кнопкам Вперед и Назад на фото
    - assert: '* Фото листаются'
    - do: Пролистать до конца фотографии
    - assert: |-
        * Последняя фотография отображается первой
        * Кнопки Вперед нет
        * Доступна кнопка Назад
    - do: Кликнуть по ссылке Условия заселения внизу страницы
    - assert: >-
        * Раскрылись условия

        * Стрелка
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-56-55.png)
        сменилась на
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-57-19.png)
    - do: Кликнуть по ссылке еще раз
    - assert: >-
        * Условия свернулись

        * Стрелка
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-57-19.png)
        сменилась на
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-56-55.png)
    - do: Кликнуть по ссылке "Ещё" в услугах (если есть)
    - assert: |-
        * Ссылка пропала
        * Развернулся полный перечень услуг
        * Все услуги перечислены через ·
    - do: Кликнуть по ссылке "продавцами-партнерами"
    - assert: >-
        * Открылось модальное окно "Реквизиты"

        * Фон за окном затемнился

        * В окне есть реквизиты организаций: отеля, партнера, Яндекса

        * Для каждой организации есть информация: ОГРН, фактический и
        юридический адреса, время работы
    - do: Кликнуть по области вне модального окна
    - assert: Окно закрылось
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: Blocker
Автор: shenfeld
feature: Отели
type: Страница заказа
description: >-

  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Чек на странице отельного заказа:
    - do: >-

        Через ТК создать офферы в отель Вега Измайлово (ID отеля 742) на любые даты для нескольких гостей

        На хэппи пейдж нажать "Подробнее о заказе"

        На странице заказа в блоке стоимости нажать на ссылку "Чеки и документы"
    - assert: >-
        * Открылось меню, в котором у чека отображается текст
        "Ваш чек выписывается, попробуйте перезагрузить страницу через некоторое
        время"


        P.S: данный текст может отсутствовать, и тогда сразу отобразится ссылка
        из след. пункта. Это нормально и означает, что бэкэнд успел получить от
        траста чек с подтверждением брони
    - do: Обновить страницу
    - assert: '* В меню появилась ссылка "Чек на платеж"'
    - do: Кликнуть по ссылке
    - assert: >-
        * Открылось модальное окно с чеком

        * Фон затемнился

        * Сумма и информация в чеке совпадает с суммой и информацией на странице
        (иногда сумма в чеке может быть равна 10 рублям).
    - do: Кликнуть по области за модальным окном
    - assert: '* Окно закрылось'
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Отели
type: ''
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  Шапка на странице отельного заказа:
    - do: Перейти на страницу успешного заказа по инструкции из описания
    - assert: >-
        * В шапке есть информация: об успешной брони, почта, на которую
        отправили подтверждение, контактный телефон, номер заказа, который
        начинается с YA, номер заказа на Expedia, телефон поддержки

        * Внизу шапки отображаются 3 кнопки:
              * Распечатать подтверждение
              * Скачать подтверждение
              * Отменить бронирование
    - do: Навести курсор на номер поддержки
    - assert: '* Появился указатель-рука'
    - do: Кликнуть по номеру
    - assert: >-
        * Открылось окно (для Windows с предложением выбрать программу,
        например, скайп, для Mac приложение FaceTime)
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: Авиа
type: ''
description: >-
    Как попасть на страницу бронирования аэрофлота:


    **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
    бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
    и проверять кейс в таче.**


    * В поиске авиа поискать по направлению, по которому летает аэрофлот
    (например, Екатеринбург - Новосибирск, или направление, указанное в кейсе).

    * Выбрать в фильтре по авиакомпаниям Аэрофлот

    * Кликнуть по сниппету с бейджиком "Заказ на Я.Путешествиях" (кликать не по кнопке с ценой)

    * На открывшейся странице кликнуть по кнопке Купить для Я.Путешествий. //
    произойдет переход на travel-test

    ![image](https://jing.yandex-team.ru/files/gouken67/aeroflot_to_travel.png)

    * **У Асессоров откроется travel.crowdtest** - должна открыться страница
    бронирования с формой ввода данных пассажиров



    Отсутствие лого АК не является багом или проблемой кейса!
specs:
  BOY Проверка совпадения данных на странице:
    - do: Выполнить переход как описано в Description.
    - assert: >-
        * Переход сработал, открылась страница бронирования

        * Информация в блоке о перелёте (время в пути, номер рейса, тип
        самолёта, время вылета, время прилёта, дата, пункт вылета и пункт
        прилёта) совпадает с данными со страницы поиска

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_09-21-58.png

        * Выбранная цена совпадает с ценой в поиске

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_09-22-56.png
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров
specs:
  Проверка общего вида на странице BOY:
    - do: Выполнить переход как описано в Description.
    - assert: >-
        1) Переход сработал, открылась страница бронирования

        2) В шапке страницы для десктопа - лого портала Путешествий, Плюс, избранное, кнопка личного кабинета,
        кнопка войти. Для тача - Плюс, Избранное, бургер-меню с кнопкой войти.

        3) Под меню находится лого аэрофлота и информация о том, что такое
        Яндекс.Авиабилеты.

        4) Ниже расположены вкладки Выбор перелёта - Детали перелёта - Данные
        пассажиров - Оплата заказа

        5) Ниже находится блок с информацией о перелёте, если есть пересадки, то
        сегменты находятся друг под другом, между ними информация о времени
        пересадки.

        Если перелёт туда и обратно, то под перелётом туда находится блок
        информации о перелёте обратно.

        6) Справа от блока с информацией  находится блок с тарифами, ценой,
        кнопкой "Оплатить" и кнопкой "Показать все тарифы", если тарифов больше
        чем 2 _( **для тача:** блок расположен в нижней части страницы )_

        7) Под блоком с информацией о перелёте находится блок с информацией о
        пассажирах, если пассажиров несколько, то каждый находится друг под
        другом - сначала взрослые, потом дети, потом младенцы

        8) Под блоком информации о пассажирах находится блок с контактными
        данными покупателя

        9) Внизу находится портальный футер

        Десктоп:

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-21-51.png

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-21-59.png

        Тач:

        https://testpalm.yandex-team.ru/internal/testcases/travel/598/attachment/5e7788d59fcbfa71d321a55b
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Blocker
feature: Авиа
type: ''
description: >-
  Перед выполнением кейса нужно залогиниться, если не был выполнен вход в
  аккаунт, а если уже залогинены, то выйти из учетки


  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров

  Должны быть незалогинены.
specs:
  Проверка валидации полей для взрослого и контактов на странице BOY:
    - do: >-
        Выполнить переход как описано в Description. Поиск нужно осуществить на
        1 взрослого.
    - assert: >-
        1) Переход сработал, открылась страница бронирования

        2) Гражданство выбрано "Россия"

        3) Тип документа выбран "Паспорт РФ"

        https://jing.yandex-team.ru/files/gouken67/BoY%20пропали%20плейсхолдеры.png
    - do: Поставить фокус в поле "Имя"
    - do: Не заполняя полей нажать кнопку оплатить
    - assert: >-
        1) Рамки всех обязательных полей стали красными, над первым (отсчёт
        сверху слева) полем появился попап с информацией о том, что это поле
        нужно заполнить
        На тачах попапа нет, есть только подписи под полями.

        https://jing.yandex-team.ru/files/shenfeld/2019-09-15_09.49.20-lcxak.png
    - do: |
        Начать заполнять поле "Имя" кириллицей
        Кликнуть вне поля
    - assert: Происходит транслитерация введённого имени. Появляется сообщение "Перевели ваши данные на латиницу. Проверьте, что всё правильно"
    - do: |
        Стереть введённое имя.
        Начать заполнять поле "Имя" цифрами/знаками кроме -
    - assert: |-
        1) Рамки остались красными
        2) Появился попап "Допускается одиночный дефис и одиночный пробел. В начале и конце должны стоять латинские буквы"
    - do: >-
        Заполнить поля "Имя" и "Фамилия" латиницей с использованием знака - в
        обоих полях, и поставить фокус в поле "Дата рождения"
    - assert: |-
        1) Рамки полей "Имя" и "Фамилия" стали серыми
        2) Рамка поля "Дата рождения" осталась красной
        3) Появился попап Это поле нужно заполнить
        4) Под полем есть текст "ДД.ММ.ГГГГ"
        https://jing.yandex-team.ru/files/shenfeld/2019-09-15_09.52.10-g5pw3.png
    - do: Начать вводить в поле "Дата рождения"  буквы
    - assert: '1) Ничего не происходит, буквы не вводятся'
    - do: Начать вводить в поле "Дата рождения" цифру 5
    - assert: 1) Автоматически в начале добавился 0 и получилось "05"
    - do: Очистить поле
    - assert: 1) Поле стало пустым
    - do: Ввести в поле “Дата рождения” "31 02"
    - assert: 1) Поле заполнилось только 31.0
    - do: Перезаполнить поле "Дата рождения" "28.02.2009"
    - assert: |-
        1) Поле заполнилось
        2) Рамка стала оранжевой
        https://jing.yandex-team.ru/files/gouken67/Дата%20рождения%20BoY.png
    - do: Нажать на "Мужской" в баттоне "Пол"
    - assert: Кнопка "Мужской" активирована - выделана желтым цветом
    - do: нажать на "Женский" в поле "Пол"
    - assert: Кнопка "Женский" активирована - выделана желтым цветом
    - do: Поставить фокус в поле "Серия и номер"
    - assert: 1) Появился попап "Это поле нужно заполнить"
    - do: Начать вводить буквы в поле "Серия и номер"
    - assert: Буквы не вводятся
    - do: Перезаполнить поле "Серия и номер" на 10 цифр
    - assert: |-
        1) Рамка стала серой
        2) Попап пропал
        3) Поле "Годен до" заблокировано
    - do: Кликнуть в поле "Документ"
    - assert: >-
        1) Раскрылся список выбора документов

        https://jing.yandex-team.ru/files/gouken67/Документы%20Авиа%20BoY.png
    - do: Выбрать "Загранпаспорт"
    - assert: |-
        1) Поле "Серия и номер" очистилось, рамки стали красными
        2) Поле "Годен до" разблокировалось, рамки стали красными
    - do: Ввести в поле "Серия и номер" 10 цифр
    - assert: 'Ввелось 9 цифр, 10я не вводится'
    - do: 'Перезаполнить поле "Серия и номер", ввести 9 цифр'
    - assert: |-
        1) Рамки стали серыми
        2) Попап пропал
    - do: Поставить фокус в поле "Годен до"
    - assert: '1) Попап и текст под полем, такие же как и для поля "Дата рождения"'
    - do: Ввести вчерашнюю дату в поле "Годен до"
    - assert: >-
        1) Рамки остались красными

        2) Текст попапа изменился на "Срок действия должен быть не ранее даты
        вылета последнего рейса"

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_10-47-02.png
    - do: Перезаполнить поле "Годен до" на валидную дату
    - assert: |-
        1) Рамки стали серыми
        2) Попап пропал
    - do: Изменить "Документ" на "Свидетельство о рождении"
    - assert: |-
        1) Поля "Серия и номер" и "Годен до" очистились
        2) Поле "Годен до" заблокировалось
    - do: >-
        Начать вводить в поле "Серия и номер" буквы, затем нажать на кнопку
        Оплатить
    - assert: >-
        1) Текст в попапе стал "Например: IVIV787375"

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-23-07.png
    - do: Ввести валидное значение поля
    - assert: |-
        1) Рамка стала серой
        2) Попап пропал
    - do: >-
        В блоке "Контактная информация покупателя" поставить фокус в поле
        "E-mail"
    - assert: 1) Появился попап "Это поле нужно заполнить" (в таче приписка)
    - do: Начать заполнять поле "E-mail" буквам
    - assert: >-
        1) Текст сменился на "Адрес должен состоять из латинский букв, цифр и
        символов:_.+-@"

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_11-03-16.png
    - do: Перезаполнить поле "E-mail" на "test_.+-@test.ru"
    - assert: |-
        1) Рамка стала серой
        2) Попап пропал
    - do: Поставить фокус в поле "Телефон"
    - assert: Появился попап "Это поле нужно заполнить" (в таче приписка)
    - do: Начать вводить буквы
    - assert: 1) Буквы вводятся
    - do: Ввести любой номер телефона
    - assert: |-
        1) Рамки стали серыми
        2) Попап пропал
    - do: Попытаться ввести больше 11 цифр
    - assert: >-
        Цифры вводятся. Появляется подсказка, что кол-во цифр должно быть от 10
        до 15
    - do: Выбрать тип документа "Другой".
    - assert: >-
        1) После выбора типа "Другой" появилась возможность изменить
        гражданство, разблокировалось поле Годен до.
    - do: Изменить страну в поле Гражданство.
    - assert: 'Подставляется выбранная страна, тип документа остаётся "Другой".'
    - do: Ввести в поле "Серия и номер" меньше 6 цифр и нажать кнопку для оплаты
    - assert: |-
        1) Рамки стали красными
        2) Появился попап с информацией о том, что минимум должно быть 6 знаков
    - do: Ввести больше 14 цифр и нажать кнопку для оплаты
    - assert: |-
        1) Рамки остались красными
        2) Текст в попапе изменился на "Кол-во символов не должно превышать 14"
    - do: Ввести 7 символов включая ?/~ и нажать кнопку для оплаты
    - assert: >-
        1) Текст в попапе изменился на “Номер документа может содержать только
        латинские буквы и арабские цифры”
    - do: Ввести 7 символов включая латинские буквы
    - assert: 1) Валидация прошла
    - do: Изменить дату рождения на 21011899
    - assert: >-
        1) Рамки стали красными

        2) Появился попап с информацией о том, что минимальный год рождения 1900

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-23-47.png
    - do: >-
        Заполнить форму пассажира корректными данными, а в качестве даты
        рождения указать 28.02.2015.

        Нажать на кнопку Оплатить.
    - assert: >-
        Поле Даты рождения окрашено в красный цвет.

        Отображается сообщение "Возраст взрослого должен быть 12 или более лет
        на дату вылета последнего рейса в заказе" (в десктопе - при наведении
        курсора).
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров
specs:
  Проверка доступности документов из России в Прагу на бронировании Аэрофлота:
    - do: >-
        Выполнить переход как описано в Description из России В Прагу. Поиск
        нужно осуществить на 1 взрослого, 1 ребенка до 12 лет, 1 младенца
    - assert: >-
        - Переход сработал, открылась страница бронирования

        - Для пассажира выбрано гражданство Россия, селект выбора гражданства
        задизейблен

        - Для пассажира предвыбран Документ Загранпаспорт
    - do: Раскрыть селект выбора документа для взрослого
    - assert: '- Доступные документы: Загран паспорт, Другой'
    - do: Выбрать документ Другой
    - assert: '- Селект выбора гражданства стал активным'
    - do: Проверить список доступных документов у детей
    - assert: '- Доступные документы: Загран паспорт, Другой'
    - do: >-
        Совершить перепоиск по этому же направлению на 1 взрослого, 1 ребёнка и
        1 младенца
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров

  Список направлений доступный для въезда гражданам РФ по внутреннему паспорту

  Абхазия, Сухум, SUI, geoid: 29386

  Армения, geoid: 168

  Белоруссия, geoid: 149

  Казахстан, geoid: 159

  Южная Осетия (нет аэропортов), geoid: 29387
specs:
  Проверка доступности документов из России в Минск или по России для бронирования Аэрофлота:
    - do: >-
        Выполнить переход как описано в Description из России в Минск. Поиск
        нужно осуществить на 1 взрослого
    - assert: |-
        - Переход сработал, открылась страница бронирования
        - Выбран документ Паспорт РФ
        - Выбрано гражданство Россия, селект гражданства задизейблен
    - do: Проверить доступные документы
    - assert: '- Доступны Загранпаспорт, Паспорт РФ, Другой'
    - do: Выбрать документ Другой
    - assert: '- Селект выбора гражданства стал активным'
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!
specs:
  Проверка хлебных крошек на странице BOY:
    - do: Выполнить переход как описано в Description.
    - assert: >-
        1) Переход сработал, открылась страница бронирования

        2) Над информацией о перелёте есть хлебные крошки Выбор перелёта -
        Детали перелёта - Данные пассажиров - Оплата заказа

        3) Выбран сегмент "Данные пассажиров"

        4) Сегмент "Оплата заказа" некликабелен
    - do: Открыть ссылку "Детали перелёта" в новой вкладке
    - assert: |-
        1) Произошёл переход на страницу покупки авиа
        2) Данные соответствуют той, с которой переходили на бронирование
    - do: Вернуться обратно на бронирование
    - do: Открыть ссылку "Выбор перелёта"
    - assert: >-
        1) В текущем окне произошёл переход на выдачу авиа

        2) Страница выдачи соответствует той, с которой был переход на страницу
        покупки (направление, даты, пассажиры)
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Я.Путешествий (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для Я.Путешествий. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/gouken67/aeroflot_to_travel.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!


  При переходе по ссылке на Правила применения тарифов может происходить
  редирект на другой адрес - важно проверить, что открывается страница,
  соответствующая по содержанию.

  Необходимо перейти на страницу бронирования, чтобы тарифов было больше двух
  (отображалась кнопка "Показать все тарифы"):

  https://jing.yandex-team.ru/files/shenfeld/2021-03-16_12.12.15-atnly.png
specs:
  Проверка блока тарифов на странице BOY:
    - do: Выполнить переход как описано в Description.
    - assert: >-
        1) Переход сработал, открылась страница бронирования

        2) Справа от информации о перелёте есть блок с тарифами (для тача - блок
        внизу страницы)

        3) Для каждого тарифа есть описание

        4) Для каждого тарифа есть название и цена

        5) Отображается 2 тарифа, дальше кнопка "Показать все тарифы"

        6) Вверху расположен самый недорогой вариант, ниже дороже

        https://jing.yandex-team.ru/files/iliasova/2020-11-18_21.53.02-7bl8l.png
    - do: Кликнуть по ссылке "Показать все тарифы"
    - assert: >-
        1) Открылось окно с выбором тарифа

        2) Выбранный тариф выделен жёлтой рамкой и вместо кнопки "Выбрать"
        кнопка "Текущий"

        3) Для каждого тарифа есть информация о возврате, обмене, ручной клади,
        багаже, милях (миль может и не быть)

        4) Для каждого тарифа есть название и цена - соответствует тем же, что
        показаны на странице ввода пассажиров

        5) Внизу блока есть ссылка на "Правила применения тарифов Авиакомпании"
        ссылка ведёт на страницу Правила применения тарифов на сайте Аэрофлота
        (ссылка ведет на
        https://www.aeroflot.ru/ru-ru/online_services/purchase/rate/fare_rules)

        https://jing.yandex-team.ru/files/iliasova/2020-11-18_21.55.14-jdbmd.png
    - do: Выбрать следующий по очерёдности тариф
    - assert: >-
        1) Попап закрылся

        2) Выбран указанный тариф

        3) В блоке "итого" цена соответствует выбранной

        4) В блоке выбора тарифов теперь отображается выбранный тариф и
        предыдущий по очерёдности

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_12-09-59.png
    - do: |-
        Кликнуть по ссылке Показать все тарифы.
        В появившемся попапе кликнуть по кнопке Выбрать для следующего тарифа
    - assert: |-
        1) Попап закрылся
        2) Выбрался следующий тариф
        3) Цена в "Итого" соответствует указанной рядом с тарифом
    - do: Кликнуть по радиокнопке предыдущего тарифа
    - assert: >-
        1) Выбрался предыдущий тариф

        2) В блоке выбора тарифов теперь отображается выбранный тариф и
        предыдущий по очерёдности

        3) Цена в “Итого” соответствует указанной рядом с тарифом
    - do: Кликнуть по ссылке “Показать все тарифы”
    - assert: 1) Открылся попап с выбором тарифа
    - do: |-
        Кликнуть по крестику в попапе
        Для тача - по кнопке Вернуться к покупке
    - assert: |-
        1) Попап закрылся
        2) Тариф остался прежним
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!
specs:
  Проверка скролла до ошибки на странице BOY:
    - do: >-
        Выполнить переход как описано в Description. Поиск нужно осуществить на
        3 взрослых пассажиров
    - assert: '1) Переход сработал, открылась страница бронирования'
    - do: >-
        Поскроллить страницу вниз так, что бы кнопка "Оплатить" была доступна
        для нажатия
    - assert: >-
        Десктоп:
        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_12-45-52.png

        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2019-09-17_18.06.08-j9rtn.png
    - do: Нажать кнопку "Оплатить"
    - assert: >-
        1) Страница проскроллилась вверх так, чтобы попап с информацией об
        ошибке был примерно по центру экрана

        Десктоп:
        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_12-47-46.png

        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2019-09-17_18.07.07-1dlft.png
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!
specs:
  Проверка скролла и сужения на странице BOY:
    - do: Выполнить переход как описано в Description.
    - assert: '1) Переход сработал, открылась страница бронирования'
    - do: Поскроллить страницу вверх и вниз
    - assert: 1) Страница скроллится от шапки до футера и обратно
    - do: Сузить страницу до минимального десктопного разрешения ~1025px
    - assert: |-
        1) Элементы не налазят друг на друга
        2) Верстка не едет
        3) Вся информация доступна для чтения
manual: true
Функциональность: Бронирование
Устройство: Десктоп
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:


  В тестинге на вкладке авиа поискать по направлению, по которому летает аэрофлот (например, Москва - Екатеринбург, или направление, указанное в кейсе).
  Выбрать в фильтре авиакомпаний аэрофлот
  Кликнуть по сниппету с предложением аэрофлота.
  На открывшейся странице кликнуть по кнопке Купить для аэрофлота.

  Описание перехода на бронирование для асессоров:
  Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать и проверять кейс в таче.

  В поиске авиа поискать по направлению, по которому летает аэрофлот (например, Москва - Екатеринбург, или направление, указанное в кейсе).
  Выбрать в фильтре авиакомпаний аэрофлот:
  Кликнуть по сниппету с предложением аэрофлота (где есть пометка Продает авиакомпания).
  На открывшейся странице кликнуть по кнопке Купить для аэрофлота. // произойдет переход на travel-test
  У Асессоров откроется travel.crowdtest - должна открыться страница бронирования с формой ввода данных пассажиров

  Для прохождения кейса нужно быть залогиненным.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678


  В записной книжке у вас должны быть пассажиры под разные возрастные категории:

  От 0 до 2

  От 2 до 12

  И от 12

  Если нет пассажиров с каким-то возрастом, нужно его добавить.

  Чтобы попасть в записную книжку, нужно кликнуть по иконке билетов на главной в
  правом верхнем углу, далее перейти на вкладку Пассажиры.
specs:
  Проверка кол-ва и валидации интентов на странице BOY:
    - do: Выполнить переход как описано в Description для 1 взрослого.
    - assert: >-
        * Переход сработал, открылась страница бронирования

        * В блоке пассажира есть интенты из записной книжки

        * Над интентами информация о том что это автозаполнение

        * Максимум показываем 10 интентов, если их больше то интенты не
        показываются

        * Для пассажира показываем только подходящие по возрасту интенты

        * Для пассажира показываем интенты только с подходящими для поездки
        документами:

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_13-11-28.png
    - do: Кликнуть по строке фамилии и имени.
    - assert: >-
        Появляется список пассажиров с подходящими данными. При выборе
        предложенного варианта форма пассажира заполняется данными, которые были
        указаны в варианте:

        https://jing.yandex-team.ru/files/gouken67/Интенты%20на%20Авиа.png


        **Важно:** На этой странице можно использовать только ФИО, введённые на
        латинице. Поэтому, если будет выбран вариант с кириллическим ФИО, произойдёт транслитерация (кириллические буквы будут заменены на латинские).
    - do: Вернуться на страницу поиска
    - do: >-
        Совершить перепоиск по этому же направлению на 1 взрослого, 1 ребёнка и
        1 младенца
    - do: Выбрать в фильтре авиакомпаний Аэрофлот
    - do: Кликнуть по сниппету с предложением Аэрофлота
    - do: На открывшейся странице кликнуть по кнопке Купить для Аэрофлота
    - assert: >-
        Осуществляется переход на страницу бронирования.

        Номер рейса, стоимость и количество пассажиров соответствуют тому, что
        было указано на странице для этого предложения.
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Бронирование
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)

  Нужно быть залогиненым. Проверяем только почту, потому что телефона у этого
  аккаунта нет (а свой не хочется добавлять).

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Проверка подставления данных о покупателе на странице BOY:
    - do: Выполнить переход как описано в Description.
    - assert: |-
        * Переход сработал, открылась страница бронирования
        * В блоке "Контактная информация покупателя" подставилась почта из паспорта
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
tlds: hard
Сервис:
  - Авиа
  - Записная книжка
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит
  Для тачей: открыть бургерное меню, тапнуть Билеты и бронирования**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)

  Нужно быть залогиненым.

  В записной книжке должен быть как минимум один пассажир с паспортом рф, ФИО на
  латинице.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :

  traveltest@yandex.ru пароль Q123456Q

  vladlen@yandex.ru password: v12345678
specs:
  Проверка наполнения интента на странице BOY:
    - do: Выполнить переход как описано в Description.
    - assert: |-
        * Переход сработал, открылась страница бронирования
        * В блоке пассажиров над инпутами данных есть интенты из записной книжки
        * Интент содержит:
             * Имя из записной книжки
              * Дату рождения
              * Тип документа
               https://jing.yandex-team.ru/files/papulova/HUWojeBLO1.png
    - do: >-
        Выбрать этот интент, заполнить контактную информацию валидными данными.
        Нажать оплатить
    - assert: >-
        Все поля из интента заполнены, ошибок валидации нет (у асессоров форма
        оплаты открываться не будет - это нормально, главное, чтобы произошел
        переход)
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис:
  - Авиа
  - Записная книжка
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!


  **Логика работы, не для асессоров**:

  Если одинаковые 'last_name_en', 'first_name_en', 'gender', 'birth_date' и
  одинаковые 'type', 'number', 'citizenship' то ничего не делаем.

  Если одинаковые 'last_name_en', 'first_name_en', 'gender', 'birth_date' и
  разные 'type', 'number', 'citizenship' то добавляем документ к пассажиру

  Во всех остальных случаях создаём нового пассажира


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)

  Нужно быть залогиненым.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Проверка создания пассажира через BOY:
    - do: Выполнить переход как описано в Description.
    - assert: 'Переход сработал, открылась страница бронирования'
    - do: >-
        Заполнить валидно все поля таким образом, чтобы не было точного
        совпадения с данными любого пассажира в записной книжке
    - do: >-
        Нажать кнопку "Оплатить" (у асессоров форма оплаты не откроется, это
        нормально - главное чтобы произошел переход)
    - do: Повторить п. 1
    - assert: >-
        * Переход сработал, открылась страница бронирования

        * Появился новый интент с созданным ранее пассажиром (если в записной
        книжке было много пассажиров (больше 5-10), то нужно кликнуть на поле
        ввода фамилии и ввести начало фамилии с пред. шага - должен появиться
        саджест с созданным ранее пассажиром)
    - do: Кликнуть по интенту/саджесту
    - assert: |-
        * Во все поля подставились данные
        * Все данные соответствуют введённым на пункте 2
    - do: >-
        Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”
    - assert: 'Среди пассажиров появился новый с данными, введенными на п.2'
    - do: 'Удалить пассажира, созданного в п2'
    - assert: Пассажир удалился
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис:
  - Авиа
  - Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!

  Нужно быть залогиненым.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678

  В записной книжке должны быть пассажиры:

  1) Гражданство Россия, документ Паспорт РФ, пол мужской

  2) Гражданство Россия, документ Загранпаспорт, срок годности актуальный, пол
  женский

  3) Гражданство Россия, документ Загранпаспорт, срок годности прошёл, пол
  мужской

  4) Гражданство отличное от Россия, документ иной, срок годности заполнен, пол
  женский

  Так же все остальные поля заполнены.

  В записную книжку можно перейти, кликнув по иконке в правом верхнем углу,
  далее перейти на вкладку Пассажиры.

  ![image](https://jing.yandex-team.ru/files/shenfeld/2019-09-17_17.58.06-mm14a.png)

  Если подходящих пассажиров нет, нужно создать их. Зайти в личный кабинет
  (иконка ЛК находится на главной в правом верхнем углу)

  Перейти во вкладку “Пассажиры”, Нажать кнопку добавить пассажира внизу
  страницы. Заполнить валидными данными, Нажать сохранить)
specs:
  Проверка функциональности интентов  на странице BOY:
    - do: Выполнить переход как описано в Description.
    - assert: >-
        1) Переход сработал, открылась страница бронирования

        2) Над инпутами заполнения данных пассажира есть интенты из записной
        книжки
    - do: Кликнуть по интенту пассажира с гражданством России и паспортом РФ
    - assert: >-
        1) Во все поля подставились данные

        2) Данные соответствуют данным из записной книжки:

        Фамилия и Имя из поля Фамилия и Имя латиницей

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_14-03-41.png

        Серия, номер, тип документа и гражданство из соответствующих полей

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_14-04-51.png
    - do: >-
        Кликнуть по интенту с гражданством Россия, загранпаспортом с валидным
        сроком годности
    - assert: >-
        1) Во все поля подставились данные

        2) Данные соответствуют данным из записной книжки:

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_14-06-13.png
    - do: >-
        Кликнуть по интенту пассажира с гражданством Россия, загранпаспортом с
        не валидным сроком годности (если такого документа нет - пропустить шаг)
    - assert: |-
        1) Во все поля, кроме “годен до” подставились данные
        2) Данные соответствуют данным из записной книжки
    - do: Кликнуть по интенту с гражданством не Россия и иным документом
    - assert: >-
        1) Во все поля подставились данные

        2) Выбралось нужное гражданство

        3) Данные соответствуют данным из записной книжки

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_14-11-00.png
    - do: >-
        ДЛЯ АСЕССОРОВ: Если пассажиры создавались - перейти в ЛК и удалить их за
        собой
    - assert: пассажиры удалены без ошибок
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!

  "Ночной пересадка считается, если интервал от прилета до вылета пересекается с
  [00:00; 06:00], в том числе все пересадки длительностью больше 24 часов
  считаются ночными"
specs:
  Проверка отображения ночныx пересадок на странице BOY:
    - do: >-
        Выполнить переход как описано в Description. Выбрать перелёт с ночной
        пересадкой
    - assert: >-
        1) Переход сработал, открылась страница бронирования

        2) В пункте об информации о пересадки есть месяц, написано что это
        Ночная пересадка

        https://jing.yandex-team.ru/files/megamgistr/TRAVELFRONT-264_Ne_pravilno_otmechaem_nochnye_peresadki__Treker_2019-04-02_19-19-55.png
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  ! На выдаче нужно добавить параметр к урлу &utm_source=availability_new_price

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Заказ на Я.Путешествиях).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!



  **Параметр  utm_source сохраняется в куки, поэтому после проверки, куки надо
  почистить**
specs:
  Проверка обработки изменения цены при переходе на страницу BOY:
    - do: Выполнить переход как описано в Description.
    - assert: >-
        1) Переход сработал, открылась страница бронирования

        2) Появился попап с информацией об изменении цены, формат:

        a) Заголовок: Цена изменилась

        b) Текст: Авиакомпания изменила стоимость по тарифу "Эконом.Промо" до
        9000 рублей. Вы можете вернуться для выбора другого предложения или
        продолжить бронирование по тарифу "Эконом.Промо"

        c) Кнопки: (Дефолт) Продолжить бронирование: Закрывает попап и ставит
        фокус в первое поле.

        Вернуться к результатам поиска: Возврат к выдаче по данному направлению

        4) Фон затемнён

        https://jing.yandex-team.ru/files/kuklina/2022-03-18_02-04-25.png
    - do: Кликнуть по кнопке "Продолжить бронирование"
    - assert: >-
        1) Попап скрылся

        2) В блоке тарифов:

        - напротив изменённого тарифа старая цена перечёркнута красным, над ней
        новая цена

        - изменённая цена совпадает с ценой в попапе

        3) В блоке итого:

        - старая цена перечёркнута красным, над ней новая цена

        - изменённая цена совпадает с ценой в попапе

        - над кнопкой оплатить текст "Цена изменилась после уточнения предожения
        у Авиакомпании"

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-05_17-33-09.png
    - do: Кликнуть по кнопке "Показать все тарифы"
    - assert: |-
        - Открылся попап с тарифами
        - У изменённого тарифа показана новая цена
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/clone_travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/clone_travel-931


  Не для асессоров, нужен фрейм оплаты.
specs:
  Проверка обработки ошибки бронирования при оплате на странице BOY:
    - do: Выполнить переход как описано в Description.
    - assert: '1) Переход сработал, открылась страница бронирования'
    - do: |-
        Заполнить валидно все поля, в качестве имени указать
        bookTestScenarioNotFound
    - do: Кликнуть по кнопке "Оплатить"
    - assert: 1)Открылась форма для оплаты
    - do: |-
        Заполнить форму
        Карта для тестовой оплаты тестовой брони: 4111111111111111
        Месяц и год: 12/19
        CVV: 123
    - do: Нажать кнопку оплатить
    - do: 'После спинера, произошёл переход обратно на страницу бронирования'
    - assert: >-
        -Появился попап с информацией об ошибке бронирования:

        -Заголовок: Ошибка бронирования

        -Текст: Невозможно продолжить бронирование. Мы уже знаем о проблеме и
        исправим ее в ближайшее время.

        Вы можете вернуться для выбора другого предложения или перейти на сайт
        Авиакомпании

        -Кнопки:

        (Дефолт) Продолжить бронирование на aeroflot.ru: В том же окне
        происходит переход по диплинку на сайт Аэрофлота

        Вернуться к результатам поиска: Возврат к выдаче по данному направлению

        -Возможности закрыть попап нет

        -фон затемнён

        -Информация в блоке тарифов не изменилась

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-05_11-45-54.png
    - do: Кликнуть по кнопке "Продолжить бронирование на aeroflot.ru"
    - assert: |-
        -В текущем окне произошёл переход к бронированию аэрофлота
        -Все данные рейса совпадают
        -Переход произошёл через страницу покупки сервиса Авиа
        -Проверить в логах фронтенда (redir) записи по этому переходу есть
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/clone_travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/clone_travel-931
specs:
  Проверка обработки изменения цены при оплате на странице BOY:
    - do: Выполнить переход как описано в Description.
    - assert: '1) Переход сработал, открылась страница бронирования'
    - do: |-
        Заполнить валидно все поля, в качестве имени указать
        bookTestScenarioNewPrice
    - do: Кликнуть по кнопке "Оплатить"
    - assert: >-
        1)Сработал редирект на форму оплаты

        2)Появился попап с информацией о том что цена изменилась

        3)У попапа есть 2 кнопки Продолжить бронирование и вернуться к
        результатам поиска

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-25-50.png
    - do: |-
        Нажать кнопку продолжить бронирование
        Заполнить форму
        Карта для тестовой оплаты тестовой брони: 4111111111111111
        Месяц и год: 12/19
        CVV: 123
    - do: Нажать кнопку оплатить
    - assert: 1)Оплата прошла
    - do: 'После спинера, произошёл переход на страницу статуса заказа'
    - assert: >-
        -В шапке информация о том что заказ успешно забронирован

        -Есть номер для регистрации на рейс

        -Данные о перелёте, багаже, ручной клади совпадают с данным со страницы
        ввода данных пассажиров

        -Данные о пассажирах верные

        -Цена совпдает с ценой в попапе

        -Контактные данные верные

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-29-29.png
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
feature: Отели
type: Страница заказа
description: >-
  1. Перейти на вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. В фильтре партнеров на поиске выбрать Expedia.

  3. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля.

  4. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.



  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  'Отели: Действия Скачать и Распечатать на хэппи пейдж и на странице заказа':
    - do: Оплатить заказ
    - assert: |-
        - Открылась страница хэппи пейдж
        - В десктопе есть кнопки Скачать, Распечатать
        - В таче есть кнопка Скачать
    - do: Кликнуть по кнопке Скачать
    - assert: |-
        - Произошло скачивание подтверждения в формате pdf
        - Информация в документе корректная, соответствует бронированию
    - do: 'Кликнуть по кнопке Распечатать (только в десктопе, для тача пропустить)'
    - assert: '- Открылось окно для печати документа'
    - do: На странице хэппи пейдж нажать на кнопку Подробнее о заказе
    - assert: |-
        - Открылась страница заказа
        - В десктопе есть кнопки Скачать, Распечатать
        - В таче есть кнопка Скачать
    - do: Повторить шаги 2-3
    - assert: ОР совпадает
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - orkestrator
  - Smoke
feature: Отели
type: ''
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  Кнопка скачать на странице отельного заказа:
    - do: Перейти на страницу успешного заказа по инструкции из описания
    - assert: >-
        * В шапке есть кнопка "Скачать подтверждение"

        * Какое то время кнопка недоступна (не больше 10 секунд), затем
        активируется

        * Цвет кнопки серый

        * На кнопке есть иконка скачивания

        https://jing.yandex-team.ru/files/iliasova/2019-06-14_18.52.29.png
    - do: Кликнуть по кнопке "Скачать подтверждение"
    - assert: |-
        * Документ скачался
        * Доп. окно для скачки сразу закрылось
        * Формат документа pdf
    - do: Открыть документ
    - assert: |-
        * Документ открылся без ошибок
        * Данные в документе соответствуют данным со страницы заказа
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: orkestrator
feature: Отели
type: ''
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.


  **На телефоне нужно отключить функцию автоскачки документов**

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  '[Тач]Кнопка скачать на странице отельного заказа':
    - do: Перейти на страницу успешного заказа по инструкции из описания
    - assert: >-
        1)В шапке есть кнопка Скачать подтверждение

        2)Цвет кнопки жёлтый

        3)На кнопке есть иконка скачивания

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-08_13-02-14.png
    - do: |-
        Подождать 10-15 секунд
        Кликнуть по кнопке "Скачать подтверждение"
    - assert: |-
        1)Открылось новое окно с документом
        2)Вёрстка документа не едет
        3)Документ в формате pdf
manual: true
Функциональность: Бронирование
Устройство: Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
feature: Отели
type: Страница заказа
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.


  **Нужно быть залогиненым**


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)

  1. Перейти на вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Проверка доступов к ваучеру:
    - do: |-
        Забронировать и оплатить отель
        Дойти до страницы успешного заказа
        Нажать на кнопку Подробнее о заказе
    - assert: '- Произошел переход на страницу заказа'
    - do: |-
        Подождать 10-15 секунд
        Кликнуть по кнопке "Распечатать подтверждение"
    - assert: '* В новом окне открылась страница печати'
    - do: Закрыть модалку кнопкой "Отмена"
    - assert: '* Остались на странице документа'
    - do: Скопировать урл страницы с документом
    - do: Перейти в режим инкогнито и перейти по скопированному урлу
    - assert: >-
        * Доступа к странице нет

        * Открылась страница портала с попапом о вводе данных заказа

        * Номер заказа совпадает с номер на странице заказа

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-08_13-07-58.png
    - do: Ввести верный номер телефона
    - assert: |-
        * Открылась страница документа
        * Документ тот же что и на шаге 2
    - do: |-
        Открыть новый браузер(любой)
        Залогиниться так же, как и на шаге 6
        Перейти по той же ссылке
    - assert: |-
        * Открылась страница документа
        * Документ тот же что и на шаге 2
    - do: |-
        Переоткрыть режим инкогнито и повторить шаг 5
        Ввести почту, указанную при бронировании
    - assert: |-
        * Открылась страница документа
        * Документ тот же что и на шаге 2
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
feature: ЖД
type: Билеты и бронирования
description: >-
  Для получения Номера брони, адреса электронной почты и номера телефона нужно
  совершить покупку ЖД билета. Для этого необходимо:

  * Перейти на вкладку ЖД билеты и выбрать любое направление (например, Москва -
  Санкт-Петербург через неделю)

  * Зайти на выдачу

  * Кликнуть по кнопке покупки (кнопка может называться по-разному, сейчас -
  “Выбрать место”)

  * Дальше следовать по страницам до успешной покупки билетов

  **Запомнить вводимые адрес электронной почты и номер телефона и номер заказа**


  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Поиск ж/д заказа из-под залогина (десктоп):
    - do: |-
        Залогиниться учетной записью Яндекса
        Кликнуть по иконке ЛК в правом верхнем углу на главной странице
    - assert: >-
        * Открылась страница с бронированиями

        * Слева есть блок с текстом "Не нашли свой заказ?

        Возможно, вы купили его без авторизации. Попробуйте найти его по
        реквизитам."
    - do: Кликнуть по ссылке "найти его по реквизитам"
    - assert: >-
        * Открылось модальное окно Поиск заказа

        * В окне есть два поля - Номер заказа и Мобильный телефон или
        электронная почта

        * Под полями есть подсказки: для первого "Можно посмотреть в почте или
        на документе", для второго - "Которые указывали при покупке"

        * Есть кнопка Найти заказ

        * Страница за модальным окном затемнилась
    - do: Кликнуть по области вне окна
    - assert: |-
        * Окно закрылось
        * Находимся на странице с заказами
    - do: Кликнуть по ссылке "найти его по реквизитам"
    - assert: '* Открылось окно Поиск заказов'
    - do: >-
        Ввести в поля данные из описания кейса - номер заказа и электронную
        почту

        Кликнуть "Найти заказ"
    - assert: |-
        * Произошел переход на страницу заказа
        * Номер заказа совпадает с введенным
    - do: |-
        Вернуться на страницу поиска заказа в Путешествиях
        Ввести в поля данные из описания кейса - номер заказа и номер телефона
        Кликнуть "Найти заказ"
    - assert: |-
        * Произошел переход на страницу заказа на сервисе Поездов
        * Номер заказа совпадает с введенным
manual: true
Функциональность: Поиск заказа
Устройство: Десктоп
Страница: Билеты и бронирования
tlds: ru
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Билеты и бронирования
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  Для получения Номера брони, адреса электронной почты и номера телефона нужно
  совершить покупку ЖД билета. Для этого необходимо:

  * Перейти на вкладку ЖД билеты и выбрать любое направление (например, Москва -
  Санкт-Петербург через неделю)

  * Зайти на выдачу

  * Кликнуть по кнопке покупки (кнопка может называться по-разному, сейчас -
  “Выбрать место”)

  * Дальше следовать по страницам до успешной покупки билетов

  **Запомнить вводимые адрес электронной почты и номер телефона и номер заказа**


  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Поиск ж/д заказа из-под незалогина:
    - do: |
        Перейти на главную страницу Путешествий, незалогинившись
        Кликнуть по иконке "чемодан" в правом верхнем углу на главной странице в десктопе, в таче в бургер-меню по "Мои поездки"
    - assert: |
        * Открылась страница поиска заказа
        * Есть два поля - "Номер заказа" и "Мобильный телефон или электронная почта".
        * Под полями есть подсказки: для первого “Можно посмотреть в почте или
        на документе”, для второго - “Которые указывали при покупке”.
        * Ниже расположена кнопка "Найти заказ".
        * Еще ниже, под кнопкой "Найти заказ" есть текст:
        "Войдите в аккаунт, если при оформлении заказа вы были авторизованы
        или хотите начислить баллы плюса за тур."
    - do: |
        Ввести в поля данные из описания кейса - номер заказа и электронную почту
        Кликнуть “Найти заказ”
    - assert: |
        * Произошел переход на страницу заказа
        * Номер заказа совпадает с введенным
    - do: |
        Вернуться на страницу поиска заказа
        Ввести в поля данные из описания кейса - номер заказа и номер телефона
        Кликнуть “Найти заказ”
    - assert: |
        * Произошел переход на страницу заказа
        * Номер заказа совпадает с введенным
    - do: |
        Вернуться на страницу поиска заказа
        Кликнуть по ссылке Войдите в аккаунт
        Залогиниться ТЕСТОВЫМ  аккаунтом Яндекса (Для тестинга асессоры могут
        пользоваться тестовым аккаунтом : vladlen@yandex.ru password: v12345678)
    - assert: Произошел переход на страницу Мои поездки

manual: true
Функциональность: Поиск заказа
Устройство:
  - Десктоп
  - Тач
Страница: Билеты и бронирования
tlds: ru
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: arhey
feature: ЖД
type: Билеты и бронирования
description: |-
  Для тестирования можно использовать заказы:
  В тестинге: 72946741102922, shenfeld@yandex-team.ru, +79826277795
  В проде: 72896782945470, shenfeld@yandex-team.ru, +79826277795
specs:
  Валидация формы поиска заказа (десктоп):
    - do: |-
        Зайти на главную Путешествий, незалогинившись
        Кликнуть по иконке ЛК в верхнем правом углу страницы
    - assert: '* Произошел переход на страницу поиска заказа'
    - do: 'Не заполняя поля ввода, кликнуть Найти заказ'
    - assert: |-
        * Оба поля подсвечиваются красным
        * Для первого поля есть попап с подсказкой "Укажите номер заказа"
    - do: |-
        Ввести номер заказа из описания кейса
        Кликнуть Найти заказ
    - assert: |-
        Первое поле не подсвечивается
        Второе поле подсвечивается красным
        Для второго поля есть попап "Укажите телефон или email"
    - do: |-
        Ввести во второе поле номер телефона из описания с ошибкой в одной цифре
        Кликнуть Найти заказ
    - assert: >-
        * Появился лоадер

        * Через несколько секунд появился текст под кнопкой "Не удалось найти
        заказ. Проверьте, верно ли заполнены поля"
    - do: |-
        Ввести во второе поле email: shenfeld@yandex.ru
        Кликнуть Найти заказ
    - assert: >-
        * Под кнопкной появилась ошибка "Не удалось найти заказ. Проверьте,
        верно ли заполнены поля"
    - do: |-
        Очистить второе поле
        Ввести номер телефона: +79999999999
        Кликнуть Найти заказ
    - assert: >-
        * Под кнопкной появилась ошибка “Не удалось найти заказ. Проверьте,
        верно ли заполнены поля”
    - do: |-
        Очистить первое поле
        Ввести номер заказа: 11111111111111
        Ввести во второй заказ верный номер телефона из описания кейса
        Кликнуть Найти заказ
    - assert: >-
        * Под кнопкной появилась ошибка “Не удалось найти заказ. Проверьте,
        верно ли заполнены поля”
manual: true
Функциональность: Поиск заказа
Устройство: Десктоп
Страница: Билеты и бронирования
tlds: ru
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Отели
type: Страница заказа
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.

  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Бесплатная отмена отельного заказа:
    - do: |-
        Через ТК создать офферы в отель Вега Измайлово (ID отеля 742) на любые даты для нескольких гостей
        Забронировать и оплатить отель
        Перейти по кнопке Подробнее о заказе на страницу полного заказа
    - assert: |-
        * Есть кнопка "Отменить бронирование"
        * Цвет кнопки серый
        * На кнопке есть значок отмены
    - do: Кликнуть по кнопке "Отменить бронирование"
    - assert: |-
        * Открылось модальное окно
        * Страница на фоне затемнилась
        * Текст "Уверены, что хотите отменить бронирование?"
        * Кнопка "Не отменять" желтого цвета
        * Кнопка "Отменить бронирование" серого цвета
        https://jing.yandex-team.ru/files/papulova/browser_J2FSHDdbZZ.png
    - do: Кликнуть "Не отменять"
    - assert: '* Окно закрылось'
    - do: Снова открыть попап и кликнуть вне попапа
    - assert: '* Попап скрылся'
    - do: |-
        Снова открыть окно
        Кликнуть по кнопке "Отменить бронирование"
    - assert: >-
        * В окне появился спинер

        * Через 5-10 секунд появился лоадер на всю страницу с текстом "Загрузка
        заказа Загружаем подробную информацию о заказе"

        * Далее открылась страница отмены

        * Параметры проживания, номер заказа и все данные совпадают

        * Рядом со стоимостью есть ссылка "Чеки и документы", по клику на которую раскрывается меню

        * В меню есть ссылка "Чек на платеж" - черного цвета

        * В меню есть ссылка  "Чек на возврат" - черного цвета

        * Наверху страницы есть ссылка "Мои поездки"

        https://jing.yandex-team.ru/files/papulova/nhzXH1rUFr.png
    - do: Кликнуть по ссылке "Чек на платеж"
    - assert: >-
        * Посередине странице появился попап с чеком

        * Страница на заднем фоне стала затемнённой

        * Сумма в чеке равна итоговой сумме при бронировании

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-10_16-46-55.png
    - do: Кликнуть вне попапа
    - assert: '* Попап закрылся'
    - do: Кликнуть по ссылке "Чек на возврат"
    - assert: |-
        * Появился попап с информацией что чек выписывается
        https://jing.yandex-team.ru/files/iliasova/2019-06-17_11.40.04.png
    - do: Кликнуть вне попапа
    - assert: '* Попап закрылся'
    - do: |-
        Подождать 5-10 секунд
        Обновить страницу
        Кликнуть в ссылку "Чек на возврат"
    - assert: >-
        * Посередине странице появился попап с чеком

        * Страница на заднем фоне стала затемнённой

        * Сумма в чеке равна сумме возврата

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-10_16-49-57.png
    - do: Кликнуть вне попапа
    - assert: '* Попап закрылся'
    - do: Кликнуть по кнопке "Мои поездки"
    - assert: >-
        * Если в этот момент пользователь залогинен, то произойдет переход в ЛК
        к данным о поездке

        * Если не залогинен, то переход будет на страницу с формой поиска заказа
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - orkestrator
  - Smoke
  - Blocker
Автор: iliasova
feature: ЖД
type: Билеты и бронирования
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  Для получения Номера брони, адреса электронной почты и номера телефона нужно
  совершить покупку ЖД билета. Для этого необходимо:

  * Перейти на вкладку ЖД билеты и выбрать любое направление (например, Москва -
  Санкт-Петербург через неделю)

  * Зайти на выдачу

  * Кликнуть по кнопке покупки (кнопка может называться по-разному, сейчас -
  “Выбрать место”)

  * Дальше следовать по страницам до успешной покупки билетов

  **Запомнить вводимые адрес электронной почты и номер телефона и номер заказа**


  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Поиск ж/д заказа из-под залогина (тач):
    - do: |-
        Залогиниться учетной записью Яндекса
        Тапнуть по иконке ЛК в правом верхнем углу на главной странице
    - assert: >-
        * Открылась страница с бронированиями

        * Внизу страницы есть блок с текстом“Не нашли свой заказ?

        Возможно, вы купили его без авторизации. Попробуйте найти его вручную.”
        и ссылкой "Найти заказ по реквизитам"

        * Если страниц с бронированиями несколько, то блок отображается внизу
        каждой страницы
    - do: Тапнуть по ссылке “Найти заказ по реквизитам”
    - assert: >-
        * Открылась страница Поиск заказа

        * В окне есть два поля - Номер заказа и Мобильный телефон или
        электронная почта

        * Под полями есть подсказки: для первого "Можно посмотреть в почте или
        на документе", для второго - "Которые указывали при покупке"

        * Есть кнопка Найти заказ

        * Вверху страницы есть кнопка со стрелкой "К списку заказов"
    - do: Тапнуть по кнопке "К списку заказов"
    - assert: '* Произошел возврат на страницу с бронированиями'
    - do: Тапнуть по ссылке “Найти заказ по реквизитам”
    - assert: '* Открылась страница Поиск заказа'
    - do: >-
        Ввести в поля данные из описания кейса - номер заказа и электронную
        почту

        Тапнуть "Найти заказ"
    - assert: |-
        * Произошел переход на страницу заказа
        * Номер заказа совпадает с введенным
    - do: |-
        Вернуться на страницу поиска заказа
        Ввести в поля данные из описания кейса - номер заказа и номер телефона
        Тапнуть "Найти заказ"
    - assert: |-
        * Произошел переход на страницу заказа
        * Номер заказа совпадает с введенным
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Билеты и бронирования
tlds: ru
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Билеты и бронирования
description: |-
  Для тестирования можно использовать заказы:
  В тестинге: 72946741102922, shenfeld@yandex-team.ru, +79826277795
  В проде: 72896782945470, shenfeld@yandex-team.ru, +79826277795
specs:
  Валидация формы поиска заказа (тач):
    - do: |-
        Зайти на главную Путешествий, незалогинившись
        Тапнуть по иконке ЛК в верхнем правом углу страницы
    - assert: '* Произошел переход на страницу поиска заказа'
    - do: 'Не заполняя поля ввода, тапнуть Найти заказ'
    - assert: |-
        * Оба поля подсвечиваются красным
        * Для первого поля есть подсказка под полем "Укажите номер заказа"
        * Для второго поля есть подсказка под полем "Укажите телефон или email"
    - do: |-
        Ввести номер заказа из описания кейса
        Тапнуть Найти заказ
    - assert: >-
        Первое поле не подсвечивается, для него пропала подсказка

        Второе поле подсвечивается красным, есть подсказка "Укажите телефон или
        email"
    - do: |-
        Ввести во второе поле номер телефона из описания с ошибкой в одной цифре
        Тапнуть Найти заказ
    - assert: >-
        * Появился лоадер

        * Через несколько секунд появился текст под кнопкой "Не удалось найти
        заказ. Проверьте, верно ли заполнены поля"
    - do: |-
        Ввести во второе поле email: shenfeld@yandex.ru
        Тапнуть Найти заказ
    - assert: >-
        * Под кнопкной появилась ошибка "Не удалось найти заказ. Проверьте,
        верно ли заполнены поля"
    - do: |-
        Очистить второе поле
        Ввести номер телефона: +79999999999
        Тапнуть Найти заказ
    - assert: >-
        * Под кнопкной появилась ошибка “Не удалось найти заказ. Проверьте,
        верно ли заполнены поля”
    - do: |-
        Очистить первое поле
        Ввести номер заказа: 11111111111111
        Ввести во второй заказ верный номер телефона из описания кейса
        Тапнуть Найти заказ
    - assert: >-
        * Под кнопкной появилась ошибка “Не удалось найти заказ. Проверьте,
        верно ли заполнены поля”
manual: true
Функциональность: Поиск заказа
Устройство: Тач
Страница: Билеты и бронирования
tlds: ru
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Портал
type: Главная
description: ''
specs:
  'Календарь скроллится до верной даты (дата Туда не заполнена) [touch]':
    - do: |-
        Зайти на главную(вкладка авиа)
        Кликнуть на инпут Обратно
    - assert: Открылся календарь на начале текущего месяца
    - do: Выбрать любую дату
    - assert: Календарь скрылся
    - do: Выполнить 1-2 для вкладки Отели
manual: true
Функциональность: Форма поиска
Устройство: Тач
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: tcheremnykh
feature: Портал
type: Главная
description: Дубликат
specs:
  'Портал: Поля последовательно раскрываются [touch]':
    - do: |-
        Открываем главную
        Для каждой вкладки, кроме автобусов:
        Кликаем на первый инпут
    - assert: Раскрывается страница с саджестами
    - do: Выбираем значение из саджеста
    - assert: 'Форма сворачивается, выбранное значение подставляется'
    - do: >-
        Тапаем на второй инпут (для вкладки Отели пропускаем шаг - только одно
        поле с саджестами)

        Выбираем саджест
    - assert: 'Форма сворачивается, выбранное значение подставляется'
    - do: |-
        Тапаем по первому полю с датой
        Выбираем любую дату
        Тапаем Готово
    - assert: 'Форма сворачивается, выбранное значение подставляется'
    - do: >-
        Тапаем по второму полю с датой (для вкладки ЖД пропускаем шаг - только
        одно поле с датой)

        Выбираем дату

        Тапаем Готово
    - assert: 'Форма сворачивается, выбранное значение подставляется'
manual: true
Функциональность: Форма поиска
Устройство: Тач
Страница: Главная
Сервис: Портал
Окружение:
  - Production
  - Testing
Автор: tcheremnykh
feature: Отели
type: ''
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.

  для получения штрафа можно просто увеличить кол-во ночей

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  Платная отмена отельного заказа:
    - do: Перейти на страницу успешного заказа по инструкции из описания
    - assert: >-
        * В шапке есть кнопка отменить бронирование

        * Цвет кнопки серый

        * На кнопке есть значок отмены

        * В блоке о стоимости информация что беслпатной отмены нет

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-11_15-09-27.png
    - do: Кликнуть по кнопке "Отменить бронирование"
    - assert: >-
        1)Появился попап

        2)Фон попапа чёрный

        3)Текст "Уверены что хотите отменить бронирование? С вас будет удержан
        штраф ***"

        4)Кнопка не хочу, фон такой же как и попапа

        5)Кнопка "Отменить бронирование" жёлтого цвета

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-11_15-09-40.png
    - do: Кликнуть по кнопке "Отменить бронирование"
    - assert: >-
        1)В попапе появился спинер

        2)Открылась страница отмены

        3)Параметры проживания, номер заказа и все данные совпадают

        4)В шапке есть ссылка "Чек на оплату" - синего цвета

        5)В шапке есть кнопка  "Чек на возврат" - синего цвета

        6)В футоре сниппета есть кнопка "Перейти к списку заказов" - серого
        цвета

        7)В футоре сниппета есть кнопка "Вернуться на поиск отелей" - жёлтого
        цвета

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-10_16-42-31.png
    - do: Кликнуть по ссылке "Чек на оплату"
    - assert: >-
        1) По середине странице появился попап с чеком

        2)Страница на заднем фоне стала затемнённой

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-10_16-46-55.png
    - do: Кликнуть вне попапа
    - assert: 1)Попап закрылся
    - do: Кликнуть по ссылке "Чек на возврат"
    - assert: >-
        1)Появился попап с информацией что чек выписывается

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-10_16-48-27.png
    - do: Кликнуть вне попапа
    - assert: 1)Попап закрылся
    - do: |-
        Подождать 5-10 секунд
        Обновить страницу
        Кликнуть в ссылку "Чек на возврат"
    - assert: >-
        1) По середине странице появился попап с чеком

        2)Страница на заднем фоне стала затемнённой

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-10_16-49-57.png
    - do: Кликнуть вне попапа
    - assert: 1)Попап закрылся
    - do: Кликнуть по кнопке "Вернуться на поиск отелей"
    - assert: 1)В текущем окне произошёл переход на морду отелей в портале
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: orkestrator
feature: Отели
type: ''
description: >-
  Для прохождения кейса в таче можно пропускать шаги с наведением на иконки.


  **Использовать Имя TEST-REFUND, фамилия - POST-STAY-CANCEL**

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  Кнопка отменить на странице отельного заказа (Неудачная отмена):
    - do: Перейти на страницу успешного заказа по инструкции из описания
    - assert: 1)В шапке есть кнопка отменить бронирование
    - do: Кликнуть по кнопке "Отменить бронирование"
    - assert: 1)Появился попап
    - do: Кликнуть по кнопке "Отменить бронирование"
    - assert: >-
        1)В попапе появился спинер

        2)Открылась страница отмены

        3)Параметры проживания, номер заказа и все данные совпадают

        4)В шапке жёлтый блок с информацией что бронирование отменить не удалось

        5)В жёлтом блоке есть телефон службы поддержки и номер заказа

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-23_13-36-28.png
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931

  Тестовые карты:

  4111111111111111 Месяц и год: 12/19 CVV: 123 или

  639002000000000003 12/12 123 (3ds:12345678)

  НЕ залогиниваться
specs:
  BOY основной флоу бронирования НЕзалогин:
    - do: Выполнить переход как описано в Description.
    - assert: '1) Переход сработал, открылась страница бронирования'
    - do: Заполнить валидно все поля
    - do: Кликнуть по кнопке "Оплатить"
    - assert: 1)Открылась форма для оплаты
    - do: Заполнить форму корректной картой
    - do: Нажать кнопку оплатить
    - assert: 1)Оплата прошла
    - do: >-
        После спинера, в этом же окне появилась страница воода 3ds, ввести
        12345678 нажать submit
    - assert: >-
        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-24_12-07-00.png
    - do: В этом же окне появилась страница аэрофлота с информацией об оплате
    - assert: >-
        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-24_12-07-42.png
    - do: После успешной оплаты произошёл переход на страницу статуса хэппи пейдж
    - assert: |-
        -В шапке информация о том что заказ успешно забронирован
        -Есть номер для регистрации на рейс
        -Данные о перелете верные
        -Контактные данные верные
        -Есть блок промокода, карусель отелей
        -Есть кнопка подробнее о заказе
        https://jing.yandex-team.ru/files/shenfeld/2021-01-18_19.15.34-2j5em.png
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag: Blocker
feature: Отели
type: ''
description: >-
  Карта для тестовой оплаты тестовой брони: 5100002767155462

  Месяц и год: 12/22

  CVV: 228

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  Неуспешная оплата отельного заказа:
    - do: >-
        * Перейти на страницу бронирования для любого отеля, на любые даты, для
        2 взрослых

        * Заполнить все поля валидными данными

        * Запомнить информацию: даты и время въезда и выезда, название и адрес
        отеля, ФИ и контакты гостей, тип размещения, тип питания, тип кроватей,
        даты и время для бесплатной оплаты, сумма к оплате

        * Кликнуть по кнопке Оплатить
    - assert: >-
        * Появился лоадер с текстом "Создание заказа Создаем заказ и готовимся к
        оплате"

        * Элементы на странице задизейблены:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png)

        * Через какое-то время произошел переход на страницу оплаты

        * Сумма к оплате на странице оплаты совпадает с суммой при бронировании

        * Название гостиницы верное

        * Даты совпадают с выбранными, количество гостей - 2

        * Вверху страницы отображаются хлебные крошки, шаг Бронирование отеля
        задизейблен; есть телефон поддержки:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_19-39-32.png)
    - do: |-
        * Выбрать Новая карта и ввести данные карты из описания кейса
        * Кликнуть Оплатить
    - assert: >-
        * Появился лоадер с текстом "Оплата заказа Оплачиваем заказ и готовим
        выписку"

        * Через какое-то время произошел переход на страницу предложения

        * В верху страницы открылся попап с информацией что произошла ошибка

        * У попапа есть кнопка "Повторить оплату" жёлтого цвета и крестик, что
        бы закрыть попап

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-26_11-44-01.png
    - do: Закрыть попап через крестик
    - assert: >-
        * Попап скрылся

        * В полях данных пассажирах всё заполнено так же как было заполнено
        изначально
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: orkestrator
feature: Отели
type: Бронирование
description: >-
  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Проверка сохранения введённых данных:
    - do: >-
        Перейти на страницу бронирования для любого отеля, на любые даты, для 2
        взрослых

        Заполнить все поля валидными данными

        При заполнении последнего поля убрать с него фокус после заполнения
    - do: Обновить страницу
    - assert: |-
        - Страница обновилась
        - Поля с данными пассажиров остались заполненными
        - Данные совпадают с введёнными
    - do: Перейти к другому предложению с другим токеном в том же браузере
    - assert: '- Поля данных пассажиров заполнены'
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: automation (iliasova)
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  Проверка обработки изменение тарифа при переходе на бронирование BOY:
    - do: Пока не понятно как воспроизводить
manual: true
Функциональность: Бронирование
Сервис: Авиа
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  Проверка обработки изменение тарифа после отрпавки формы BOY:
    - do: Пока не понятно как воспроизводить
manual: true
Функциональность: Бронирование
Сервис: Авиа
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  Проверка страницы оплаты (неуспешная оплата заказа) BOY:
    - do: Выполнить переход как описано в Description.
    - assert: 'Переход сработал, открылась страница бронирования'
    - do: Заполнить валидно все поля
    - do: Кликнуть по кнопке "Оплатить"
    - assert: Открылась форма для оплаты
    - do: |-
        Заполнить форму
        Карта для тестовой оплаты тестовой брони: 4111111111111111
        Месяц и год: 12/19
        CVV: 228
    - do: Нажать кнопку оплатить
    - assert: >-
        Через какое-то время произошел переход на страницу заказа с ошибкой:
        https://jing.yandex-team.ru/files/shenfeld/2021-03-23_15.44.48-pj8za.png
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!


  **Асессорам достаточно выполнить шаги 1-4**
specs:
  Проверка деталировки тарифов в заказе BOY:
    - do: Выполнить переход как описано в Description.
    - assert: >-
        1) Переход сработал, открылась страница бронирования

        2) Справа от информации о перелёте есть блок с тарифами

        3) Для каждого сегмента есть информация о тарифе

        4) Тарифы соответствуют выбранному тарифу в блоке тарифов

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-36-52.png
    - do: Кликнуть по радиокнопке следующего тарифа
    - assert: >-
        1) Выбрался следующий тариф

        2) Цена в "Итого" соответствует указанной рядом с тарифом

        3) Тариф у каждого сегмента изменился и равен выбранному тарифу

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-37-24.png
    - do: Кликнуть Показать все тарифы внизу блока тарифов.
    - assert: >-
        1) Открылся попап с информацией о тарифе

        2) Информация соответствует с данными в общем попапе тарифов

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-37-45.png
    - do: Кликнуть вне попапа
    - assert: 1) Попап закрылся
    - do: |-
        Оплатить заказ используя карту **Не для асессоров**
        5555 5555 5555 5599
        Месяц и год: 12/24
        CVV: 123

        Нажать "Подробнее о заказе"
    - assert: |-
        Произошел переход на страницу заказа
        На странице заказа тарифы совпадают с выбранными
    - do: |-
        Кликнуть по тарифу
        https://jing.yandex-team.ru/files/shenfeld/2021-03-23_15.49.03-tnr8k.png
    - assert: Открылся попап с информацией по тарифу
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  Проверка доступов к странице оплаты BOY:
    - do: Выполнить переход как описано в Description
    - do: Ввести валидные данные пассажиров и нажать оплатить
    - assert: 1)Произошёл переход на страницу оплаты
    - do: Скопировать ссылку и вставить в другой браузер
    - assert: >-
        1)Появился попап с просьбой ввести контактную информацию для доступа

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-42-30.png
    - do: Ввести корректные данные и нажать просмотреть заказ
    - assert: 'Попап пропал, доступ к странице оплаты появился'
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931

  Нужно быть незалогиненым
specs:
  Проверка доступов к заказу у незалогинов BOY:
    - do: Выполнить переход как описано в Description
    - do: Ввести валидные данные пассажиров и нажать оплатить
    - assert: Произошёл переход на страницу оплаты
    - do: |-
        Оплатить заказ с помощью карты
        4111111111111111
        Месяц и год: 12/19
        CVV: 123
    - assert: |-
        * Заказ оплачен
        * Произошёл переход на страницу хэппи пейдж
    - do: Скопировать ссылку и вставить в другой браузер
    - assert: >-
        * Появился попап с просьбой ввести контактные данные для предоставления
        доступа

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-43-07.png
    - do: 'Ввести корректные данные (почта или телефон, указанные на бронировании)'
    - assert: |-
        * Попап пропал
        * Появился доступ к заказу
    - do: |-
        Заменить в урле
        /booking/result
        на
        orders
    - assert: Попали на страницу заказа
    - do: Скопировать ссылку и вставить в другой браузер(режим инкогнито)
    - assert: >-
        Появился попап с просьбой ввести контактные данные для предоставления
        доступа
    - do: Ввести корректные данные
    - assert: |-
        * Попап пропал
        * Доступ к заказу появился
    - do: Скопировать ссылку и вставить в этом же браузере
    - assert: 'Открылась страница заказа, доступ есть'
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис:
  - Авиа
  - Записная книжка
Тестирование асессорами: Нет
Окружение: Testing
feature: Авиа
type: ''
description: >-
  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931

  Нужно быть залогиненым
specs:
  Проверка доступов к заказу у залогинов BOY:
    - do: Выполнить переход как описано в Description
    - do: Ввести валидные данные пассажиров и нажать оплатить
    - assert: Произошёл переход на страницу оплаты
    - do: |-
        Оплатить заказ с помощью карты
        4111111111111111
        Месяц и год: 12/19
        CVV: 123
    - assert: |-
        1)Заказ оплачен
        2)Произошёл переход на страницу статуса заказа
    - do: Скопировать ссылку и вставить в другой браузер
    - assert: >-
        1)Появился попап с просьбой ввести контактные данные для предоставления
        доступа

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-43-07.png
    - do: Залогиниться тем же логином
    - assert: 1)Доступ к заказу появился
    - do: |-
        Заменить в урле
        /booking/result
        на
        orders
    - assert: |-
        1)Попали на страницу заказа
        2)Доступ есть
    - do: Скопировать ссылку и вставить в другой браузер(режим инкогнито)
    - assert: >-
        1)Появился попап с просьбой ввести контактные данные для предоставления
        доступа
    - do: Ввести корректные данные
    - assert: |-
        1)Попап пропал
        2)Доступ к заказу появился
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!
specs:
  Проверка схлопывания тарифов в попапе тарифов BOY:
    - do: Выполнить переход как описано в Description.
    - assert: >-
        1) Переход сработал, открылась страница бронирования

        2) Справа от информации о перелёте есть блок с тарифами

        3) Для каждого сегмента есть информация о тарифе

        4) Тарифы соответствуют выбранному тарифу в блоке тарифов

        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-06-25_17-36-52.png
    - do: Кликнуть по кнопке "показать все тарифы"
    - assert: >-
        1) Открылся попап с тарифами

        2) Тарифы описаны не для каждого сегмента отдельно, а один общий попап

        3) Если для какого-то сегмента отдельно показана информация, то
        информация о каком-то из тарифов для данного сегмента отличается от
        информации о тарифе в другом сегменте
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Авиа
type: ''
description: >-
  Для проверки нужно хачить ошибку, поэтому не для асессоров.


  Описание перехода на бронирование для команды:
  https://testpalm.yandex-team.ru/testcase/travel-930

  Описание перехода на бронирование для асессоров:
  https://testpalm.yandex-team.ru/testcase/travel-931
specs:
  Проверка обработки ошибки бронирования при переходе на страницу BOY:
    - do: Выполнить переход как описано в Description.
    - assert: '1) Переход сработал не на страницу бронирования, а напрямую к аэрофлоту'
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
feature: Отели
type: Бронирование
description: >-
  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-08-11_16.12.03-j7bjy.png)

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!

  ![image](https://jing.yandex-team.ru/files/iliasova/2019-12-06_12.05.39-twjuh.png)


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs: {}
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Автор: iliasova
feature: Записная книжка
type: Бронирование
description: >-
  Для прохождения кейса нужно быть залогиненным.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678

  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Отели. Подстановка почты и номера телефона после авторизации на странице бронирования:
    - do: >-
        Перейти на страницу бронирования для любого отеля для одного гостя по
        инструкции из подготовки
    - assert: >-
        * Откроется страница бронирования

        * Поля имени и фамилии не заполнены

        * Поля почты и номера телефона заполнены и соответствуют данным из
        аккаунта, под которым был вход (если в учетке не привязан телефон, то
        поле не заполнится, у учетки vladlen нет привязки)
    - do: >-
        Выйти из аккаунта (в правом верхнем углу), страницу бронирования при
        этом не покидать
    - assert: |-
        * Страница обновилась
        * Почта и телефон очистились
    - do: |-
        Ввести в поле почты noemail@yandex.ru
        Залогиниться (перебросит на страницу входа в паспорт)
    - assert: |-
        * После входа в аккаунт автоматически загрузилась страница бронирования
        * Поле номера телефона пустое
        * В поле почты подставилась почта из паспорта: vladlen@yandex.ru
    - do: |-
        Стереть все из поля почты
        Убрать фокус с полей почты и телефона
        Обновить страницу
    - assert: >-
        - Поля почты и номера телефона заполнены и соответствуют данным из
        аккаунта, под которым был вход (если в учетке не привязан телефон, то
        поле не заполнится, у учетки vladlen нет привязки)

manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
tlds: ru
Сервис:
  - Записная книжка
  - Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: iliasova
feature: Отели
type: Happy page
description: >-
  Внешний вид для Десктопа и Тача могут немного отличаться, но функциональность
  от этого не зависит.

  1. Перейти на вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. В фильтре партнеров на поиске выбрать Expedia.

  3. Кликнуть по карточке любого отеля -> произойдет переход на страницу отеля.

  4. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Асессорам - При переходе из письма на страницу заказа необходимо заменить url на travel.crowdtest.yandex.ru


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Получение ваучера на почту:
    - do: >-
        * Перейти на страницу бронирования для любого отеля для одного гостя по
        инструкции из подготовки

        * Ввести валидные данные в поля фамилии, имени и номера телефона
        (последнее может не потребоваться, если пользователь залогинен)

        * Указать свой действующий адрес на yandex-team в поле почты (письма на
        другие учетки приходить не будут)

        * Оплатить заказ
    - assert: >-
        * При успешной оплате открылась success страница - хэппи пейдж

        * Под информацией о бронировании отображается тот же мейл, который был указан при
        бронировании

        * Рядом с мейлом есть информация о том, что по этому адресу отправлено
        подтверждение бронирования
    - do: 'Проверить почту, на которую должно прийти подтверждение'
    - assert: |-
        * Письмо с информацией о брони пришло
        * Адресант - Команда Яндекс.Путешествий
        * Есть вложение - ваучер
        * Название файла содержит номер заказа
        * В письме содержится следующая информация
            * номер брони
            * название отеля
            * тип номера
            * даты заезда и выезда
            * гости
            * итоговая стоимость брони
            * ссылка на страницу заказа
            * ссылка на помощь
            * номер телефона тех поддержки
        * Все данные совпадают с данными на странице бронирования
    - do: Кликнуть по ссылке страницы заказа
    - assert: |-
        * Открылась страница бронирования
        * Все данные на странице совпадают с данными при бронировании
    - do: |-
        Вернуться к письму
        Кликнуть по ссылке помощи
    - assert: '* Открылась страница сервиса в Яндекс Помощи'
    - do: |-
        Вернуться к письму
        Открыть ваучер во вложении
    - assert: |-
        * Данные в документе соответствуют данным со страницы заказа
        * Формат документа pdf
    - do: |-
        В письме скопировать ссылку с кнопки страницы заказа
        Открыть ссылку со страницей заказа в окне инкогнито
    - assert: '- открывается страница с просьбой ввести номер телефона или залогиниться'
    - do: |-
        Ввести номер телефона или емейл, который указывали при создании заказа
        Нажать кнопку Посмотреть заказ
    - assert: '- открылась страница заказа'
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Happy page
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag:
  - orkestrator
  - Smoke
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  Получение письма об отмене на почту:
    - do: |-
        Совершить бронирование отеля, указать действующий мейл
        После оплаты отменить бронь
    - assert: >-
        * Открылась страница отмены

        * В верху страницы есть информация о том, что письмо с отменой
        отправлено на почту

        * Далее указана почта, соответствующая почте, указанной при бронировании
    - do: Проверить почту с п.1
    - assert: |-
        На почте есть письмо об отмене бронирования с информацией:

        * Номер брони
        * Сумма возврата
        * Название гостиницы
        * Тип номера
        * Дата заезда и выезда
        * Имена гостей
        * Ссылка на страницу Помощи и телефон поддержки
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)

  Для попадания на продовую страницу бронирований нужно сделать запрос в поиске
  Яндекса, например "отель в Москве", далее выбрать отель и кликнуть по
  предложению от Яндекс.Путешествий.
specs:
  Общий вид хедера страницы бронирования отеля:
    - do: >-
        Перейти на страницу бронирований любого отеля по инструкции из
        подготовки
    - assert: >-
        * Открылась страница бронирования отеля

        * Вверху отобразилось меню портала

        * Вкладка отелей выделена

        * В правом углу на том же уровне есть кнопка авторизации и доступа к
        заказам

        https://jing.yandex-team.ru/files/iliasova/2019-06-18_11.23.26.png

        * Ниже блок с информацией о Яндекс Путешествиях с указанием преимуществ
        сервиса. В правом верхнем углу есть крестик для скрытия блока

        https://jing.yandex-team.ru/files/iliasova/2019-06-18_11.25.07.png

        * Еще ниже отображены хлебные крошки
            * Бронирование отеля
            * Оплата
        * Вкладка бронирования выделена

        * Справа на том же уровне отображен номер телефона техподдержки (пока
        только десктоп)

        https://jing.yandex-team.ru/files/iliasova/2019-10-02_18.48.05-5n7hz.png
    - do: Кликнуть по крестику возле описания сервиса Яндекс Путешествий
    - assert: |-
        * Блок с описанием пропал
        * После меню отображаются сразу хлебные крошки
        https://jing.yandex-team.ru/files/iliasova/2019-10-02_18.50.01-tnm8o.png
manual: true
Функциональность: Бронирование отелей
Устройство:
  - Десктоп
  - Тач
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для прохождения кейса нужно быть незалогиненным.

  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Наличие меню портала и футера на основных страницах отелей:
    - do: >-
        Перейти на страницу бронирования для любого отеля для одного гостя по
        инструкции из подготовки
    - assert: >-
        * На странице отображается меню портала

        * Есть кликабельное название Яндекс Путешествия

        * Вкладка отелей выделена черным цветом

        * Остальные вкладки доступны, названия выделены серым цветом

        * Справа на уровне меню отображаются кнопки аккаунта и работы с заказами

        https://jing.yandex-team.ru/files/iliasova/2019-06-18_11.23.26.png

        * В самом низу страницы отображается футер, который состоит из ссылок
             *   Пользовательское соглашение
             *   Условия бронирования отелей
             *   Помощь
             *   Обратная связь
        * На том же уровне в самом правом углу отображается копирайт с
        кликабельной ссылкой Яндекс

        https://jing.yandex-team.ru/files/iliasova/2019-06-18_11.54.26.png
    - do: Кликнуть по названию Яндекс в хедере
    - assert: '* Произошел переход на поисковик Яндекса'
    - do: |-
        Вернуться назад
        Кликнуть по названию Путешествия в хедере
    - assert: |-
        * Произошел переход на главную страницу портала
        * Открыта вкладка Отели
    - do: |-
        Вернуться назад
        Кликнуть по влкадке Авиабилеты
    - assert: |-
        - Произошел переход на главную страницу портала
        - Открыта вкладка Авиа
    - do: |-
        Вернуться назад
        Кликнуть по влкадке Ж/д билеты
    - assert: |-
        * Произошел переход на главную страницу портала
        * Открыт поиск по ж/д
    - do: |-
        Вернуться назад
        Кликнуть по влкадке Автобусы
    - assert: |-
        - Произошел переход на главную страницу портала
        - Открыта вкладка Автобусы
    - do: |-
        Вернуться назад
        Кликнуть по кнопке заказов
    - assert: '* Произошел переход на страницу с поиском заказа'
    - do: |-
        Вернуться назад
        Кликнуть по кнопке "Войти"
    - assert: '* Открылась страница паспорта'
    - do: Залогиниться в паспорте
    - assert: |-
        * Произошел переход на предыдущую страницу в тревеле
        * Значок "Войти" сменился на значок авы
    - do: Кликнуть по значку заказов
    - assert: '* Произошел переход в ЛК раздел билетов и бронирований'
    - do: |-
        Вернуться назад
        Кликнуть по значку аккаунта
    - assert: '* Открылся попап для управления аккаунтом'
    - do: Кликнуть вне попапа
    - assert: '* Попап закрылся'
    - do: |-
        Снова кликнуть по попапу
        Выйти из аккаунта
    - assert: |-
        * Страница обновилась
        * Все введенные данные остались теми же
        Значок авы сменился на значок "Войти"
    - do: Кликнуть по значку "Войти"
    - assert: '* Открылась страница паспорта'
    - do: |-
        Вернуться назад
        В футере кликнуть по ссылке "Пользовательское соглашение"
    - assert: >-
        * В отдельном окне открылась страница с условиями использования сервиса
        Яндекс Путешествия

        https://yandex.ru/legal/travel_termsofuse
    - do: |-
        Вернуться к странице в тревеле
        В футере кликнуть по ссылке "Помощь"
    - assert: |-
        * В отдельном окне открылась страница с информацией о сервисе
        https://yandex.ru/support/travel
    - do: |-
        Вернуться к странице в тревеле
        В футере кликнуть по ссылке "Обратная связь"
    - assert: |-
        * В отдельном окне открылась страница обратной связи
        https://yandex.ru/support/travel/troubleshooting.html
    - do: |-
        Вернуться к странице в тревеле
        В футере кликнуть по ссылке “Яндекс”
    - assert: '* Произошел переход на поиск Яндекса'
    - do: |-
        Вернуться к странице в тревеле
        В футере кликнуть по ссылке “Условия бронирования отелей”
    - assert: |-
        * В отдельном окне открылась страница с условиями бронирования отелей
        https://yandex.ru/legal/hotels_booking_conditions/
    - do: |-
        Повторить пункты 1-6, 15-19 для страниц
            * Поиска отелей
            * Отеля
            * Заказа после оплаты - **Не для асессоров**
            * Отмены бронирования - **Не для асессоров**
    - assert: '* Результат аналогичен описанным в соответствующих пунктах'
manual: true
Функциональность: Бронирование
Устройство: Десктоп
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: iliasova
feature: Отели
type: Бронирование
description: >-
  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Валидация полей ввода имени и фамилии на странице бронирования отеля (позитивный кейс):
    - do: >-
        Перейти на страницу бронирования отелей по инструкции из подготовки для
        1 взрослого пассажира

        В блоке гостей заполнить поле имени латиницей (минимум 1 символ).
        Например, Fedor

        Перейти к полю фамилии и ввести туда латиницу  (минимум 1 символ).
        Например, Ivanov

        Заполнить телефон значением 89111111111

        Почту указать любую валидную

        Нажать на кнопку "Оплатить"
    - assert: >-
        * Произошел переход на следующую страницу - оплата либо страница
        неуспешной брони.
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: automation (iliasova)
Автор: iliasova
feature: Отели
type: Бронирование
description: >-
  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. Кликнуть по карточке отеля, у которого будет оффер Яндекс Путешествий
  (внизу карточки, либо возле цены) -> произойдет переход на страницу отеля в
  портале.

  3. Нажать по предложению Яндекс.Путешествий - произойдет переход на страницу
  бронирования с формой ввода данных гостей.

  Важно, чтобы у предложений была пометка [T!]. Если ее нет, значит что-то пошло
  не так и вы на проде - продолжать шаги в этом случае не нужно!


  Карта для тестовой оплаты тестовой брони (не для асессоров): 5100002767155462

  Месяц и год: 12/22

  CVV: 454
specs:
  Валидация полей контактов на странице бронирования отелей (позитивный кейс):
    - do: >-
        Перейти на страницу бронирования для любого отеля для одного гостя по
        инструкции из подготовки

        Заполнить поля имени и фамилии валидными данными

        Ввести в поле почты существующий email (например, test@mail.ru)

        Ввести в поле телефона 89111111111

        Кликнуть по кнопке Оплатить
    - assert: '* Произошел переход на страницу оплаты'
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Бронирование
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: automation (iliasova)
Автор: iliasova
feature: Отели
type: ''
description: >-
  Цель данного кейса - проверить отображение информации об отмене со штрафом и
  совпадение ее на всех шагах, где данная инфа отображается.

  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  Бронирование отеля с наличием отмены по штрафу:
    - do: >-
        Перейти на страницу бронирования для любого отеля для одного гостя на
        несколько ночей в будущие даты (>3) по инструкции из подготовки. Условия
        для поиска выдачи с платной отменой брони: дата заезда через неделю,
        более 3-х ночей.

        На странице бронирования в блоке описания номера кликнуть по ? возле
        инфе об отмене
    - assert: >-
        * Открылся попап с информацией по отмене

        * Есть инфа
              *  до какой даты и времени можно бесплатно отменить бронь
              *  период дат и времени, в который отмена будет со штрафом (с указанием суммы штрафа)
        ! если инфы о штрафах нет, нужно поискать другое предложение,
        попробовать увеличить кол-во ночей и отодвинуть дату отъезда
               * с какой даты и времени стоимость не возвращается
        ![image](https://jing.yandex-team.ru/files/iliasova/2019-06-19_11.37.57.png)
    - do: В корзинке со стоимостью кликнуть на ? возле инфы о бесплатной отмене
    - assert: 'Результат аналогичен предыдущему, все данные совпадают'
    - do: |-
        Заполнить данные по гостям, контакты
        Оплатить бронирование
    - assert: >-
        * Открылась страница отельного заказа

        * Справа от информации о гостях и датах заезда/выезда есть блок с
        информацией об отменах

        https://jing.yandex-team.ru/files/iliasova/2019-06-19_12.04.15.png

        * Все данные в блоке совпадают с данными на шаге бронирования
    - do: В блоке с детализацией стоимости кликнуть по ? возле инфы об отмене
    - assert: |-
        * Открылся попап с информацией об отмене
        * Внешний вид попапа и данные такие же, как на странице бронирования
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: orkestrator
Автор: iliasova
feature: Отели
type: ''
description: >-
  Для попадания на тестовую страницу бронирования отелей см.
  [travel-644](https://testpalm.yandex-team.ru/testcase/travel-644)
specs:
  Отсутствие возможности отменить невозвратную бронь:
    - do: >-
        Перейти на страницу бронирования для любого отеля, у которого нет
        бесплатной отмены и отмены со штрафом по инструкции из подготовки

        Оплатить бронь
    - assert: |-
        * Открылась страница отельного заказа
        * Вверху страницы есть кнопка "Отменить бронирование"
        * Цвет кнопки серый
        * Кнопка не активна
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Автор: iliasova
feature: Авиа
type: ''
description: >-
  Как попасть на страницу бронирования аэрофлота:


  **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.**


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **Асессорам заменить в урле travel-test на travel.crowdtest** - должна
  открыться страница бронирования с формой ввода данных пассажиров



  Отсутствие лого АК не является багом или проблемой кейса!

  Логика отображение попапа:

  Если пользователь  находится на странице больше 20 минут, показываем попап.
specs:
  Проверка чёрного пирога:
    - do: Перейти на страницу бронирование как описано в Description
    - do: >-
        Указать  параметр testOutdateTimeout в query-параметры урла, в котором
        указать таймаут появления попапа в миллисекундах и перезагрузить
        страницу (например, так - добавить к урлу: &testOutdateTimeout=3000)
    - do: Спустя указанное время появился попап
    - assert: >-
        -Заголовок: "Время на бронирование истекло"

        -Текст: "С момента поиска прошло много времени. Возможно, цены на билеты
        уже изменились. Чтобы увидеть актуальные данные, повторите поиск."

        -В сером блоке информация о перелёте

        -Кнопки:
          "Продолжить бронирование" - возвращает на экран бронирования
          "Повторить поиск" - возвращает на выдачу
        https://jing.yandex-team.ru/files/iliasova/2020-11-19_00.04.08-ppaod.png
manual: true
Функциональность:
  - Бронирование
  - Пирог
Устройство:
  - Десктоп
  - Тач
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Отели
type: Выдача
description: 'Эпик https://st.yandex-team.ru/TRAVELFRONT-169'
specs:
  Общий вид страницы поиска отелей:
    - do: >-
        Перейти на страницу поиска отелей на одного взрослого и одного ребенка 3
        года, с любой датой заезда и выездом через 2 ночи  в городе Екатеринбург
    - assert: >-
        - Произошел переход на страницу поиска отелей

        - Вместо результатов выдачи,  карты,  области фильтров поначалу
        отображаются скелетоны

        - Через какое то время (до 10 секунд как правило)  скелетоны пропадают

        https://jing.yandex-team.ru/files/ivalor/2022-02-11T09%3A11%3A07Z.2d9ba1f.png

        - Название города, даты и кол-во гостей совпадают с выбранными на 1м
        шаге

        - в урле есть параметры adults, childrenAges,  checkinDate,
        checkoutDate,  bbox, geoid, navigationToken

        - значение adults=1

        - childrenAges=3

        - checkinDate и checkoutDate соответствуют датам,  выбранным на первом
        шаге

        - geoid=54

        - Справа находится карта Екатеринбурга, отображены пины с ценами, выше
        кнопка Развернуть карту

        - Слева отображены предложения отелей,  при общем количестве отелей >25 - 25 карточек, при меньшем - сколько найдено

        - На карточке указано "цена за 2 ночи"

        - Внизу страницы есть кнопки Назад и Далее. По-умолчанию кнопка Назад
        задизейблена, кнопка Далее кликабельна, если в заголовке возле дат
        количество отелей больше 10
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag:
  - hotels-api
  - Blocker
Автор: iliasova
feature: Отели
type: Выдача
description: ''
specs:
  Общий вид карточек отеля на странице поиска:
    - do: Перейти на страницу поиска отелей с любым кол-вом гостей, городом (миллионником), датами заезда и выезда.
    - assert: >-
        - Открылась страница поиска отелей

        - На странице отображены карточки отелей

        - Каждая карточка состоит из
               - фото отеля_ (по высоте совпадает с высотой карточки) и является каруселью - при наведении курсора появляются стрелки для скролла фоток
               - название отеля (опционально входит звездность)
               - кнопка добавления в избранное (кнопка в форме сердечка)
               - рейтинг
               - кол-во отзывов
               - местность (у моря/рядом с парком/рядом с центром/рядом с аэропортом) - может отсутствовать
               - тип размещения (гостиница/хостел)
               - популярные услуги
               - самая выгодная (дешевая) цена размещается крупным планом
               - есть указание кол-ва ночей
               - информация о бесплатной отмене и завтраке (если их нет у отеля, ничего не отображается)
               - кнопка "Выбрать"
        ![image](https://jing.yandex-team.ru/files/gouken67/travel_658.png)


        - Курсивом выделена информация, которая может отсутствовать со стороны
        партнера, но это скорее исключение, чем правило
    - do: |-
        Кликнуть по очереди по элементам на карточке
        - фотография
        - название отеля
        - количество отзывов
        - кнопка добавления в избранное
        - пустое пространство, услуги и другие некликабельные слова
    - assert: >-
        Клик по

        - фото - открывается страница отеля; если кликаем по стрелочкам -
        происходит пролистывание фото в галерее

        - название отеля - переход на страницу отеля, таб Главная

        - количеству отзывов - переход на страницу отеля, таб Отзывы
        
        - кнопке добавления в избранное - кнопка закрашивается в красный цвет, внизу экрана всплывает уведомление "Отель добавлен в Избранное"

        - пустое пространство, услуги и другие слова - переход на страницу отеля
    - do: |-
        Вернуться на страницу выдачи
        Кликнуть по кнопке "Выбрать"
    - assert: Произошел переход на страницу отеля на таб Главная в новой вкладке
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Автор: iliasova
feature: Отели
type: Выдача
description: ''
specs:
  Соответствие данных запроса и выдачи на странице поиска отелей:
    - do: >-
        С главной портала перейти на страницу поиска отелей с указанными
        параметрами:

        - 2 гостя

        - дата заезда - завтрашний день

        - дата выезда - через 2 дня после заезда (чтобы получить 2 ночи)

        - Екатеринбург (geoid=54)
    - assert: >-
        Откроется страница поиска отелей

        - На каждой карточке указано "цена за 2 ночи"

        - В каждой карточке есть выгодная цена (минимальная), а справа кнопка
        Выбрать

        https://jing.yandex-team.ru/files/papulova/zlBK8GTxnr.png
    - do: Активировать фильтр Оплата на Я.Путешествиях
    - assert: Выдача прогрузилась заново
    - do: Нажать на пустое белое поле в карточке любого отеля
    - assert: >-
        В новой вкладке открылась страница отеля на табе Главная

        - Название отеля и его адрес

        - Справа от фотографий указан диапазон цен

        - Ниже на странице есть блок с датами заезда-выезда, количеством гостей
        и предложениями от Яндекс.Путешествий

        - Количество гостей, даты заезда-выезда, отель совпадают с данными из
        предыдущих шагов


        https://jing.yandex-team.ru/files/gouken67/travel_659_2.png
    - do: >-
        Вернуться на главную портала, поменять даты заезда-выезда и количество
        гостей и повторить пункты 1-2
    - assert: >-
        Ожидаемый результат совпадает с результатами п.1-2 (кроме количества
        ночей и города)
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag:
  - hotels-api
  - Smoke
Автор: iliasova
feature: Отели
type: Выдача
description: ''
specs:
  Функциональность карты на странице поиска отелей:
    - do: >-
        Перейти на страницу поиска отелей с любым кол-вом гостей, городом
        местоположения, датами заезда и выезда.
    - assert: >-
        * Открылась страница поиска отелей

        * Справа на странице по высоте отображена карта с пинами

        * В правом верхнем углу карты есть кнопки зума и определения локации

        * Слева над картой есть кнопка "Развернуть карту"

        * В правом нижнем углу карты включен чекбокс “Искать при изменении
        карты”

        https://jing.yandex-team.ru/files/rifat-k/2019-12-19_16-43-39.png
    - do: Кликнуть на карте по кнопке "+"
    - assert: >-
        * Размеры карты остались теми же

        * Увеличился масштаб ранее отображенной области

        * В правом нижнем углу карты осталась галочка “Искать при изменении
        карты”
    - do: Увеличить до максимума зум на карте через колесико мыши или тачпад
    - assert: |-
        * Размеры карты остались теми же
        * Максимально увеличился масштаб ранее отображенной области
        * Кнопка "+" неактивна
    - do: Кликнуть на карте  по кнопке "-"
    - assert: |-
        * Размеры карты остались теми же
        * Уменьшился масштаб ранее отображенной области
        * Кнопки "+", "-" активны
    - do: Уменьшить до минимума зум на карте через колесико мыши или тачпад
    - assert: >-
        * Размеры карты остались теми же

        * Карта отображена в разрезе городов, один из которых является городом
        местоположения

        * Кнопка “-” неактивна
    - do: >-
        Кликнуть по значку локации на карте (если браузер попросит доступ к
        местоположению, согласиться)
    - assert: >-
        * Масштаб карты увеличился

        * На карте отобразилось верное местоположение (при использовании VPN или
        особенностей подключения к интернету местоположение может не совпадать с
        фактическим)

        * Локация обозначена значком "Я"
    - do: На карте снять галочку "Искать при изменении карты”
    - assert: |-
        - Галочка снялась
        - На карте ничего не изменилось
    - do: Промотать в любую сторону содержимое карты
    - assert: >-
        - Карта не изменилась в размерах

        - Содержимое карты сместилось

        - Новые пины не появились

        - Галочка "Искать при изменении карты” изменилась на кнопку "Искать в
        этом регионе"
    - do: На карте нажать на кнопку "Искать в этом районе"
    - assert: >-
        - Кнопка "Искать в этом районе" сменилась на _отжатую_ галочку “Искать
        при изменении карты”

        - На карте появились синие пины отелей с ценами
    - do: Вновь переместить карту в любую сторону
    - assert: Как и на шаге 8
    - do: >-
        Нажать на кнопку ”Искать в этом регионе", а затем поставить галочку в
        чекбоксе “Искать при изменении карты”
    - assert: |-
        - галочка в чекбоксе нажата
        - на карте прогрузились пины
    - do: Переместить карту в любую сторону
    - assert: >-
        - Содержимое карты изменилось

        - На карте несколько секунд нет пинов

        - На карте могут мерцать синие точки, которые в последствии превращаются
        в пины

        - На карте могут остаться синие точки (это нормально)


        https://jing.yandex-team.ru/files/rifat-k/3VTMA1NIrK.mp4
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Автор: iliasova
feature: Отели
type: Выдача
description: ''
specs:
  Взаимосвязь карты и карточек с предложениями на странице поиска отелей:
    - do: >-
        Перейти на страницу поиска отелей в Екатеринбурге, любыми датами
        заезда-выезда и любым количеством гостей
    - assert: |-
        * Открылась страница поиска отелей.
        * В выдаче отображены карточки отелей, 10 карточек
        * Под последней карточкой отеля есть кнопки "Назад" и "Далее"
        * Справа от карточек отображена карта
        * Над картой есть кнопка Развернуть карту
        * На карте есть пины с ценами
        * По-умолчанию пины синего цвета
        * В правом нижнем углу карты стоит галочка “Искать при изменении карты”
    - do: Навести курсор на любой пин на карте
    - assert: >-
        * Появился указатель-рука

        * Пин стал желтого цвета

        * Вверху над пином появилась карточка отеля

        * Карточка отеля содержит название отеля, (далее указаны параметры,
        которые могут отсутствовать) фото, рейтинг, тип размещения, кол-во
        отзывов

        * Соответствующая названию отеля карточка выделилась желтой обводкой
        (если она уместилась слева от карты)

        * Цены на пине и на выделенной карточке совпадают
    - do: 'Убрать курсор с пина, но остаться в области карты'
    - assert: >-
        * Иконка указателя сменилась:

        ![image](https://cdn1.iconfinder.com/data/icons/gesture-21/384/Fist_and_thumb-128.png)

        * Все пины синего цвета

        * Информация об отеле на карте исчезла

        * Обводка на карточке отсутствует
    - do: Навести курсор на карточку из выдачи с предыдущего шага
    - assert: >-
        * Карточка обведена желтой рамкой

        * На карте желтым стал соответствующий отелю пин и появилась информация
        о названии отеля

        * Цена и название отеля на карточке и пине совпадают

        * При наведении на разные карточки отелей карта остается на месте,
        подсвечиваются разные пины и содержимое карты не скроллится
    - do: >-
        Поводить курсором по всей области карточки (включая области ближе к
        границам)
    - assert: 'Результат такой же, как и на шаге 4.'
    - do: Перейти на следующую страницу по кнопке "Далее" внизу страницы
    - assert: >-
        * Вместо карточек отелей появился скелетон загрузки

        * Во время загрузки карточек карта остается на месте, все пины синего
        цвета

        * Спустя несколько секунд (не больше 30) на странице отобразился новый
        перечень карточек

        * Все отели на карточках не совпадают с отелями из предыдущей выдачи

        * Цены на пинах соответствуют ценам на карточках
    - do: Вновь навести на любую карточку
    - assert: Результат как и в шаге 4
    - do: >-
        Навести курсор на карту, зажать левую клавишу мыши (или соответствующую
        кнопку на трекпаде ноутбука) и потянуть карту в любую сторону так, чтобы
        из вида исчезли соответствующие пины
    - assert: >-
        * При перемещении курсор руки менялся на кулачок (должна быть видна
        анимация)

        * Пока происходит движение курсора на карте нет новых пинов и карточки
        слева не меняются

        * При остановке пролистывания карты происходит обновление пинов и
        карточек слева (через скелетоны)

        * В правом нижнем углу карты стоит галочка "Искать при изменении карты"
    - do: >-
        Снять галочку на карте “Искать при изменении карты” и проскролить карту
        в любом направлении, что бы на карте не было никаких пинов
    - assert: >-
        - Галочка “Искать при изменении карты” изменилась на кнопку "Искать в
        этом районе"

        - Карта проскролилась

        - На карте после скролла не появились пины

        - Карточки отелей слева не изменились и новые результаты не добавились
    - do: >-
        Нажать на кнопку "Искать в этом регионе"

        Если на карте не появились пины и вместо карточек надпись "Нет отелей
        подходящих под ваши пожелания", то необходимо еще сдвинуть карту и вновь
        нажать на кнопку "Искать в этом регионе"

        https://jing.yandex-team.ru/files/rifat-k/2019-12-19_14-16-17.png
    - assert: >-
        - Карта осталась на прежнем месте

        - На карте постепенно появились новые пины (возможно появление синих
        точек, без цен)

        - Слева, пока прогружались пины, вместо карточек появились скелетоны

        - Галочка в чекбоксе "Искать в этом регионе" не установилась
    - do: |-
        Вновь поставить галочку на карте “Искать при изменении карты”
        Нажать на кнопку "Развернуть карту" над картой
    - assert: |-
        - Чекбокс “Искать при изменении карты” остался активированным
        - Развернулась карта, список отелей исчез
        - На карте остались те же пины, что и до разворота
    - do: >-
        Проскролить карту в любом направлении (на 1 экран) и быстро нажать на
        кнопку Свернуть карту
    - assert: >-
        - Пока не прогрузились варианты отелей, на месте карточек отображаются
        скелетоны

        - На карте постепенно появляются пины

        - После прогрузки появляются карточки отелей, отличающиеся от предыдущей
        выдачи

        - При наведении курсора на карточку отеля загорается соответствующий пин
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag: hotels-api
Автор: iliasova
feature: ЖД
type: Выбор мест
description: >-
  Нужна правка или удаление кейса после выкатки
  https://st.yandex-team.ru/TRAINS-1796

  Пока только для прода.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Страница выбора мест для Стрижей':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - assert: '* На выдаче есть сниппет со Стрижем'
    - do: >-
        Для сниппета со Стрижем кликнуть по кнопке покупки (кнопка может
        называться по-разному, сейчас называется "Выбрать место")
    - assert: |-
        * Осуществился переход на страницу выбора мест
        * Есть типы вагона: Сидячие и СВ
    - do: Прокликать все вагоны по типам
    - assert: >-
        * Ни для СВ, ни для Сидячих вагонов нет 1 и 2 вагонов
        * Для Сидячей категории мест: обычные и у стола, для СВ - верхние и
        нижние

manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Подсказки при неизвестном пункте отправления/прибытия':
    - do: >-
        В поле "Откуда" написать Альба-Лонга, в поле "Куда" - Брундизий и
        кликнуть кнопку "Найти"
    - assert: |-
        * Перехода на выдачу не происходит
        * Первое поле подсвечивается черным
        * Для первого поля есть подсказка "Неизвестный пункт отправления"
    - do: |-
        Ввести в первое поле Москву
        Кликнуть Найти
    - assert: |-
        * Перехода на выдачу не происходит
        * Второе поле подсвечивается черным
        * Для второго поля есть подсказка “Неизвестный пункт прибытия”
    - do: |-
        Перейти на выдачу Москва - Екатеринбург
        Повторить шаги 1-2 для формы на выдаче
    - assert: '* Подсказки совпадают'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Кнопка "Поменять местами" в форме поиска':
    - do: >-
        Открыть главную страницу (город в тюне https://yandex.ru/tune/ -
        Москва), вкладка ЖД
    - assert: '* В поле "Откуда" - Москва'
    - do: В поле "Куда"  ввести Санкт-Петербург
    - do: >-
        Кликнуть по кнопке "Поменять местами":
        ![image](https://jing.yandex-team.ru/files/tyrande/Ekaterinburg._Raspisanie_samolyotov_poezdov_elektrichek_i_avtobusov_2016-11-11_16-28-44.jpg)
    - assert: |-
        Значения в полях "Откуда" и "Куда" поменялись местами:

        - В поле "Откуда" - Санкт-Петербург
        - В поле "Куда" - Москва
    - do: Кликнуть "Найти"
    - assert: >-
        - Открылась выдача Санкт-Петербург - Москва

        - В форме поиска в поле "Откуда" - Санкт-Петербург, в поле "Куда" -
        Москва
    - do: Кликнуть по форме поиска
    - assert: '- Форма поиска развернулась'
    - do: Кликнуть по кнопке "Поменять местами"
    - assert: |-
        Значения в полях "Откуда" и "Куда" поменялись местами:

        * В поле "Откуда" - Москва
        * В поле "Куда" - Санкт-Петербург
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Подсказки при одинаковых пунктах прибытия/отправления':
    - do: 'Открыть главную страницу, вкладку ж/д билеты'
    - do: В поле "Откуда" и "Куда" написать Москва
    - do: Кликнуть кнопку "Найти"
    - assert: >-
        * Поиск не выполнился

        * Второе поле обведено серым

        * Для второго поля есть попап "Станции отправления и прибытия не должны
        совпадать"

        * Для второго поля раскрылись саджесты
    - do: |-
        Перейти на выдаче Москва - Екатеринбург
        Повторить шаги 2-3 для формы на выдаче
    - assert: '* ОР совпадает'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Tag:
  - Arсhived
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Форма поиска на выдаче':
    - do: |
        Открыть выдачу Москва - Санкт-Петербург на завтра
    - assert: |
        * На выдаче сверху есть свернутая форма поиска в формате "Откуда-Куда-Туда-Обратно"
        * Заполнено соответствующим образом: "Откуда" - Москва, "Куда" - Санкт-Петербург,
        "Туда" - дата завтрашнего дня, "Обратно" - ничего не заполнено.
        (иногда, если названия городов слишком большие форма обрезается многоточием,
        если не выбрали дату обратно, ее тоже не показываем)
        * Саджесты не выпали, календарь свёрнут
        ![image](https://jing.yandex-team.ru/files/arhey/2022-02-10T12:03:29Z.1f51a16.png)
    - do: Кликнуть по свернутой форме вверху страницы
    - assert: |
        * Форма поиска развернулась
        * Форма поиска состоит из полей "Откуда", "Куда", "Туда", "Обратно" и кнопки "Поменять местами", кнопки "Найти"
        * В поле "Откуда" -  Москва, в поле "Куда" - Санкт-Петербург,
        в поле "Туда" - дата завтрашнего дня, в поле "Обратно - текст "Не нужен"
        * Саджесты и календарь свернуты
    - do: Кликнуть по любой области на выдаче
    - assert: |
        * Форма поиска сворачивается
        * Переход на другую страницу не производится
        * Компановка формы идентична компановке после первого шага
    - do: |
        Кликнуть по свернутой форме
        В форме кликнуть по крестику для поля Откуда
    - assert: |
        * Поле очистилось
        * Развернулись саджесты для поля Откуда
    - do: Выбрать в саджестах Москва
    - assert: Саджесты свернулись
    - do: Кликнуть Найти
    - assert: |
        * Форма свернулась
        * В “Откуда” - Москва, в “Куда” - Санкт-Петербург, в “Туда” - дата завтрашнего дня
        * Открылась выдача Москва - Санкт-Петербург на завтра
    - do: Кликнуть по форме поиска
    - assert: |
        * Форма развернулась
        * В поле “Откуда” - Москва, в поле “Куда” - Санкт-Петербург, в поле
        “Туда” - дата завтрашнего дня
    - do: Проскроллить страницу вниз до конца (колесом мыши или тачпадом)
    - assert: Форма свернулась
    - do: |
        Раскрыть форму
        Медленно проскроллить страницу вверх
    - assert: |
        * Форма не сворачивается
        * Форма свернулась, когда дошли до самого верха страницы
    - do: |
        Раскрыть форму
        Кликнуть по полю с датой
    - assert: Раскрылся календарь
    - do: Проскроллить страницу до конца вниз
    - assert: |
        * Форма и календарь остаются раскрытыми
        * Календарь прибит к форме и не съезжает при скролле

manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: arhey
feature: ЖД
type: Выдача
description: >-
  Сортировка по времени отправления выглядит так:


  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.07.36-29trj.png)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Сортировки по времени отправления':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - assert: >-
        * По умолчанию на выдаче сортировка по времени отправления - сначала
        ранние: чем раньше отправляется рейс, тем выше он в выдаче
    - do: Кликнуть по сортировке "по времени отправления"
    - assert: >-
        - Поменялся порядок сортировки - чем позднее рейс, тем выше он
        отображается в выдаче
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Назначение: отфильтровать сниппеты, которые соответствуют признаку скоростной
  поезд.


  Принцип работы:

  * Чекбокс с названием скоростного поезда.

  * После активации фильтра на выдаче остаются только соответствующие сниппеты.

  * При использовании меняется URL страницы.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Фильтр «Скоростные поезда» c одним скоростным поездом':
    - do: Открыть выдачу Санкт-Петербург - Петрозаводск на завтра
    - assert: >-
        - Есть фильтр «Скоростные поезда», чекбокс называется «Ласточка»

        ![](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.12.20-xz3ez.png)
    - do: Кликнуть по фильтру "Ласточка"
    - assert: |-
        - Изменился урл страницы
        - В чекбоксе проставилась галочка
        - Кнопка фильтра окрасилась в желтый цвет
        - Появилась кнопка "Сбросить фильтры"
        - На выдаче остались только «Ласточки»
    - do: Кликнуть по чекбоксу еще раз
    - assert: |-
        - Урл страницы вернулся в изначальное состояние
        - В чекбоксе нет галочки
        - Кнопка фильтра снова серая
        - Пропала кнопка "Сбросить фильтры"
        - Выдача вернулась в изначальное состояние (есть все сниппеты)
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Назначение: отфильтровать сниппеты, которые соответствуют признаку скоростной
  поезд.


  Принцип работы:

  * Чекбокс с названием скоростного поезда.

  * После активации фильтра на выдаче остаются только соответствующие сниппеты.

  * При использовании меняется URL страницы.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Фильтр «Скоростные поезда» с несколькими типами скоростных поездов':
    - do: Открыть выдачу Москва - Нижний Новгород на завтра
    - assert: |-
        - На выдаче сниппеты только поездами
        - Есть фильтр «Скоростные поезда»
    - do: |-
        Кликнуть по фильтру
        Выбрать Стриж
    - assert: |-
        * Изменился урл страницы
        * В чекбоксе проставилась галочка
        * Кнопка фильтра окрасилась в желтый
        * Появилась кнопка “Сбросить фильтры”
        * На выдаче остались только «Стрижи»
    - do: Выбрать фильтр Ласточка
    - assert: |-
        - Изменился урл страницы
        * В чекбоксе проставилась галочка
        - На выдаче остались только «Стрижи» и «Ласточки»
    - do: Снять выбор с обоих типов поездов
    - assert: |-
        - Урл страницы вернулся в первоначальное состояние
        - Галочки снялись
        - Кнопка фильтра снова серая
        - Исчезла кнопка "Сбросить фильтры"
        - Выдача вернулась в первоначальное состояние (есть все сниппеты)
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Должен показываться, если есть скоростные поезда.
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Условия показа фильтра «Скоростные поезда»':
    - do: Открыть выдачу Москва - Нижний Новгород на завтра
    - assert: '* Есть фильтр «Скоростные поезда»'
    - do: Открыть выдачу Москва - Саратов на завтра
    - assert: '* Нет фильтра «Скоростные поезда»'
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |
  Для прохождения кейса нужно, чтобы в поезде было доступно несколько классов.
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Сброс выбранных мест при переключении вагона':
    - do: Открыть выдачу Москва-Пермь на завтра
    - do: Для одного из сниппетов кликнуть по кнопке "Выбрать место"
    - assert: Осуществился переход на страницу выбора мест
    - do: Выбрать любой тип вагона
    - do: Выбрать любое место
    - do: Выбрать другой вагон в другом типе
    - do: Вернуться в вагон, в котором выбирали место
    - assert: Выбранных мест в вагоне нет

manual: true
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  При использовании фильтра для фильтрации выдачи по виду транспорта появляется
  кнопка "Сбросить фильтры". Выглядит так:

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.15.29-pfwmu.png)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Кнопка "Сбросить фильтры"':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - assert: |-
        * На странице есть фильтр "Скоростные поезда"
        * На выдаче отображаются рейсы и Сапсанами и с Невскими экспрессами
    - do: |-
        Раскрыть фильтр скоростных поездов
        Кликнуть на чекбокс Сапсан
    - assert: |-
        * В чекбоксе проставилась галочка
        * На странице появилась кнопка "Сбросить фильтры"
        * На выдаче отображаются рейсы только с Сапсанами
    - do: Кликнуть по кнопке "Сбросить фильтры"
    - assert: >-
        * Галочка из чекбокса пропала

        * Выборка вернулась в изначальное состояние: отображаются все типы
        поездов, не только Сапсаны

        * Кнопка "Сбросить фильтры" исчезла
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.17.19-4au3x.png
  Незалогин
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Общий вид выдачи в десктопе':
    - do: Открыть выдачу Москва - Екатеринбург через месяц
    - assert: >-
        * Сначала открывается страница со скелетонами - заглушками для всех
        элементов

        * Далее прогружаются элементы на странице

        * Вверху страницы в шапке есть логотипы Яндекса и Путешествий, ссылки на
        сервисы: Авиа, ЖД, Отели, Автобусы, краткая форма поиска, иконка ЛК и
        кнопка Войти

        * Активная ссылка (жд) выделена черным, остальные ссылки на сервисы
        серые

        * В форме поиска указано Москва - Екатеринбург, дата поиска
        (соответствует той, на какую искали), есть иконка “лупа” для запуска
        поиска

        * Над выдачей есть блок с фильтрами

        * Ниже есть заголовок "Купить билеты на поезд из Москвы в Екатеринбург
        от 827  ₽" (цена указана минимальная из всех цен на выдаче)

        * Ниже сортировки
    - do: Проскроллить страницу вниз
    - assert: >-
        * Страница скроллится плавно, без рывков

        * Если есть рейсы с отправлением в пределах 4 часов от даты поиска, они
        отображаются датой перехода суток:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.29.38-g8413.png)

        * Внизу под последним сниппетом есть блок с информацией: ссылка на рейсы
        обратно на ту же дату, текст “На этом направлении действует динамическое
        ценообразование. Стоимость билетов указана с учетом
        комиссии Яндекса. С использованием веб-системы «ИМ».”
        
        * Ниже есть блок с хлебными крошками “ЖД билеты - Купить билеты на
        поезда Москва — Екатеринбург - На [выбранная дата]”

        * Ниже есть футер со ссылками
    - do: 'Рассмотреть сниппет с несколькими типами вагонов (плацкарт, купе итд)'
    - assert: >-
        * На сниппете есть номер поезда, станции отправления/прибытия

        * Указан перевозчик (например, РЖД/ФПК)

        * Время отправления и прибытия

        * Время в пути

        * Варианты размещения, количество мест и их стоимость с припиской “от”
        (например, __плац 212 от 2329 р__)

        * Кнопка “Выбрать место” (может не быть для некоторых сниппетов) (также
        может быть кнопка "Купить на УФС" или текст __Места закончились__)

        * Название поезда, если есть (например фирменный “Тюмень”, двухэтажный и
        т.п.)

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.36.00-1c8i2.png)
    - do: Кликнуть по кнопке Выбрать место для любого сниппета
    - assert: '* Произошел переход на страницу выбора мест'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Blocker
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Сниппеты с пересадками на выдаче':
    - do: Открыть консоль браузера
    - do: >-
        Перейти на вкладку ЖД

        Открыть выдачу Москва - Тихвин на завтра с прописанным параметром для
        метрики ?_ym_debug=1 (если нет рейсов с пересадками, поискать на другую
        дату)
    - assert: |-
        * Открылась выдача
        * Есть сообщение: Найдены маршруты только с пересадками.
        * Верстка в сниппетах не едет
        * На выдаче все рейсы только с пересадками
        * Для каждого сниппета указан вокзал пересадки и время пересадки
        * В консоли есть событие в метрику: trains_transfers_shown
        * Сниппет выглядит так:
        ![](https://jing.yandex-team.ru/files/jjon89/2021-07-17_17-42-14.png)
    - do: >-
        Для одного из маршрутов посчитать время пересадки (время от прибытия на
        станцию пересадки до отбытия)
    - assert: '* Получившееся время совпадает со временем указанным между рейсами'
    - do: Кликнуть по ссылке Маршрут и цены
    - assert: >-
        - Развернулся маршрут с двумя сниппетами

        - Информация совпадает с общим сниппетом: время отправления/прибытия,
        время и город пересадки, смена вокзала если есть

        - Общая цена ОТ равна сумме минимальных цен за два сниппета:

        ![](https://jing.yandex-team.ru/files/jjon89/2021-07-17_18-37-40.png)
    - do: >-
        Открыть выдачу с пересадками, где не у всех рейсов есть кнопки покупки
        (можно поискать на направлениях: Серов - Ростов-на-Дону,  Пермь - Анапа
        на разные даты):

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.50.25-0y4e8.png)
    - assert: >-
        * В консоли есть событие в метрику searchTransfersWithoutPrice с
        параметром searchTransfersWithoutPricePercentage со значением, равным
        проценту сегментов без цен (то есть в примере на скрине это должно быть
        50, если совсем нет цен, должно быть 100).
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Поддержка правильной даты поиска для текстов _сегодня_, _завтра_ и других в
  Когда.

  Больше не должен выполняться кейс:
  https://st.yandex-team.ru/TRAVELFRONT-1691#5dad33758c700302d478062f

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Обновление даты поиска при оставлении браузера на сутки и более':
    - do: Открыть поиск Москва → Екатеринбург на завтра
    - assert: Открылась выдача на правильную дату
    - do: Установить дату в будущем в настройках устройства и обновить страницу
    - assert: 'Открылся поиск на завтрашнюю дату, относительно установленной даты'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  В выдачах для первого сниппета даты отправления/прибытия отображается всегда,
  для последующих сниппетов даты отображается тогда, когда происходит смена
  даты.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отображение даты в сниппетах':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - assert: >-
        * Для первого сниппета у времени есть подпись даты отправления и даты
        прибытия

        * В следующих сниппетах приписка даты у времени показывается только
        тогда, когда происходит смена даты или когда дата у времени в предыдущем
        сниппете отличается от текущей
    - do: Сделать сортировку выдачи по цене
    - assert: >-
        * Для первого сниппета у времени есть подпись даты отправления и
        прибытия

        * Для последующих сниппетов приписка даты у времени показывается только
        тогда, когда происходит смена даты или когда дата у времени в предыдущем
        сниппете отличается от текущей
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Фирменные и именные поезда в поиске и на странице выбора мест':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - assert: |-
        * На выдаче есть сниппеты с оранжевой припиской фирменный «Арктика»
        * На выдаче есть сниппеты с оранжевой припиской "Сапсан"
        * Есть другие фирменные поезда
    - do: |-
        Кликнуть по кнопке "Выбрать место" для фирменного поезда
    - assert: >-
        * Открылась страница выбора мест
        * В информации о поезде вверху страницы есть приписка о фирменности,
        совпадает с припиской на выдаче
    - do: Обновить страницу
    - assert: 'Приписка про фирменность осталась'
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Приписка беспересадочный вагон в сниппетах':
    - do: Открыть выдачу Усинск - Микунь на все дни
    - assert: '* На выдаче есть сниппет с припиской беспересадочный вагон'
    - do: Открыть выдачу Владимир - Москва на завтра
    - assert: '* На выдаче нет сниппетов с припиской беспересадочный вагон'
    - do: >-
        Открыть выдачу Псков - Москва на все дни (пропустить шаг, если нет
        беспересадочного)
    - assert: >-
        * На выдаче есть сниппет с припиской беспересадочный вагон (проверяем
        наложение признаков: фирменный и беспересадочный вагон)
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Хлебные крошки находятся внизу страницы, под выдачей.
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Хлебные крошки в поиске':
    - do: Открыть выдачу Сызрань — Самара на определенную дату
    - assert: >-
        * На выдаче внизу страницы есть хлебные крошки вида:  Ж/Д билеты >
        Купить билеты на поезда Сызрань — Самара > на число месяц

        * Все элементы хлебных крошек, кроме последнего, являются ссылками
    - do: Кликнуть по "Купить билеты на поезда Сызрань — Самара"
    - assert: >-
        * Открылась страница направления (выдача на это же направление с
        несколькими рейсами, раскрыт календарь)

        * Внизу страницы есть хлебные крошки
    - do: Нажать на ЖД билеты в хлебных крошках
    - assert: '- Произошел переход на главную, на вкладку ЖД билеты'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Кейс для асессоров только для прода, так как ссылки в тестинге не будут
  открываться.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Ссылки хлебных крошек ведут на правильные страницы':
    - do: Открыть консоль браузера
    - do: Открыть выдачу Москва - Самара на завтра
    - assert: >-
        * На выдаче есть хлебные крошки вида: Ж/Д билеты > Купить билеты на
        поезда Москва — Самара > на завтра

        * Все элементы, кроме элемента "на завтра" являются ссылками
    - do: Кликнуть по ссылке Ж/Д билеты
    - assert: '* Открылась главная страница Путешествий, вкладка ЖД'
    - do: >-
        Вернуться на выдачу, кликнуть по ссылке "Купить билеты на поезда Москва
        — Самара"
    - assert: '* Открылась выдача Москва - Самара на все дни'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Переход суток выглядит так:
  https://jing.yandex-team.ru/files/shenfeld/2020-12-03_14.47.12-0bau5.png

  Показываем рейсы на +4 часа от следующей даты.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Переход суток в поиске':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - assert: |-
        * На выдаче есть переход суток
        * До него все сниппеты на завтра
        * После него все сниппеты на послезавтра
    - do: >-
        Поменять порядок сортировки по времени отправления - от большего к
        меньшему (в таче нужно сделать это в окне фильтров):

        ![](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_14.57.23-tbq9g.png)
    - assert: >-
        * На выдаче есть дата перехода суток с верной датой: дата завтрашнего
        дня

        * Сниппеты до даты на завтра

        * Сниппеты после даты на послезавтра
    - do: 'Отсортировать выдачу по времени прибытия, от меньшего к большему'
    - assert: '* На выдаче нет даты перехода суток между сниппетами'
    - do: Открыть выдачу Москва - Астрахань на любую дату
    - assert: |-
        * Открылась выдача
        * На выдаче нет даты перехода суток (нет сниппетов на следующие сутки)
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Фильтр отображается, если есть сниппеты с несколькими временными зонами,
  например ночь и утро.


  Фильтр Время отправления/прибытия выглядит так:
  https://jing.yandex-team.ru/files/shenfeld/2020-12-03_15.00.06-fcvtp.png

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Фильтр Время отправления/прибытия в выдаче':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - assert: >-
        * На выдаче есть фильтр Время отправления/прибытия

        * В фильтре есть блоки: Отправление/Прибытие и чекбоксы в каждом из них
        в таком порядке: Ночь, Утро, День, Вечер
    - do: В фильтре выбрать Утро
    - assert: >-
        * На выдаче остались только те сниппеты, которые отходят в утренние
        часы: 6:00 до 12:00

        * Кнопка фильтра стала Оранжевой

        * Изменился урл страницы: добавилось departure=morning
    - do: В фильтре снять Утро и выбрать День
    - assert: >-
        * На выдаче остались только те сниппеты, которые отходят в дневные часы:
        12:00 до 18:00

        * Кнопка фильтра оранжевая

        * Изменился урл страницы: добавилось departure=day
    - do: В фильтре снять День и выбрать Вечер
    - assert: >-
        * На выдаче остались только те сниппеты, которые отходят в вечерние
        часы: 18:00 до 04:00

        * Кнопка фильтра оранжевая

        * Изменился урл страницы: добавилось departure=evening
    - do: В фильтре снять Вечер и выбрать Ночь
    - assert: >-
        * На выдаче остались только те сниппеты, которые отходят в ночные часы:
        00:00 до 6:00

        * Кнопка фильтра оранжевая

        * Изменился урл страницы: добавилось departure=night
    - do: В фильтре установить Утро и Ночь
    - assert: >-
        * На выдаче остались только те сниппеты, которые отходят в утренние и
        ночные часы: 6:00 до 12:00 и с 00:00 до 6:00

        * Кнопка фильтра оранжевая

        * Изменился урл страницы: добавилось departure=morning и departure=night
    - do: 'В фильтре снять Утро и Ночь, выбрать Прибытие, Утро'
    - assert: >-
        * На выдаче остались только те сниппеты, которые прибывают в утренние
        часы: 6:00 до 12:00

        * Кнопка фильтра оранжевая

        * Изменился урл страницы, добавилось arrival=morning
    - do: В фильтре снять Утро и выбрать День
    - assert: >-
        * На выдаче остались только те сниппеты, которые прибывают в дневные
        часы: 12:00 до 18:00

        * Кнопка фильтра оранжевая

        * Изменился урл страницы, добавилось arrival=day
    - do: В фильтре снять День и выбрать Вечер
    - assert: >-
        * На выдаче остались только те сниппеты, которые прибывают в вечерние
        часы: 18:00 до 00:00

        * Кнопка фильтра оранжевая

        * Изменился урл страницы, добавилось arrival=evening
    - do: В фильтре снять Вечер и выбрать Ночь
    - assert: >-
        * На выдаче остались только те сниппеты, которые прибывают в ночные
        часы: 00:00 до 6:00

        * Кнопка фильтра оранжевая

        * Изменился урл страницы, добавилось arrival=night
    - do: В фильтре установить Ночь и День
    - assert: >-
        * На выдаче остались только те сниппеты, которые прибывают в дневные и
        ночные часы: 12:00 до 18:00 и 00:00 до 6:00

        * Кнопка фильтра оранжевая

        * Изменился урл страницы, добавилось arrival=night и arrival=day
    - do: В фильтре снять все изменения
    - assert: |-
        * Выдача вернулась к первоначальному состоянию
        * Кнопка фильтра стала серой
        * Урл вернулся к первоначальному состоянию
    - do: >-
        Открыть выдачу Ижевск - Пермь на завтра с прописанным параметром для
        метрики  _ym_debug=1 (если фильтра нет, открыть выдачу на другую дату,
        чтобы он был)
    - assert: >-
        * На выдаче есть фильтр Время отправления/прибытия

        * На выдаче нет сниппетов с утренними и дневными рейсами

        * В консоли браузера есть события показа фильтра: filter_arrival_show и
        filter_departure_show, отправляемое в метрику

        * Фильтры Утро и День для Отправления окрашены в серый цвет и недоступны
        для выбора
    - do: В фильтре кликнуть по кнопке Утро для Отправления
    - assert: |-
        * Клика по кнопке не происходит
        * Кнопка серая
        * Выдача не изменилась
    - do: Для Прибытия кликнуть по кнопке Вечер
    - assert: |-
        * Клика по кнопке не происходит
        * Кнопка серая
        * Выдача не изменилась
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Условия показа фильтра «Время отправления/прибытия»':
    - do: Открыть выдачу Екатеринбург - Шарташ на завтра
    - assert: '* Наверху нет блока фильтров'
    - do: Открыть выдачу Москва - Санкт-Петербург
    - assert: |-
        Наверху есть блок с фильтрами
        https://jing.yandex-team.ru/files/papulova/WVp95QGsYK.png
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: Календарь раскрывается при клике по полю «Когда».
specs:
  'ЖД: Календарь в выдаче и на главной':
    - do: 'Открыть главную страницу, вкладка ж/д билеты'
    - do: Кликнуть по полю «Когда»
    - assert: >-
        * Открылся календарь

        * Календарь размещается поверх всех остальных элементов

        * В календаре активные для выбора даты начинаются с текущей даты

        * До текущей даты все даты некликабельны (серые)

        * Выходные дни (суббота и воскресенье) выделены красным цветом

        * Рядом с январем указан будущий год

        * Месяцы начинаются с заглавной буквы

        * Активные месяцы в календаре (для которых даты справа) выделены красной
        вертикальной чертой
    - do: Проскролить Календарь вниз
    - assert: >-
        * При скроле меняется положение красной черты в списке месяцев,
        соответствует отображаемому месяцу

        * Размер календаря не изменяется
    - do: Открыть консоль браузера
    - do: Кликнуть по кнопке «сегодня»
    - assert: |-
        * Календарь свернулся
        * В поле «Когда» установилось значение сегодня
    - do: 'Развернуть календарь, кликнуть по кнопке «завтра»'
    - assert: |-
        * Календарь свернулся
        * В поле «Когда» установилось значение завтра
    - do: 'Развернуть календарь, кликнуть по кнопке «Послезавтра»'
    - assert: |-
        * Календарь свернулся
        * В поле «Когда» установилось значение Послезавтра
    - do: 'Развернуть календарь, кликнуть по любой будущей дате в Календаре'
    - assert: >-
        * Календарь свернулся

        * В поле «Когда» установилось значение этой даты в формате число -
        цифрой, месяц - прописью, например, 18 августа
    - do: Развернуть календарь и кликнуть вне календаря
    - assert: '* Календарь свернулся'
    - do: >-
        Развернуть календарь и слева кликнуть по какому-нибудь месяцу не равному
        текущему
    - do: Выбрать из него дату
    - assert: '* Календарь свернулся'
    - do: Кликнуть по полю "Когда"
    - assert: |-
        * Раскрылся календарь
        * Выбран месяц и дата, выбранные на шагах ранее
    - do: 'Открыть любую выдачу, например, Нижневартовск - Сургут на завтра'
    - do: Повторить шаги 1-13
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Выбор прошедшей даты в календаре недоступен':
    - do: 'Открыть главную страницу, вкладку ж/д билеты'
    - do: Кликнуть по полю «Когда»
    - assert: >-
        * Открылся календарь

        * В календаре все даты, которые раньше сегодняшней, недоступны для
        выбора и не кликабельны
    - do: В календаре выбрать дату на неделю назад от текущей
    - assert: |-
        * Дата не выбралась
        * По клику ничего не произошло
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Сортировка по цене на выдаче':
    - do: Открыть выдачу Екатеринбург - Тюмень на завтра
    - assert: |-
        * Есть сниппеты с разными ценами
        * Сниппеты расположены по возрастанию времени отправления
    - do: Отсортировать выдачу по цене
    - assert: '* Сниппеты расположены по возрастанию цены'
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Календарь в поиске на все дни выглядит так:

  ![image](https://jing.yandex-team.ru/files/tyrande/Raspisanie_reisov_iz_Solikamska_v_Perm__ot_436_R__Yandeks.Raspisaniya_2017-02-13_18-57-07.jpg)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Большой календарь в поиске на все дни':
    - do: Открыть консоль браузера
    - do: >-
        Открыть выдачу Москва - Екатеринбург на все дни с прописанным событием
        для тестирования метрики ?_ym_debug=1
    - assert: >-
        * На странице над выдачей есть большой календарь

        * Календарь открыт по умолчанию

        * В календаре светло желтым выделены дни курсирования всех рейсов,
        которые есть на выдаче

        * Белым выделены дни, когда нет рейсов

        * Даты до текущей некликабельны

        * Для календаря есть кнопка "скрыть календарь"

        * Есть стрелки справа и слева от календаря для листания

        * В консоли есть событие в метрику для отображения календаря:
        trains_search_calendar_show

        * В куках есть кука для запоминания значения календаря
        (свернут/развернут) со значением true: trains_calendar_opened
    - do: Пролистать календарь на будущие месяцы
    - assert: >-
        * Листание происходит на один месяц вперед

        * Для первого листания в консоли появилось событие в метрику:
        trains_search_calendar_flip_forward
    - do: Пролистать календарь обратно к текущему месяцу
    - assert: >-
        * В консоли появилось событие в метрику
        trains_search_calendar_flip_backward
    - do: Кликнуть по кнопке "скрыть календарь"
    - assert: >-
        * Календарь закрылся

        * В консоли появилось событие в метрику:
        trains_search_calendar_user_hide

        * На месте кнопки "скрыть календарь" появилась кнопка "раскрыть
        календарь"
    - do: Открыть в новой вкладке выдачу Екатеринбург - Москва на все дни
    - assert: '* Календарь скрыт'
    - do: >-
        Вернуться на вкладку с выдачей Москва - Екатеринбург и кликнуть по
        кнопке "раскрыть календарь"
    - assert: |-
        * Календарь открылся
        * В консоли появилось событие в метрику: trains_search_calendar_show
    - do: 'Кликнуть еще раз "скрыть календарь", потом "раскрыть календарь"'
    - assert: >-
        * В консоли не появилось новых событий в метрику:
        trains_search_calendar_user_hide, trains_search_calendar_show
    - do: 'Уменьшить размер экрана, сжимая постепенно окно браузера'
    - assert: >-
        * При уменьшении размера экрана элементы календаря уменьшаются


        ![image](https://jing.yandex-team.ru/files/tyrande/Raspisanie_reisov_iz_Solikamska_v_Perm__ot_436_R__Yandeks.Raspisaniya_2017-02-13_18-57-59.jpg)
    - do: Увеличить размер экрана до нормального
    - assert: |-
        * Элементы в календаре увеличились
        * Календарь вернулся к изначальному состоянию
    - do: Навести на одну из дат курсирования
    - assert: '* Дата подсвечивается оранжевым'
    - do: Кликнуть по этой дате
    - assert: >-
        * В консоли появилось событие в метрику:
        trains_search_calendar_day_click

        * Осуществился переход на выдачу Москва - Екатеринбург для этой даты
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Переход на страницу покупки из сниппетного календаря в поиске на все дни':
    - do: >-
        Открыть выдачу Москва - Самара на все дни с прописанным параметром в
        метрику ?_ym_debug=1, открыть консоль браузера
    - do: >-
        Для одного из сниппетов, для которого есть рейс сегодня, кликнуть по
        кнопке "Выбрать дату"
    - assert: '* Открылся календарь для этого сниппета'
    - do: Выбрать сегодняшнюю дату
    - assert: >-
        * В консоли появилось событие в метрику на клик по дате:
        trains_segment_datepicker_click и на переход на страницу покупки:
        trains_order_places_page_load

        * Осуществился переход на страницу покупки для этой даты

        * Если поезд уже ушел или нет мест есть сообщение: На заданном
        направлении (или поезде) мест нет - в этом случае события
        trains_order_places_page_load не будет- надо найти другой день/поезд в
        котором есть билеты и проверить еще раз
    - do: Вернуться к выдаче
    - do: >-
        Для одного из сниппетов, для которого есть рейсы в ближайшие будущие
        даты, кликнуть по кнопке "Выбрать дату"
    - assert: '* Открылся календарь для этого сниппета'
    - do: 'Выбрать ближайшую будущую дату, например, послезавтра'
    - assert: '* Осуществился переход на страницу покупки на эту дату'
    - do: Открыть выдачу Киев - Львов на все дни
    - do: >-
        Для одного из сниппетов, где есть дни хождения в ближайшие будущие даты,
        кликнуть по кнопке “Выбрать дату”
    - assert: '* Открылся календарь для этого сниппета'
    - do: 'Выбрать ближайшую будущую дату, например завтра'
    - assert: '* Осуществился переход на сайт УФС на эту дату'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Поиск со страницы выбора мест':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - assert: '* Для некоторых сниппетов есть кнопка "Выбрать место"'
    - do: Для одного из сниппетов кликнуть по кнопке "Выбрать место"
    - assert: >-
        * Открылась страница выбора мест

        * Форма поиска на странице по умолчанию свернута

        * В  свернутой форме поиска отображается пункт отправления, пункт
        прибытия и дата
    - do: Кликнуть по форме поиска
    - assert: '* Форма раскрылась'
    - do: >-
        В поле "Откуда" написать Санкт-Петербург, в поле "Куда" - Москва, в поле
        "Когда" - любую дату и кликнуть "Найти"
    - assert: |-
        * Открылась выдача Санкт-Петербург - Москва на выбранную дату
        * Все элементы на выдаче (кнопки, попапы и т.д.) работают
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Проверяются 3 поезда:
  * обычный
  * скоростной
  * фирменный
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Совпадение данных о поезде на странице выбора мест с выдачей':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: >-
        Найти на выдаче поезд 120В (или любой обычный поезд - не фирменный и не
        скоростной)

        Запомнить информацию на выдаче о поезде - номер поезда, маршрут,
        перевозчик, дата и время отправления/прибытия, время в пути

        Кликнуть по кнопке Выбрать место
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * Вся информация о поезде совпадает с информацией о поезде c выдачи
        (если у поезда на выдаче было две буквы в номере, то на странице выбора
        мест может быть одна из этих букв - это нормально).

        ![image](https://jing.yandex-team.ru/files/arhey/2022-01-14T08:44:01Z.f3fa612.png)
    - do: Обновить страницу
    - assert: '- Вся информация о поезде совпадает с запомненной ранее'
    - do: >-
        Открыть выдачу Москва - Санкт-Петербург через месяц
        Найти на выдаче поезд "Сапсан" и запомнить информацию о поезде:
        номер поезда, маршрут, перевозчик, дата и время отправления/прибытия, время в пути

        Кликнуть по кнопке "Выбрать места"
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * Вся информация о поезде совпадает с информацией о поезде c выдачи

        * Есть название поезда - Сапсан

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-09-18_12.47.16-r6c3f.png)
    - do: Обновить страницу
    - assert: '* Вся информация о поезде совпадает с запомненной ранее'
    - do: >-
        Открыть выдачу Москва - Санкт-Петербург через месяц

        Для поезда 016А (или для любого фирменного поезда, можно поискать на
        другие даты) запомнить информацию о поезде: номер поезда, маршрут,
        перевозчик, дата и время отправления/прибытия, время в пути, признак
        фирменности и двухэтажности

        Кликнуть по кнопке "Выбрать места"
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * Вся информация о поезде совпадает с информацией о поезде c выдачи
        (если у поезда на выдаче было две буквы в номере, то на странице выбора
        мест может быть одна из этих букв - это нормально)

        * Есть признак фирменности и двухэтажности (если была двухэтажность на
        выдаче) - фирменный «Двухэтажный состав»

        ![image](https://jing.yandex-team.ru/files/arhey/2022-01-14T08:44:58Z.e95cc23.png)
    - do: Обновить страницу
    - assert: '* Вся информация о поезде совпадает с запомненной ранее'
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - Smoke
  - Blocker
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  **Асессорам проходить кейс только в проде**

  На Украине есть Крюковский вагоностроительный завод. Он выпускает купейные и
  плацкартные вагоны с нетипичной для России компановкой:

  * В купейном - 10 отсеков, 40 мест.

  * В плацкарте - 10 отсеков, 58 мест, отсутствуют боковушки около туалета.


  Схемы таких вагонов отличаются от обычных, их можно посмотреть в админке **(не
  для асессоров, у асессоров страницы открываться не будут)**:

  плацкарт - https://rasp.admin.rasp.yandex-team.ru/admin/order/coachinfo/46/

  купе - https://rasp.admin.rasp.yandex-team.ru/admin/order/coachinfo/45/

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Крюковские вагоны':
    - do: Открыть выдачу Москва - Смоленск через месяц
    - do: На выдаче найти поезд с номером 055Б
    - assert: >-
        * Для этого поезда есть кнопка покупки (кнопка может называться по
        разному, сейчас называется "Выбрать место")
    - do: Кликнуть по кнопке покупки
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: В блоке "Вагоны и Места" прокликать вагоны 15 и 16 вагоны
    - assert: >-
        * Для этих вагонов есть схема

        * Схема соответсвует плацкартной схеме для крюковских вагонов

        ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_055B_Moskva_Gomel_iz_Moskvy_v_Smolensk_na_14_marta__Yandeks.Raspisaniya_2018-02-05_18-23-50.jpg)
    - do: Выбрать тип вагона "Купе"
    - do: В блоке “Вагоны и Места” прокликать 11 и 12 вагоны
    - assert: >-
        * Для этих вагонов есть схема

        * Схема соответсвует купейной схеме для крюковских вагонов


        ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_055B_Moskva_Gomel_iz_Moskvy_v_Smolensk_na_14_marta__Yandeks.Raspisaniya_2018-02-05_18-25-38.jpg)
manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Информация для асессоров: **Если проходите кейс в таче, то вместо приписки
  “Места для пассажиров с животными” должна быть "Можно с животными"**

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Деление классов по животному признаку на примере Сапсана':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: |
        Найти сниппет с сапсаном и для него кликнуть по кнопке покупки (кнопка
        может называться по разному, сейчас называется "Выбрать место")
    - assert: |
        Открылась страница выбора мест

        В блоке "Выберите тип вагона и место" есть типы вагонов: Базовый , Эконом , Эконом+ , Эконом  - с припиской Места для пассажиров с животными и иконкой собаки, Вагон-Бистро , Бизнес , 1 класс , Купе-переговорная (некоторых классов может не быть, если нет мест)
        Класс вагона указан в описании справа --->
        Примерный внешний вид для десктопа https://jing.yandex-team.ru/files/semirka/Screenshot_83.png
        Для тачей  класс вагона скрыт за иконкой "?" в описании вагона.
        Примерный внешний вид для тачей  https://jing.yandex-team.ru/files/semirka/Screenshot_78-1.png
    - do: Прокликать по каждому вагону
    - assert: |
          Для всех вагонов есть схемы вагонов.

          Для класса Эконом 2С без приписки "Места для пассажиров с животными"
          для некоторых вагонов есть приписки "Рядом с вами могут ехать пассажиры с животными"
          В классе Эконом 2С с иконкой собаки и припиской "Места для пассажиров с животными"
          вагоны те же, для которых есть приписка "Рядом с вами могут ехать пассажиры с животными" в классе Эконом 2С, эти места в вагонах классов Эконом 2С отображаются как занятые
          Для вагона со значком собаки минимальная цена больше на 400 рублей (на 10.01.2017).

manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Страница выбора мест для Ласточек':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - assert: Есть сниппеты с Ласточкой (если нет, поискать на другую дату)
    - do: Для сниппета с Ласточкой кликнуть по кнопке "Выбрать место"
    - assert: >-
        * Открылась страница выбора мест
        * В блоке "Выберите тип вагона и место" есть вагон для пассажиров с животными
    - do: В блоке "Укажите количество билетов" выбрать двух взрослых
    - do: В блоке "Выберите тип вагона и место" выбрать 2 места
    - do: Кликнуть по кнопке "Указать пассажиров"
    - assert: Осуществился переход на ввод данных пассажиров

manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
    Алгоритм выбора мест описан тут (ссылка не для асессоров):

    https://st.yandex-team.ru/RASPFRONT-2706#1484294928000 - комментарий Сергея
    Вострецова

    Код для выбора места одинаковый => проверяем случай только для четырёх
    человек.

    Перейти на главную сервиса
    Перейти на вкладку Ж/Д билеты
specs:
    'ЖД: Алгоритм выбора мест':
        - do: |
              Открыть выдачу Москва - Екатеринбург через месяц, на любом сниппете с
              местами в купе кликнуть по кнопке Выбрать место
        - assert: Открылась страница выбора мест
        - do: |
              Раскрыть такой тип вагонов , чтобы хотя бы в одном вагоне было три подряд свободных купе.
              Если такого нет, поискать в другом поезде
        - do: В блоке "Укажите количество билетов" установить 4 взрослых.
        - do: Выбрать четыре верхних места.
        - assert: |
              Из верхних мест возможно выбрать только 4 места подряд
              После выбора всех мест остальные места недоступны для выбора
              ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_011E_Novyi_Urengoi__Moskva_iz_Ekaterinburga_v_Moskvu_na_21_sentyabrya__Yandeks.Raspisaniya_2017-08-21_17-51-51.jpg)
        - do: Снять выбор одного крайнего верхнего места
        - assert: |
              Появляется диапазон для выбора
              Можно выбрать нижнее место
              ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_011E_Novyi_Urengoi__Moskva_iz_Ekaterinburga_v_Moskvu_na_21_sentyabrya__Yandeks.Raspisaniya_2017-08-21_17-52-30.jpg)
        - do: Снять выбор с еще одного крайнего верхнего места
        - assert: |
              Выбрано два верхних места
              Диапазон для выбора увеличился
              ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_011E_Novyi_Urengoi__Moskva_iz_Ekaterinburga_v_Moskvu_na_21_sentyabrya__Yandeks.Raspisaniya_2017-08-21_17-53-04.jpg)
        - do: Снять выбор с ещё одного верхнего места
        - assert: |
              Выбрано одно верхнее место
              Диапазон для выбора увеличился
              ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_011E_Novyi_Urengoi__Moskva_iz_Ekaterinburga_v_Moskvu_na_21_sentyabrya__Yandeks.Raspisaniya_2017-08-21_17-53-35.jpg)
        - do: Снять выбор с последнего верхнего места.
        - assert: Вагон доступен для выбора весь.
        - do: Выбрать одно нижнее место.
        - assert: |
              Засерился диапазон мест.
              Для выбора доступно шесть оставшихся нижних и шесть верхних мест.
              ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_011E_Novyi_Urengoi__Moskva_iz_Ekaterinburga_v_Moskvu_na_21_sentyabrya__Yandeks.Raspisaniya_2017-08-21_17-54-13.jpg)
        - do: Выбрать второе соседнее нижнее место.
        - assert: |
              Для выбора доступно еще 4 нижних места и 4 верхних
              ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_011E_Novyi_Urengoi__Moskva_iz_Ekaterinburga_v_Moskvu_na_21_sentyabrya__Yandeks.Raspisaniya_2017-08-21_17-55-13.jpg)
        - do: Выбрать еще два нижних места
        - assert: Для выбора больше нет доступных мест
        - do: Снять выбор с двух нижних крайних мест
        - do: Из доступных мест выбрать верхнее место с наименьшим номером
        - assert: |
              Доступно для выбора два верхних места и одно нижнее.
              ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_011E_Novyi_Urengoi__Moskva_iz_Ekaterinburga_v_Moskvu_na_21_sentyabrya__Yandeks.Raspisaniya_2017-08-21_17-56-09.jpg)
        - do: Выбрать одно из доступных верхних мест.
        - assert: |
              Больше нет доступных мест для выбора.
              ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_011E_Novyi_Urengoi__Moskva_iz_Ekaterinburga_v_Moskvu_na_21_sentyabrya__Yandeks.Raspisaniya_2017-08-21_17-57-07.jpg)

manual: true
Функциональность: Схемы вагонов
Устройство:
    - Десктоп
    - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Больше не показываем значок.
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Значок ЭР на странице выбора мест не пропадает':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - do: >-
        Для сниппета у которого есть значок ЭР кликнуть по кнопке "Выбрать
        место"
    - assert: |-
        * Осуществился переход на страницу выбора мест
        * В блоке с информацией о поезде есть значок электронной регистрации
    - do: Обновить страницу
    - assert: '* После прогрузки всех элементов значок электронной регистрации есть'
manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Tag:
  - Arсhived
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отображение свободных мест  на странице выбора мест СВ':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: В фильтре "Тип вагона" установить "СВ"
    - do: Для одного из сниппетов кликнуть по кнопке "Выбрать место"
    - assert: |-
        * Осуществился переход на страницу выбора мест
        * Есть тип вагона СВ
        * В информации о классе СВ есть информация только о нижних местах
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: >-
        В фильтре "Скоростные поезда" установить "Стриж" (если нет Стрижа,
        поискать на другу дату)
    - do: Для одного из сниппетов кликнуть по кнопке "Выбрать место"
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * Для всех классов СВ есть информация о свободных верхних и нижних
        местах
    - do: >-
        Открыть выдачу Москва - Санкт-Петербург на вторник (он не ходит по сб и
        пн)
    - assert: '* На выдаче есть поезд 004А'
    - do: Кликнуть по кнопке "Выбрать место" для поезда 004А
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * Для всех классов СВ, кроме 1Б, есть информация о свободных верхних и
        нижних местах

        * Для класса 1Б есть информация только о нижних местах
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Невозможно оформить место женщинам в мужское купе':
    - do: Открыть выдачу Москва - Пермь через месяц
    - do: >-
        Для поезда, у которого есть свободные места в вагонах купе, кликнуть
        "Выбрать место"
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Выбрать тип вагона "Купе"
    - do: >-
        Выбрать класс с припиской "Раздельные купе" (находится под иконками
        класса)

        (если в выбранном поезде нет такого вагона, выбрать другой поезд)
    - assert: '* Раскрылись схемы вагонов'
    - do: >-
        * Выбрать одно из мест, у которого есть подпись "мужское"

        * Если такого купе нет, выбрать в том же гендерном вагоне полное купе
        (без указания гендера) и в появившемся попапе установить Мужское

        * Кликнуть по кнопке Указать пассажиров
    - assert: '* Осуществился переход на страницу заполнения данных'
    - do: 'Заполнить поля ФИО женскими данными, например, Иванова Ирина Сергеевна'
    - do: Пол выбрать женский
    - do: Остальные поля заполнить корректной информацией
    - do: Кликнуть по кнопке "Проверить заказ и купить"
    - assert: |-
        * Переход на следующий шаг не осуществился
        * Блок с кнопками пола выделен красной рамкой
        * Под блоком текст с сообщением об ошибке
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Невозможно оформить место мужчине в женское СВ':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: >-
        Для поезда, у которого есть свободные места в вагонах СВ, кликнуть
        “Выбрать место”
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        Выбрать для типа СВ класс с припиской Раздельные купе (находится под
        иконками в класе)
    - assert: '* Раскрылись схемы вагонов для этого класса'
    - do: >-
        * Выбрать одно из мест, у которого есть подпись "женское", и кликнуть по
        кнопке “Указать пассажиров”

        * Если такого купе нет, выбрать в том же гендерном вагоне полное купе
        (без указания гендера) и в появившемся попапе установить Женское
    - assert: '* Осуществился переход на страницу заполнения данных'
    - do: 'Заполнить поля ФИО мужскими данными, например, Иванов Игорь Андреевич'
    - do: Пол выбрать мужской
    - do: Заполнить остальные поля корректной информацией
    - do: Кликнуть по кнопке "Проверить заказ и купить"
    - assert: >-
        * Переход на следующий шаг не осуществился

        * Блок с кнопками пола выделен красной рамкой

        * Под блоком есть человекопонятное сообщение о том, почему не получилось
        перейти на шаг оплаты
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Дети до 10 лет могут ехать хоть в мужском, хоть в женском купе':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: >-
        Для одного из поездов, где есть места в купе, кликнуть по кнопке
        "Выбрать место"
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        В блоке "Укажите количество билетов" установить 1 взрослого, 1 ребенка
        от 5 до 10 лет и одного ребенка до 5 лет (без места)
    - do: >-
        В блоке "Выберите тип вагона и класс обслуживания" нажать на класс с
        припиской "Раздельные купе" и выбрать 2 женских места
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: >-
        Заполнить информацию ФИО для первого пассажира женскими данными,
        например, Петрова Ольга Юрьевна
    - do: Пол выбрать женский
    - do: >-
        ФИО для детей заполнить мужскими данными, например, Петров Олег
        Сергеевич, Петров Петр Сергеевич
    - do: Пол выбрать мужской
    - do: Заполнить оставшиеся поля валидными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Ошибок нет
    - do: Вернуться к выдаче
    - do: >-
        Кликнут по кнопке "Выбрать место" для другого поезда, у которого есть
        свободные места в купе
    - do: >-
        В блоке "Укажите количество билетов" установить 1 взрослого, 1 ребенка
        от 5 до 10 лет и 1 ребенка до 5 лет
    - do: >-
        В блоке "Выберите тип вагона и класс обслуживания" выбрать класс с
        припиской "Раздельные купе" и 2 места в мужском купе
    - do: Кликнуть по кнопке "Указать пассажиров"
    - assert: '* Осуществился переод на страницу "Данные пассажиров"'
    - do: >-
        Заполнить информацию ФИО для первого пассажира мужскими данными,
        например, Сидоров Олег Семенович
    - do: Пол выбрать мужской
    - do: >-
        Остальную информацию для этого пассажира заполнить любыми валидными
        данными
    - do: >-
        Заполнить ФИО детей женскими данными, например, Сидорова Паулина
        Олеговна
    - do: Пол выбрать женский
    - do: Остальную информацию для детей заполнить произвольными валидными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Ошибок нет
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Корректное оформление билета для женщин в женские вагоны':
    - do: Открыть выдачу Москва - Навашино через месяц
    - do: >-
        Клинкуть по кнопке "Выбрать место" для вагона, у которого есть свободные
        места "Купе"
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        В блоке "Выберите тип вагона и класс обслуживания" выбрать класс с
        припиской "Раздельные купе" и одно место в женском купе
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: >-
        ФИО ввести женское c дефисами, например, Римский-Корсаков Анна-Вероника
        Георгиевна-Вадимовна
    - do: Пол выбрать женский
    - do: Остальные поля заполнить любой валидной информацией
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - assert: |-
        * Произошел переход на страницу подтверждения
        * На странице все введенные данные пассажира отображаются верно
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Корректное оформление билета для мужчин в мужские вагоны':
    - do: Открыть выдачу Москва - Арзамас через месяц
    - do: >-
        Кликнуть по кнопке "Выбрать место"для поезда, у которого есть свободные
        места в СВ
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        В блоке "Выберите тип вагона и класс обслуживания" выбрать класс с
        припиской "Раздельные купе" и одно мужское место в нем
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: 'Заполнить ФИО мужскими данными, например, Пушкин Александр Сергеевич'
    - do: Выбрать пол мужской
    - do: Заполнить остальную информацию произвольными валидными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Все введенные данные отображаются верно
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Корректное оформление билета для мужчин и женщин в смешанные вагоны':
    - do: Открыть выдачу Москва - Пенза через месяц
    - do: >-
        Кликнуть кнопку "Выбрать место" для сниппета, у которого есть места в
        вагонах купе
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: В блоке "Укажите количество билетов" установить двух взрослых
    - do: >-
        В блоке "Выберите тип вагона и класс обслуживания" выбрать гендерный
        класс и 2 смешанных места в нем
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: >-
        Заполнить ФИО первого пассажира мужской информацией, например, Анатольев
        Иван Николаевич
    - do: Пол выбрать мужской
    - do: >-
        Заполнить ФИО второго пассажира женской информацией, например,
        Анатольева Марина Павловна
    - do: Пол выбрать женский
    - do: Остальные поля заполнить произвольной валидной информацией
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Все данные пассажиров соответствую введенным
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Двухэтажность вагона на странице выбора мест':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - do: Для поезда с двухэтажным составом кликнуть по кнопке "Выбрать место"
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * В блоке с информацией о поезде есть подпись "фирменный «Двухэтажный
        состав»"
manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Чекбокс "Постельное белье"':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: >-
        Кликнуть по кнопке "Выбрать место" для поезда, у которого есть свободные
        места в плацкарте, купе и СВ
    - assert: Осуществился переход на страницу выбора мест
    - do: |
        Установить 2 взрослых пассажиров
        В блоке "Выберите тип вагона и место" выбрать любой класс в типе  Плацкарт.
        Выбрать любые места в вагоне
    - assert: >-
        * В корзине с кнопкой справа появилась цена
        * Есть галка "Постельное белье"
        * Галка по умолчанию поставлена
        * Есть строчка с учетом цены белья для 2 пассажиров, пример:
        в формате "Постельное бельё ( 2 × 145,90 Р ) 291,80 Р" либо в формате
        "Постельное бельё 2 шт. 335,44 ₽"
    - do: Снять галку "Постельное бельё"
    - assert: |-
        * Цена уменшилась на стоимость постельного белья
        * Цены на схемах вагонов не поменялись
    - do: Открыть любой класс в типе Купе
    - do: Выбрать любые места из свободных мест в вагоне
    - assert: |-
        * В форме с кнопкой справа экрана появилась цена
        * Есть подпись "Бельё включено в стоимость"
    - do: Открыть любой класс в типе СВ
    - do: Выбрать любые места из свободных мест на схеме вагонов
    - assert: |-
        * В форме с кнопкой справа экрана появилась цена
        * Есть подпись "Бельё включено в стоимость"
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - do: >-
        Для любого Сапсана кликнуть по кнопке покупки (если открывается страница
        с ошибкой, что нет поездов на эту дату, посмотреть на другие даты и
        Сапсаны)
    - do: Выбрать место
    - assert: '* В форме с кнопкой справа нет подписей про постельное белье'
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги в кейсе, где требуется ввести данные
  карты и нажать кнопку Оплатить, нужно пропустить.**


  Номер карты (не для асессоров): 5100003697253468

  CVN: 060

  Дата: 12/24

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Покупка для пассажира с животными. Сапсан':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: Кликнуть по кнопке "Выбрать место" для Сапсана
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Запомнить станцию отправления и прибытия и номер поезда
    - do: >-
        Для одного из классов есть приписка "Места для пассажиров с животными" и
        иконка собаки
    - do: Выбрать такой класс
    - do: Выбрать одно место в этом классе (запомнить номер места и номер вагона)
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля корректными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - assert: >-
        * На странице указано выбранное место, есть приписка "Разрешен провоз
        животных"
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Ввести карту и оплатить”
    - do: Заполнить всю необходимую информацию
    - do: Кликнуть кнопку "Оплатить"
    - assert: '* Осуществился переход на страницу успешной покупки - хэппи пейдж'
    - do: Кликнуть по кнопке "Подробнее о заказе"
    - assert: >-
        * Открылась страница заказа со всеми данными заказа

        * Информация о билете совпадает с информацией с шагов пройденных ранее:
        Станция отправления/прибытия, номер поезда, ФИО, номер вагона, номер
        места, указание, что место для пассажира с животным
    - do: Кликнуть по кнопке "Скачать билеты"
    - assert: '* Билет скачался в формате PDF'
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Данные пассажиров. Валидация':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: Кликнуть кнопку "Выбрать место" для одного из поездов
    - assert: '* Осуществился переход на страницу "Выбора мест"'
    - do: Выбрать 1 взрослого и одного ребенка от 5 до 10 лет
    - do: 'Раскрыть любой класс, выбрать 2 места на схеме'
    - do: Кликнуть кнопку "Указать пассажиров"
    - assert: '* Осуществился переход на страницу "Данные пассажиров"'
    - do: Кликнуть "Проверить заказ и купить"
    - assert: >-
        * Переход  на следующую страницу не осуществился

        * Все поля подсветились красным

        Десктоп: * Над первым полем есть подсказка об ошибке; При наведении на
        остальные поля появляются подсказки об ошибке

        Тач: * Под каждым полем есть подсказка об ошибке
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты

  Для любого поезда перейти на покупку


  Открыта страница "Данные пассажиров" для двух пассажиров 1 взрослого и 1
  ребенка от 5 до 10 лет
specs:
  'ЖД: Поле документ на странице Данные пассажиров':
    - do: >-
        Заполнить все поля валидными данными для всех пассажиров, кроме поля
        номер и Серия документа
    - do: Кликнуть по полю документ для взрослого пассажира
    - assert: >-
        * Открылся селект с возможными документами: Паспорт РФ, Свидетельство о
        рождении, Заграничный паспорт, Паспорт моряка, Военный билет, Другой
        документ
    - do: Кликнуть по полю Документ для ребенка
    - assert: >-
        * Открылся селект с возможными документами: Свидетельство о рождении,
        Заграничный паспорт, Другой документ
    - do: Заполнить поле Серия и номер документа для взрослого
    - assert: '* Ввод для паспорта более 10 символов не возможен'
    - do: >-
        Стереть введенный номер, выбрать тип документа заграничный паспорт и
        ввести номер в поле Серия и номер документа
    - assert: '* Ввод для заграничного паспорта более 9 символов не возможен'
    - do: 'Для взрослого выбрать паспорт, для ребенка свидетельство о рождении'
    - do: Заполнить Серию и номер для паспорта буквами
    - assert: '* Заполнения не происходит'
    - do: >-
        Заполнить поля Серия и номер документа: для паспорта цифры, для ребенка
        русские буквы и цифры
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: >-
        * Перехода не осуществилось

        * Поля Серия и номер документа для ребенка подсвечиваются красным

        * Под полем есть человекопонятное сообщение об ошибке

        * Серия и номер для паспорта не подсвечивается (может подсвечиваться,
        если введена несуществующая серия паспорта)
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
  Для любого поезда перейти на покупку

  Открыта страница "Данные пассажиров" для одного взрослого пассажира
specs:
  'ЖД: Для российских документов текстовые поля только на русском':
    - do: Заполнить ФИО латиницей
    - do: Кликнуть кнопку "Купить"
    - assert: >-
        * Переход на следующую страницу не осуществился

        * Поля Фамилия, Имя, Отчество подсвечены красным

        * Под подсвеченными полями есть подсказки "Напишите фамилию/имя/отчество
        по-русски"
    - do: >-
        Повторить шаги 1-2 с документами: Свидетельство о рождении, Паспорт
        моряка, Военный билет
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты

  Для любого поезда перейти на покупку


  Открыта страница "Данные пассажиров" для одного взрослого пассажира для любого
  поезда в пределах РФ
specs:
  'ЖД: Для загран паспорта и иностранного документа текстовые поля на русском и на латинице':
    - do: Выбрать тип документа Заграничный паспорт
    - do: 'Заполнить все поля валидными данными, язык для ФИО - русский'
    - do: >-
        Кликнуть по кнопке перехода на следующий шаг покупки. (Кнопка может
        называться по-разному, сейчас называется “Проверить заказ и купить”)
    - assert: '* Осуществился переход на страницу подтверждения, ошибок нет'
    - do: Вернуться на страницу Данные пассажиров
    - do: 'Заполнить все поля валидными данными, язык для ФИО - латинский'
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по-разному, сейчас называется “Проверить заказ”)
    - assert: '* Осуществился переход на страницу подтверждения, ошибок нет'
    - do: Вернуться на страницу Данные пассажиров
    - do: |-
        Выбрать тип документа "Другой"
        Заполнить серию и номер валидными данными
        Выбрать любую страну в появившемся селекте
    - do: Повторить шаги 2-6
    - assert: '* Происходит переход на страницу подтверждения, ошибок нет'
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
  Для любого поезда перейти на покупку

  Открыта страница “Данные пассажиров” для одного взрослого пассажира
specs:
  'ЖД: Для другого документа поддерживаются латинские буквы и цифры':
    - do: Выбрать Другой документ
    - assert: '* Появилось поле "Гражданство"'
    - do: Кликнуть по полю "Гражданство"
    - assert: |-
        * Раскрылся попап со странами
        * При наведении на страны появляется ховер (в ios ховера не будет)
        * В перечне стран нет России
    - do: >-
        В поле Серия и номер документа ввести цифры  и латинские буквы (не более
        16 символов)
    - do: Заполнить оставшиеся поля валидной информацией
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ и купить”)
    - assert: '* Осуществился переход на страницу подтверждения, ошибок нет'
    - do: Вернуться на страницу Данные пассажиров
    - assert: '* Выбран иностранный документ, все поля заполнены'
    - do: В поле Серия и номер ввести только цифры
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ и купить”)
    - assert: 'Осуществился переход на страницу подтверждения, ошибок нет'
    - do: Вернуться на страницу Данные пассажиров
    - assert: '* Выбран иностранный документ, все поля заполнены'
    - do: В поле серия и номер ввести только латинские буквы
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ и купить”)
    - assert: '* Осуществился переход на страницу подтверждения, ошибок нет'
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты

  Для любого поезда перейти на покупку


  Открыта страница “Данные пассажиров” для одного взрослого пассажира, одного
  ребенка от 5 до 10 лет и одного ребенка до 5 лет
specs:
  'ЖД: Валидация даты рождения для разных категорий пассажиров':
    - do: >-
        Для всех пассажиров, кроме даты рождения, заполнить все поля валидной
        информацией

        Документ у взрослого - Паспорт РФ, у детей - Свидетельство о рождении
    - do: >-
        Для всех пассажиров установить дату рождения, чтобы каждому пассажиру
        было не меньше 18 лет
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: >-
        * Переход на следующую страницу не осуществился

        * Поля Дата рождения для всех пассажиров, кроме взрослого,
        подсвечиваются красным

        * Для детей есть подсказки "Возраст пассажира не соответствует тарифу"
    - do: >-
        Для взрослого установить дату, чтобы ему было меньше 10 лет, для первого
        ребенка такую дату, чтобы ему было > 10 и < 18, для второго ребенка - от
        5 до 10
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: >-
        * Переход на следующую страницу не осуществился

        * Поля Дата рождения для всех пассажиров подсвечиваются красным

        * Для взрослого есть подсказка "Возраст пассажира не соответствует
        документу."

        * Для детей есть подсказки "Возраст пассажира не соответствует тарифу"
    - do: >-
        Для взрослого установить дату, чтобы ему было от 18 и больше лет.

        Для ребенка от 5 до 10 лет установить такую дату, чтобы в день поездки
        ему исполнялось 10 лет, для ребенка до 5 лет установить такую дату,
        чтобы ему в день поездки исполнялось 5 лет
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ и купить”)
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Ошибок нет
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Поля Откуда/Куда обязательны для заполнения':
    - do: 'Открыть главную страницу, вкладка ЖД'
    - do: Удалить значение в поле "Откуда"
    - do: Кликнуть "Найти"
    - assert: |-
        * Поиск не осуществился
        * Текст в поле "Откуда" окрасился в красный
        * Текст в поле "Куда" окрасился в красный
        * Над полем "Откуда" появилось сообщение "Укажите станцию отправления"
        * Поле подсветилось серым
        * Для этого поля открылись саджесты
    - do: Выбрать любое значение из саджестов в первом поле
    - assert: |-
        * Текст в поле "Куда" выделен красным
        * Поле Куда обведено серым
        * Для поля Куда появилась подсказка "Укажите станцию прибытия"
        * Для поля Куда раскрылись саджесты
    - do: |-
        Выбрать любое значение из саджестов
        Кликнуть Найти
    - assert: '* Произошел переход на выдачу по выбранному направлению на сегодня'
    - do: Повторить шаги 2-5 для формы на выдаче
    - assert: '* ОР совпадает'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Поиск на дату, когда нет поездов':
    - do: Открыть выдачу Екатеринбург - Южно-Сахалинск на среду
    - assert: >-
        * На странице есть сообщение:

        "Нет рейсов из Екатеринбурга в Южно-Сахалинск

        Мы не нашли билетов на это направление.

        Давайте поищем куда-нибудь еще!"

        Скрин:
        https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.19.58-bdz5d.png

        * На странице нет фильтров и сортировок
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: В выдачах на дальние даты нет кнопок "Выбрать место"':
    - do: Открыть выдачу Москва - Екатеринбург через 91 день от текущей даты
    - assert: '* Для всех сниппетов на выдаче нет кнопок "Выбрать место"'
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Информация о поезде на выдаче':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - assert: >-
        * Номера поездов отображаются как 3 цифры и 1 буква

        * Для фирменных поездов есть оранжевая подпись фирменный и название,
        например, "фирменный" Мегаполис

        * Для скоростных - оранжевая надпись, например, "Сапсан"

        * Есть информация о компании перевозчике

        * Указано количество свободных мест для каждого типа вагона, например:
        СВ, купе, плацкарт, сидячие, общие, Люкс

        *  Указана цена От
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Страница подтверждения заказа. Совпадение данных на всех шагах.':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: >-
        Выбрать один из поездов, для которого есть кнопка "Выбрать место"
    - do: >-
        Запомнить следующую информацию об этом поезде: номер поезда, станцию
        отправления, станцию прибытия, дату и время отправления, дату и время
        прибытия
    - do: Кликнуть "Выбрать место" для этого поезда
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * На странице в шапке есть информация: номер поезда, станция
        отправления, станция прибытия, дата и время отправления, дата и время
        прибытия
    - do: >-
        Выбрать места №10-11 в любом вагоне со схемой и выбрать 1 взрослого пассажира,
        1 ребенка от 5 до 10 лет и 1 ребенка без места (если места заняты найти вагон, где оно свободно)
    - do: >-
        Запомнить следующую информацию для выбранных мест: номер вагона, класс
        обслуживания, владелец вагона, номера выбранных мест, типы выбранных
        мест (нижние, верхние и т.п.), гендерный признак, если есть
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: >-
        Заполнить все поля валидными значениями. Запомнить данные, которыми
        заполняли поля и номера мест, указанные для каждого пассажира
    - do: Кликнуть кнопку "Подтвердить заказ"
    - assert: >-
        * Осуществился переход на страницу "Подтверждение данных"

        * На странице есть информация: номер поезда, станции отправления и
        прибытия, время отправления и прибытия, время в пути, бейджи "Местное
        время" и "Электронная регистрация", номер вагона, тип вагона, класс,
        номера мест, схема вагона, ФИО пассажиров, типы и номера документов,
        удостоверяющих личность, даты рождения, номер телефона и адрес
        электронной почты

        * Перечисленная информация совпадет с информацией, запомненной ранее

        * Для взрослого пассажира и ребенка от 5 до 10 лет номер места совпадает
        с запомненным ранее местом, ребенок без места прикреплен к взрослому.
manual: true
Функциональность: Бронь с разными условиями
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Если тестируем тач-версию, кнопки Распечатать на странице не будет, это
  нормально.


  Тестовая карта (не для асессоров):

  Номер карты: 5100003697253468

  CVN: 060

  Дата: 01/20

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отмена и восстановление электронной регистрации':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: Для любого Сапсана кликнуть по кнопке "Выбрать место"
    - assert: Осуществился переход на страницу выбора мест
    - do: |
        В блоке "Укажите количество билетов" установить 3 взрослых и 1 ребенка
        без места
    - do: Выбрать вагон и любые 3 места в нем
    - do: |
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по-разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: Произошел переход на страницу подтверждения
    - do: |
        Кликнуть по кнопке “Ввести карту и оплатить”
        Ввести данные карты из описания (асессоры пропускают этот шаг)
        Кликнуть по кнопке Оплатить (асессоры пропускают этот шаг)
    - assert: |
        * На странице появился лоадер
        * Через какое-то время произошел переход на страницу успешной покупки -
        хэппи пейдж
    - do: Кликнуть по кнопке "Подробнее о заказе"
    - assert: Произошел переход на страницу заказа со всеми данными заказа
    - do: |
        Кликнуть по гамбургеру (кнопка с 3 точками) в общих действиях по заказу
        - появился список возможных действий (сейчас только Отменить электронную
        регистрацию)

        Кликнуть по действию "Отменить электронную регистрацию"
    - assert: |
        * Появилось модальное окно с заголовком "Вы отменяете электронную
        регистрацию"

    - do: Кликнуть "Подтвердить"
    - assert: |
        * Модальное окно закрылось
        * На странице появилась иконка и подпись для всех 4 билетов "Электронная
        регистрация отменена"
    - do: Снова кликнуть по гамбургеру в общих действиях по заказу
    - assert: Раскрылся список действий, в нем "Восстановить электронную регистрацию"
    - do: Кликнуть на “Восстановить электронную регистрацию”
    - assert: |
        * Появилось модальное окно с заголовком “Вы подтверждаете электронную
        регистрацию”
    - do: Кликнуть Подтвердить
    - assert: |
        * Модальное окно закрылось
        * На странице для всех 4 билетов пропала иконка и текст "Электронная
        регистрация отменена"
    - do: |
        Кликнуть по гамбургеру для взрослого билета + билета без места (рядом с
        кнопкой Сдать билет, относится к конкретному билету) - появился список
        возможных действий (сейчас только Отменить электронную регистрацию)

        Кликнуть Отменить электронную регистрацию
    - assert: |
        * Появилось модальное окно с заголовком “Вы отменяете электронную
        регистрацию”
    - do: Кликнуть Подтвердить
    - assert: |
        * Модальное окно закрылось
        * Для билетов взрослый + детский без места появились иконки и текст
        "Электронная регистрация отменена"
        * Для остальных билетов иконок и текста про ЭР нет
        * В общих действиях (рядом с кнопками Скачать и Распечатать) пропал
        гамбургер с действиями
        * Для билетов по отдельности (рядом с кнопками Сдать билет) есть
        гамбургер с действиями
    - do: Прокликать гамбургеры для каждого из билетов (рядом с кнопками Сдать билет)
    - assert: |
        * Для билетов без ЭР есть действие "Восстановить электронную регистрацию"
        * Для билетов с ЭР есть действие "Отменить электронную регистрацию"

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Если в выбранном поезде нет поля ввода РЖД-бонуса, нужно выбрать другой поезд.
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Нельзя купить билет, используя одну бонусную карту для разных пассажиров':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: Кликунть кнопку "Выбрать место" для одного из поездов
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: В блоке "Укажите количество билетов" установить двух взрослых
    - do: Выбрать любой вагон и два места в нем
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: >-
        Поле "Карта РЖД-бонус" заполнить одинаковыми валидными значениями для
        всех пассажиров
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: |-
        * Переход на страницу "Подтверждение данных" не осуществился
        * Поля РЖД Бонус подсвечиваются красным
        * Под полями есть сообщения об ошибке
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги в кейсе, где требуется ввести данные
  карты и нажать кнопку Оплатить, нужно пропустить.**


  Если тестируем тач-версию, кнопки Распечатать на странице не будет, это
  нормально.

  Для тача кнопку для возврата билетов можно найти, кликнув по гамбургеру рядом
  с информацией о пассажире (три точки).


  Для заполнения форм на странице оплаты использовать тестовые карты.


  Например:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/24


  При прохождении кейса указывать действующий номер телефона (на него будут
  приходить коды через СМС)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'Поочередный возврат билетов (дубль 1202)':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: >-
        Для одного из поездов кликнуть по кнопке покупки (кнопка может называть
        по разному, сейчас - "Выбрать место")
    - assert: Осуществился переход на страницу выбора мест
    - do: >-
        В блоке "Укажите количество билетов" выбрать 1 взрослого, 1 ребенка от 5
        до 10 лет и 1 ребенка до 5 лет
    - do: Выбрать любой вагон и 2 места в нем
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить всю информацию валидными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Перейти к оплате”
    - do: Заполнить всю информацию корректными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по-разному, сейчас называется “Оплатить”
    - assert: >-
        * Через некоторое время произошел переход на страницу заказа

        * Для каждого билета есть кнопка Сдать билет

        * Взрослый билет и билет ребенка без места объединены в один блок

        * Для этих билетов одна кнопка Сдать билет

        * Вверху страницы есть кнопки “Распечатать”, “Скачать”, “Сдать все
        билеты”, “…”
    - do: >-
        Кликнуть по кнопке "Сдать билет" для взрослого пассажира и ребенка без
        места (объединенных в один блок)
    - assert: >-
        * Появилось модальное окно для ввода смс

        * Страница за пределами модального окна затемнена

        * В модальном окне есть заголовок "Вы сдаёте билет. К возврату — [сумма
        к возврату] ₽"

        * Есть предупреждение "Имейте в виду: если ребёнку не исполнилось 10,
        его не пустят в поезд одного."

        * Есть предупреждение "Восстановить покупку будет нельзя."

        * Есть поле для ввода смс с текстом "Введите код, отправленный на номер
        [номер телефона, указанный при бронировании]"

        * На указанный при оформлении заказа номер пришла смс с кодом

        * Есть отсчет времени до отправки следующей смс, начинается с 60 секунд
    - do: 'Ввести код из смс, кликнуть "Подтвердить"'
    - assert: >-
        * На модальном окне появился лоадер

        * Через какое-то время модальное окно закрылось

        * Появилась красная надпись для этих билетов “Возврат”

        * Появился лоадер загрузки квитанции

        * Через некоторое время лоадер пропал, вместо него появилась ссылка
        “Скачать квитанцию” и ссылка "Скачать чек" (у асессоров может не быть
        ссылки на чек - это нормально, так как шаг оплаты пропускается)

        * Рядом со ссылками есть указание суммы к возврату

        * Текст информации для сданных билетов окрасился в серый цвет

        * Вверху страницы есть кнопки “Распечатать” (только в десктопе, в таче
        нет), “Скачать”, “Сдать билет" (название кнопки должно смениться, раньше
        было "Сдать все билеты")
    - do: Кликнуть "Сдать билет" для детского билета с местом
    - assert: >-
        * Появилось модальное окно для ввода смс

        * Страница за пределами модального окна затемнена

        * В модальном окне есть заголовок “Вы сдаёте билет. К возврату — [сумма
        к возврату] ₽”

        * Нет предупреждения “Имейте в виду: если ребёнку не исполнилось 10, его
        не пустят в поезд одного.”

        * Есть предупреждение “Восстановить покупку будет нельзя.”

        * Есть поле для ввода смс с текстом “Введите код, отправленный на номер
        [номер телефона, указанный при бронировании]”

        * На указанный при оформлении заказа номер пришла смс с кодом

        * Есть отсчет времени до отправки следующей смс, начинается с 60 секунд
    - do: 'Ввести код из смс, кликнуть “Подтвердить”'
    - assert: >-
        * На модальном окне появился лоадер

        * Через какое-то время модальное окно закрылось

        * Появилась красная надпись для этого билета “Возврат”

        * Появился лоадер загрузки квитанции

        * Через некоторое время лоадер пропал, вместо него появилась ссылка
        “Скачать квитанцию” и ссылка “Скачать чек”  (у асессоров может не быть
        ссылки на чек - это нормально, так как шаг оплаты пропускается)

        * Рядом со ссылками есть указание суммы к возврату

        * Текст информации для сданного билета окрасился в серый цвет

        * Вверху страницы пропали кнопки “Распечатать”(только в десктопе, в таче
        нет), “Скачать”, “Сдать билет”
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: |-
  Нужен другой пример поезда, этот неактуальный.
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Изменение номера поезда на протяжении маршрута':
    - do: Открыть выдачу Москва — Саратов на любую дату
    - assert: '* На странице есть поезд 047Й'
    - do: Открыть выдачу Тамбов - Саратов на любую дату
    - assert: '* На странице есть поезд 048Й'
    - do: Кликнуть для этого поезда по кнопке покупки Выбрать место
    - assert: |-
        * Осуществился переход на страницу выбора мест
        * В блоке с информацией о поезде вверху страницы - номер поезда 048Й
    - do: Забронировать билет - дойти до шага подтверждения
    - assert: '* На странице подтверждения номер поезда 048Й'
    - do: Нажать Ввести карту и оплатить
    - assert: >-
        - Через какое-то время произошел переход на страницу успешного заказа -
        хэппи пейдж

        - Номер поезда отображается 048Й
    - do: Нажать кнопку "Подробнее о заказе"
    - assert: |-
        - Произошел переход на страницу заказа со всеми данными о заказе
        - Номер поезда на странице - 048Й
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Чекбокс должен появляться для плацкартов, сидячих и общих вагонов в любое
  время года, кроме летних месяцев. Поэтому нужно делать поиск не на летний
  месяц.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Чекбокс "Школьный" установлен':
    - do: Открыть выдачу Москва - Екатеринбург на не летний месяц
    - do: >-
        Для сниппета, у которого есть места в плацкарт, кликнуть по кнопке
        "Выбрать место"
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: В блоке "Укажите количество билетов" установить двух взрослых
    - do: Выбрать два места в любом вагоне плацкарта
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: >-
        Заполнить все поля корректными данными, поле дату рождения заполнить
        так, чтобы пользователям было от 10 до 18 лет
    - assert: >-
        * После заполнения даты появился чекбокс "Школьный тариф: со справкой из
        учебного заведения действует скидка до 50%"
    - do: Установить галку в чекбокс "Школьный тариф" для первого пассажира
    - do: Кликнуть кнопку "Подтвердить заказ и купить"
    - assert: >-
        * Осуществился переход на страницу "Подтверждение данных"

        * На странице есть сообщение на желтом фоне "При посадке на поезд нужно
        предъявить справку из школы"

        * Для первого пассажира тариф - Школьный 10 - 18

        * Для второго пассажира тариф Полный
    - do: Перейти по ссылке из текста на желтом фоне "справку из школы"
    - assert: >-
        * В новой вкладке открылась страница хэлпа в разделе "Дети старше 10
        лет"
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: |-
  Кейс не для асессоров, так как трудно найти поезд без ЭР.
  Для заполнения форм на странице оплаты использовать тестовую карту:,
  Номер карты: 5100003697253468
  CVN: 090
  Дата: 01/20

  Почту указывать для тестинга на yandex-team.
specs:
  'ЖД: Страницы покупки и письмо для поезда, у которого нет ЭР':
    - do: |-
        Перейти на вкладку ЖД
        Найти поезд без ЭР
    - assert: >-
        - Если для всего поезда нет признака ЭР, на выдаче для него появляется
        бейдж "Нужно получить билет в кассе"

        - Бейджа может не быть, если признака ЭР нет только для определенных
        классов
    - do: Для поезда без ЭР кликнуть по кнопке покупки
    - assert: '- Для классов, где нет ЭР, отображается иконка с зачеркнутым значком ЭР'
    - do: |-
        Выбрать места в таком классе
        Дойти до шага подтверждения заказа
    - assert: >-
        - В шапке рядом с бейджем "Местное время" есть ссылка "Нужно получить
        билет в кассе или терминале"

        - Ссылка ведет на хелп в соответствующий раздел
    - do: Оплатить заказ и дойти до страницы успешного заказа
    - do: Нажать "Подробнее о заказе"
    - assert: >-
        - Произошел переход на страницу полного заказа

        * Для билета есть иконка и подпись "Нет электронной регистрации"

        * На странице нет возможных действий, связанных с электронной
        регистрацией (отменить/восстановить)
    - do: 'Открыть письмо, которое пришло на указанную почту после покупки'
    - assert: >-
        * Информация в письме о поезде и пассажире соответствует информации на
        странице заказа

        * В письме есть блок с информацией о том, что в поезде нет ЭР: "Вы
        успешно оплатили билет. На этот рейс нет электронной регистрации —
        посадочный купон нужно получить в кассе или терминале самообслуживания.
        Для этого вам понадобится номер заказа и документ, на который оформлялся
        билет. Обратите внимание, что получить посадочный купон в некоторых
        кассах нельзя. Список касс, в которых можно получить посадочный купон, а
        также часы их работы можно посмотреть здесь."

        * "здесь" - ссылка
    - do: Кликнуть по ссылке "здесь" из письма
    - assert: '* Произошел переход на сайт РЖД, на страницу с формой поиска касс'
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Чекбокс должен появляться для плацкартов, сидячих и общих вагонов в любое
  время года, кроме летних месяцев. Поэтому нужно делать поиск не на летний
  месяц (если тестируете летом, можно смотреть сентябрь).

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Чекбокс "Школьный" появляется для плацкартов, сидячих и общих вагонов':
    - do: Открыть выдачу Москва - Казань не на летний месяц
    - do: >-
        Для сниппета, у которого есть сидячие места и плацкартные кликнуть по
        кнопке покупки (кнопка может называться по разному, сейчас называется -
        "Выбрать место")
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Для сидячего вагона кликнуть Указать пассажиров
    - assert: '* Осуществился переход на страницу ввода данных'
    - do: 'Установить дату рождения, чтобы пассажиру было от 10 до 18 лет'
    - assert: >-
        * После заполнения даты появился чекбокс "Школьный тариф: со справкой из
        учебного заведения действует скидка до 50%"
    - do: Вернуться на страницу выбора мест
    - do: Выбрать место в любом плацкартном вагоне
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: 'Установить дату рождения, чтобы пассажиру было от 10 до 18 лет'
    - assert: >-
        * После заполнения даты появился чекбокс "Школьный тариф: со справкой из
        учебного заведения действует скидка до 50%"
    - do: Открыть выдачу Лабытнанги - Чум не на летний месяц
    - assert: >-
        * На выдаче есть поезд 655М Лабытнанги — Воркута или 653М Лабытнанги —
        Воркута

        * Для этого поезда есть места в общий вагон
    - do: >-
        Кликнуть по кнопке покупки для этого поезда (кнопка может называться по
        разному, сейчас называется "Выбрать место")
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Выбрать место в общем вагоне
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: 'Установить дату рождения, чтобы пассажиру было от 10 до 18 лет'
    - assert: >-
        * После заполнения даты появился чекбокс "Школьный тариф: со справкой из
        учебного заведения действует скидка до 50%"
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Чекбокс не должен появляться для скоростных поездов с номером в диапазоне
  700-788.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Чекбокс "Школьный" не появляется для скоростных поездов':
    - do: Открыть выдачу Москва - Санкт-Петербург НЕ на летнюю дату
    - do: В фильтре "Скоростные поезда" установить чек-бокс для сапсана
    - assert: '* На выдаче остались только сапсаны'
    - do: Для одного из сниппетов кликнуть по кнопке "Выбрать место"
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Выбрать одно место в любом вагоне
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: >-
        Заполнить поле дату рождения заполнить так, чтобы пользователю было от
        10 до 18 лет
    - assert: >-
        * После заполнения даты чекбокс "Школьный тариф: со справкой из учебного
        заведения действует скидка до 50%" не появился
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Тест-кейс сезонный. Будет работать только для покупки билетов на летние
  месяцы. Ровно 1 июня - 31 августа включительно.

  Если нет поездов с ценами на летние месяцы, пропустить кейс.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Чекбокс "Школьный" не появляется в летнее время':
    - do: Открыть выдачу Москва - Екатеринбург на летнюю дату
    - do: >-
        Для сниппета, у которого есть места в плацкарт, кликнуть по кнопке
        покупки (кнопка может называться по разному, сейчас называется "Выбрать
        место")
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Выбрать одно место в плацкартном вагоне
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: >-
        Заполнить поле дата рождения так, чтобы пользователю было от 10 до 18
        лет
    - assert: >-
        * После заполнения даты чекбокс "Школьный тариф: со справкой из учебного
        заведения действует скидка до 50%" не появляется
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отображение комиссии на странице подтверждения данных':
    - do: Открыть выдачу Москва - Екатеринбург через месяц
    - do: >-
        Для одного из поездов кликнуть по кнопке покупки (кнопка может
        называться по разному, сейчас называется "Выбрать место")
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        В блоке пассажиры установить 1 взрослого, 1 ребенка от 5 до 10 лет и 1
        ребенка до 5 лет
    - do: Выбрать 2 места на схеме
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными значениями
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: |-
        * Осуществился переход на страницу "Подтверждение данных"
        * Для всех билетов, кроме детского без места есть значок вопроса
        * Для билета без места есть подпись "Бесплатно"
    - do: Навести на значок для каждого билета
    - assert: |-
        * Раскрылся попап
        * В попапе указана цена билета и сервисный сбор
manual: true
Функциональность: Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги кейса, где требуется ввести данные карты
  и нажать кнопку Оплатить, нужно пропустить.**

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Покупка билетов на поезд, у которого нет схемы и требований':
    - do: Открыть выдачу Усинск - Микунь на завтра
    - do: >-
        Для поезда 305Я кликнуть по кнопке "Выбрать место" (если нет поезда,
        поискать на другие даты)
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * Для сидячего типа внутри класса 3С есть кнопка Указать пассажиров

        * Есть подсказка "Для этих вагонов нет схем, места выбираются
        автоматически"

        ![image](https://jing.yandex-team.ru/files/shenfeld/2021-01-14_11.47.21-ffl46.png)
    - do: >-
        Кликнуть по кнопке Указать пассажиров для одного из сидячих классов без
        схем (внутри класса)
    - assert: |-
        * Произошел переход на страницу ввода данных
        * Справа в корзине со стоимостью есть текст
        **Стоимость билетов
        Будет известна на шаге подтверждения данных.
        Итого
        ... Р**
    - do: |-
        Заполнить все поля валидной информацией

        Пример валидного номера паспорта: 6505 111111
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: >-
        * Осуществился переход на страницу "Подтверждение данных"

        * На странице подтверждения данных вагон и место указаны корректно (нет
        undefined)

        * Номер вагона совпадает с запомненым ранее

        * Схема вагона не отображается

        * Справа в корзине отображается цена без предлога "От"
    - do: Кликнуть кнопку "Оплатить"
    - assert: >-
        * Осуществился переход на страницу оплаты (у асессоров сразу переход на
        страницу заказа, без оплаты)

        * Вагон и место в шапке указаны корректно (нет undefined)
    - do: Заполнить все поля валидными данными (асессоры пропускают)
    - do: Кликнуть кнопку "Оплатить"
    - assert: |-
        * Осуществился переход на хэппи пейдж
        * Вагон и место указаны корректно (нет undefined)
    - do: Нажать "Подробнее о заказе"
    - assert: |-
        - Открылась страница заказа с информацией о бронировании
        * Вагон и место указаны корректно (нет undefined)
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Нужна правка кейса - для поездов РЖД теперь нельзя отменять ЭР.


  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.**

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Создать заказ для поезда, до отправления которого осталось времени, чуть
  больше часа.

  Для этого можно использовать выдачу Москва - Санкт-Петербург, Санкт-Петербург
  - Москва или любую другую с подходящим временем отправления.


  Для этого:

  * Зайти на выдачу

  * Кликнуть по кнопке покупки (кнопка может называть по-разному, сейчас -
  "Выбрать место")

  * Дальше следовать по страницам покупки


  Для заполнения форм на странице оплаты использовать тестовую карту:,

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20
specs:
  'Невозможность возврата и смены статуса ЭР, если до отправления поезда осталось меньше часа':
    - do: >-
        Дойти до хэппи пейдж

        Нажать Подроднее о заказе

        Кликнуть по гамбургеру (кнопка с 3 точками) в общих действиях по заказу
        (рядом с кнопками Скачать и Распечатать) и по гамбургеру рядом с кнопкой
        Сдать билет
    - assert: |-
        * Есть действие "Отменить электронную регистрацию"
        * Есть кнопка "Сдать билет" в общих действиях и в действиях по билету
    - do: 'Дождаться, пока до отправления поезда останется меньше часа'
    - assert: >-
        * За 1 час 15 минут до отправления поезда появилось желтое
        предупреждение с текстом "Через 15 минут вернуть билет онлайн будет
        нельзя. Вы сможете [сдать его только в кассе]."

        * Время постепенно уменьшается

        * За 1 час до отправления поезда пропал гамбургер с действиями в общих
        действиях и гамбургер с действиями для билета

        * За 1 час до отправления поезда пропали кнопки Сдать билет

        * За 1 час до отправления поезда поменялось желтое предупреждение на
        текст “Вернуть билет онлайн на этот поезд нельзя, так как до отправления
        поезда с начальной станции [НазваниеСтанции] осталось меньше часа. Вы
        можете сдать билет в кассе.”

        * За 1 час до отправления поезда вместо кнопки Сдать билет в блоке
        информации о пассажире появилась ссылка "Можно сдать в кассе"
    - do: >-
        Кликнуть по ссылкам [Можно сдать в кассе] у билета и ссылке [сдать билет
        в кассе] на желтом предупреждении
    - assert: >-
        * В новой вкладке открылась страница помощи на разделе о том, как сдать
        билет в кассе
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Ждем восстановления международного сообщения (на рейсах пополнения не
  получается тестить в тестинге).

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Кнопка Купить на УФС':
    - do: Открыть выдачу Москва - Смоленск на через месяц
    - assert: >-
        * Для поезда 027Б или 023Й или 055Б или 001Б или 039Щ или других есть
        кнопка "Купить на УФС" (если кнопки нет, или нет поезда, поискать на
        другую дату)
    - do: |-
        Кликнуть по кнопке Купить на УФС
        Запомнить номер поезда и дату
    - assert: '* Осуществился переход на сайт УФС на выбранную дату и в выбранный поезд'
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Для асессоров: чтобы выполнить кейс, нужно будет выждать 30 минут на шаге 7.
  Можно открыть нужную страницу в отдельной вкладке и пока ждете, выполнять
  другие кейсы.


  События в метрику проверять только в десктопе.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отображение попапа с подсказкой после того, как время бронирования истекло':
    - do: >-
        Открыть выдачу Москва - Казань на завтра с прописанным параметром в
        метрику &_ym_debug=1 (как это сделать см инструкцию)
    - do: Для одного из поездов кликнуть кнопку покупки
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        Выбрать место в любом вагоне, кликнуть по кнопке  перехода на следущий
        шаг покупки. (Кнопка может называться по разному, сейчас называется
        "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: Кликнуть по кнопке Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Время на оплату 30 минут
    - do: Открыть консоль
    - do: Подождать 30 минут
    - assert: >-
        * В консоли появилось событие в метрику на показ попапа
        trains_order_payment_timeout

        * Появился попап с подсказкой:
         "Вы долго не могли решиться, поэтому выбранные места теперь может забронировать кто-то другой" и кнопкой "Выбрать места заново"
    - do: Обновить страницу
    - assert: '* Страница обновилась, отображается попап с подсказкой'
    - do: Кликнуть по кнопке "Перейти к выбору мест"
    - assert: >-
        * В консоли появилось событие в метрику на клик по кнопке "Перейти к
        выбору мест" trains_cancel-order-by-tab

        * Осуществился переход на страницу выбора мест
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги в кейсе, где требуется ввести данные
  карты и нажать кнопку Оплатить, нужно пропустить.**


  Если не сформировался чек (такое может быть) и не появилась ссылка, пропускать
  шаги, где нужно кликнуть по ссылке.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: События в метрику на всех страницах покупки':
    - do: >-
        Открыть выдачу Москва - Челябинск через месяц с прописанным к урлу
        параметром для тестирования метрики ?_ym_debug=1
    - do: Открыть консоль браузера
    - do: >-
        Для одного из поездов кликнуть по кнопке покупки (кнопка может
        называться по разному, сейчас называется "Выбрать место")
    - assert: |-
        * Осуществился переход на страницу выбора мест
        * В консоли появилось событие trains_order_places_page_load
    - do: 'Выбрать любое место, кликнуть по кнопке "Указать пассажиров"'
    - assert: >-
        * Осуществился переход на страницу "Данные пассажиров"

        * В консоли появилось событие в метрику trains_order_places_submit и
        trains_order_passengers_page_load
    - do: 'Не заполняя поля ввода, кликнуть по кнопке "Проверить заказ"'
    - assert: '* В консоли появилось событие trains_order_passengers_validation_failed'
    - do: >-
        Заполнить все поля валидной информацией и кликнуть по кнопке "Проверить
        заказ"
    - assert: >-
        * Осуществился переход на страницу с подтверждением информации о закзае

        * В консоли появились события в метрику trains_order_passengers_submit и
        trains_order_confirm_page_load
    - do: Кликнуть по кнопке "Перейти к оплате"
    - assert: >-
        * Осуществился переход на страницу оплаты

        * В консоли появилось событие в метрику trains_order_confirm_submit и
        trains_order_payment_page_load


        (у асессоров нет страницы оплаты, этих событий не будет)
    - do: >-
        Заполнить все поля валидной информацией и кликнуть "Оплатить" (асессоры
        сразу попадают на страницу заказа)
    - assert: |-
        * После успешной оплаты осущестивлся переход на страницу хэппи пейдж
        * В консоли появилось событие trains_happy_page_order_shown
    - do: Кликнуть по кнопке "Подробнее о заказе"
    - assert: |-
        - Произошел переход на страницу полного заказа
        - В консоли появилось событие trains_order_info_page_loaded
    - do: Кликнуть по кнопке "Скачать билеты"
    - assert: '* В консоли появилось событие trains_order_download_tickets_click'
    - do: Кликнуть по кнопке "Распечатать"
    - assert: '* В консоли появилось событие trains_order_print_tickets_click'
    - do: Кликнуть по кнопке "Сдать билет" в общих действиях
    - assert: '* В консоли появилось событие trains_order_refund_all_tickets_click'
    - do: Кликнуть по кнопке "Сдать билет" около информации о пассажире
    - assert: '* Появилось событие trains_order_refund_ticket_click'
    - do: |-
        Кликнуть по гамбургеру в общих действиях
        Кликнуть по действию Отменить электронную регистрацию
        Ввести код
        Кликнуть Подтвердить
    - assert: '* Появилось событие trains_order_electronic_registration_status_changed'
    - do: |-
        Кликнуть по гамбургеру около инфрмации о билете
        Кликнуть по действию Восстановить электронную регистрацию
        Ввести код
        Кликнуть Подтвердить
    - assert: '* Появилось событие trains_order_electronic_registration_status_changed'
    - do: >-
        Кликнуть по ссылке Скачать чек оплаты (ссылки на чек может не быть -
        тогда пропустить этот шаг)
    - assert: '* Появилось событие trains_order_download_purchase_receipt_click'
    - do: >-
        Кликнуть Сдать билет

        Кликнуть Подтвердить

        Дождаться окончания возврата

        Кликнуть по ссылке Скачать чек для возврата (ссылки на чек может не быть
        - тогда пропустить этот шаг)
    - assert: '* Появилось событие trains_order_download_refund_receipt_click'
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Для событий в метрику в консоли, в строке с событием характерно наличие "Reach
  goal." В консоли события в метрику выглядят так:


  ![image](https://jing.yandex-team.ru/files/tyrande/Moskva__Ekaterinburg_bilety_napoezd_raspisanie_poezdov_6_marta_vtornik__Yandeks.Raspisaniya_2018-03-05_16-58-00.jpg)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: События в метрику для фильтров на выдаче':
    - do: >-
        Открыть выдачу Москва - Санкт-Петербург на завтра с прописанным
        параметром в метрику ?_ym_debug=1
    - assert: >-
        * На странице есть фильтры: "Цены", "Типы вагонов", "Скоростные поезда",
        "Время отправления/прибытия", "Станции"
    - do: Открыть консоль
    - assert: >-
        В консоли есть события в метрику для показа фильтров:


        * Цены - trains_filter_priceRange_show

        * Тип вагона - trains_filter_trainTariffClass_show

        * Скоростные поезда - trains_filter_highSpeedTrain_show

        * Время - trains_filter_departure_show и trains_filter_arrival_show

        * Станции - trains_filter_stationTo_show и
        trains_filter_stationFrom_show
    - do: Выбрать значение в фильтре Цены
    - assert: '* В консоли появилось событие в метрику trains_filter_priceRange_click'
    - do: Выбрать значение в фильтре Тип вагона
    - assert: >-
        * В консоли появилось событие в метрику
        trains_filter_trainTariffClass_click
    - do: Выбрать значение в фильтре Скоростные поезда
    - assert: >-
        * В консоли появилось событие в метрику
        trains_filter_highSpeedTrain_click
    - do: >-
        Снять все выбранные чекбоксы, выбрать любое из значений в фильтре Время
        во вкладке Отправление
    - assert: >-
        * При снятии фильтров в консоли появились события
        trains_filter_priceRange_click, trains_filter_trainTariffClass_click,
        trains_filter_highSpeedTrain_click

        * При выборе фильтра Время в консоли появилось событие в метрику
        trains_filter_departure_click
    - do: Снять выбранный фильтр Время
    - assert: '* В консоли появилось событие в метрику trains_filter_departure_click'
    - do: 'Перейти во вкладку Прибытие фильтра Время, выбрать любое из значений'
    - assert: '* В консоли появилось событие в метрику trains_filter_arrival_click'
    - do: В фильтре Станции во вкладке Отправление выбрать любое из значений
    - assert: '* В консоли появилось событие в метрику trains_filter_stationFrom_click'
    - do: В фильтре Станции во вкладке Прибытие выбрать любое из значений
    - assert: '* В консоли появилось событие в метрику trains_filter_stationTo_click'
    - do: В этом же фильтре выбрать еще одно значение
    - assert: '* В консоли появилось событие в метрику trains_filter_stationTo_click'
    - do: Нажать на кнопку Сбросить фильтры
    - assert: '* В консоли появилось событие trains_filter_reset_click'
    - do: >-
        Установить несколько фильтров так, чтобы на выдаче остался хотя бы один
        сниппет с кнопкой покупки
    - do: Кликнуть по кнопке покупки для любого сниппета
    - assert: >-
        * Произошел переход на страницу выбора мест

        * В консоли есть событие в метрику trains_filtersBeforeOrder: в
        параметрах для фильтров, которые были выбраны, установлено значение
        true:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_082V_Belgorod_Sankt-Peterburg_iz_Moskvy_v_Sankt-Peterburg_na_14_noyabrya__Yandeks.Puteshestviya_2018-11-13_18-19-43.png)
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Бывает такой случай, что на выдаче есть кнопка покупки, но мест нет. Это
  происходит из-за кеша. Происходит он редко, но его нужно проверять.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Обработка случая, когда на выдаче есть кнопка покупки, но мест нет':
    - do: >-
        Открыть какую-нибудь выдачу, для популярного направления, например,
        Москва - Санкт-Петербург на сегодня
    - do: >-
        Найти на выдаче поезд, для которого осталось мало свободных мест (меньше
        5-10)
    - do: >-
        Кликнуть для этого поезда по кнопке покупки (кнопка может называться по
        разному, сейчас называется "Выбрать место")
    - assert: |-
        * Осуществился переход на страницу выбора мест
        * Есть места для выбора
    - do: >-
        Открыть эту же выдачу в соседней вкладке и забронировать все свободные
        места для этого поезда (важно помнить, что бронь действует только 15
        минут)
    - do: >-
        Вернуться на выдачу в первой вкладке и кликнуть по кнопке покупки для
        поезда, у которого бронировали места
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * На странице есть блок и информацией о поезде и сообщение: На заданном
        направлении (или поезде) мест нет
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  В тестинге нужно указать свою почту на yandex-team и свой настоящий номер
  телефона.

  * Перейти на вкладку ЖД билеты

  * Выполнить любой поиск на дату, например, Москва - Санкт-Петербург

  * Кликнуть по кнопке Выбрать место для поезда, у которого даты отправления и
  прибытия разные, то есть прибывает на следующий день

  * Дальше следовать по страницам покупки, почту указывать на yandex-team, номер
  телефона свой личный

  * После покупки попадаем на хэппи пейдж, чтобы увидеть страницу полного
  заказа, нужно нажать "Подробнее о заказе"


  (не для асессоров):

  Для заполнения форм на странице оплаты использовать тестовую карту:

  Номер карты: 5555 5555 5555 4444

  CVN: 060

  Дата: 01/20
specs:
  'ЖД: Письма и смс о покупке':
    - do: |-
        Создать заказ для 1 взрослого пассажира, как описано в Preconditions
        Оплатить заказ
    - assert: >-
        * Через какое-то время на почту пришло письмо о покупке

        * Тема письма "Билет на поезд ..." (единственное число)

        * Вся информация о поезде и пассажире соответствует купленному билету

        * Блок с билетами в письме называется “Пассажир” (единственное число)

        * Сумма к оплате соответствует сумме на странице заказа

        * На указанный номер телефона пришла смс с текстом (пример): "Ваш билет
        на поезд 076Э 20 ноября: https://ya.cc/b/S2BvtM3A6bzuy"

        * Информация о поезде в смс соответствует купленному билету (дата
        отправления, номер)

        * При переходе по ссылке попадаем на страницу созданного заказа
        (асессорам для доступа к заказу нужно заменить
        https://travel-test.yandex.ru/ на https://travel.crowdtest.yandex.ru/)
    - do: |-
        Создать заказ для 1 взрослого и 1 ребенка без места
        Оплатить заказ
    - assert: >-
        * Через какое-то время на почту пришло письмо о покупке

        * Тема письма “Билет на поезд …” (единственное число)

        * Вся информация о поезде и пассажирах соответствует купленным билетам

        * Блок с билетами в письме называется “Пассажиры” (множественное число)

        * Сумма к оплате соответствует сумме на странице заказа

        * На указанный номер телефона пришла смс с текстом (пример): "Ваши
        билеты на поезд 076Э 20 ноября: https://ya.cc/b/S2BvtM3A6bzuy" (Асессорам не приходит СМС - это нормально)

        * Информация о поезде в смс соответствует купленным билетам

        * При переходе по ссылке попадаем на страницу созданного заказа
        (асессорам для доступа к заказу нужно заменить
        https://travel-test.yandex.ru/ на https://travel.crowdtest.yandex.ru/)
    - do: Кликнуть по ссылке с номером заказа в письме
    - assert: >-
        * Произошел переход на страницу созданного заказа (асессорам для доступа
        к заказу нужно заменить https://travel-test.yandex.ru/ на
        https://travel.crowdtest.yandex.ru/)
    - do: Кликнуть по ссылке "странице заказа" в письме
    - assert: >-
        * Произошел переход на страницу созданного заказа (асессорам для доступа
        к заказу нужно заменить https://travel-test.yandex.ru/ на
        https://travel.crowdtest.yandex.ru/)
    - do: Кликнуть по ссылке "Помощь" в письме
    - assert: >-
        * Произошел переход на страницу поддержки в раздел "Шаг 6. Подготовьте
        документы для поездки"
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги в кейсе, где требуется ввести данные
  карты и нажать кнопку Оплатить, нужно пропустить.**


  Все скрины в кейсе соответствуют десктопной версии. В тач-версии отображение
  отличается, но суть меняться не должна.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Беспересадочные вагоны на страницах покупки':
    - do: Открыть выдачу Усинск - Микунь через неделю
    - assert: >-
        * На выдаче есть поезд, у которого возможно разное время прибытия

        ![image](https://jing.yandex-team.ru/files/shenfeld/2021-04-16_16.53.43-4f8ow.png)
    - do: Кликнуть по кнопке покупки для этого поезда
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * В блоке информации о поезде вверху страницы есть время в пути, оно
        посчитано верно относительно времени отправления и прибытия

        * У некоторых вагонов при раскрытии класса есть красная приписка
        "беспересадочный: прибывает в ...", указанное здесь время отличается от
        основного времени прибытия (которое отображается вверху страницы в блоке
        с маршрутом)

        * У вагонов, где время прибытия совпадает с основным временем прибытия,
        отображается только черная приписка "прибывает в ..." после номера
        вагона
    - do: Выбрать место в одном из беспересадочных вагонов
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по-разному, сейчас называется "Указать пассажиров"
    - assert: >-
        * Осуществился переход на страницу ввода данных

        * Основное время прибытия в блоке с маршрутом изменилось на выбранное

        * Время в пути изменилось, посчитано верно, учитывая новое время
        прибытия

        * Появился блок с текстом "Вы выбрали беспересадочный вагон, поэтому
        время прибытия изменилось 14:40 → 13:18"


        ![image](https://jing.yandex-team.ru/files/semirka/Screenshot_72.png)
    - do: >-
        Заполнить поля валидными данными, для тестинга в поле с почтой ввести
        почту на yandex-team
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по-разному, сейчас называется “Проверить заказ”)
    - assert: >-
        * Осуществился переход на страницу подтверждения

        * Указано выбранное время прибытия

        * Появился блок с текстом "Вы выбрали беспересадочный вагон, поэтому
        время прибытия изменилось 14:40 → 13:18"

        ![image](https://jing.yandex-team.ru/files/semirka/Screenshot_74.png)
    - do: >-
        Кликнуть по кнопке перехода на следующий шаг покупки. (Кнопка может
        называться по-разному, сейчас называется “Ввести карту и оплатить”)
    - assert: >-
        * Осуществился переход на страницу оплаты (у асессоров сразу на страницу
        успешного заказа)
    - do: |-
        Заполнить все поля валидной информацией. (асессоры не выполняют шаг)
        Номер карты: 5100003697253468
        CVC: 090
        Срок действия: 01/24
    - do: Кликнуть по кнопке "Оплатить" (асессоры не выполняют шаг)
    - assert: >-
        * Произошел переход на страницу успешного заказа - хэппи пейдж

        * Указано верное выбранное время прибытия

        * На указанную при оформлении билета почту пришло письмо, в нем верное
        выбранное время прибытия
    - do: >-
        Вернуться на страницу выбора мест для того же поезда 305МЯ Усинск —
        Микунь
    - do: Выбрать место в обычном вагоне (не беспересадочном)
    - do: Пройти все шаги покупки до станицы хэппи пейдж
    - assert: |-
        * На всех страницах покупки время прибытия указано основное
        * Нет блока с текстом о смене времени прибытия
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.**

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Оформление нескольких билетов на одного пассажира':
    - do: Открыть выдачу Москва - Екатеринбург через месяц
    - do: Для одного из поездов кликнуть кнопку "Выбрать место"
    - assert: '* Осуществиля переход на страницу выбора мест'
    - do: В блоке "Укажите количество билетов" установить 3 взрослых
    - do: Выбрать 3 места в любом из вагонов
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: >-
        Для первых двух пассажиров заполнить информацию одинаковыми данными -
        одинаковые ФИО, дата рождения, номер паспорта.

        Оставшегося пассажира заполнить любой валидной информацией
    - do: Кликунть кнопку "Подтверждение заказа"
    - assert: |-
        * Осуществился переход на страницу "Подтверждение данных"
        * На странице есть 3 блока с информацией о трех пассажирах
        * Два блока из трех содержат одинаковую информацию
    - do: Кликнуть по кнопке перехода на следующий шаг
    - do: |-
        Заполнить все поля валидной информацией. (асессоры не выполняют шаг)
        Номер карты: 5100003697253468
        CVC: 090
        Срок действия: 01/20
    - do: Кликнуть кнопку "Оплатить"
    - assert: |-
        * Платеж прошел успешно
        * Осуществился переход на страницу "Ваши билеты"
        * На странице есть 3 блока с информацией о трех пассажиров.
        * Два блока из трех содержат одинаковую информацию
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты.


  Открыта страница выбора мест для поезда, у которого есть целое купе.

  Выдача Москва - Екатеринбург через месяц.

  Чтобы открыть страницу выбора мест, нужно кликнуть по кнопке покупки на
  выдаче. Сейчас кнопка называется "Выбрать место" (название кнопки может
  меняться)
specs:
  'ЖД: Поведение при выборе мест в целом купе для нескольких пассажиров':
    - do: В блоке "Укажите количество билетов" установить двух взрослых пассажиров
    - do: Выбрать тип вагона купе
    - do: Найти вагон с гендерными местами (с иконкой мальчика и девочки)
    - assert: >-
        ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_060U_Moskva__Nizhnevartovsk_iz_Moskvy_v_Ekaterinburg_na_11_sentyabrya__Yandeks.Raspisaniya_2017-08-11_16-32-21.jpg)
    - do: >-
        Кликнуть по одному из мест, у которого нет подписи мужское, или женское,
        или смешанное купе
    - assert: >-
        * Раскрылся попап выбора пола

        * На попапе есть текст "Решите, каким будет купе

        Вы первый покупатель билетов в этом купе, поэтому можете сами определить
        его тип" и три кнопки - Смешанное/Женское/Мужское
    - do: >-
        Выбрать снова гендерный вагон и кликнуть по одному из мест, у которого
        нет подписи мужское или женское купе
    - assert: '* Раскрылся селектор пола'
    - do: Кликнуть по кнопке Смешанное
    - do: Выбрать еще одно место в этом купе
    - assert: '* Селектор не появился'
manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Вернуть кейс после восстановления сообщения!
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Корректность минимальных цен для поездов БЧ':
    - do: Открыть выдачу Смоленск - Москва через месяц
    - do: >-
        Для одного из поездов с перевозчиком БЧ запомнить цену От для всех типов
        вагонов и кликнуть по кнопке "Выбрать место"
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Выбрать 1 место в одном из вагонов
    - assert: >-
        *  Минимальные цены в каждом типе вагонов соответствуют ценам на выдаче
        Примерный внешний вид ![image](https://jing.yandex-team.ru/files/semirka/Screenshot_91-1.png)

manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Нельзя оформлять на одного ребенка больше одного места по детскому тарифу':
    - do: Открыть выдачу Москва - Ярославль через месяц
    - do: Для одного из поездов кликнуть по кнопке "Выбрать место"
    - assert: Осуществился переход на страницу подтверждения данных
    - do: |
        В блоке "Укажите количество билетов" выбрать 1 взрослого, 2 ребенка от 5
        до 10 лет
    - do: Выбрать 3 места в любом вагоне
    - do: |
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: |
        Заполнить все данные пассажиров валидной информацией.
        Для детей ввести разные ФИО, выбрать свидетельства о рождении и указать
        одинаковые номера документов.
    - do: |
        Кликнуть кнопку перехода на следующий шаг покупки (может называться по
        разному, сейчас называется "Проверить заказ")
    - assert: |
        * Переход на страницу "Подтверждение данных" не осуществился
        * Над полем ввода "серии и номера документа" появляется попап с сообщением:
        "Такой номер свидетельства о рождении уже указан у другого ребенка.
        Если вы хотите оформить дополнительное место, сделать это можно за полную стоимость.
        для оформления выберите тариф на перевозку взрослого пассажира."
    - do: Для детей выбрать тип документа заграничный паспорт
    - do: |
        ФИО, дату рождения и номер документа для детей заполнить одинаковой
        валидной информацей
    - do: Кликнуть кнопку “Проверить заказ и купить”
    - assert: |
        * Переход на страницу “Подтверждение данных” не осуществился
        * Над полем ввода "серии и номера документа" появляется попап с сообщением:
        "Такой номер свидетельства о рождении уже указан у другого ребенка.
        Если вы хотите оформить дополнительное место, сделать это можно за полную стоимость.
        для оформления выберите тариф на перевозку взрослого пассажира."
    - do: |
        Для детей стереть все заполненные поля, чтобы для них остались выбраны
        только документы - Свидетельство о рождении
        Кликнуть по кнопке "Проверить заказ и купить"
    - assert: |
        * Перехода на следующий шаг покупки не произошло
        * Не заполненные поля подсвечены красной рамкой, для них отображаются
        подсказки

manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
  Перейти на покупку для любого поезда

  Открыта страница ввода данных пассажиров.
  Выдачу можно использовать любую, например, Москва - Смоленск через месяц.
specs:
  'ЖД: Поле для ввода номера телефона на странице ввода данных':
    - do: Установить курсор в поле телефон
    - assert: '* Рамка поля выделяется желтым'
    - do: Ввести в поле +
    - assert: |-
        * Ввод происходит
        * Загорается валидация
    - do: 'Стереть +, ввести в поле 8'
    - assert: |-
        * Ввод происходит
        * Загорается валидация
    - do: Ввести номер телефона длиной больше 11 цифр
    - do: Кликнуть "Проверить заказ и купить"
    - assert: >-
        - Поле обводится красным

        - Появляется текст "Номер указан неправильно. Укажите номер в формате
        +73333333333"
    - do: |-
        Ввести номер с 11 символами
        Кликнуть "Проверить заказ и купить"
    - assert: |-
        - Открывается страница подтверждения
        - Ошибок нет
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты

  Найти поезд с гендерным купе или СВ, где СРАЗУ есть два типа купе: целые (с
  невыбранным полом) + с определенным полом (мужские или женские или смешанные
  места). Можно искать на выдаче Москва - Екатеринбург, или на другом
  направлении с купе/СВ.

  Открыть страницу выбора мест, для найденого поезда. Не менять кол-во билетов
  (должен быть выбран 1 билет). Открыть вагон с гендерным признаком (приписка
  "Раздельные купе").

  ![](https://jing.yandex-team.ru/files/shenfeld/2021-02-15_14.58.33-qg912.png)
specs:
  'ЖД: Поведение при выборе мест в гендерном вагоне для одного пассажира':
    - do: 'Кликнуть по целому купе (без подписи мужское, женское или смешанное)'
    - assert: >-
        * Появился попап предлагающий выбрать каким будет это место: мужским,
        женским или смешанным
    - do: Кликнуть по кнопке Мужское
    - assert: '* Место выбралось'
    - do: Выбрать другое место в этом же купе
    - assert: >-
        * Появился попап, предлагающий выбрать каким будет это место: мужским,
        женским или смешанным
    - do: Кликнуть по кнопке Женское
    - assert: |-
        * Попап закрылся
        * Место выбралось
    - do: >-
        Кликнуть по месту с уже определенным гендером (у которого сразу была
        приписка Мужское, Женское или смешанное)
    - assert: |-
        * Место выбралось
        * Остальные места активны для выбора
    - do: >-
        Кликнуть по месту в целом купе без пола (без подписи мужское, женское
        или смешанное)
    - assert: '* Раскрылся попап для выбора пола купе'
    - do: Выбрать другой вагон в данном классе (при наличие других вагонов)
    - assert: '* Селектор пола пропал'
manual: true
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Поле "Указать РЖД-бонус" появляется только для перевозчика РЖД/ФПК обычные
  поезда, некоторые фирменные и ласточки и РЖД/ДОСС ласточки и сапсаны.

  Для остальных перевозчиков поле "Указать РЖД-бонус" появляться не должна.

  Поле действует для всех типов документов, кроме военного билета.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Разные случаи с полем РЖД-бонус':
    - do: Открыть выдачу Москва - Смоленск через месяц
    - do: >-
        Кликнуть по кнопке покупки для ласточки (кнопка может называться по
        разному, сейчас называется "Выбрать место")
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: 'Выбрать место, кликнуть по кнопке "Указать пассажиров"'
    - assert: |-
        * Осуществился переход на страницу "Данные пассажиров"
        * На странице есть дропдаун "РЖД-бонус"
    - do: 'Перебрать все типы документов, кроме военного билета'
    - assert: >-
        * Для всех типов документов есть дропдаун "РЖД-бонус"

        * Если его развернуть, то появляется поле для ввода:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-09-18_16.39.06-1ugqd.png)
    - do: Установить тип документа Военный билет
    - assert: '* Дропдаун "РЖД-бонус" пропал'
    - do: |-
        Вернуться к выдаче
        Сделать перепоиск Москва - Санкт-Петербург на любую дату
    - do: >-
        Для поезда перевозчика Гранд кликнуть по кнопке покупки (если нет
        кнопки, посмотреть на другие даты)

        ![](https://jing.yandex-team.ru/files/shenfeld/2021-02-08_19.09.44-8nmyp.png)
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Кликнуть по кнопке "Указать пассажиров"
    - assert: |-
        * Осуществился переход на страницу "Указать пассажиров"
        * Дропдауна "РЖД-бонус" нет
    - do: Перебрать все типы документов
    - assert: '* Дропдауна "РЖД-бонус" не появилось'
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Для любой выдачи оформить заказ на одного пассажира. Запомнить место, который
  выбирали и дойти до шага подтверждения данных.
specs:
  'ЖД: Отмена брони':
    - do: >-
        На шаге подтверждения данных дождаться прогрузки информации и перейти на
        страницу выбора мест, кликнув по вкладке вверху страницы


        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-09-18_16.39.44-mh04v.png)
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * Место, которое было выбрано, доступно для выбора (бронирование заказа
        отменилось)
manual: true
Функциональность: Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Найти гендерный вагон, где есть целое купе и мужское, женское или смешанное,
  так чтобы с мужским/женским/смешанным купе рядом было целое.

  ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_044E_Moskva__Habarovsk_iz_Moskvy_v_Ekaterinburg_na_1_oktyabrya__Yandeks.Raspisaniya_2017-09-01_14-55-03.jpg)

  Для такого поезда открыть страницу выбора мест, выбрать вагон с гендерным
  признаком.

  Можно брать направление Москва - Санкт-Петербург на завтра, где есть места в
  купе.
specs:
  'ЖД: Автоопределение пола в целом вагоне, когда выбрано гендерное купе':
    - do: Установить 2 взрослых
    - do: >-
        Выбрать одно место в мужском, женском или смешанном купе, в зависимости
        от того, рядом с каким купе есть целое
    - assert: >-
        * В этом и в соседних купе места доступно 5 мест для выбора

        * В остальных купе места для выбора не доступны


        ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_100E_Moskva__Vladivostok_iz_Moskvy_v_Ekaterinburg_na_26_yanvarya__Yandeks.Raspisaniya_2017-12-26_17-57-22.jpg)
    - do: Выбрать в целом купе оставшееся место
    - assert: >-
        * При клике по месту в целом купе не появился попап для выбора
        гендерного признака для целого купе (гендерный признак автоматически
        подтянулся от того купе, место в котором было выбрано первым)

        ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_100E_Moskva__Vladivostok_iz_Moskvy_v_Ekaterinburg_na_26_yanvarya__Yandeks.Raspisaniya_2017-12-26_17-58-08.jpg)
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: >-
        Заполнить все поля валидной информацией, пол выбрать в зависимости от
        гендерного типа (если выбирали мужское купе, установить мужской пол и
        т.д.)
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: >-
        * Осуществился переход на страницу "Подтверждение данных"

        * Если выбиралось мужское или женское купе на странице подтверждения
        данных есть подпись женское или мужское (см. скрин)

        * Может быть желтое предупреждение, что места сменились - это нормально


        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-09-18_16.41.31-j42ei.png)
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Такой случай возможен, если, пока пользователь оформлял билет, другие
  пользователи забронировали все места для пассажиров с животными в этом вагоне.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Покупка на место для пассажиров с животным в сапсаны, когда нет свободных мест для пассажиров с животными':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - do: Установить фильтр Скоростные поезда -> Сапсан
    - do: >-
        Для одного из сапсанов кликнуть кнопку покупки (может называться по
        разному, сейчас называется "Выбрать место")
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Открыть ту же страницу выбора мест в новой вкладке
    - do: >-
        Для обеих страниц раскрыть класс, у которого есть подпись "Места для
        пассажиров с животными"
    - assert: >-
        * В этом вагоне 4 или меньше свободных места (если какие-то
        забронированы)
    - do: >-
        Для первой вкладки в блоке выбора пассажиров установить столько
        пассажиров, сколько cвободных мест в вагоне для пассажиров с животными
    - do: Выбрать все свободные места для пассажиров с животными
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: Кликнуть кнопку "Проверить заказ"
    - assert: |-
        * Осуществился переход на страницу "Подтверждение данных"
        * Данные прогрузились, ошибок нет
    - do: Вернуться ко второй вкладке
    - do: Выбрать в том же вагоне для пассажиров с животными одно место
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: Кликнуть кнопку "Проверить заказ"
    - assert: >-
        * Перехода на страницу "Подтверждение данных" не осуществилось

        * Появилось окошко с ошибкой: "По данным требованиям мест нет,
        попробуйте изменить требования к местам", либо "На заданном направлении
        (или поезде) мест нет"


        ![image](https://jing.yandex-team.ru/files/tyrande/Zapolnenie_dannyh_passazhirov_v_poezde_752A_Moskva__Sankt-Peterburg_iz_Moskvy_v_Sankt-Peterburg_na_29_aprelya__Yandeks.Raspisaniya_2018-04-28_10-35-57.jpg)
manual: true
Функциональность: Бронь с разными условиями
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отображение информации об ИМ на страницах покупки':
    - do: Открыть выдачу Москва - Смоленск на завтра
    - do: >-
        Для одного из поездов кликнуть по кнопке покупки (кнопка может
        называться по-разному, сейчас называется "Выбрать место")
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * Под кнопкой перехода на следующий шаг "Указать пассажиров" есть
        информация "С использованием веб-системы «ИМ»."
    - do: Кликнуть по кнопке "Указать пассажиров"
    - assert: >-
        * Осуществился переход на страницу "Данные пассажиров"

        * Под кнопкой перехода на следующий шаг “Проверить заказ и купить” есть
        информация “С использованием веб-системы «ИМ».”
    - do: Заполнить все поля валидной информацией
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: >-
        * Осуществился переход на страницу "Подтверждение данных"

        * Под кнопкой перехода на следующий шаг “Ввести карту и оплатить” есть
        информация “С использованием веб-системы «ИМ».”
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Цена от в seo-тексте над выдачей':
    - do: Открыть выдачу Москва - Самара на сегодня
    - assert: >-
        * На выдаче есть seo-текст с ценой от

        * Цена от совпадает с наименьшей ценой на выдаче:


        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_15.12.27-q3v37.png)
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отмена заказа на странице подтверждения':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - do: >-
        Для одного из поездов кликнуть по кнопке покупки (кнопка может
        называться по разному, сейчас называется "Выбрать место")
    - assert: '* Осуществисля переход на страницу выбора мест'
    - do: Выбрать одно место в любом вагоне (запомнить выбираемое место и вагон)
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - do: >-
        Кликнуть по ссылке Отменить заказ:


        Десктоп:
        https://jing.yandex-team.ru/files/shenfeld/2020-09-18_16.42.41-8d86b.png

        Тач:
        https://jing.yandex-team.ru/files/shenfeld/2020-09-18_16.43.39-muzba.png
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Подождать несколько минут и обновить страницу
    - assert: '* Место, которое бронировали, доступно для выбора'
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Бронирование с пассажиром без отчества':
    - do: Открыть выдачу Москва - Самара на завтра
    - do: Для одного из поездов кликнуть по кнопке "Выбрать место"
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        Выбрать любое место

        Кликнуть по кнопке  перехода на следующий шаг покупки "Указать
        пассажиров"
    - do: >-
        Заполнить все поля валидной информацией, документ выбрать Паспорт РФ.
        Заполнить Отчество любым значением. Установить чекбокс "Нет отчества"
    - assert: >-
        - Поле отчество очистилось и задизейблилось

        -


        ![](https://jing.yandex-team.ru/files/shenfeld/2020-09-18_16.47.59-ugwbb.png)
    - do: Кликнуть по кнопке “Проверить заказ и купить”
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * В поле "Отчество" проставлен "-"
    - do: Вернуться на страницу ввода данных пассажира
    - do: В поле "Тип документа" установить Заграничный паспорт
    - do: В поле Фамилия и Имя ввести фамилию и имя на латинице
    - do: В поле Отчество установить -
    - assert: |-
        - Поле отчество задизейблилось
        - Установился чекбокс "Нет отчества"
    - do: Остальные поля заполнить любой валидной информацией
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ и купить”)
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * В поле “Отчество” проставлен “-”
manual: true
Устройство:
  - Тач
  - Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Найти поезд, для которого есть места в женском, мужском и смешанном купе.
  (Либо поезд, где есть много мест в целые купе. Тогда нужно будет выбирать
  соотвествущий гендерный признак). Можно брать направление Москва -
  Екатеринбург.
specs:
  'ЖД: Для гендерных мест передаем правильные значения gender':
    - do: Перейти для найденного в подготовке поезда на страницу выбора мест
    - do: Выбрать вагон с гендерными местами
    - do: Выбрать одно место в смешанном купе
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: 'Открыть консоль браузера, перейти в сетевые запросы (Network)'
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: '* Осуществился переход на страницу "Подтверждение данных"'
    - do: >-
        В строке поиска написать "createOrder", нажать на появившуюся строчку
        createOrder и в разделе Preview найти строку compartmentGender

        См скриншот

        https://nda.ya.ru/t/a46e5wja4MtMi6
    - assert: '* Значение поля compartmentGender = mixed'
    - do: Вернуться на страницу выбора мест
    - do: Очистить сетевые запросы
    - do: Выбрать место в женском купе
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ и купить”)
    - do: >-
        В строке поиска написать "createOrder", нажать на появившуюся строчку
        createOrder и в разделе Preview найти строку compartmentGender
    - assert: '* Значение поля compartmentGender = female'
    - do: Вернуться на страницу выбора мест
    - do: Очистить сетевые запросы
    - do: Выбрать место в мужском купе
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ и купить”)
    - do: >-
        В строке поиска написать "createOrder", нажать на появившуюся строчку
        createOrder и в разделе Preview найти строку compartmentGender
    - assert: '* Значение поля compartmentGender = male'
manual: true
Функциональность: Бронь с разными условиями
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Была проблема с тем, что если время в пути больше двух суток, оно
  отображалось, как 1 день 24 часа, такого быть не должно.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Корректная обработка времени в пути за несколько суток':
    - do: Открыть выдачу Москва - Канск-Енисейский на любую дату
    - assert: >-
        * На выдаче время в пути для поездов обрабатывается корректно (нет
        артефактов 2 дня 24 часа и подобных им)
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Найти страницу выбора мест или создать искусственно, забронировав места, так
  чтобы в двух соседних купе было по два или три свободных места, как показано
  на скриншоте:


  ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_044E_MOSKVA_YaR__HABAROVS_1_iz_Moskvy_v_Ekaterinburg_na_23_oktyabrya__Yandeks.Raspisaniya_2017-10-16_13-37-54.jpg)


  Можно использовать выдачу Москва - Екатеринбург через неделю, либо любую
  другую.
specs:
  'ЖД: Бронирование мест в разных отсеках для 4 пассажиров':
    - do: Установить 4 взрослых пассажиров
    - do: >-
        Выбрать 4 свободных места в соседних купе, как показано на скриншоте:

        ![image](https://jing.yandex-team.ru/files/tyrande/Vybor_mest_v_poezde_044E_MOSKVA_YaR__HABAROVS_1_iz_Moskvy_v_Ekaterinburg_na_23_oktyabrya__Yandeks.Raspisaniya_2017-10-16_13-39-45.jpg)
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить всю информацию валидными данными
    - do: Кликнуть кнопку "Подтверждение заказа"
    - assert: >-
        * Осуществился переход на страницу "Подтверждение данных"

        * На странице нет ошибок

        * Данные прогрузулись и соответствуют заполняемым данным на предыдущих
        шагах

        * Если выбранные места были изменены, есть текст на желтом фоне
        "Выбранные места успели купить. Мы подобрали другие. Если они не
        подходят — выберите заново. Введенные данные сохранятся."
manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Для стрижей и сапсанов на выдаче не отображаются лишние места':
    - do: Открыть выдачу Москва - Нижний Новгород на завтра
    - do: 'Отфильтровать выдачу по фильтру "Скоростные поезда", Стриж'
    - do: Запомнить сколько свободных мест для одного из стрижей в СВ
    - do: >-
        Для этого поезда кликунуть по кнопке покупки (кнопка может называться по
        разному, сейчас называется выбрать место "Выбрать место")
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * Для СВ во всех классах в сумме свободных мест столько же, сколько на
        выдаче
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - do: 'Отфильтровать выдачу по фильтру “Скоростные поезда”, Сапсан'
    - do: Запомнить сколько свободных мест для одного из сапсанов
    - do: Для этого поезда кликнуть по кнопке покупки
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: Просуммировать свободные места для каждого класса
    - assert: >-
        * Полученная сумма равна запомненному количеству мест с выдачи (может
        быть чуть меньше свободных, если на выдаче было закэшировано значение)
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Рассылка для заказов, в которых при возврате деньги от партнера получили, но не смогли вернуть пользователю на карту':
    - do: >-
        Просим кого-нибудь из бэкендеров ломать бэкенд по этой задаче
        https://st.yandex-team.ru/RASPFRONT-3566
    - do: Подписываемся на рассылку rasp-train-purchase-errors-testing
    - do: Оформляем билет
    - do: Открыть выдачу Москва - Екатеринбург поездами на завтра
    - do: Для одного из поездов кликнуть по кнопке "Выбрать место"
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидными данными
    - do: >-
        Установить галку "Подтверждаю согласие с Условиями приобретения
        электронных билетов"
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Перейти к оплате”
    - do: |-
        Заполнить все поля валидной информацией.
        Номер карты: 5555 5555 5555 4444
        CVC: 060
        Срок действия: любая будущая дата
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Оплатить”
    - do: Перейти на вкладку "Возврат билетов"
    - do: Установить галочку в билете для сдачи
    - do: Кликнуть по кнопке сдать билет
    - do: >-
        Ввести код, присаланный на номер телефона указанный при заполеннии
        данных пассажира
    - do: Кликнуть по кнопе "Подтвердить"
    - assert: '* Билет сдался'
    - do: Открыть рассылку rasp-train-purchase-errors-testing
    - assert: >-
        * На рассылку пришло письмо с содержаением:


        Проблемы при возврате билетов по заказу
        42f916b3e81a4106927ff9f057213ccd.


        order uid: 42f916b3e81a4106927ff9f057213ccd

        status:

        message:

        blank_ids:

        92832

        trust_refund_id: None


        * Данные в письме совпадают с данными в заказе, билет по которому был
        сдан
manual: true
Функциональность: Внутренние вещи для удобства
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Проверяется случай, когда до начала возврата произошла ошибка (у нас на
  бекенде или на стороне ИМ).


  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.**

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  До прохождения тест-кейса необходимо создать заказ для одного пассажира. Можно
  использовать выдачу Москва - Екатеринбург или любую другую.


  Для этого:


  * Зайти на выдачу

  * Кликнуть по кнопке покупки (кнопка может называть по разному, сейчас -
  “Выбрать место”)

  * Дальше следовать по страницам покупки

  * На странице успешного заказа (хэппи пейдж) кликнуть по кнопке "Подробнее о
  заказе"


  Для заполнения форм на странице оплаты использовать тестовую карту:,

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20
specs:
  'ЖД: Отображение ошибки, когда до возврата или смены статуса ЭР что-то пошло не так':
    - do: |-
        Для созданного заказа находимся на странице заказа
        Открыть консоль браузера, сетевые запросы (Network)
    - do: Кликнуть по кнопке Сдать билет
    - assert: '* Открылось модальное окно возврата'
    - do: |-
        Во вкладке Network установить галку Offline
        Ввести код из смс
        Кликнуть Подтвердить
    - assert: '* Появилось модальное окно с ошибкой "Не удалось выполнить операцию"'
    - do: |-
        Отключить режим Offline
        Кликнуть по кнопке Перезагрузить страницу
    - assert: '* Открылась страница заказа'
    - do: >-
        Кликнуть по кнопке Отменить электронную регистрацию (открывается по
        клику на иконку гамбургера, рядом с кнопками Скачать и Распечатать)
    - assert: '* Открылось модальное окно'
    - do: |-
        Установить режим Offline в браузере
        Кликнуть Подтвердить
    - assert: '* Появилось модальное окно с ошибкой “Не удалось выполнить операцию”'
    - do: |-
        Отключить режим Offline
        Кликнуть по кнопке Вернуться на главную
    - assert: '* Осуществился переход на главную страницу Путешествий'
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Сортировка по времени в пути':
    - do: Открыть выдачу Москва - Иваново на понедельник
    - do: >-
        Отсортировать выдачу по времени в пути


        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_15.14.43-pwtp2.png)
    - assert: '* Сниппеты на выдаче остортировались по возрастанию времени в пути'
    - do: Кликнуть по кнопке сортировки еще раз
    - assert: >-
        * Сниппеты в выдаче отсортировались в обратном порядке - по уменьшению
        времени в пути

        * Значок на кнопке поменялся
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Блок с информацией на странице направления':
    - do: >-
        Открыть страницу направления для Москва - Санкт-Петербург (это не страница выдачи!!!) по указанному дальше адресу:
        Тестинг: https://travel-test.yandex.ru/trains/moscow--saint-petersburg/
        Прод: https://travel.yandex.ru/trains/moscow--saint-petersburg/
        **Стенд асессоров:**
        https://travel.crowdtest.yandex.ru/trains/moscow--saint-petersburg/
        Пролистать страницу вниз до блока с информацией
    - assert: >-
        * Под расписанием есть текст из семи блоков: 
        - информация по маршруту
        - информация о стоимости (этот блок отобржается только если есть цена, минимальная и максимальная цены берутся из сниппетов со страниц выдачи, соответсвие цены проверять не нужно)
        - информация о длительности поездки
        - как купить дешевые билеты
        - Другие популярные ж/д направления
        - Популярные отели в Санкт-Петербурге
        - Отзывы на поезда по направлению

        * По-умолчанию все блоки развернуты

        * Для трех блоков с вопросами есть иконка для сворачивания блоков:
        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-12-24_12.03.52-67j6g.png)

        * В блоке Другие популярные ж/д направления есть несколько ссылок на
        другие поиски - около 4-6)
    - do: >-
        Проверить содержание текста (для этого развернуть над текстом все поезда
        по кнопке "Посмотреть все поезда на X", где X - дата завтра в формате число и месяц)
    - assert: >-
        * Вся информация совпадает с выдачей (вокзалы, время, фирменные поезда,
        стоимость билетов, время в пути), но стопроцентного сходства может и не
        быть, потому что данные могут отличаться в зависимости от даты поездки.

        * У слов используются верные склонения
    - do: Для трех блоков с вопросами свернуть текст, кликнув по иконке стрелки
    - assert: |-
        * Текст свернулся
        * Стрелка перевернулась
    - do: Перейти по любой из ссылок из блока Другие популярные ж/д направления
    - assert: Осуществился переход на страницу направления по выбранному маршруту (на выдаче могут быть поезда с подписью "Места закончились" или крутящийся лоадер)
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Тач
  - Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Оплата
description: |-
  Асессорам проходить кейс в проде.
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отображение фрейма оплаты в разных браузерах':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - do: >-
        Для одного из поездов кликнуть по кнопке покупки (кнопка может
        называться по разному, сейчас называется "Выбрать место")
    - assert: '* Осущетсвился переход на страницу выбора мест'
    - do: '* Пройти шаги покупки до шага Оплата для одного пассажира'
    - assert: >-
        * При переходе на страницу оплаты наш фрейм подменился фреймом биллинга

        * На странице есть поле для ввода номера карты, cvc, есть кнопка
        Оплатить
    - do: >-
        Пройти шаги 1-3 для браузеров:

        - если тестируете десктоп: IE11, Edge, Safari (если есть возможность),
        Chrom, Opera

        - если тестируете тач, проверить в любом браузере на вашей платформе.
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Рейсы обратно':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - assert: >-
        * Снизу выдачи есть кнопка
        ![image](https://jing.yandex-team.ru/files/tyrande/Moskva__Ekaterinburg_raspisanie_transporta_ibilety_nasamolet_i_poezd_21_noyabrya_vtornik__Yandeks.Raspisaniya_2017-11-20_17-09-44.jpg)
        с текстом "Посмотреть рейсы обратно на [завтрашняя дата]"
    - do: 'Вернуться на страницу с выдачей, навести курсор на кнопку снизу'
    - assert: |-
        * Появился указатель-рука
        * Кнопка и надпись “Рейсы обратно” стали красными
    - do: Кликнуть по кнопке
    - assert: '* Осуществился поиск по направлению Екатеринбург - Москва на завтра'
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты

  Перейти на покупку для любого поезда


  Открыта страница ввода данных пассажиров для любого количества пассажиров и
  любой выдачи
specs:
  'ЖД: Скролл страницы ввода данных до ошибки':
    - do: >-
        Заполнить все поля валидными данными, кроме фамилии. Фамилию не
        заполнять или заполнить цифрами
    - do: Кликнуть по кнопке "Проверить заказ и купить"
    - assert: |-
        * Перехода на следующую странице не осуществилось
        * Страница проскролилась вверх до поля с фамилией
        * Поле с фамилией выделено красной рамкой
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  **Актуальная карта**
  Дорожная карта

  ФИО: Колосов Олег Семенович
  Паспорт РФ: 4505120245
  День рождения: 02.03.1977
  № карты: 9001900091199
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отображение тарифа "Карта" на странице подтверждения данных':
    - do: Открыть выдачу Москва - Санкт-Петербург поездами на завтра
    - do: Отфильтровать выдачу по сапсанам
    - do: Для одного из сапсанов кликнуть по кнопке "Выбрать место"
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: |-
        * Заполнить поля данными из описания для дорожной карты
        * Остальные поля заполнить любой валидной информацией
    - do: Кликнуть кнопку "Подтверждение заказа"
    - assert: >-
        * На странице подтверждения есть информация о тарифе:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-09-09_12.20.37-8z1z5.png)
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  В сапсанах для граждан РФ, если пассажир попадает в возрастную категорию от 10
  до 21 лет должен выставляться тариф юниор. Для пассажиров возрастной категории
  >= 60 лет  должен выставляться тариф синьор.

  Пассажирам других государств этих же возрастных категорий должен выставляться
  полный тариф.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Тарифы синьор и юниор в сапсанах':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - do: Отфильтровать выдачу по сапсанам
    - do: >-
        Для одного из сапсанов кликнуть по кнопке покупки (кнопка может
        называться по разному, сейчас называется "Выбрать место")
    - do: >-
        Выбрать место, кликнуть по кнопке  перехода на следущий шаг покупки.
        (Кнопка может называться по разному, сейчас называется "Указать
        пассажиров"
    - do: >-
        Заполнить все поля валидной информацией, установить возраст пассажира от
        10 до 21 года включительно.
    - do: Кликнуть кнопку "Проверить заказ"
    - assert: >-
        * Тариф на странице ЮНИОР:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-09-18_16.52.45-qqrq3.png)
    - do: Вернуться на страницу ввода данных
    - do: Установить дату рождения >= 60 лет
    - do: Кликнуть кнопку "Проверить заказ"
    - assert: '* Тариф на странице Senior'
    - do: Вернуться на страницу ввода данных
    - do: Установить тип документа - иностранный документ
    - do: >-
        Страну выдачи выбрать любую, поле номер документа заполнить валидной
        информацией
    - do: Кликнуть кнопку "Проверить заказ"
    - assert: '* На странице тариф - полный'
    - do: Вернуться на странице ввода данных
    - do: Установить возраст пассажира от 10 до 21 года включительно
    - do: Кликнуть кнопку "Проверить заказ"
    - assert: '* На странице тариф - полный'
manual: true
Функциональность: Бронь с разными условиями
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Пока нет международных поездов.
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Последовательное бронирование Россия - Россия, Россия - другая страна':
    - do: Открыть выдачу Москва - Екатеринбург через месяц
    - do: >-
        Для одного из поездов кликнуть по кнопке покупки (кнопка может
        называться по разному, сейчас называется "Выбрать место")
    - do: >-
        Выбрать место, кликнуть по кнопке  перехода на следущий шаг покупки.
        (Кнопка может называться по разному, сейчас называется "Указать
        пассажиров"
    - do: Заполнить все поля валидной информацией
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - do: >-
        На странице подтверждения сделать перепоиск по направлению Москва -
        Минск на ту же дату
    - do: Для одного из поездов кликнуть по кнопке покупки
    - do: >-
        Выбрать место, кликнуть по кнопке  перехода на следущий шаг покупки.
        (Кнопка может называться по разному, сейчас называется "Указать
        пассажиров"
    - do: 'Заполнить все поля валидной информацией, ФИО латинскими буквами'
    - do: Кликнуть кнопку "Проверить заказ"
    - assert: |-
        На странице подтверждения бронь прошла успешно:

        * Отобразились данные
        * Не появилось модального окна с ошибкой
manual: true
Функциональность: Бронь с разными условиями
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты

  Для любого поезда дойти в покупке до шага подтверждения заказа.
  Запомнить место, которое выбирали.
specs:
  'ЖД: Корректное изменение информации на странице подтверждения':
    - do: Со страницы подтверждения вернуться на страницу "Ввод данных пассажиров"
    - assert: |-
        * Осуществился возврат на страницу заполнения данных
        * Все поля на странице заполнены
    - do: Изменить ФИО и кликнуть “Проверить заказ и купить”
    - assert: |-
        * Осуществился переход на страницу подтверждения данных
        * ФИО изменилось
        * Место совпадает с выбранным ранее
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Выбор мест в вагоне':
    - do: >-
        Открыть выдачу Москва - Санкт-Петербург через месяц с прописанным праметром
        ?_ym_debug=1 и перейти на страницу выбора мест, кликнув по кнопке
        покупки (кнопка может называться по разному, сейчас называется "Выбрать
        место")

        PS если что-то не сработало - попробуйте заменить "?" на "&"
    - assert: >-
        * Произошел переход на страницу выбора мест

        * Каждой цене для каждого класса соответствует свой цвет, этими цветами
        окрашены места в вагонах

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_072E_Sankt-Peterburg_Ekaterinburg_iz_Permi_v_Ekaterinburg_na_31_yanvarya__Yandeks.Puteshestviya_2019-01-17_13-02-32.png)

        * В классах вагонов, где цена всего одна, места в вагонах белые

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_072E_Sankt-Peterburg_Ekaterinburg_iz_Permi_v_Ekaterinburg_na_31_yanvarya__Yandeks.Puteshestviya_2019-01-17_13-03-15.png)
    - do: В блоке "Укажите количество билетов" установить трех взрослых
    - do: В блоке “Выберите тип вагона” выбрать тип  вагона, где есть свободные места для всех категорий нижние, верхние, нижние боковые, верхние боковые
    - do: Открыть консоль браузера
    - do: На схеме кликнуть по нижнему месту
    - assert: >-
        * В консоли появилось событие в метрику: trains_place_selected

        * Место, по которому кликали, стало желтым

        * Цена, появившаяся в разделе "Стоимость билетов" для этого места равна
        цене, указанной для этого цвета

        * Места недоступные для выбора стали полупрозрачными и не кликабельными

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_072E_Sankt-Peterburg_Ekaterinburg_iz_Permi_v_Ekaterinburg_na_31_yanvarya__Yandeks.Puteshestviya_2019-01-17_12-55-28.png)
    - do: Кликнуть по соседнему нижнему месту
    - assert: >-
        * Место, по которому кликали, стало желтым

        * Места недоступные для выбора стали полупрозрачными и не
        кликабельными:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_072E_Sankt-Peterburg_Ekaterinburg_iz_Permi_v_Ekaterinburg_na_31_yanvarya__Yandeks.Puteshestviya_2019-01-17_12-59-18.png)
    - do: Кликнуть по оставшемуся верхнему месту
    - assert: >-
        * Место, по которому кликали, стало желтым

        * Все остальные места полупрозрачные и не кликабельные:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_072E_Sankt-Peterburg_Ekaterinburg_iz_Permi_v_Ekaterinburg_na_31_yanvarya__Yandeks.Puteshestviya_2019-01-17_12-59-51.png)
manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Кейс будет отрабатывать, если в одном купе есть достаточное количество
  свободных мест, но места выбираются в разных купе (фишка экспресса).


  Добавлена проверка попапа гендера при переходе назад на страницу выбора мест,
  поэтому:

  Для прохождения кейса требуется найти поезд с гендерными купе, где пол хотя бы
  в одном купе еще не был определен.

  ![image](https://jing.yandex-team.ru/files/shenfeld/2019-09-18_11.54.00-3bnl7.png)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Попап выбора гендера не теряется при переходе с подтверждения после смены мест':
    - do: Открыть выдачу Москва - Санкт-Петербург поездами через месяц
    - do: >-
        Для поезда, у которого есть свободные места в купе (такие, как требуется
        в описании кейса), кликнуть по кнопке "Выбрать место"
    - do: Установить два взрослых пассажира
    - do: Выбрать тип вагона Купе (гендерное)
    - do: >-
        Выбрать 2 места в разных купе, где пол еще не был определен, выбрать
        любой пол (или места в неопределенном купе + определенном, тогда пол
        должен быть такой, какой уже определен в одном из купе)

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_016A_Moskva_Murmansk_iz_Moskvy_v_Sankt-Peterburg_na_3_maya__Yandeks.Puteshestviya_2019-04-12_13-06-36.png)
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидной информацией
    - do: Кликнуть кнопку "Проверить заказ и купить"
    - assert: >-
        * Произошел переход на страницу подтверждения

        * На странице есть желтый блок с текстом "Выбранные места успели купить.
        Мы подобрали другие. Если они не подходят — выберите заново. Введенные
        данные сохранятся." и кнопкой "Выбрать места заново"

        * На схеме одно из выбранных мест заменено другим местом
    - do: Кликнуть по кнопке "Выбрать места заново"
    - assert: '* Осуществился переход на страницу выбора мест, в класс с тем же вагоном'
    - do: 'Кликнуть снова по месту в гендерном купе, где пол не определен'
    - assert: '* Появляется попап для выбора пола'
    - do: Выбрать любой пол
    - assert: '* Попап закрылся, место выбралось'
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Была проблема, что для некоторых общих вагонов выбранное место отображалось
  как  NaN


  Кейс нужно проверять в проде. В тестинге для этого поезда нет цены.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Корректное отображение места для общих вагонов':
    - do: Открыть выдачу Поспелиха - Барнаул на все дни
    - assert: '* На выдаче есть поезд 110Н Рубцовск — Омск'
    - do: Для этого поезда кликнуть по кнопке выбор даты
    - do: >-
        В раскрывшемся календаре  кликнуть по одной из кликабельных ближайших
        дат
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        Кликнуть по кнопке  перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется "Указать пассажиров"
    - do: Заполнить все поля валидной информацией
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - assert: >-
        * На странице подтверждения номер вагона и места отображаются нормально,
        в виде числа
manual: true
Функциональность: Бронь с разными условиями
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  **yandex** login  для тестового паспорта (можно использовать свой):
  vladlen@yandex.ru password: v12345678

  **Для асессоров** Как авторизоваться:

  * Нажать на кнопку Войти в правом верхнем углу

  * На открывшейся странице в тестовом паспорте авторизоваться тестовым
  пользователем. Можно использовать учетную запись: vladlen@yandex.ru password:
  v12345678

  * Произойдет переход в тестинг Путешествий https://travel-test.yandex.ru (у
  асессоров нет доступов)

  * После этого нужно заменить в урле https://travel-test.yandex.ru на
  https://travel.crowdtest.yandex.ru - в верхнем правом углу должен появиться
  логин, под которым авторизовались в тестовом паспорте.

  Вход в учетную запись на yandex.ru не выполнен


  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Авторизация из учетной записи на странице покупки':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - do: >-
        Для одного из поездов кликнуть по кнопке покупки (кнопка может
        называться по-разному, сейчас называется “Выбрать место”)
    - do: 'Выбрать класс вагона и место, кликнуть "Ввести данные"'
    - do: Заполнить все поля валидными данными
    - do: Кликнуть по кнопке входа в учетную запись - "Войти"
    - assert: Осуществился переход на страницу паспорта
    - do: 'Выбрать аккаунт, кликнуть "Войти"'
    - assert: >-
        Осуществился переход на сервис поездов - на страницу выбор мест, все
        введенные данные сброшены. 
    - do: 'Выбрать класс вагона и место, кликнуть "Ввести данные"'
    - do: Заполнить все поля валидными данными
    - do: |-
        Кликнуть по иконке залогина в правом верхнем углу
        Кликнуть по кнопке Выйти
    - assert: |-
        Осуществился переход на сервис поездов - на страницу выбор мест, все
        введенные данные сброшены. 
        В правом верхнем углу есть кнопка Войти
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Событие в метрику для поисков на следующий день':
    - do: >-
        Открыть выдачу на сегодня, в которой будут только рейсы на завтра
        (например, Владивосток - Екатеринбург на сегодня) с прописанным
        параметром в метрику _ym_debug=1
    - assert: В выдаче только рейсы на следующий день
    - do: Открыть консоль
    - assert: >-
        В консоли есть событие в метрику onlyTomorrowSegments: true:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vladivostok__Ekaterinburg_bilety_napoezd_raspisanie_poezdov_20_aprelya_pyatnitsa__Yandeks.Raspisaniya_2018-04-20_16-24-54.png)
    - do: >-
        Открыть выдачу на сегодня, в которой будут рейсы на сегодня (например,
        "Москва - Екатеринбург"  любым транспортом)
    - assert: 'В консоли есть событие в метрику onlyTomorrowSegments: false'
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Кейс ждет восстановления сообщения.
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Схема для подтипа 66К':
    - do: Открыть выдачу Москва - Минск на завтра
    - do: >-
        Для рейса 001Б кликнуть по кнопке покупки (кнопка может называться
        по-разному, сейчас называется "Выбрать место")
    - assert: Открылась страница выбора мест
    - do: Открыть схему каждого вагона для каждого класса вагона
    - assert: Схема показывается для каждого вагона
manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Оплата
description: |-
  **Асессорам проходить этот кейс в проде**
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Обновление страницы оплаты':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - do: >-
        Для одного из поездов кликнуть по кнопке покупки (кнопка может
        называться по-разному, сейчас называется “Выбрать место”)
    - do: 'Выбрать место, кликнуть “Ввести данные”'
    - do: Заполнить все поля валидными данными
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ”)
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Перейти к оплате”
    - do: |-
        Дождаться загрузки формы оплаты
        Обновить страницу
    - assert: |-
        * Не происходит перехода со страницы оплаты на предыдущие шаги
        * Таймер продолжает отсчет оставшегося времени
        * Ошибок нет
    - do: Обновить страницу еще несколько раз
    - assert: |-
        * Не происходит перехода со страницы оплаты на предыдущие шаги
        * Таймер продолжает отсчет оставшегося времени
        * Ошибок нет
    - do: Вернуться браузерной стрелкой назад
    - assert: Осуществился переход на страницу подтверждения
    - do: Перейти на шаг выбора мест
    - assert: Осуществился переход на страницу выбора мест
    - do: Перейти на шаг ввода данных
    - assert: Осуществился переход на страницу ввода данных
    - do: Заполнить все поля валидной информацией
    - do: Перейти на шаг подтверждения
    - assert: Осуществился переход на страницу подтверждения
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Нельзя бронировать со свидетельством до 18 лет, только до 14+1 месяц
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Поле для ввода свидетельства о рождении на странице ввода данных':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - do: >-
        Для одного из сниппетов кликнуть по кнопке покупки (кнопка может
        называться по-разному, сейчас называется "Выбрать место")
    - assert: Осуществился переход на страницу выбора мест
    - do: Выбрать одно место
    - do: Кликнуть "Ввести данные"
    - assert: Осуществился переход на страницу ввода данных пассажиров
    - do: >-
        В поле "Дата рождения" ввести такую дату, чтобы возраст пассажира был
        меньше 18 лет - например, 01.01.2010
    - do: >-
        В поле "Документ" выбрать Свидетельство о рождении, в поле "Серия и
        номер документа" ввести валидный номер свидетельства - например,
        XXНН123456
    - do: Остальные поля заполнить валидными данными
    - do: Кликнуть по кнопке "Проверить данные"
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Ошибок нет
    - do: Вернуться на страницу ввода данных
    - do: >-
        В поле "Серия и номер документа" ввести номер без римских цифр -
        например, НН123456
    - do: Кликнуть "Проверить заказ и купить"
    - assert: >-
        * Перехода на страницу подтверждения не произошло

        * Поле "Серия и номер документа" подсвечивается красным

        * Под полем ошибка: Проверьте номер. Должны быть латинские буквы x, i,
        v, затем две русские и ещё 6 цифр
    - do: |-
        Ввести валидный номер с буквами в нижнем регистре (например, xxоо876543)
        Кликнуть "Проверить заказ и купить"
    - assert: >-
        * Ошибок нет

        * Произошел переход на страницу подтверждения

        * Номер свидетельства о рождении отображается со всеми буквами в верхнем
        регистре (XXОО876543)
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Невозможность перехода на следующий шаг, если не выбрано место':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - do: >-
        Для одного из сниппетов кликнуть по кнопке покупки (кнопка может
        называться по-разному, сейчас называется "Выбрать место")
    - assert: Осуществился переход на страницу выбора мест
    - do: Не выбирая место кликнуть кнопку "Указать пассажиров"
    - assert: >-
        * Перехода на следующий шаг покупки не произошло

        * Над кнопкой появился попап “Выберите тип вагона и класс обслуживания”.
        Если тестируем тач, то попап "Выберите еще 1  место"
    - do: Выбрать 1 место
    - do: Кликнуть кнопку "Указать пассажиров"
    - assert: Осуществился переход на страницу ввода данных
    - do: Вернуться на страницу выбора мест
    - do: >-
        Выбрать билеты: 2 взрослых, 1 детский (от 5 до 10 лет), 1 детский (до 5
        лет)
    - do: Выбрать 2 места
    - do: Кликнуть кнопку "Указать пассажиров"
    - assert: |-
        * Перехода на следующий шаг покупки не произошло
        * Над кнопкой появился попап "Выберите еще одно место"
    - do: Убрать один взрослый билет и выбрать 2 места
    - do: Кликнуть кнопку "Указать пассажиров"
    - assert: Осуществился переход на страницу ввода данных
manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Кейс проверяет случай, когда ЭР есть и мы оформляем билет на поезд, который
  уже ушел с начальной станции.

  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты

  Создать заказ для одного взрослого на сегодняшнюю дату, чтобы поезд уже ушел.

  Для этого:

  * Перейти на выдачу Москва - Санкт-Петербург на сегодня
  * Для поезда 120В кликнуть по кнопке "Выбрать место" и выбрать в любом вагоне место №10
  * Пройти все шаги покупки

  Для заполнения форм на странице оплаты использовать тестовую карту (не для
  асессоров):
  Номер карты: 5100003697253468
  CVN: 090
  Дата: 01/20
specs:
  'ЖД: Невозможность возврата билета, если поезд уже ушел с начальной станции':
    - do: На хэппи пейдж после покупки нажать кнопку "Подробнее о заказе"
    - assert: >-
        * Произошел переход на страницу заказа со всеми данными заказа

        * Под блоком с информацией о рейсе есть текст на желтом фоне "Вернуть
        билет онлайн на этот поезд нельзя, поскольку он проходящий и уже
        отправился со станции Москва (Казанский вокзал). Вы можете сдать билет в
        кассе вокзала."

        * Нет кнопок Сдать билет, вместо них есть ссылка "Можно сдать в кассе"
        (в блоке Пассажиры)

        * Нет действия Отменить электронную регистрацию

        * Есть действия Скачать и Распечатать (Распечатать только в десктопе)
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Не для асессоров - нужно хачить заказ.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Создать заказ для одного взрослого на сегодняшнюю дату и воспроизвести
  ситуацию, когда билет был получен в кассе.

  Для этого:

  * Зайти на выдачу

  * Кликнуть по кнопке покупки (кнопка может называть по разному, сейчас -
  “Выбрать место”)

  * Дальше следовать по страницам покупки, купить билет


  Для заполнения форм на странице оплаты использовать тестовую карту:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20


  * Смоделировать ситуацию, когда билет получили в кассе, можно попросить у
  людей из ИМ.
specs:
  'ЖД: Невозможность возврата билета, если билет был получен в кассе':
    - do: Перейти на страницу заказа для поезда из подготовки
    - assert: >-
        * Над заказом есть текст на желтом фоне “Вернуть билет онлайн нельзя,
        так как вы получили бумажный билет в кассе или терминале. Вы можете
        сдать билет в кассе.”

        * Есть приписка "Выдан посадочный купон" рядом с билетом

        * Нет кнопок Сдать билет

        * Нет действий смены статуса ЭР

        * Есть действия Скачать и Распечатать

        https://jing.yandex-team.ru/files/shenfeld/2020-09-23_19.00.48-5asrf.png
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Асессоры не смогут проверить кейс, так как для них пропускаем шаг оплаты в
  тестинге - чек не формируется.


  По поводу ИНН - в чеках должен отображаться ИНН перевозчика. В случае, если он
  нам не известен, отображаем ИНН ИМ и отправляем письмо на рассылку
  rasp-train-purchase-errors, что не удалось добавить перевозчика в чек.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Создать заказ для одного взрослого.

  Для этого:

  * Зайти на выдачу

  * Кликнуть по кнопке покупки (кнопка может называть по разному, сейчас -
  “Выбрать место”)

  * Дальше следовать по страницам покупки, купить билет

  * При тестировании в тестинге в поле с почтой ввести почту на yandex-team


  Для заполнения форм на странице оплаты использовать тестовую карту:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20
specs:
  'ЖД: Информация о заказе в чеке':
    - do: >-
        Открыть pdf-файл с чеком из письма об оплате (письмо должно прийти на
        почту, указанную при оформлении заказа)
    - assert: >-
        Файл с чеком открылся, чек содержит информацию о заказе:

        * Для каждого пассажира - Услуги перевозки пассажира ж/д транспортом,
        место; Дополнительные услуги перевозчика, место; Сервисный сбор, место

        * ИНН поставщика (перевозчика)

        * Внизу чека информация о поезде, маршруте, дате, местном времени
        отправления, вагоне.


        Пример: Заказ билета на поезд 082И из Москвы (Казанский вокзал) в
        Екатеринбург-Пасс. 08 мая 2018 года в 13:10, вагон 03
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.**


  Кейс проверяет, что если ЭР отменена, то билет можно сдать в любое время до
  отправления пассажира со станции его посадки

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Создать заказ для одного взрослого на сегодняшную дату, чтобы до отправления
  поезда оставалось чуть больше часа. Можно смотреть на поездах:

  * скоростном поезде (Сапсан, Ласточка), найти можно на Москва - Питер и
  обратно

  * поезде с перевозчиком НЕ РЖД, а любым другим - на любом направлении:

  ![](https://jing.yandex-team.ru/files/shenfeld/2020-11-25_11.00.34-3v50s.png)

  Иначе может не быть возможности отменить ЭР на странице заказа.

  Если не удалось найти поезд, удовлетворяющий условиям, и при этом чтобы до
  отправления поезда оставалось чуть больше часа - пропустите кейс.


  Создать заказ:

  * Зайти на выдачу

  * Кликнуть по кнопке покупки (кнопка может называть по разному, сейчас -
  “Выбрать место”)

  * Дальше следовать по страницам покупки

  * На странице успешного заказа (хэппи пейдж) кликнуть по кнопке "Подробнее о
  заказе"


  Для заполнения форм на странице оплаты использовать тестовую карту:,

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20
specs:
  'ЖД: Возврат билета, когда до отправления поезда осталось меньше часа и электронная регистрация отменена':
    - do: Перейти на страницу заказа из подготовки
    - assert: >-
        * Есть кнопки Сдать билет рядом с информацией о пассажире и в общих
        действиях по заказу

        * Есть действие Отменить электронную регистрацию рядом с информацией о
        пассажире и в общих действиях по заказу (по клику на гамбургер)
    - do: Кликнуть по кнопке Отменить электронную регистрацию
    - assert: '* Появилось окно для подтверждения'
    - do: Кликнуть кнопку Подтвердить
    - assert: '* На билете появился текст "Электронная регистрация отменена" и иконка'
    - do: |-
        Дождаться, когда до отправления поезда останется меньше часа
        Обновить страницу
    - assert: |-
        * На странице нет желтых предупреждений о невозможности возврата
        * Есть кнопки Сдать билет
    - do: Кликнуть кнопку Сдать билет
    - assert: '* Появилось окно для подтверждения'
    - do: Кликнуть кнопку Подтвердить
    - assert: >-
        * Через какое-то время осуществился возврат билета (красный статус
        Возврат)
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Склеенные нитки беспересадочных поездов на выдаче':
    - do: Зайти на выдачу Усинск-Микунь на завтра
    - assert: >-
        * На выдаче есть поезд с припиской "беспересадочный вагон"

        * Время прибытия записано через многоточие (от минимального до
        максимального)

        * Для времени в пути есть приписка От

        * Есть иконка ? рядом с временем прибытия

        * Верстка в сниппете не едет, выглядит так:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_15.18.45-vmpqs.png)
    - do: Кликнуть по иконке ?
    - assert: '* Появился попап с подсказкой "Есть вагоны с разным временем прибытия"'
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Отправляем события при несовпадении данных в поиске и на выборе мест (из-за
  кэша): searchPagePriceInconsistency (разница между минимальной ценой на выдаче
  и на странице выбора мест) и searchPagePlaceInconsistency (разница в
  количестве свободных мест на выдаче и странице выбора мест).


  В кейсе проверяем только searchPagePlaceInconsistency, так как разницу в ценах
  сложно воспроизводить.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: События в метрику при несовпадении цен и количества мест на выдаче и на странице выбора мест':
    - do: >-
        Открыть выдачу Москва - Санкт-Петербург на завтра с прописанным к урлу
        параметром для тестирования метрики ?_ym_debug=1
    - do: >-
        Открыть новую вкладку с этой же выдачей и произвести бронирование
        билетов по инструкции из описания (дойти до подтверждения заказа)
    - do: Вернуться на первую вкладку
    - do: Открыть консоль
    - do: >-
        Кликнуть по кнопке покупки для поезда, в котором были выкуплены билеты
        (кнопка может называться по-разному, сейчас называется "Выбрать место")
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * В консоли появился параметр визита searchPagePlaceInconsistency
        (разница в количестве свободных мест на выдаче и странице выбора мест,
        значение равно количеству забронированных до этого мест):

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-06-02_11.39.52-kfuqv.png)
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Незалогин
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Хранение данных пассажиров в полях на странице ввода данных':
    - do: Открыть выдачу Москва - Самара через неделю
    - do: >-
        Для любого сниппета кликнуть по кнопке покупки (кнопка может называться
        по-разному, сейчас называется "Выбрать место")
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        Выбрать 1 взрослого пассажира, 1 ребенка от 5 до 10 лет, 1 ребенка до 5
        лет
    - do: Выбрать любые 2 места
    - do: Перейти на шаг ввода данных
    - assert: Осуществился переход на страницу ввода данных
    - do: Заполнить все поля любыми данными
    - do: Закрыть вкладку
    - do: 'Открыть любую выдачу (например,  Москва - Самара через неделю)'
    - do: >-
        Для любого сниппета кликнуть по кнопке покупки (кнопка может называться
        по-разному, сейчас называется "Выбрать место")
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        Выбрать 2 взрослых пассажиров, 1 ребенка от 5 до 10 лет, 1 ребенка до 5
        лет
    - do: Перейти на шаг ввода данных
    - assert: |-
        * Осуществился переход на страницу ввода данных
        * Для 1 взрослого и 2 детей все поля заполнены данными, введенными ранее
        * Для еще 1 взрослого все поля не заполнены
    - do: Открыть консоль браузера
    - do: Перейти на вкладку Application (Хранилище)
    - do: Перейти в раздел Local Storage (Локальное хранилище)
    - do: >-
        Правой кнопкой кликнуть по адресу страницы, на котором производится
        тестирование
    - do: Кликнуть Clear (Удалить)
    - do: Закрыть вкладку
    - do: >-
        В новой вкладке открыть любую выдачу и пошагово перейти на страницу
        ввода данных
    - assert: '* Все поля пустые'
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Главная
description: >-
  Чтобы просмотреть файл роботс, нужно добавить к урлу главной страницы сервиса
  /robots.txt

  Например для прода: https://travel.yandex.ru/robots.txt
specs:
  'ЖД: Карта сайта':
    - do: Перейти в роботс для нужного окружения
    - assert: |-
        * Внизу списка есть 2 урла на карты сайта, выглядят так:
        Sitemap: https://travel.yandex.ru/sitemaps/trains/sitemap.xml.gz
        Sitemap: https://travel.yandex.ru/sitemaps/hotels/sitemap.xml.gz
    - do: >-
        Открыть карту сайта для trains (если нужно посмотреть для тестинга,
        заменить домен, например
        https://travel-test.yandex.ru/sitemaps/trains/sitemap.xml.gz

        Для асессоров
        https://travel.crowdtest.yandex.ru/sitemaps/trains/sitemap.xml.gz)
    - assert: '* Произойдет скачивание xml файла'
    - do: Открыть скачавшийся xml
    - assert: >-
        * В карте лежат xml-ки:

        https://travel.yandex.ru/sitemaps/travel.yandex.ru/search_all_days_1.xml.gz
        (поиск на все дни побит на несколько xml файлов)

        https://travel.yandex.ru/sitemaps/travel.yandex.ru/hotels.xml.gz

        https://travel.yandex.ru/sitemaps/travel.yandex.ru/trains.xml.gz
    - do: >-
        * Скопировать путь к одной из xml с поиском на все дни (если нужно
        посмотреть для тестинга, заменить домен)

        * Открыть файл
    - assert: >-
        * В файле лежат урлы поисков на все дни вида

        </url>![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-22_16.26.31-bp9ab.png)
manual: true
Устройство: Десктоп
Страница: Главная
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Выдачи, где не должно быть переходов на покупку':
    - do: Открыть выдачу Минск - Гродно через неделю
    - assert: '* На выдаче нет цен и кнопок покупки для поездов'
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Кейс состоит только из описания и нужен, чтобы помнить о такой
  функциональности.**

  Если человек сдавал билет по претензии в кассе, то у РЖД есть 180 дней на
  рассмотрение этой претензии и вынесения решения возвращать деньги или нет.

  По таким заказам нам приходит статус возвращены места.  Причем он отображается
  только на странице заказа. В бэкофисе никакой информации нет (по возврату в
  том числе).

  Выглядит это так:

  ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-03_16.57.51-tcalz.png)


  Если будет необходимость проверить этот кейс, то нужно будет попросить бэкенд
  помочь сэмитировать ситуацию.
specs: {}
manual: true
Функциональность: Внутренние вещи для удобства
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Кейс проверяет работу фильтра Цены на выдаче.

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_15.20.34-rgola.png)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Фильтр "Цены" на выдаче':
    - do: Открыть выдачу Москва - Санкт-Петербург через месяц
    - assert: '* Вверху страницы есть фильтр Цены'
    - do: Кликнуть по фильтру Цены
    - assert: >-
        - Раскрылось окно с бегунком для выбора диапазона цен

        - Минимальная и максимальная цена соизмеримы с ценами на выдаче (то есть
        минимальная может быть чуть ниже чем минимальная стоимость у поезда, а
        максимальная чуть больше максимальной)
    - do: Перетащить бегунок минимальной цены вправо
    - assert: |-
        * Бегунок переместился
        * Выдача отфильтровалась - остались только цены, попадающие в диапазон
        * Появилась кнопка “Сбросить”
        * Кнопка фильтра окрасилась в желтый
        * Изменился урл страницы: добавилось ?priceRange=[выбранный интервал]
    - do: Перетащить бегунок максимальной цены влево
    - assert: |-
        - Бегунок переместился
        - Выдача отфильтровалась - остались только цены, попадающие в диапазон
        - Изменился урл страницы: добавилось ?priceRange=[выбранный интервал]
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Кейс проверяет работу фильтра Типы вагонов на выдаче
  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_15.29.08-zu7zl.png)
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Фильтр "Тип вагона" на выдаче':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - assert: >-
        * Вверху есть фильтр “Типы вагонов”
        * Справа в строке с каждым классом указана минимальная цена на
        соответствующие билеты
        * Самая низкая цена из всех классов выделена зеленым
        * Ни один чекбокс не отмечен
        * В фильтре есть все типы вагонов, которые присутствуют на выдаче
    - do: Нажать на чекбокс с любым типом
    - assert: >-
        * Для этого типа проставилась галочка
        * Кнопка фильтра закрасилась темно-серым
        * Появилась кнопка “Сбросить”
        * В выдаче остались только поезда с выбранным типом вагона
        * Стоимость билетов на выдаче указана только для вагонов выбранного
        класса
        * Изменился урл страницы добавилось trainTariffClass=[класс вагона]
    - do: Нажать на чекбокс с другим типом
    - assert: >-
        * В чекбоксе проставилась галочка
        * В выдаче добавились поезда, в которых есть вагоны соответствующего
        типа
        * Стоимость билетов на выдаче указана только для вагонов выбранных
        классов
        * В урл страницы добавился новый класс
    - do: Снять выбор с одного класса
    - assert: |-
        * Галочка в чекбоксе снялась
        * Из выдачи пропали поезда, подходящие под этот фильтр
        * В урле отсутствует этот класс
    - do: Снять выбор с оставшегося класса
    - assert: |-
        * Галочка в чекбоксе снялась
        * Исчезла кнопка “Сбросить”
        * Выдача вернулась в первоначальное состояние
        * Урл страницы вернулся в первоначальное состояние
        * Цвет кнопки фильтра снова стал серым
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Кейс проверяет работу фильтра Станции на выдаче:
  ![](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_16.01.09-fz67c.png)
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Фильтр "Станции" на выдаче':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - assert: '* В блоке с фильтрами есть фильтр Станции'
    - do: Кликнуть по фильтру Станции
    - assert: >-
        * Есть два блока "Отправление"/"Прибытие"

        * В фильтре присутствуют станции, от которых отправляются поезда

        * Справа от названия станции указана минимальная цена на соответствующие
        билеты

        * Чекбоксы не проставлены

        * В фильтре присутствуют все станции, которые есть на выдаче
    - do: Выбрать фильтр "Курский вокзал"
    - assert: >-
        * В чекбоксе проставилась галочка

        * Чекбокс закрасился желтым

        * Появилась кнопка “Сбросить фильтры”

        * На выдаче остались поезда, отправляющиеся с Курского вокзала

        * Изменился урл страницы: добавилось stationFrom=2000001

        * Может измениться вид других фильтров, находящихся в правой колонке:
        если на выдаче отсутствуют поезда, подходящие под фильтр - строка с ним
        дизейблится; меняется количество поездов в фильтре “Цены”, меняются
        минимальные цены в остальных фильтрах
    - do: Выбрать фильтр "Московский вокзал"
    - assert: >-
        * В чекбоксе проставилась галочка

        * Чекбокс закрасился желтым

        * На выдаче остались поезда, отправляющиеся с Курского вокзала и
        прибывающие на Московский вокзал

        * Изменился урл страницы: добавилось stationTo=9602494

        * Может измениться вид других фильтров, находящихся в правой колонке:
        если на выдаче отсутствуют поезда, подходящие под фильтр - строка с ним
        дизейблится; меняется количество поездов в фильтре “Цены”, меняются
        минимальные цены в остальных фильтрах
    - do: Снять выбор "Курский вокзал"
    - assert: >-
        * Галочка в чекбоксе снялась

        * В выдаче присутствуют поезда, прибывающие на Московский вокзал и
        отправляющиеся с Ленинградского и Курского вокзалов

        * В урле отсутствует stationFrom=
    - do: Снять выбор "Московский вокзал"
    - assert: |-
        * Галочка в чекбоксе снялась
        * Исчезла кнопка “Сбросить фильтры”
        * Выдача вернулась в первоначальное состояние
        * Урл страницы вернулся в первоначальное состояние
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Загрузка фильтров на выдаче':
    - do: Открыть выдачу Москва - Санкт-Петербург на завтра
    - assert: >-
        Пока страница загружается в правом блоке отображается заглушка (только
        когда цены еще не были прогружены для этой выдачи, если нет прогрузки
        цен, поискать на другие даты)

        ![image](https://jing.yandex-team.ru/files/shenfeld/Snimok_ekrana_2018-11-26_v_16.47.14_2018-11-26_16-47-27.png)
    - do: Дождаться загрузки страницы и проверить порядок фильтров
    - assert: >-
        Все доступные фильтры развернуты, расположены в следующем порядке сверху
        вниз:


        * Цены

        * Тип вагона

        * Скоростные поезда

        * Время

        * Станции

        * Показ предложений (только если на выдаче есть сниппеты без цен)
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'Сортировка по цене на выдаче':
    - do: Открыть выдачу Москва - Нижний Новгород на завтра
    - do: >-
        Отсортировать выдачу по цене

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_16.07.39-c2h1h.png)
    - assert: >-
        * Сниппеты на выдаче отсортировались от наименьшей стоимости билета к
        наибольшей

        * Изменился урл страницы: добавилось sortBy=price

        * В каждом сниппете указана только одна цена

        * Если внутри одного поезда цены при сортировке идут одна за другой, то
        этот сниппет не делится на два, цены располагаются одна за другой
    - do: Нажать на кнопку фильтра по цене еще раз
    - assert: >-
        * Перевернулась иконка сортировки

        * Сниппеты на выдаче отсортировались от наибольшей стоимости билета к
        наименьшей
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Бейджи Самый дешевый на выдаче':
    - do: >-
        Открыть выдачу Москва - Новосибирск на понедельник (если нет бейджей,
        поискать на другие даты)
    - assert: >-
        * На одном или нескольких сниппетах присутствует бейдж "Самый дешевый"

        * В сниппете с бейджем указана самая низкая стоимость на выдаче

        * Верстка в сниппетах не нарушена, все элементы на своих местах

        Десктоп:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_17.04.05-nf3xk.png)

        Тач:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_17.05.15-bbc60.png)
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Бейджи Самый быстрый на выдаче':
    - do: Открыть выдачу Москва - Ростов-на-Дону на завтра
    - assert: >-
        * На одном или нескольких сниппетах присутствует бейдж “Самый быстрый”

        * Время в пути в сниппете с бейджем самое меньшее на выдаче

        * Верстка в сниппетах не нарушена, все элементы на своих местах

        Десктоп:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_17.07.00-qiqmc.png)

        Тач:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_17.06.03-yc3wv.png)
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Кейс проверяет, что каждого бейджа ны выдаче не должно быть больше 3 или не
  должно быть больше 20% от всех сниппетов. То есть если, например, минимальных
  цен больше этого количества, то бейджи не навешиваются ни на какой сниппет.
  Аналогично для бейджа Самый быстрый и времени в пути.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Бейджей Самый дешевый и Самый быстрый на выдаче не может быть много':
    - do: Открыть выдачу Москва - Екатеринбург на завтра
    - assert: >-
        * Если условия из описания соблюдены, на выдаче есть бейджи "Самый
        дешевый" и "Самый быстрый"
    - do: Открыть выдачу Усинск - Микунь
    - assert: '* Если условия показа из описания не соблюдены, на выдаче нет бейджей'
    - do: >-
        Проверить еще несколько любых выдач на соблюдение условий показа бейджей
        из описания
    - assert: '* Для всех выдач условия выполняются'
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Кейс проверяет, что при применении каких-либо фильтров на выдаче меняется
  содержание выдачи, и, соответственно, и минимальные цены/минимальное время в
  пути. После применения фильтров, если бейджи на этих же сниппетах все еще
  актуальны, то они должны там остаться. Если нет, то бейджи убираются.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Бейджи Самый дешевый и Самый Быстрый убираются при применении фильтров':
    - do: Открыть выдачу Москва - Киров на завтра
    - assert: На выдаче есть сниппеты с бейджами "Самый дешевый" и "Самый быстрый"
    - do: Установить фильтр "купе"
    - assert: |-
        * В выдаче остался тот поезд, на котором был бейдж "Самый дешевый"
        * Для этого поезда больше нет бейджа, так как теперь он не самый дешевый
    - do: Попереключать фильтры
    - assert: >-
        * Содержание выдачи меняется, но бейджи "самый дешевый" и "самый
        быстрый" соответствуют действительности, либо пропадают совсем
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Кейс проверяет предупреждение о том, что скоро вернуть билеты будет нельзя, а
  затем, что вернуть билеты уже нельзя. Случай, когда ЭР нет или она отменена. В
  этом случае вернуть билеты можно в любое время до отправления поезда со
  станции посадки пассажира.

  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.**


  Номер карты (не для асессоров): 5100003697253468

  CVN: 090

  Дата: 12/24

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Создать заказ, где доступна электронная регистрация, для одного взрослого на
  сегодняшнюю дату, чтобы до отправления поезда оставалось чуть больше 1 часа 15
  минут. Рассматривается кейс, где станция отправления поезда = станции посадки
  пассажира.

  Для этого:

  * Зайти на выдачу  (можно искать подходящий поезд на выдачах Москва -
  Санкт-Петербург и обратно, Москва - Екатеринбург, любые другие выдачи)

  * Кликнуть по кнопке покупки (кнопка может называть по разному, сейчас -
  “Выбрать место”)

  * Дальше следовать по страницам покупки, дойти до страницы успешного заказа
  (хэппи пейдж)

  * Кликнуть по кнопке "Подробнее о заказе"

  * Отменить электронную регистрацию (действие отмены появляется по клику по
  гамбургеру на странице заказа - кнопка с тремя точками).
specs:
  'ЖД: Невозможность возврата билетов, когда нет ЭР':
    - do: Перейти на страницу заказа
    - assert: >-
        * На странице заказа нет информации на желтом фоне об истечении времени
        на возврат

        * Действие Отменить электронную регистрацию поменялось на Восстановить
        электронную регистрацию
    - do: 'Дождаться, пока до отправления поезда останется 1 час'
    - assert: >-
        * На странице заказа не появляется текста на желтом фоне о невозможности
        возврата билетов

        * Есть кнопки Сдать билет

        * Действия Восстановить электронную регистрацию присутсвуют
    - do: >-
        Дождаться, пока до отправления поезда со станции посадки пассажира
        останется 15 минут
    - assert: >-
        * На странице заказа появился текст на желтом фоне “Через 15 минут
        вернуть билет онлайн будет нельзя. Вы сможете [сдать его только в
        кассе].”

        * Есть действие Сдать билет

        * Есть действия Восстановить электронную регистрацию

        * В тексте количество оставшихся минут соответствует отсчету времени
    - do: 'Подождать, пока поезд отправится со станции посадки пассажира'
    - assert: >-
        * Текст на желтом фоне сменился на “Вернуть билет онлайн на этот поезд
        нельзя, так как он уже отправился со станции [СтанцияПосадкиПассажира].
        Вы можете сдать билет в кассе.”

        * Пропали кнопки Сдать билет

        * Вместо Сдать билет появилась ссылка Можно сдать в кассе

        * Нет кнопок смены статуса электронной регистрации
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.**


  Для оплаты в тестинге можно использовать тестовую карту.

  Например:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/20

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Выдача и страницы покупки для электричек ЦППК':
    - do: Открыть выдачу Москва - Текстильщики на завтра
    - assert: >-
        * На выдаче есть поезд с перевозчиком ЦППК (если нет, поискать на другие
        даты или выдачи, например, Москва - Калуга, Москва - Рязань,
        Текстильщики - Заокский)

        * Сниппет с этим поездом выглядит так же, как все остальные сниппеты:
        есть номер и название маршрута, информация о компании-перевозчике, время
        и станции отправления и прибытия, время в пути, количество мест, кнопка
        покупки
    - do: Для поезда ЦППК кликнуть по кнопке покупки
    - assert: |-
        * Осуществился переход на страницу выбора мест
        * В шапке есть номер поезда соответствует номеру на выдаче
        * На странице два селекта выбора пассажиров: взрослый и детский
        * Для детского есть приписка "Билеты со скидкой для детей младше 7 лет"
    - do: Выбрать один взрослый билет и один детский
    - do: Кликнуть Указать пассажиров у любого класса обслуживания
    - do: Заполнить поля валидными данными
    - do: Кликнуть "Проверить заказ и купить"
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Указан номер поезда такой же, как на выдаче
        * Все данные соответствуют введенным ранее
        * Время на оплату 14 минут или меньше
    - do: |-
        Кликнуть "Перейти к оплате"
        Ввести номер тестовой карты, кликнуть "Оплатить" (асессоры пропускают)
    - assert: |-
        * Произошел переход на хэппи пейдж
        * Указан номер поезда такой же, как был на страницах покупки
    - do: Нажать кнопку "Подробнее о заказе"
    - assert: '- Произошел переход на страницу полного заказа'
    - do: Для взрослого билета кликнуть Сдать билет
    - assert: >-
        * Появилось модальное окно для возврата

        * Есть текст: "Имейте в виду: ребенка не пустят в поезд одного.
         Восстановить покупку будет нельзя."
    - do: Нажать Подтвердить
    - assert: |-
        * Возврат осуществился
        * Ошибок нет
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Некоторые электрички-экспрессы меняют номер на протяжении маршрута':
    - do: Открыть выдачу Калуга - Москва на завтра
    - assert: '* На выдаче есть поезд 7091Х Калуга — Москва'
    - do: Для этого поезда кликнуть по кнопке покупки
    - assert: >-
        * Произошел переход на страницу выбора мест

        * На странице выбора мест есть информация о поезде: 7091Х Калуга —
        Москва
    - do: >-
        Выбрать одного пассажира, пройти по всем шагам покупки до страницы
        подтверждения
    - assert: '* На всех страницах указан номер поезда 7091Х'
    - do: Открыть выдачу Малоярославец - Москва на завтра
    - assert: '* На выдаче есть поезд 7092Х Калуга — Москва'
    - do: Для этого поезда кликнуть по кнопке покупки
    - assert: >-
        * Произошел переход на страницу выбора мест

        * На странице выбора мест есть информация о поезде: 7092Х Калуга —
        Москва
    - do: >-
        Выбрать одного пассажира, пройти по всем шагам покупки до страницы
        подтверждения
    - assert: '* На всех страницах указан номер поезда 7092Х'
manual: true
Функциональность: Бронь с разными условиями
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  Если в какие-то даты нет поезда из кейса, нужно поискать этот поезд на
  соседних датах.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Для электричек-экспрессов глубина продаж 10 дней':
    - do: Открыть выдачу Москва - Рязань на дату в пределах 10 дней от текущей
    - assert: |-
        * На выдаче есть поезд 7040 Москва — Рязань
        * Для этого поезда есть кнопка покупки
    - do: Открыть выдачу Москва - Рязань на дату больше 10 дней вперед
    - assert: >-
        * На выдаче вместо поезда 7040 поезд с номером 840Х Москва — Рязань

        * Для этого поезда кнопки покупки нет

        * Для этого поезда не указана причина отсутствия цены (например, "Места
        закончились", "Билеты в кассе")
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.**


  Кейс проверяет случай, когда в одном заказе есть билеты с разным статусом ЭР.
  Особенность случаев в том, что когда ЭР отменена, билет можно сдать в любое
  время до отправления со станции посдки пассажира, а когда ЭР есть, билет можно
  сдать не позднее, чем за час до отправления поезда с начальной станции.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Создать заказ для двух взрослых на сегодняшнюю дату, чтобы до отправления
  поезда оставалось чуть больше часа.

  Для этого:

  * Зайти на выдачу

  * Кликнуть по кнопке покупки (кнопка может называть по разному, сейчас -
  “Выбрать место”)

  * Дальше следовать по страницам покупки до хэппи пейдж

  * Нажать на кнопку "Подробнее о заказе"

  * Для одного из билетов отменить ЭР - это можно сделать, нажав на гамбургер
  рядом с кнопкой Сдать около информации о пассажире - появится действие
  Отменить ЭР.


  Для заполнения форм на странице оплаты использовать тестовую карту:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/24
specs:
  'ЖД: Невозможность возврата билетов для заказа с билетами с разными статусами ЭР':
    - do: 'Дождаться, когда до отправления поезда останется 1 час и 15 минут'
    - assert: >-
        * Не появляется желтого предупреждения о том, что скоро вернуть билеты
        будет нельзя

        * Доступны действия смены статуса ЭР и возврата билетов
    - do: |-
        Дождаться, когда до отправления поезда останется 1 час
        Обновить страницу
    - assert: >-
        * Для билета, у которого есть ЭР, кнопка Сдать билет сменилась на ссылку
        Можно сдать в кассе

        * Для билета, у которого нет ЭР, есть кнопка Сдать билет

        * Для обоих билетов и в общих действиях по заказу (рядом с кнопками
        Скачать и Распечатать) пропали действия смены статуса ЭР
    - do: 'Дождаться, когда до отправления поезда останется 15 минут'
    - assert: >-
        * Появилось предупреждение на желтом фоне  “Через 15 минут вернуть билет
        онлайн будет нельзя. Вы сможете [сдать его только в кассе].”

        * Время меняется соответственно отсчету
    - do: 'Дождаться, когда до отправления поезда останется 0 минут'
    - assert: >-
        * Предупреждение сменилось на ”Вернуть билет онлайн на этот поезд
        нельзя, поскольку он уже отправился со станции [НазваниеСтанции]. Вы
        можете сдать билет в кассе вокзала."

        * Для обоих билетов нет кнопки Сдать билет, вместо нее ссылка Можно
        сдать в кассе

        * Для обоих билетов нет действия смены статуса ЭР

        * В общих действиях нет кнопок возврата и смены статуса ЭР
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  **При тестировании тач-версии достаточно выполнения шагов 1-2**
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Когда не выбрана дата, подставляется "сегодня"':
    - do: 'Выбрать направление (например, Москва - Санкт-Петербург)'
    - do: 'Оставив поле _Когда_ пустым, кликнуть кнопку _Найти_'
    - assert: |-
        * Открылась выдача по указанному направлению на **сегодня**
        * В форме выбора направлений выбрано значение - **сегодня**
    - do: |-
        * Очистить в форме поиска на выдаче поле выбора даты
        * Кликнуть кнопку _Найти_
    - assert: |-
        * Страница обновилась
        * Открылась выдача по указанному направлению на **сегодня**
        * В форме выбора направлений выбрано значение - **сегодня**
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Залогиниться. Асессоры могут использовать учетную запись для тестинга:
  vladlen@yandex.ru password: v12345678

  Перейти на главную страницу сервиса.
specs:
  'ЖД: Отображение ошибки, когда не открывается страница заказа':
    - do: >-
        В правом верхнем углу нажать на иконку ЛК

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-30_12.22.34-oqsdx.png)
    - assert: '* Открылась страница с бронированиями'
    - do: Перейти на любое бронирование ЖД билета
    - assert: '* Открылась страница выбранного заказа'
    - do: Кликнуть по кнопке Назад
    - assert: '* Произошел переход обратно на страницу бронирований'
    - do: |-
        Открыть консоль браузера
        Во вкладке Network установить галку Offline для эмуляции отсутствия сети
        Кликнуть снова по тому бронированию, которое открывали ранее
    - assert: >-
        * Открылась страница заказа

        * На странице есть модальное окно с ошибкой:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-30_12.25.34-5ltgg.png)
    - do: |-
        Убрать галку Offline
        Кликнуть Перезагрузить страницу
    - assert: '* Произошел переход на страницу заказа, ошибок нет'
    - do: |-
        Выполнить шаги 3-4 снова для этого же заказа
        Убрать галку Offline
        Кликнуть по кнопке Вернуться на главную
    - assert: '* Произошел переход на главную Путешествий'
    - do: |-
        Выполнить шаги 3-4 снова для этого же заказа
        Убрать галку Offline
        Кликнуть по ссылке "форму обратной связи"
    - assert: '* Произошел переход на страницу поддержки'
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Информация о вокзале не дублируется на странице подтверждения':
    - do: >-
        * В форме выбора направления, в поле _откуда_ выбрать значение из
        саджеста  **_Москва (Казанский вокзал)_**

        * В поле _куда_ выбрать значение из саджеста **_Ростов-Главный_**

        * Выбрать дату

        * Кликнуть _Найти_
    - assert: Открылась выдача по выбранному направлению
    - do: Выбрать любой из доступных вариантов
    - assert: Открылась страница выбора мест
    - do: |-
        * Кликнуть на кнопку _Указать пассажиров_
        * Корректно заполнить данные пассажиров
        * Нажать кнопку _Проверить заказ и купить_
    - assert: >-
        * Открылся экран подтверждения заказа

        * **Название города и вокзала не дублируется**

        * Такого, как на скриншоте, быть не должно

        ![image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1466/attachment/5c27c93c86521f58ebb02e4d)
    - do: >-
        Вернуться к поиску

        В форме выбора направления, в полях _откуда и куда_ выбрать города
        _Усинск - Микунь_

        Выбрать дату

        Кликнуть _Найти_

        Для одного из поездов дойти до шага подтверждения
    - assert: >-
        * Открылся экран подтверждения заказа

        * Название города и вокзала не дублируется

        * Такого, как на скриншоте, быть не должно

        ![image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1466/attachment/5c28182fd47741f99c7f8696)
    - do: >-
        В форме выбора направления, в полях откуда и куда выбрать из саджеста
        _Москва (Курский вокзал)_ - _Нижний Новгород (Московский вокзал)_

        Выбрать дату

        Кликнуть _Найти_

        Для одного из поездов дойти до шага подтверждения
    - assert: >-
        Названия городов и вокзалов не дублируются

        ![image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1466/attachment/5c288edbd47741f99c7fb5f5)
manual: true
Функциональность: Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Находимся на странице покупки на вкладке **Данные пассажиров**, для этого:
  * Перейти на тестовый стенд
  * Перейти на вкладку ЖД билеты
  * Выбрать направление и дату поездки
  * Кликнуть _Найти_
  * Выбрать любой из предложенных вариантов и перейти на страницу выбора мест
  * Выбрать любое место
  * Кликнуть _Указать пассажиров_
specs:
  'ЖД: Валидация поля ввода почты':
    - do: >-
        * Корректно заполнить паспортные данные пассажиров

        * Ввести номер телефона

        * В поле _Электронная почта_ ввести почту с неправильный TLD (например
        pochta@yandex.r или qwerty@yandex.coh)

        * Кликнуть _Проверить заказ и купить_
    - assert: |-
        Поле выделено красным
        Внизу отображается ошибка: _Проверьте адрес после знака @_
    - do: >-
        * Ввести в поле почту, поменяв местами **"@"** и **"."** (например
        qwerty.yandex@ru)

        * Кликнуть _Проверить заказ и купить_
    - assert: |-
        * Поле выделено красным
        * Внизу отображается ошибка: _Это не похоже на электронный адрес._
    - do: >-
        * Ввести в поле корректный адрес электронной почты, с точкой в конце
        (например asd@yandex.ru.)

        * Кликнуть _Проверить заказ и купить_
    - assert: >-
        * Поле выделено красным

        * Внизу отображается ошибка: _Проверьте точки. Не должно быть
        повторений, точек перед @ и в конце адреса_
    - do: >-
        * Ввести в поле почту, перед TLD поставить 2 точки (например
        asdf@yandex..ru)

        * Кликнуть _Проверить заказ и купить_
    - assert: >-
        * Поле выделено красным

        * Внизу отображается ошибка: _Проверьте точки. Не должно быть
        повторений, точек перед @ и в конце адреса_
    - do: >-
        * Ввести в поле почту с кириллическими символами (например a -
        кириллицей, остальное латиницей)

        * Кликнуть _Проверить заказ и купить_
    - assert: >-
        * Поле выделено красным

        * Внизу отображается ошибка: _Адрес может состоять только из латинских
        букв, цифр и символов: _ . + - @_
    - do: >-
        * Ввести в поле корректный адрес электронной почты капсом (например
        QWERTY@YANDEX.RU)

        * Кликнуть _Проверить заказ и купить_
    - assert: Открывается страница подтверждения заказа
    - do: >-
        * Вернуться на вкладку _Данные пассажиров_

        * Ввести в поле корректный адрес электронной почты в домене com
        (например fdsa@yandex.com)

        * Кликнуть _Проверить заказ и купить_
    - assert: Открывается страница подтверждения заказа
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Ссылки на сервисы на выдаче':
    - do: Перейти на любую выдачу
    - do: >-
        Открыть в новой вкладке все ссылки в шапке: Яндекс, Путешествия,
        Авиабилеты, Отели, Автобусы
    - assert: >-
        * Ссылка Яндекс ведет на главную Яндекса

        * Ссылка Путешествия на главную Путешествий, вкладка ЖД билеты

        * Ссылки Авиабилеты, Отели, Автобусы ведут на главную на соответствующую
        вкладку сервиса
    - do: Уменьшить ширину экрана до 1000 px
    - assert: >-
        Верстка не едет, ссылки в шапке центрируются посередине при сужении
        экрана
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  1 Перейти на тестовый стенд, на вкладку ЖД билеты
  2 **Добавить в урл параметр  ?_ym_debug=1 и перейти по полученной ссылке**
  3 Выбрать направление и дату поездки
  4 Кликнуть _Найти_
  5 Выбрать любой из предложенных вариантов и перейти на страницу выбора мест
  6 Выбрать любое место
  7 Кликнуть _Указать пассажиров_
specs:
  'ЖД: События в метрику для почтовых адресов, не прошедших валидацию':
    - do: |-
        * Корректно заполнить паспортные данные пассажиров
        * Ввести номер телефона
        * В поле _Электронная почта_ ввести значение **test**
        * Открыть консоль браузера
        * Кликнуть на кнопку _Подтвердить заказ и купить_
    - assert: >-
        Для адреса, не прошедшего валидацию появилось событие в консоли

        *
        ![](https://jing.yandex-team.ru/files/papulova/2021-07-23_14-39-30.png)
    - do: |-
        * В поле _Электронная почта_ ввести значение **тест@test.ru**
        * Кликнуть на кнопку _Подтвердить заказ и купить_
        * Проверить в консоли событие для невалидного адреса
    - assert: Результат как в шаге 1.
    - do: |-
        * В поле _Электронная почта_ ввести значение **@sda**
        * Кликнуть на кнопку _Подтвердить заказ и купить_
        * Проверить в консоли событие для невалидного адреса
    - assert: Результат как в шаге 1.
    - do: |-
        * В поле _Электронная почта_ ввести значение test@test@test.ru
        * Кликнуть на кнопку _Подтвердить заказ и купить_
        * Проверить в консоли событие для невалидного адреса
    - assert: Результат как в шаге 1.
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: ''
specs:
  'ЖД: Фавиконка и тайтл на разных страницах':
    - do: 'Перейти на тестовый стенд, вкладка ЖД билеты'
    - assert: >-
        * Открылась главная страница сервиса, вкладка ЖД

        * Присутствует фавиконка и тайтл вкладки _"Купить билеты на поезд
        онлайн, цена ж/д билетов, расписание поездов дальнего следования на 2019
        год — Яндекс.Путешествия"_

        *
        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-30_12.51.30-gdjev.png)
    - do: |-
        Выбрать направление и дату поездки
        Кликнуть _Найти_
    - assert: >-
        * Открылась выдача по выбранному направлению на указанную дату

        * Присутствует фавиконка и тайтл вкладки _“Москва - Санкт-Петербург:
        билеты на поезд, расписание поездов, 19 января, суббота -
        Яндекс.Путешествия”_ - направление и дата соответствуют выбранным
    - do: >-
        Выбрать любой из предложенных вариантов и перейти на страницу выбора
        мест
    - assert: >-
        * Открылась страница покупки на вкладке _Выбор мест_

        * Присутствует фавиконка и тайтл вкладки _“Выбор мест в поезде 030А
        Москва - Санкт-Петербург из Москвы в Санкт-Петербург на 19 января -
        Яндекс.Путешествия”_ - направление, дата и номер поезда соответсвуют
        выбранным
    - do: Выбрать место и нажать _Указать пассажиров_
    - assert: >-
        * Открылась страница покупки на вкладке _Данные пассажиров_

        * Присутствует фавиконка и тайтл вкладки _“Заполнение данных пассажиров
        в поезде 030А Москва - Санкт-Петербург из Москвы в Санкт-Петербург на 19
        января - Яндекс.Путешествия”_ - направление, дата и номер поезда
        соответсвуют выбранным
    - do: Корректно заполнить все данные и нажать _Проверить заказ и купить_
    - assert: >-
        * Открылась страница покупки на вкладке _Подтверждение_

        * Присутствует фавиконка и тайтл вкладки _“Подтверждение данных в поезде
        030А Москва - Санкт-Петербург из Москвы в Санкт-Петербург на 19 января -
        Яндекс.Путешествия”_ - направление, дата и номер поезда соответсвуют
        выбранным
manual: true
Функциональность: Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: События в метрику при поиске':
    - do: 'Перейти на тестовый стенд, вкладка ЖД билеты'
    - do: Добавить в урл параметр ?_ym_debug=1 и перейти по полученной ссылке
    - assert: Страница перезгрузилась
    - do: |-
        * Выбрать направление
        * Выбрать дату отправления
        * Открыть консоль браузера
        * Кликнуть _Найти_
        * Подождать прогрузки выдачи и цен
    - assert: >-
        В консоли отобразилось отправленное в метрику событие
        **trains_date_search**
    - do: >-
        * В хлебных крошках внизу страницы перейти по ссылке "Купить билеты на
        поезда Екатеринбург — Москва"
    - assert: >-
        - Открылась страница направления (несколько сниппетов и открытый
        календарь)

        - В консоли отобразилось отправленное в метрику событие
        **trains_all_day_search**
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: ''
specs:
  'ЖД: Дата прибытия не липнет к оставшемуся времени на странице подтверждения':
    - do: 'Перейти на тестовый стенд, вкладка ЖД билеты'
    - do: |-
        * Выбрать направление _Боготол - Иркутск_
        * Выбрать дату
        * Нажать _Найти_
    - assert: Открылась выдача по выбранному направлению
    - do: >-
        Выбрать любой из предложенных вариантов и перейти на страницу выбора
        мест
    - assert: Открылась страница покупки на вкладке _Выбор мест_
    - do: |-
        * Выбрать место
        * Нажать _Указать пассажиров_
        * Корректно заполнить данные пассажиров
        * Нажать кнопку _Проверить заказ и купить_
    - assert: >-
        * Открылся экран подтверждения заказа

        * Дата прибытия не липнет к оставшемуся времени

        Так быть **не** должно:

        ![image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1477/attachment/5c2959a586521f58ebb4be04)
manual: true
Функциональность: Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: ''
specs:
  'ЖД: Корректное поведение браузерной кнопки Назад на страницах покупки':
    - do: 'Перейти на тестовый стенд, вкладка ЖД билеты'
    - do: Выбрать любое направление и дату и кликнуть _Найти_
    - assert: Открылась выдача по выбранному направлению
    - do: Кликнуть на кнопку _Назад_ в браузере
    - assert: |-
        * Вернулись на главную страницу сервиса
        * Ошибок нет
    - do: >-
        * Выбрать любое направление и дату

        * Кликнуть _Найти_

        * Выбрать любой из предложенных вариантов и перейти на страницу выбора
        мест
    - assert: Открылась страница покупки на вкладке _Выбор мест_
    - do: Кликнуть на кнопку _Назад_ в браузере
    - assert: |-
        * Вернулись к выдаче по выбранному направлению
        * Ошибок нет
    - do: >-
        * Выбрать любой из предложенных вариантов и перейти на страницу выбора
        мест

        * Выбрать место

        * Нажать _Указать пассажиров_
    - assert: Открылась страница покупки на вкладке _Данные пассажиров_
    - do: Кликнуть на кнопку _Назад_ в браузере
    - assert: |-
        * Произошел возврат на страницу покупки на вкладку _Выбор мест_
        * Ошибок нет
    - do: |-
        * Выбрать место
        * Нажать _Указать пассажиров_
        * Корректно заполнить данные пассажиров
        * Нажать кнопку _Проверить заказ и купить_
    - assert: Открылся экран подтверждения заказа
    - do: Кликнуть на кнопку _Назад_ в браузере
    - assert: |-
        * Произошел возврат на страницу покупки на вкладку _Данные пассажиров_
        * Ошибок нет
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: Теперь ведем на все дни
specs:
  'ЖД: Редирект для поисков с датой в прошлом':
    - do: 'Перейти на главную, вкладка ЖД'
    - do: Добавить в урл параметр _?_ym_debug=1_ и нажать enter
    - assert: Страница обновилась
    - do: |-
        * Выбрать направление
        * Выбрать дату отправления
        * Кликнуть Найти
    - assert: Открылась выдача по выбранному направлению
    - do: |-
        * Открыть консоль браузера
        * Изменить дату в урле на прошедшую и нажать enter
    - assert: >-
        - Пользователь перенаправляется на страницу направления (направление то
        же, несколько сниппетов, открыт календарь)

        скрин страницы:
        https://jing.yandex-team.ru/files/shenfeld/2020-12-03_17.15.41-ftzww.png

        - Отправляется событие в Метрику - **outdate_search_request** (можно
        увидеть в консоли)
    - do: |-
        * Выбрать направление
        * Выбрать дату
        * Нажать _Найти_
    - assert: Открылась выдача по выбранному направлению
    - do: >-
        Выбрать любой из предложенных вариантов и перейти на страницу выбора
        мест
    - assert: Открылась страница покупки на вкладке _Выбор мест_
    - do: |-
        * Открыть консоль браузера
        * Изменить дату в урле на прошедшую и нажать enter
    - assert: >-
        - Пользователь перенаправляется на страницу направления (направление то
        же, несколько сниппетов, открыт календарь)

        - Отправляется событие в Метрику - **outdate_search_request** (можно
        увидеть в консоли)
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Blocker
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.**

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Отправка данных в метрику для электронной коммерции':
    - do: Перейти на выдачу Москва - Самара на завтра
    - do: Открыть консоль с прописанным параметром ?__ym_debug=1
    - assert: >-
        * В консоли есть событие в метрику с detail

        ![image](https://jing.yandex-team.ru/files/shenfeld/2021-03-22_18.27.51-u6fwq.png)

        * Валюта RUB

        * Направление соответствует направлению на выдаче
    - do: Для одного из сниппетов кликнуть по кнопке покупки
    - assert: >-
        * Произошел переход на страницу выбора мест

        * Появилось событие в метрику с add

        ![image](https://jing.yandex-team.ru/files/shenfeld/2021-03-22_18.28.29-pmgtx.png)
    - do: Дойти до страницы заказа по шагам покупки
    - assert: >-
        * В консоли есть событие в метрику с purchase

        ![image](https://jing.yandex-team.ru/files/shenfeld/2021-03-22_18.32.26-8dw2f.png)
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Оплата
description: >-
  Кейс проверяет, что когда что-то пошло не так при оплате (заказ находится в
  статусе paid), ожидание оплаты для пользователя составляет 3 минуты (вместо 6
  минут раньше) и показывается соответствующее сообщение.

  * Попросить бэкенд-разработчика воспроизвести для тестинга такую ситуацию,
  чтобы статус заказа после ввода карты менялся на paid

  * Создать заказ на любое направление и любую дату, дойти до шага ввода карты.

  В тестинге можно использовать карту: _5100003697253468 01/20 090_

  * В оркестраторе использовать ФИО для воспроизведения "Впроцессе Ошибкаим
  Статусстраховки"
specs:
  'ЖД: Трехминутное ожидание оплаты':
    - do: 'На странице ввода карты ввести данные карты из описания, открыть консоль'
    - do: Кликнуть по кнопке Оплатить
    - assert: >-
        * Появился лоадер "Подождите, идет оплата билетов"

        * Через 30 секунд текст сменился на "Процесс оплаты занимает больше
        времени, чем обычно. Подождите ещё 3 минуты"

        * В консоли появилось событие _order_payment_delay_

        * Через 30 секунд текст сменился на "Процесс оплаты занимает больше
        времени, чем обычно. Подождите ещё 2 минуты"

        * Через минуту "Процесс оплаты занимает больше времени, чем обычно.
        Подождите ещё 1 минуту"

        * Через минуту билеты выкупились, произошел переход на страницу заказа
manual: true
Устройство: Десктоп
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.**


  Для оплаты в тестинге можно использовать тестовую карту: _5100003697253468
  01/20 090_

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Теги на страницах, запрещенных к индексации':
    - do: Перейти на выдачу Москва - Санкт-Петербург на завтра
    - do: Для любого сниппета кликнуть по кнопке покупки
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: 'Открыть консоль, вкладку Elements'
    - do: Выполнить поиск по _robots_
    - assert: >-
        * Есть мета тег с содержанием _meta name="robots" content="noyaca"_

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_138I_Moskva_Orenburg_iz_Moskvy_v_Samaru_na_17_yanvarya__Yandeks.Puteshestviya_2019-01-11_17-22-12.png)
    - do: 'Выбрать место, нажать на кнопку Указать пассажиров'
    - assert: |-
        * Осуществился переход на страницу выбора мест
        * На странице есть мета тег _meta name=“robots” content=“noyaca”_
    - do: 'Заполнить все поля валидными данными, нажать Проверить заказ и купить'
    - assert: |-
        * Произошел переход на страницу подтверждения
        * На странице есть тег _meta name=“robots” content=“noyaca”_
    - do: Нажать кнопку Ввести карту и оплатить
    - assert: |-
        * Осуществился переход на страницу оплаты
        * На странице есть мета тег _meta name=“robots” content=“noyaca”_
    - do: >-
        Ввести данные карты из описания, нажать оплатить (асессоры пропускают
        этот шаг)
    - assert: |-
        * Осуществился переход на страницу хэппи пейдж
        * На странице есть мета тег _meta name="robots" content="noyaca"_
    - do: Кликнуть по кнопке "Подробнее о заказе"
    - assert: |-
        - Осуществился переход на страницу с полной информацией о заказе
        - На странице есть мета тег meta name="robots" content="noyaca"
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |
        Перейти на главную сервиса
        Перейти на вкладку Ж/Д билеты
        Для любого поезда перейти на покупку
        Находимся на странице покупки билета, на вкладке _Выбор мест_
        Для этого необходимо открыть выдачу по любому направлению, например, Москва -
        Самара. У любого сниппета кликнуть на кнопку **Выбрать место**

        [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1489/attachment/5c463b48f557091ad6a2f7ac){title=скриншот}
specs:
  'ЖД: Критичные состояния в блоке с количеством билетов':
    - do: |
        В блоке "Укажите количество билетов" выбрать:
        -количество взрослых билетов = 0
        -количество детских билетов с местом = 0
        -количество детских билетов без места = 0

        [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1489/attachment/5c460d0e2a78682a6289f046){title=скриншот}
    - assert: |
        В блоке, над селектами появилась подсказка "Нужен хотя бы один пассажир"

        Примерный внешний вид для десктопа ![](https://jing.yandex-team.ru/files/semirka/Screenshot_81-1.png)
        Примерный внешний вид для тача ![](https://jing.yandex-team.ru/files/semirka/Screenshot_79-2.png)
    - do: |
        Перейти к любому вагону  со схемой
        Кликнуть на кнопку "Указать пассажиров"
    - assert: |
        Над кнопкой появился поп-ап с текстом "Выберите пассажиров, чтобы узнать стоимость"
        Примрный внешний вид ![](https://jing.yandex-team.ru/files/semirka/Screenshot_82.png)
    - do: |
        Установить в контролах значения:
        -количество взрослых билетов = 0
        -количество детских билетов с местом = 1
        -количество детских билетов без места = 0
    - assert: |
        В блоке, над селектами появилась подсказка
        "Имейте в виду: если ребёнку не исполнилось 10, его не пустят в поезд одного"

        [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1489/attachment/5c4615766acd3de9d29bee47){title=скриншот}
    - do: Кликнуть на кнопку "Указать пассажиров"
    - assert: Над кнопкой появился поп-ап с текстом "Выберите ещё 1 место"
    - do: |
        Установить в контролах значения:
        -количество взрослых билетов = 0
        -количество детских билетов с местом = 2
        -количество детских билетов без места = 0
    - assert: В блоке, над селектами отображается подсказка "Имейте в виду если ребёнку не исполнилось 10, его не пустят в поезд одного"
    - do: Кликнуть на кнопку "Указать пассажиров"
    - assert: |
        Над кнопкой появился поп-ап с текстом "Выберите ещё 2 места"
        [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1489/attachment/5c461a27d47741ca81e8ef7c){title=скриншот}

manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
    Расположение контроллов на скриншотах актуально при тестровании десктопной версии -  примерный вид https://jing.yandex-team.ru/files/semirka/Screenshot_84.png
    В тач-версии они должны выглядеть так же, но должны быть расположены в 3 ряда, на всю ширину экрана - примерный вид https://jing.yandex-team.ru/files/semirka/Screenshot_85-1.png
    Перейти на главную сервиса
    Перейти на вкладку Ж/Д билеты

specs:
  'ЖД: Блок с выбором количества билетов':
    - do: Открыть страницу покупки билета, на вкладке "Выбор мест"
    - assert: |
        По умолчанию кол-во билетов в  блоке "Укажите количество билетов"
        будут указаны значения (если ранее был переход на выбор мест с выбором значений,
        но покупки не было, то  будут сохранены предыдущие значения, тогда для проверки
        этого кейса нужно будет использовать режим инкогнито):

        * 1 взрослый
        * 0 детских с местом
        * 0 детских без места

        Под каждым контроллом присутствуют подсказки:

        * От 10 лет С местом, со скидкой
        * Без места, бесплатно
        https://jing.yandex-team.ru/files/semirka/Screenshot_77.png
    - do: Добавить 1 взрослого  пассажира нажав по кнопке "+"
    - assert: Кнопки "+" и "-" активны
    - do: Убрать 1 взрослого пассажира нажав по кнопке "-"
    - assert: Кнопки "+" и "-" активны
    - do: Добавить 3  детских билетов с местом
    - assert:  кнопка "+" задизайблилась (если ранее был выбран 1 взрослый пассажир, то дестких с местом можно добавить максимум 3)
    - do: Убрать 3 дестких билета с местом
    - assert: Кнокпка "-"  задизайблилась
    - do: Добавить 1 десткий билет без места
    - assert: кнопка "+" задизайблилась (т.к. детей без места не может быть больше чем взрослых)
    - do: Добавить максимальное возможное кол-во дестких с место
    - assert: |
        Добавилось 2  детских с местом и кнопка "+" дизайблится (потому что максимум 4 билета в заказе)
        Кнопки "добавить" у всех трех контроллов задизайбилилсь - потому что было выбрано 4 билета в заказе.
    - do: Убрать всех выбранных пассажиров
    - assert: Кнопка "убрать" у всех контроллов дизайблится, т.к. число всех пассажиров равно 0.

manual: true
Функциональность: Разное по странице выбора мест
Устройство:
  - Тач
  - Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Находимся на странице покупки билета, на вкладке _Выбор мест_

  Для этого необходимо открыть выдачу по любому направлению. У любого сниппета
  кликнуть на кнопку **Выбрать место**


  [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1489/attachment/5c463b48f557091ad6a2f7ac){title=скриншот}
specs:
  'ЖД: Нельзя выбрать больше 4 билетов':
    - do: В блоке "Указать пассажиров" Кликнуть по кнопке "добавить" (+) у взрослого пассажира
    - assert: |
        Добавился 1 взрослый пассажир
        Можно добавить  от 0 до 4 взрослых билетов

    - do: Нажать "Убрать" (-) взрослового пассажира
    - assert: |
        Кол-во взрослых пассажиров уменьшилось на 1.
        В контролле Детских с местом можно добавить значения  от 0 до 3 пассажиров
        В контролле Детских без места  можно добавить значения от 0 до 1

    - do: В контролле выбора количества детских с местом выбрать значение 3 детских с местом
    - assert: |
        Кнопка "добавить" (+) стала неактивной (окрасилась в серый)
        Отображается выбранное значение ( 3 детских с местом )
        В контролле Взрослых кнопка "добавить" неактивна  доступны значения от 0 до 1
        В селекте Детских без места, кнопка "добавить" неактивна,  доступны значения 0
        В сумме количество билетов не может быть более 4
        Примерный внешний вид https://jing.yandex-team.ru/files/semirka/Screenshot_92-1.png

    - do: |
        Установить значения в контроллах
        1 Детский без места
        1 Детский с местом
    - assert: |
        В контролле выбора количества Взрослых доступны  значения от 1 до 2
        В сумме количество билетов не может быть более 4

    - do: |
        Установить значения в контроллах
        0 Детских без места
        0 Взрослых
    - assert: |
        В контролле выбора количества Детских с местом доступны значения от 0 до 4
        В сумме количество билетов не может быть более 4
    - do: |
        Установить значения в контроллах
        0 Детских с местом
        1 Детский без места
        3 Взрослых
    - assert: |
        В контролле Детских с местом можно выставить  только значение 0 детских с местом
        В сумме количество билетов не может быть более 4
    - do: |
        Установить значения в контроллах
        0 Детских с местом
        0 Детских без места
        4 Взрослых
    - assert: |
        В контролах "Детский с местом" и "Детских без места" значения равны 0.
        Добавить или убрать пассажира нельзя.

manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на вкладку Ж/Д билеты
  Выполнить поиск Москва - Санкт-Петербург
  Для любого поезда с местами в плацкарт и кликнуть по кнопке покупки
specs:
  'ЖД: Корзинка "Расчет стоимости" на страницах покупки':
    - do: Перейти на покупку для поезда из подготовки
    - assert: >-
        Открылась страница выбора мест

        Справа присутствует пустая корзина с заголовком "Стоимость билетов",
        текстом "Будет известна после выбора мест." и кнопкой "Указать
        пассажиров"
    - do: |-
        В контролах количества билетов выбрать значения:
        * **1 взрослый**
        * **1 детский с местом**
        * **1 детский без места**
        Выбрать любой класс в плацкарте
        Выбрать на схеме вагона место №10
    - assert: >-
        В корзине появилась информация о выбранном месте и стоимости билета для
        ребенка от 5 до 10 лет

        Также появился чекбокс для выбора постельного белья, по умолчанию
        установлен

        https://jing.yandex-team.ru/files/arhey/2022-01-14T08:48:01Z.710821c.png
    - do: Кликнуть **Указать пассажиров**
    - assert: |-
        Над кнопкой появился поп-ап с текстом **“Выберите еще 1 место”**
        По клику вне поп-апа, он скрывается
    - do: Выбрать еще место №11 на схеме
    - assert: >-
        В корзине добавилась информация о выбранных билетах, стало:
        * **Взрослый**
        * **Ребёнок (от 5 до 10 лет)**
        * **Ребёнок без места (до 5 лет)**
        Стоимость детского билета (от 5 до 10 лет) всегда меньше взрослого
        Стоимость детского билета (до 5 лет) равна 0
        Для взрослого билета и билета ребенка от 5 до 10 лет есть указание
        номера места, для ребенка без места приписка "без места"
    - do: 'Проскроллить страницу до упора вниз, затем вверх'
    - assert: Корзина залипает на странице
    - do: Кликнуть Указать пассажиров
    - assert: >-
        * Произошел переход на страницу ввода данных
        * Данные в корзине не изменились, кнопка теперь называется "Проверить
        заказ и купить"
    - do: |-
        Корректно заполнить данные пассажиров
        Кликнуть **Проверить заказ и купить**
    - assert: >-
        Открывается страница покупки билетов на вкладке **Подтверждение**
        В корзине добавился блок **Добавить страховку**
        Вся информация в корзинке соответствует корзинке на предыдущих шагах
        (цены на подтверждении могут отличаться от цен на предыдущей странице)
        Кнопка _Проверить заказ и купить_ изменилась на **Ввести карту и
        оплатить**
        https://jing.yandex-team.ru/files/arhey/2022-01-14T08:50:08Z.eb37a10.png
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  От ИМ теперь всегда приходят требования к местам.

  Кейс все равно нужно периодически проверять, потому что обработка этого случая
  должен работать (например, новые вагоны СВ или сидячие - для них не приходят
  требования и схем у нас еще нет).


  Чтобы отключить схему в тестинге, нужно:

  * Найти вагон со схемой, которую хотим отключить (для него не должно быть
  требований к местам - подойдет не гендерное СВ или сидячий)

  * Найти схему этого вагона в тестовой админке
  https://work.admin-test.rasp.yandex-team.ru/admin/order/coachinfo/

  * Перейти в схему, запомнить привязки (чтобы потом восстановить) и удалить
  привязку. Нажать сохранить

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-24_15.45.08-wvbf7.png)

  **После тестирования нужно восстановить привязку.**
specs:
  'ЖД: Для классов без схем и требований есть переход на покупку':
    - do: Перейти на страницу выбора мест для поезда из описания
    - assert: |
          Для вагона у которого удалили схему  не появляется схема
          Для этого вагона  есть кнопка Указать пассажиров
    - do: Кликнуть на кнопку **Указать пассажиров** в классе
    - assert: >-
        Перешли на вкладку **Данные пассажиров**

        В корзине появилось сообщение "Будет известна на шаге подтверждения
        данных."

        **Итого к оплате** указана приблизительно _(от ... руб)_
    - do: |-
        Корректно заполнить данные пассажиров
        Кликнуть **Проверить заказ и купить**
    - assert: >-
        Перешли на вкладку **Подтверждение**

        В корзине указана информация о забронированном месте и окончательной
        стоимости билета, включая страховку (если выставлен чекбокс Страховка)

        Кнопка _Проверить заказ и купить_ изменилась на **Ввести карту и
        оплатить**
manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Иконки на странице выбора мест':
    - do: >-
        Получить выдачу по направлению _Москва - Самара_

        Кликнуть на **Выбрать место** у сниппета поезда **фирменный «Южный
        Урал»**
    - assert: |-
        Открылась страница покупки билета на вкладке _Выбор мест_
        У классов есть иконки услуг (могут быть не у всех классов)
        Иконки расположены в один ряд
        Для некоторых иконок есть приписки - про животных и про раздельные купе

        https://jing.yandex-team.ru/files/shenfeld/2020-09-18_16.58.53-uvhds.png
    - do: Сделать ширину экрана менее 1200 px
    - assert: Иконки не разъехались
    - do: 'Навести курсор на иконки **Питание, Кондиционер, Биотуалет, Животные**'
    - assert: >-
        Появляются всплывающие подсказки, кроме иконки про животных - для нее
        сразу отображаются приписки
    - do: Кликнуть на класс любого вагона **(проверить все вагоны)**
    - assert: |-
        Раскрылся блок выбора места
        Иконки остались на месте
    - do: >-
        Открыть выдачу Москва - Калуга на любой день - **сейчас эта иконка в
        тестинге недоступна, с этого шага кейс не выполнять!**

        Для поезда 095Х кликнуть по кнопке покупки (если кнопки нет, посмотреть
        на другие даты)
    - assert: >-
        Открылась страница выбора мест для выбранного поезда

        Для всех классов есть иконка - зачеркнутый значок ЭР с припиской "вагон
        без электронной регистрации"
    - do: Навести на иконку
    - assert: |-
        Появился попап с подсказкой "Как получить билет в кассе или терминале"
        Весь текст в попапе является ссылкой
    - do: Перейти по ссылке из попапа
    - assert: >-
        Произошел переход на страницу помощи "Найти и купить билет" на шаг "Шаг
        6. Подготовьте документы для поездки"
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Кейс проверяет, что когда схем в классе несколько, то нет такого дублирования
  попапов:

  ![image](https://jing.yandex-team.ru/files/shenfeld/TRAINS-1175_7._Dubliruetsya_popap_o_tom_chto_mesto_zanyato_na_drugih_shemah__Treker_2019-01-20_13-10-55.png)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Нет дублирования попапов на схемах':
    - do: >-
        Получить выдачу по направлению, _например Москва - Екатеринбург_

        Найти в выдаче поезд с несколькими вагонами одного класса (должно быть
        несколько схем для одного класса), _например поезд 110Э_

        Кликнуть на кнопку **Выбрать место** у сниппета этого поезда
    - assert: Открылась страница покупки билета на вкладке _Выбрать место_
    - do: Кликнуть на класс с несколькими схемами вагонов
    - assert: |-
        Блок выбора вагона и места развернулся
        Отображается несколько схем вагонов
    - do: Навести курсор на занятое место в вагоне
    - assert: >-
        По ховеру появился поп-ап **"Занято"** у курсора

        Поп-ап отображается только у того места, на который навели курсор

        Не должно быть задвоения, как на скриншоте


        [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1497/attachment/5c4b3b497082980a495566e4){title=скриншот}
    - do: '**повторить шаг 3 для разных мест вагона**'
manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Заголовки на странице выбора мест':
    - do: |
        Получить выдачу по направлению _Москва - Санкт-Петербург_
        У сниппета поезда _"Сапсан"_ кликнуть на кнопку **"Выбрать место"**
    - assert: |
        Открылась страница покупки билета на вкладке _Выбор мест_

        Заголовок блока _Выбора класса вагона_ звучит **Выберите класс сидячих
        вагонов**
    - do: |
        Вернуться к выдаче и кликнуть на кнопку **Выбрать место** у обычного
        поезда, где есть несколько типов (плацкарт, купе и СВ)
    - assert: |
        Открылась страница покупки билета на вкладке Выбор мест
        Заголовок блока Выбора класса вагона звучит "Выберите тип вагона и место"

    - do: Кликнуть на тип с несколькими схемами вагона
    - assert: |
        Блок развернулся

        Заголовок внутри звучит **"Выберите место на схеме 7 вагона"** (номер
        вагона может отличаться)
    - do: Кликнуть на класс с несколькими схемами вагона
    - assert: |
        Блок развернулся

        Общего заголовка для всех схем нет, но вкладка с выбором мест называется
        "**Выбрать место на схеме вагона**"

        Есть заголовки для каждого вагона с номером вагона "N вагон"

manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Классы делятся по гендерным признакам':
    - do: >-
        Получить выдачу по направлению, _например Москва - Санкт-Петербург_

        Найти в выдаче поезд, в котором есть вагоны одного класса с гендерным
        признаком и без, _например можно посмотреть в поезде 034А_

        Кликнуть на кнопку **Выбрать место** у сниппета этого поезда
    - assert: >-
        Открылась страница покупки билета на вкладке _Выбрать место_

        Класс с одним номером поделен на два класса - один с припиской
        Раздельные купе, другой без:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_042Ch_Velikii_Novgorod_Nizhnii_Novgorod_iz_Moskvy_v_Nizhnii_Novgorod_na_26_yanvarya__Yandeks.Puteshestviya_2019-01-20_13-30-34.png)
    - do: Кликнуть на вагон с гендерным признаком
    - assert: |-
        Блок выбора места развернулся
        Указан номер вагона _(запомнить его)_
        В вагоне присутствуют гендерные купе
    - do: >-
        Кликнуть на вагон такого же класса, как в предыдущем шаге, но без
        гендерных признаков
    - assert: |-
        Блок выбора места развернулся
        Указан номер вагона, и он отличается от номера вагона на предыдущем шаге
        В вагоне отсутствуют гендерные купе
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Лидирующие нули убираются':
    - do: >-
        Получить выдачу по любому направлению

        Найти поезд, в котором доступны места от 1 до 9 в вагоне с номером от 1
        до 9

        Кликнуть на  кнопку Выбрать место у сниппета этого поезда
    - assert: Открылась страница покупки билета на вкладке _Выбрать место_
    - do: >-
        Выбрать тип и класс вагона

        Выбрать на схеме вагона (с номером от 1 до 9) одно место (с номером от1
        до 9)

        Кликнуть **Указать пассажиров**
    - assert: Страница открылась на вкладке _Данные пассажиров_
    - do: |-
        Корректно заполнить данные пассажиров
        Кликнуть **Проверить заказ и купить**
    - assert: >-
        Страница открылась на вкладке **Подтверждение**

        В номере вагона и места отсутствуют первые нули


        [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1502/attachment/5c4ca12d6acd3d10d430b3cd){title=такого
        быть не должно}
manual: true
Функциональность: Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Общий вид страницы выбора мест, десктоп':
    - do: |
        Получить выдачу по любому направлению, например, Москва - Санкт-Петербург
        Найти поезд, в котором есть разные типы вагонов - Плацкарт, Купе, СВ
        Кликнуть на кнопку Выбрать место у сниппета этого поезда
    - assert: |
        Открылась страница покупки билета на шаге "Выбор мест"
        Сверху расположена шапка, которая содержит:
        * Логотип Яндекс Путешествия
        * Форму поиска маршрута
        * Ссылки на сервисы
        * Иконка ЛК
        * Кнопка авторизации

        Ниже расположен блок  с информацией о поезде
        Правее расположена корзина

        https://jing.yandex-team.ru/files/semirka/Screenshot_93-1.png

        Ниже - окно покупки билетов, открытое на вкладке "Выбор мест", оно содержит:

        * Блок "Укажите количество билетов" с контролами выбора количества
        билетов
        * Блок "Выберите тип вагона и класс обслуживания"
        https://jing.yandex-team.ru/files/semirka/Screenshot_94-1.png

    - do: Прокликать кнопки "добавить и убрать"  в блоке "Укажите количество билетов"
    - assert: |
        Добавляются и убираются  пассажиры
        По дефолту можно выбрать 4 взрослых, 3 детей с местом, 1 ребенка без места
    - do: Проверить информацию в блоке Выберите тип вагона и место.
    - assert: |-
        Блок разбит по типу вагонов (Купе, Плацкарт и т.д.)
        Вагоны упорядочены в порядке возрастания (например от 1-го до 20-го)
        Каждый вагон содержит информацию

        * Класс вагона
        * Стоимость билетов
        * Иконки доступных услуг и описание
        * Описание класса (может быть не для всех классов)
        * Перевозчик
        * Цены билетов и количества мест выровнены по вертикали и по горизонтали

        Цены билетов и количества мест выровнены по вертикали и по горизонтали
    - do: Уменьшить ширину страницы менее 1200 px (нужно открыть девтулз и, не включая режим телефона!!!, уменьшать окно, и в верхнем правом углу будет отображаться размер страницы)
    - assert: Верстка не поехала, появился горизонтальный скролл
    - do: Навести курсор на табики типов вагонов
    - assert: На вагонах типа Плацкарт, Купе и СВ указатель мыши меняется на руку
    - do: Кликнуть на любой табик с типом вагонов типа Плацкарт, Купе или СВ
    - assert: |
        Появились вагоны соответствующие выбранному типу, схемы вагонов расскрыты.
        Если у данного вагона нет схемы, отображается кнопка "Указать пассажиров"
        Появляются схемы вагонов
    - do: Кликнуть на другой тип любого вагона
    - assert: |
        Тип отображаемых вагонов изменился
        Есть схемы вагонов
        Если у данного вагона нет схемы , отображается кнопка "Указать пассажиров"
        Вагоны соотвествующие предыдущиму типу вагонов не отображаются
    - do: Кликнуть еще раз по выбранному типу
    - assert: Ничего не произошло,  список  вагонов не свернулся

manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - Smoke
  - Blocker
Автор: semirka
feature: ЖД
type: Выбор мест
description: >-
    Проверяет значения в контролле  "Бесплатные билеты для детей младше 5 лет (на одном месте со взрослым)" при разных значениях первых двух контроллах.
    ![](https://jing.yandex-team.ru/files/semirka/Screenshot_96-1.png)
    Перейти на главную сервиса
    Перейти на вкладку Ж/Д билеты
    Находимся на странице покупки билета, на вкладке _Выбор мест_

    Для этого необходимо открыть выдачу по любому направлению. У любого сниппета кликнуть на кнопку **Выбрать место**
    [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1489/attachment/5c463b48f557091ad6a2f7ac){title=скриншот}
specs:
  'ЖД: Детей без места не может быть больше взрослых':
    - do: |
        В блоке "Укажите количество билетов", в контроллах установить значение:
        Взрослый = 1
        Детских с местом = 0
        Нажать "Добавить" (+) 1 детский без места
    - assert: |-
        Значение "Детский без места равно 1.
        Кнопка "Добавить" (+) стала неактивной
        Кнопка "Убрать" (-) стала активной
        Можно выбрать только или 0 или 1 детский билет без места

        Примерный внешний вид: https://jing.yandex-team.ru/files/semirka/Screenshot_97-1.png
    - do: В контролле выбора количества взрослых установить значение Взрослых = 2, Детских с местом = 0
    - assert: В контролле "Детских билетов без места" можно выбрать только от 0 до 2

manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Проверяет вкладки на страницах покупки:

  ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-30_11.23.49-r2ltt.png)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты

  Перейти на покупку для любого поезда


  Находимся на странице покупки билета, на вкладке _Выбор мест_

  Для этого необходимо открыть выдачу по любому направлению. У любого сниппета
  кликнуть на кнопку **Выбрать место**


  [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1489/attachment/5c463b48f557091ad6a2f7ac){title=скриншот}
specs:
  'ЖД: Вкладки страниц покупки, десктоп':
    - do: 'Кликнуть на вкладки **Данные пассажиров, Подтверждение, Оплата**'
    - assert: |-
        Вкладка Выбор мест выделена черным шрифтом и подчеркнута красной линией
        Вкладка Выбор поезда выделена черным шрифтом
        Другие кладки задизейблены
        Переход не осуществляется
    - do: |-
        Выбрать место
        Кликнуть **Указать пассажиров**
        Корректно заполнить данные пассажиров
        Кликнуть **Проверить заказ и купить**
    - assert: |-
        Открывается страница покупки билетов на вкладке **Подтверждение**
        Вкладка Подтверждение подчеркнута красной линией
        Все вкладки, кроме Оплата выделены черным шрифтом
    - do: Кликнуть на вкладку **Данные пассажиров**
    - assert: |-
        Произошел переход на вкладку **Данные пассажиров**
        Вкладка Данные пассажиров подчеркнута красной линией
        Вкладка **Подтверждение** задизейблена
    - do: Кликнуть на вкладку **Выбор мест**
    - assert: >-
        Произошел переход на вкладку **Выбор мест**

        Вкладка **Подтверждение** задизейблена

        Вкладка **Данные пассажиров** кликабельна и на нее можно перейти,
        выделена черным шрифтом
    - do: Кликнуть на вкладку **Выбор поезда**
    - assert: Вернулись к выдаче
manual: true
Функциональность: Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  Кейс проверять в проде


  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Вагоны с животными в Ласточках':
    - do: >-
        Получить выдачу по направлению Москва - Курск (Дату выбрать на месяц
        вперед)

        Найти сниппет поезда **Ласточка**

        Кликнуть на кнопку **Выбрать место**
    - assert: >-
        Открылась страница покупки билета, на вкладке **Выбор мест**

        В блоке выбора типа вагонов присутствует вагон с местами для пассажиров
        с животными

        Присутствует приписка у иконки **"Для провоза животных нужно купить
        билет в кассе вокзала"**

        Класс данного вагона не делится на 2 разных вагона (с животными и без)


        [collapsed-image](https://testpalm.yandex-team.ru/internal/testcases/poezda/1507/attachment/5c4cf7c12f6d480a393228a7){title=скриншот}
    - do: |-
        Выбрать место в вагоне с животными
        Кликнуть **Указать пассажиров**
    - assert: |-
        Открывается вкладка **Данные пассажиров**
        Ошибок нет
    - do: |-
        Корректно заполнить данные пассажиров
        Кликнуть **Проверить заказ и купить**
    - assert: |-
        Открывается страница покупки билетов на вкладке **Подтверждение**
        Ошибок нет
    - do: >-
        Открыть выдачу по направлению Москва - Иваново

        Для Ласточки кликнуть по кнопке покупки

        На странице выбора мест выбрать место в вагоне, в котором разрешен
        провоз животных

        Кликнуть по кнопке Указать пассажиров

        Заполнить все поля валидными данными

        Кликнуть по кнопке Проверить заказ и купить
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Ошибок нет
manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Правильный переход на покупку с выдачи с фильтрами':
    - do: Перейти на выдачу Москва - Санкт-Петербург на завтра
    - do: Установить фильтры скоростных поездов - Сапсан и Ласточка
    - assert: |-
        * В урле появились параметры, указывающие на установку фильтров
        * Выдача уменьшилась - содержит только сапсаны и невские экспрессы
    - do: Обновить страницу
    - assert: >-
        * После обновления урл остался прежним - содержит параметры скоростных
        поездов

        * У выбранных до обновления фильтров установлены чекбоксы

        * Выдача не поменялась - содержит только сапсаны и ласточки
    - do: >-
        Нажать на кнопку покупки для нескольких поездов из разных частей выдачи
        (в начале, в середине, в конце)
    - assert: >-
        * Для всех поездов открывается страница выбора мест

        * На странице выбора мест информация о поезде совпадает с выдачей -
        номер поезда, время отправления/прибытия
    - do: Для одного из поездов вернуться браузерной кнопкной назад на выдачу
    - assert: >-
        * Выдача имеет тот же вид, что до перехода - установлены фильтры, в урле
        параметры скоростных поездов, в выдаче только сапсаны и ласточки
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Записная книжка
type: Ввод данных
description: >-
  **Для асессоров:**

  Для работы с записной книжкой требуется быть авторизованным. Можно
  использовать учетную запись: vladlen@yandex.ru password: v12345678


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты

  Перейти на покупку для любого поезда


  Находимся на странице ввода данных для 2 взрослых пассажиров, залогинены под
  тестовым аккаунтом из описания кейса
specs:
  'ЖД: Сохранение данных пассажиров в записную книжку':
    - do: 'Заполнить поля ввода произвольными валидными значениями, запомнить их'
    - do: Кликнуть по кнопке Проверить заказ и купить
    - assert: '* Произошел переход на страницу подтверждения'
    - do: Вернуться обратно на страницу ввода данных
    - assert: >-
        * Появились 2 новых интента для обоих пассажиров

        ![image](https://jing.yandex-team.ru/files/shenfeld/Zapolnenie_dannyh_passazhirov_v_poezde_050M_Moskva_Samara_iz_Moskvy_v_Samaru_na_13_fevralya__Yandeks.Puteshestviya_2019-01-29_18-12-04.png)

        * Вся информация соответствует заполненной ранее - ФИО, дата рождения,
        тип документа, номер документа
    - do: >-
        Для первого пассажира оставить все поля заполненными теми же данными,
        для второго заполнить другими валидными данными
    - do: Кликнуть Проверить заказ и купить
    - assert: '* Произошел переход на страницу подтверждения'
    - do: Вернуться назад на страницу ввода данных
    - assert: >-
        * Появился один новый интент с данными, которыми заполняли поля для
        второго пассажира

        * С данными первого пассажира нового интента не создалось, дублирования
        нет
    - do: >-
        Для первого пассажира заменить поля с типом документа и номером
        документа (например, на загран паспорт), остальные поля оставить
        прежними
    - do: Кликнуть Проверить заказ и купить
    - assert: '* Произошел переход на страницу подтверждения'
    - do: Вернуться назад на страницу ввода данных
    - assert: >-
        * Создался новый интент, который отличается от старого только типом
        документа и номером:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Zapolnenie_dannyh_passazhirov_v_poezde_050M_Moskva_Samara_iz_Moskvy_v_Samaru_na_13_fevralya__Yandeks.Puteshestviya_2019-01-29_18-23-19.png)
    - do: >-
        * Для одного из пассажиров поменять ФИО на латиницу (документ должен
        быть загран паспорт)

        * Для второго пассажира записать ФИО без отчества - вместо отчества
        ввести "-"
    - do: Кликнуть Проверить заказ и купить
    - assert: '* Произошел переход на страницу заказа'
    - do: Вернуться на страницу ввода данных
    - assert: |-
        * Появились 2 новых интента - один с ФИО латиницей, второй без отчества
        * Все данные на новых интентах соответствуют введенным ранее
    - do: >-
        Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем
        углу):

        ![image](https://jing.yandex-team.ru/files/gouken67/Иконка%20ЛК.png)

        Перейти во вкладку “Пассажиры”
    - assert: >-
        В записной книжке добавились пассажиры с данными, указанными в п.1, 4 7,
        10
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис:
  - Записная книжка
  - ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Записная книжка
type: Ввод данных
description: >-
  **Для асессоров:**

  Для работы с записной книжкой требуется быть авторизованным. Можно
  использовать учетную запись: vladlen@yandex.ru password: v12345678


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Находимся на странице выбора мест для любого поезда, не залогиненные ни под
  каким пользователем
specs:
  'ЖД: Отображение и подстановка данных пассажиров из записной книжки':
    - do: >-
        Выбрать пассажиров: 2 взрослых пассажиров, 1 ребенка от 5 до 10 лет, 1
        ребенка до 5 лет
    - do: 'Выбрать любые места, кликнуть по кнопке Указать пассажиров'
    - assert: |-
        * Произошел переход на страницу ввода данных
        * На странице нет интентов
    - do: >-
        Кликнуть по кнопке Войти в правом верхнем углу страницы и залогиниться
        аккаунтом из описания
    - assert: >-
        * После перехода обратно на страницу выбора мест, появились интенты
        (если существует больше 10 интентов, то они не показываются вообще!) и
        саджесты при клике на поле

        * На интентах/саджестах отображается информация:

        ФИО (в порядке ИОФ)

        Наименование документа

        Номер документа

        Интенеты выглядят так:

        ![image](https://jing.yandex-team.ru/files/papulova/QGtm1RRfyP.png)


        Саджесты:

        ![image](https://jing.yandex-team.ru/files/papulova/2KV9YeocrV.png)


        * Для взрослых пассажиров интенты отличаются от интентов у детей от 5 до
        10 лет и от детей до 5 лет (интенты для каждого возраста свои)
    - do: Выбрать по 1 интенту/саджесту для каждого пассажира
    - assert: >-
        * При клике по интенту/саджесту поля ввода заполняются данными с этого
        интента

        * Для взрослого пассажира подставляются данные взрослого (с возрастом
        больше 18 лет), для ребенка - от 5 до 10 лет, для ребенка без места - до
        5 лет
    - do: >-
        Кликнуть по любому интенту/саджесту, где есть только имя и фамилия (нет
        отчества)
    - assert: >-
        * На этом интенте/саджесте вместо отчества нет "-"

        * Все данные подставились в поля

        * Поле с отчеством окрасилось в серый и установился чекбокс "Нет
        отчества"
    - do: 'Кликнуть по иконке аккаунта в правом верхнем углу, затем по кнопке Выйти'
    - assert: |-
        * Вместо иконки появилась кнопка Войти
        * Все интенты и саджесты пропали
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис:
  - Записная книжка
  - ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  **Для асессоров:**

  Для работы с записной книжкой требуется быть авторизованным. Для этого нужно:

  * Нажать на кнопку Войти в правом верхнем углу

  * На открывшейся странице в тестовом паспорте авторизоваться тестовым
  пользователем. Можно использовать учетную запись: vladlen@yandex.ru password:
  v12345678

  * Произойдет переход в тестинг https://travel-test.yandex.ru (у асессоров нет
  доступов)

  * После этого нужно вернуться обратно на стенд для асессоров
  https://travel.crowdtest.yandex.ru - в верхнем правом углу должен появиться
  логин, под которым авторизовались в тестовом паспорте.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты


  Перейти на страницу ввода данных для одного пассажира, поезд любой. Необходимо
  быть залогиненным по инструкции из описания.
specs:
  'ЖД: Сохранение почты и номера телефона в записной книжке':
    - do: Изменить значения полей с почтой и телефоном на любые другие (валидные)
    - do: Кликнуть по кнопке Проверить заказ и купить
    - assert: '* Осуществился переход на страницу подтверждения'
    - do: Кликнуть по вкладке "2. Выбор мест"
    - do: >-
        Открыть консоль браузера, вкладку Application. В разделе Storage - Local
        Storage кликнуть по урлу правой кнопкой и нажать Clear:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Zapolnenie_dannyh_passazhirov_v_poezde_138I_Moskva_Orenburg_iz_Moskvy_v_Samaru_na_21_fevralya__Yandeks.Puteshestviya_2019-02-01_16-35-08.png)
    - do: Нажать на кнопку Указать пассажиров
    - assert: |-
        * Произошел переход на страницу ввода данных
        * В полях с почтой и телефоном указаны значения, на которые меняли
    - do: Кликнуть по кнопке Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Ошибок нет
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Вернуть кейс после восстановления международного сообщения! И исправить для
  редизайна.


  **Для асессоров:**

  Для работы с записной книжкой требуется быть авторизованным. Для этого нужно:

  * Нажать на кнопку Войти в правом верхнем углу

  * На открывшейся странице в тестовом паспорте авторизоваться тестовым
  пользователем. Можно использовать учетную запись: vladlen@yandex.ru password:
  v12345678

  * Произойдет переход в тестинг https://travel-test.yandex.ru (у асессоров нет
  доступов)

  * После этого нужно вернуться обратно на стенд для асессоров
  https://travel.crowdtest.yandex.ru - в верхнем правом углу должен появиться
  логин, под которым авторизовались в тестовом паспорте.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Интенты с невалидными документами недоступны для выбора':
    - do: Залогиниться под тестовым пользователем по инструкции из описания
    - do: >-
        Перейти на выдачу Москва - Баку (если нет цен, можно использовать выдачи
        Москва - Рига, Моска - Таллин) на все дни
    - do: >-
        Для поезда 055Ч (или для другого поезда, для которого есть цены) выбрать
        дату
    - assert: '* Произошел переход на страницу выбора мест'
    - do: |-
        Выбрать пассажиров: 1 взрослого и 1 ребенка
        Выбрать любой класс и место
        Кликнуть по кнопке Указать пассажиров
    - assert: >-
        * Произошел переход на страницу ввода данных

        * Для обоих пассажиров есть интенты

        * Некоторые интенты окрашены в серый цвет - это интенты, на которых либо
        документ не загран паспорт и не иностранный документ, либо ФИО записано
        по-русски

        * Для серых интентов есть иконка вопроса, для доступных иконки нет

        * Серые интенты не кликабельны

        * Сначала отображаются доступные интенты, затем недоступные:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Zapolnenie_dannyh_passazhirov_v_poezde_055Ch_Moskva__Baku_iz_Moskvy_v_Baku_na_9_marta__Yandeks.Puteshestviya_2019-02-01_17-26-14.png)
    - do: >-
        Навести курсор на иконку вопроса на сером интенте, где ФИО записаны
        по-русски
    - assert: >-
        * Появился попап с текстом "Для оформления билетов на этот поезд ФИО
        должны быть записаны латиницей"
    - do: >-
        Навести курсор на иконку вопроса на интенте, где где документ - не
        загран паспорт и не иностранный документ
    - assert: >-
        * Появился попап с текстом "Билеты на этот поезд можно оформить по
        загранпаспорту или иностранному документу"
    - do: Кликнуть по любому из активных интентов
    - assert: '* Данными с интента заполнились поля'
    - do: Нажать на кнопку "Проверить заказ и купить"
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Ошибок нет
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты

  Перейти на покупку для любого билета


  Находимся на странице ввода данных для любого поезда на дату в будущем,
  например, Москва - Самара через месяц.
specs:
  'ЖД: Ошибка "Возраст пассажира не соответствует документу"':
    - do: >-
        Выбрать тип документа Паспорт РФ

        Дату рождения установить такую, чтобы на завтра от текущей даты
        пассажиру исполнялось 14 лет

        Остальные поля заполнить валидной информацией

        Кликнуть по кнопке Проверить заказ и купить
    - assert: >-
        * Перехода на страницу подтверждения не произошло

        * Поле с датой подсвечивается красной рамкой

        * Появился текст под полем "Возраст пассажира не соответствует
        документу"
    - do: |-
        Установить дату рождения, чтобы пассажиру вчера исполнилось 14 лет
        Кликнуть Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Ошибок нет
    - do: >-
        Вернуться на страницу ввода данных

        Выбрать тип документа Свидетельство о рождении

        Установить такую дату рождения, чтобы на дату отправления поезда
        пассажиру было 14 лет, 2 месяца и 1 день

        Кликнуть по кнопке Проверить заказ и купить
    - assert: |-
        * Перехода на страницу подтверждения не произошло
        * Поле с датой подсвечивается красной рамкой
        * Под полем есть текст "Возраст пассажира не соответствует документу"
    - do: >-
        Изменить дату рождения, чтобы пассажиру на дату отправления поезда было
        14 лет и 2 месяца

        Кликнуть про кнопке Проверить заказ и купить
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Ошибок нет
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  **Для асессоров:**

  Для работы с записной книжкой требуется быть авторизованным. Для этого нужно:

  * Нажать на кнопку Войти в правом верхнем углу

  * На открывшейся странице в тестовом паспорте авторизоваться тестовым
  пользователем. Можно использовать учетную запись: vladlen@yandex.ru password:
  v12345678

  * Произойдет переход в тестинг https://travel-test.yandex.ru (у асессоров нет
  доступов)

  * После этого нужно вернуться обратно на стенд для асессоров
  https://travel.crowdtest.yandex.ru - в верхнем правом углу должен появиться
  логин, под которым авторизовались в тестовом паспорте.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Интенты с противоположным полом недоступны для выбора':
    - do: Залогиниться под тестовым пользователем по инструкции из описания
    - do: Перейти на выдачу Москва - Екатеринбург на завтра
    - do: 'Для любого сниппета, где есть места в купе, кликнуть по кнопке покупки'
    - assert: '* Произошел переход на страницу выбора мест'
    - do: >-
        Выбрать любое мужское место в гендерном купе (если для этого поезда
        гендерных купе нет, нужно поискать на других поездах)

        ![](https://jing.yandex-team.ru/files/shenfeld/2020-09-21_14.46.31-p7lp8.png)
    - do: Кликнуть по кнопке Указать пассажиров
    - assert: |-
        * Произошел переход на страницу ввода данных
        * Отображаются интенты с пассажирами
    - do: Прокликать несколько интентов
    - assert: |-
        * При клике по интенту поля ввода заполняются данными
        * Для всех пассажиров пол совпадает с выбранным - только мужской
    - do: Вернуться обратно на страницу выбора мест и выбрать место в женском купе
    - do: Нажать по кнопке Указать пассажиров
    - assert: |-
        * Произошел переход на страницу ввода данных
        * Отображаются интенты
    - do: Прокликать несколько интентов
    - assert: |-
        * При клике по интенту поля ввода заполняются данными
        * Для всех пассажиров пол совпадает с выбранным - только женский
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на главную сервиса
  Перейти на вкладку Ж/Д билеты
  Перейти на покупку для любого поезда

  Находимся на странице ввода данных для любого поезда и любой даты.
specs:
  'ЖД: Валидация при не выбранной стране для другого документа':
    - do: |-
        Выбрать документ Другой
        Не выбирать страну
        Заполнить остальные поля валидными данными
    - do: |-
        Вернуться обратно на шаг выбора мест
        Нажать на кнопку Указать пассажиров
    - assert: |-
        * Произошел переход на страницу ввода данных
        * Все поля, кроме селекта страны, предзаполнены введенными данными
    - do: Кликнуть по кнопке Проверить заказ и купить
    - assert: |-
        * Перехода на страницу подтверждения не произошло
        * Селект с выбором страны подсвечивается красной рамкой
        * Под селектом есть ошибка "Выберите страну из списка"
    - do: |-
        Выбрать любую страну
        Кликнуть кнопку Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Ошибок нет
manual: true
Устройство: Десктоп
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Для прохождения кейса требуется найти такой класс в поезде, чтобы в нем
  осталось от 1 до 4 последних места. Часто можно встретить такое на Москва -
  Санкт-Петербург на сегодня или на завтра.

  Перейти на вкладку ЖД билеты

  Перейти на покупку для поезда из описания


  Находимся на странице выбора мест для поезда из описания
specs:
  'ЖД: Последнее место выбирается автоматически':
    - do: >-
        Выбрать количество взрослых пассажиров, равное количеству последних
        свободных мест в классе

        Не выбирая места на схеме, кликнуть по кнопке Указать пассажиров
    - assert: |-
        * Произошел переход на страницу ввода данных
        * Попапов с ошибкой не отображается
manual: true
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Текст про стоимость билетов на страницах покупки':
    - do: |-
        Перейти на выдачу Москва - Челябинск через неделю
        Для любого поезда кликнуть по кнопке Выбрать место
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * **Для тача** Внизу страницы есть текст "Стоимость билетов указана
        приблизительно. Окончательная будет известна на шаге подтверждения
        заказа. В цену включён сбор Яндекса. С использованием веб-системы «ИМ»."

        * **Для десктопа**  Под корзинкой справа есть текст "Стоимость билетов
        указана приблизительно. Окончательная будет известна на шаге
        подтверждения заказа. В цену включён сбор Яндекса. С использованием
        веб-системы «ИМ»."
    - do: |-
        Выбрать любое место
        Кликнуть по кнопке Указать пассажиров
    - assert: >-
        * Произошел переход на страницу ввода данных

        * **Для тача** Внизу страницы есть текст "Стоимость билетов указана
        приблизительно. Окончательная будет известна на шаге подтверждения
        заказа. В цену включён сбор Яндекса. Нажимая кнопку перехода к
        подтверждению заказа, вы соглашаетесь с Условиями приобретения
        электронных билетов. С использованием веб-системы «ИМ». Сохраните
        контакты в личном кабинете для быстрого оформления следующих заказов."

        * **Для десктопа** Справа под корзинкой есть текст "Стоимость билетов
        указана приблизительно. Окончательная будет известна на шаге
        подтверждения заказа. В цену включён сбор Яндекса. Нажимая кнопку
        перехода к подтверждению заказа, вы соглашаетесь с Условиями
        приобретения электронных билетов. С использованием веб-системы «ИМ».
        Сохраните контакты в личном кабинете для быстрого оформления следующих
        заказов."
    - do: Кликнуть по ссылке "Условиями приобретения электронных билетов"
    - assert: >-
        * Открылась страница помощи с заголовком "Условия приобретения
        электронных билетов на поезда" в новой вкладке
    - do: |-
        Вернуться на страницу ввода данных
        Заполнить все поля валидными данными
        Кликнуть Проверить заказ и купить
    - assert: >-
        * Произошел переход на страницу подтверждения

        * **Для тача** Внизу страницы есть текст "В цену включен сбор Яндекса. С
        использованием веб-системы «ИМ»"

        * **Для десктопа** Справа под корзинкой есть текст "В цену включен сбор
        Яндекса. С использованием веб-системы «ИМ»"
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: |-
  На этот поезд нет покупки, другого примера поезда нет.
  Перейти на вкладку ЖД билеты
specs:
  'ЖД: Корректное отображение блока со стоимостью, когда стоимость не известна':
    - do: |-
        Перейти на выдачу Санкт-Петербург - Великий Новгород
        Для поезда 7001 Ласточка кликнуть по кнопке покупки
    - assert: '* Осуществился переход на страницу выбора мест'
    - do: >-
        Кликнуть по кнопке Указать пассажиров на классе без схемы

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_7001A_Sankt-Peterburg_Velikii_Novgorod_iz_Sankt-Peterburga_v_Velikii_Novgorod_na_16_fevralya__Yandeks.Pute_2019-02-13_13-29-22.png)
    - assert: >-
        * Произошел переход на страницу ввода данных

        * На корзине со стоимостью справа отображается текст:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Zapolnenie_dannyh_passazhirov_v_poezde_7001A_Sankt-Peterburg_Velikii_Novgorod_iz_Sankt-Peterburga_v_Velikii_Novgorod_na_16_fev_2019-02-13_13-30-32.png)

        * Цена нигде не указана
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (Рядом с
  кнопкой Войти в десктопе. В таче ссылка "Билеты и бронирования") > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)

  - Залогиниться под тестовым пользователем. Асессоры могут использовать
  vladlen@yandex.ru password: v12345678 _(если по нажатию на кнопку Войти
  открывается продовый паспорт passport.yandex.ru, необходимо в другой вкладке
  открыть паспорт тестинга https://passport-test.yandex.ru и авторизоваться в
  нем тестовым аккаунтом)_

  - Перейти на вкладку ЖД билеты

  - Сформировать поиск по маршруту "Москва - Санкт-Петербург" на дату через месяц от текущей, выбрать фирменный поезд Арктика
  и купить билет в вагон купе на место №10.

  - Нажать на кнопку "Подробнее о заказе" - откроется страница полного заказа.
specs:
  'ЖД: Страница валидации для доступа к заказу':
    - do: >-
        Разлогиниться в правом верхнем углу (для тача:  вернуться на "Мои поездки" и разлогиниться там, затем вернуться на страницу полного
        заказа
    - assert: >-
        * Страница заказа не открылась

        * Открывается страница с формой (скрин только для десктопа, в таче форма
        аналогичная, но без шапки).

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-03_19.02.20-rag37.png)

        * Номер заказа соответствует созданному заказу
    - do: Кликнуть Посмотреть заказ
    - assert: >-
        * Поле подсвечено красным

        * Появился попап с подсказкой, что необходимо ввести данные (в таче
        текст над кнопкой)
    - do: |-
        Ввести неверный номер телефона
        Кликнуть Посмотреть заказ
    - assert: >-
        * Появилась ошибка под полем "Необходимо проверить введенные в поле
        данные."
    - do: |-
        Ввести верный номер телефона, который указывали при оформлении заказа
        Кликнуть Показать заказ
    - assert: '* Произошел переход на страницу созданного заказа'
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Для вагонов в Стрижах и Сапсанах есть указание направления движения':
    - do: |-
        Перейти на выдачу Москва - Санкт-Петербург через месяц
        Для одного из поездов Сапсан кликнуть по кнопке покупки
    - assert: Осуществился переход на страницу выбора мест
    - do: Прокликать все типы вагонов в поезде
    - assert: |
        * Для всех вагонов во всех типах есть указание направления движения
        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_760A_Moskva_Sankt-Peterburg_iz_Moskvy_v_Sankt-Peterburg_na_28_fevralya__Yandeks.Puteshestviya_2019-02-15_11-46-28.png)
    - do: |
        Перейти на выдачу Москва - Нижний Новгород
        Для любого из поездов Стриж кликнуть по кнопке покупки
    - assert: Осуществился переход на страницу выбора мест
    - do: Прокликать все типы вагонов в поезде
    - assert: Для всех вагонов во всех типах есть указание направления движения
manual: true
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Тач: форма поиска на выдаче':
    - do: Открыть выдачу Москва- Казань на любую дату
    - assert: |
        * Открыта выдача со сниппетами
        * На выдаче сверху есть краткая форма поиска
        * В ней указано “Откуда”, “Куда”, “Когда”, есть кнопка "лупа" для
        запуска поиска
        * Форма заполнена соответственно поиску: Москва-Казань, выбранная дата
    - do: Тапнуть по строке с краткой формой поиска
    - assert: |
        * Форма поиска развернулась
        * Форма поиска состоит из полей “Откуда” (заполнено Москва), “Куда”
        (заполнено Казань), “Когда” (выбранная дата), “Обратно” (текст "Не нужен") и
        кнопки “Найти”
    - do: Тапнуть в поле "Откуда"
    - assert: |
        * Открывается отдельное окно "Откуда", есть стрелка для возвращения
        обратно к форме
        * Есть поле ввода (не заполнено)
        * Под полем ввода раскрылись саджесты
    - do: Кликнуть по кнопке Назад (стрелка)
    - assert: |
        * Открылась форма поиска
        * Форма поиска состоит из полей “Откуда” (Москва), “Куда” (заполнено
        Казань), “Когда” (выбранная дата), “Обратно” (текст "Не нужен") и кнопки “Найти”
    - do: Тапнуть в поле “Куда”
    - assert: |
        * Открывается отдельное окно “Куда”, слева есть стрелка для возвращения
        назад к форме
        * Есть поле ввода (не заполнено)
        * Под полем ввода раскрылись саджесты
    - do: Кликнуть по кнопке Назад (стрелка)
    - assert: |
        * Открылась форма поиска
        * Форма поиска состоит из полей “Откуда” (Москва), “Куда” (заполнено
        Казань), “Когда” (выбранная дата), “Обратно” (текст "Не нужен") и кнопки “Найти”
    - do: Тапнуть по кнопке смены направления маршрута
    - assert: |
        * Открыта форма поиска
        * Форма поиска состоит из полей “Откуда” (Казань), “Куда” (Москва),
        “Когда” (выбранная дата), “Обратно” (текст "Не нужен") и кнопки “Найти”
    - do: Тапнуть по полю "Туда"
    - assert: |
        * Открылся календарь в шторке
        * Ссылка Сбросить для очистки поля в правом верхнем углу
        * Выбранная дата выделена
        * До текущей (СЕГОДНЯШНЕЙ) даты все даты не активны
        * Выходные дни (суббота и воскресенье) выделены красным цветом
        * Название месяцев указано с заглавной буквы
        * Календарь скроллится
    - do: Кликнуть по кнопке Назад и тапнуть по кнопке Найти в форме
    - assert: |
        * Открылась выдача
        * На выдаче сверху есть краткая форма поиска
        * В ней указано “Откуда”, “Куда”, “Когда”, “Обратно” есть кнопка “лупа” для
        запуска поиска
        * Форма заполнена соответственно поиску: Казань-Москва, выбранная дата
    - do: Тапнуть по строке с краткой формой поиска
    - assert: |
        * Форма поиска развернулась
        * Форма поиска состоит из полей “Откуда” (заполнено Казань), “Куда”
        (заполнено Москва), “Когда” (выбранная дата), “Обратно” (текст "Не нужен") и
        кнопки “Найти”

manual: true
Функциональность: Форма поиска
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выдача
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Тач: саджесты для полей Откуда на выдаче':
    - do: Открыть выдачу Москва- Казань на любую дату
    - assert: |
        * Открыта выдача со сниппетами
        * На выдаче сверху есть краткая форма поиска
        * В ней указано “Откуда”, “Куда”, “Когда”, есть кнопка "лупа" для
        запуска поиска
        * Форма заполнена соответственно поиску: Москва-Казань, выбранная дата
    - do: Тапнуть по строке с краткой формой поиска
    - assert: |
        * Форма поиска развернулась
        * Форма поиска состоит из полей “Откуда” (заполнено Москва), “Куда”
        (заполнено Казань), “Когда” (выбранная дата), кнопки календарика и
        кнопки “Найти”
    - do: Тапнуть в поле Откуда
    - assert: |
        * Открываются саджесты для поля Откуда.
        * Есть кнопка для возвращения назад к форме
        * Поле ввода очищено
        * Под полем ввода располагается список саджестов
    - do: Ввести в поле Откуда букву С
    - assert: |
        * Список саджество под полем вводам изменяется. В списке отображаются
        * только станции, название которых или область начинается на букву С
    - do: Добавить буквы "ам"
    - assert: |
        * В поле ввода отображается "Сам". Список саджествов обновлен,
        * Cоответствует запросу в поле ввода
    - do: Удалить букву "м" и добавить букву "р"
    - assert: |
        * После удаления буквы в поле ввода отображается "Са". Список саджествов
        * Обновлен, соответствует запросу в поле ввода
        * После добавления буквы в поле ввода отображается "Сар". Список
        * Саджествов обновлен, соответствует запросу в поле ввода
    - do: Ввести в поле Откуда "Саратов" вручную
    - assert: Список саджествов обновлен, соответствует запросу в поле ввода
    - do: Выбрать один из предложенных саджестов и тапнуть по нему
    - assert: |
        * Список саджестов скрывается. Открыта форма поиска.
        * В поле Откуда указано значение выбранного саджеста

manual: true
Функциональность: Форма поиска
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Blocker
Автор: shenfeld
feature: ЖД
type: Выдача
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Тач: календарь на выдаче':
    - do: |-
        Открыть любую выдачу, например, Нижневартовск - Сургут на завтра
        Тапнуть на строку поиска вверху экрана (содержащую лупу справа).
        Тапнуть по полю с иконкой календаря
    - assert: |-
        * Открылся календарь
        * Крестик для очищения поля в правом верхнем углу
        * Есть кнопка для возвращения назад
        * Выбранная дата выделена
    - do: 'Тапнуть на любую  дату, предшествующую текущей дате'
    - assert: Ничего не происходит. До текущей даты все даты некликабельны
    - do: Тапнуть по кнопке Назад
    - assert: Календарь закрылся.
    - do: >-
        Тапнуть по строке с иконкой календаря еще раз. Проскроллировать
        календарь вниз
    - assert: 'На открывшейся странице отображены только 12 месяцев, начиная с текущего'
    - do: 'Выбрать любую доступную дату: текущую или будущую'
    - assert: |-
        Календарь свернулся
        В поле с датой подставилось выбранное значение
    - do: >-
        Тапнуть по строке с иконкой календаря еще раз. Выбрать ту же дату, что и
        на шаге 5
    - assert: Календарь закрылся. Отображена форма поиска с выбранной датой.
    - do: Тапнуть по строке с иконкой календаря еще раз.
    - do: Изменить ориентацию экрана с портретной на лендскейп
    - assert: 'Все элементы присутствуют, верстка не едет'
manual: true
Функциональность: Форма поиска
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Тач: окно фильтров на выдаче':
    - do: >-
        Открыть любую выдачу, например, Москва - Санкт Петербург на завтра (эта
        выдача лучше всего подойдет для фильтров)
    - assert: >-
        Открывается страница выдачи. Справа от формы поиска есть кнопка фильтров

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_17.31.53-arymk.png)
    - do: Тапнуть на кнопку Фильтры
    - assert: >-
        * Открывается окно с фильтрами и сортировками

        * Есть кнопка Сбросить (неактивна, пока фильтры не выбраны), Показать

        * Есть кнопка Назад

        ![](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_17.33.45-p0mq4.png)
    - do: Нажать Назад
    - assert: Страница фильтров скрывается. Открыта страница выдачи.
    - do: Тапнуть на кнопку Фильтры
    - assert: '* Открывается страница с фильтрами'
    - do: |-
        Выбрать любой фильтр
        Тапнуть Сбросить
    - assert: '* Фильтр сбрасывается, обновляется количество около кнопки Показать'
    - do: |-
        Выбрать несколько фильтров
        Тапнуть Показать
    - assert: >-
        * Страница фильтров скрывается. Отображается выдача, поезда которой
        отобраны по заданным фильтрам

        * На кнопке фильтров отображается количество категорий примененных
        фильтров

        ![](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_19.27.41-ge1ek.png)
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выдача
description: 'Незалогин, перейти на вкладку ЖД билеты'
specs:
  'ЖД: Тач: общий вид сниппетов':
    - do: Открыть выдачу Москва - Самара через месяц
    - assert: >-
        * Сначала открывается страница со скелетонами - заглушками для всех
        элементов

        * Далее прогружаются элементы на странице поиска

        * Вверху страницы в шапке есть логотипы Яндекса и Путешествий, иконка
        плюса, избранное, иконка бургер-меню

        * Ниже есть краткая форма поиска

        * В ней указано Москва - Самара, дата поиска (соответствует той, на
        какую искали), есть иконка "лупа" для запуска поиска

        * Рядом с формой кнопка фильтров

        * Ниже расположены сниппеты
    - do: Проскроллить страницу вниз
    - assert: >-
        * Страница скроллится плавно, без рывков

        * В каждом сниппете есть дата отправления и дата прибытия

        * Внизу под последним сниппетом есть блок с информацией: ссылка на рейсы
        обратно на ту же дату, текст "На этом направлении действует динамическое
        ценообразование.

        Стоимость билетов указана с учётом сбора Яндекса. С использованием
        веб-системы «ИМ»."

        * Ниже есть блок с хлебными крошками "ЖД билеты - ... - На [выбранная
        дата]"

        * Ниже есть футер со ссылками
    - do: 'Рассмотреть сниппет с несколькими типами вагонов (плацкарт, купе итд)'
    - assert: >-
        - Есть информация: время отправления/прибытия, время в пути, станции
        отправления/прибытия, номер поезда, признак фирменности если есть,
        перевозчик.

        * Варианты типов вагонов, количество мест и их стоимость с припиской
        "от" (например, плацкарт: 212, от 2329 р)

        * Кнопка "Выбрать место" (может не быть для некоторых сниппетов)

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-04_11.56.09-nujmq.png)
    - do: Тапнуть по кнопке "Выбрать место"
    - assert: Открывается страница выбора мест
manual: true
Функциональность: Содержание выдачи
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Blocker
Автор: shenfeld
feature: ЖД
type: Выдача
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Тач: отображение сниппетов с пересадками на выдаче':
    - do: >-
        Открыть выдачу, где есть пересадки. Например, Москва -Тихвин на любую
        дату
    - assert: >-
        * На выдаче есть текст "Найдены только маршруты с пересадками"

        * Для каждого сниппета есть приписка "Пересадка в [город пересадки]
        ([смена вокзала, если есть]) [время пересадки]"

        * На сниппете указана одна цена От (подождать несколько секунд, если
        цена не появилась)

        * Есть ссылка "Маршрут и цены"
        * Есть кнопка "Выбрать места"

        ![image](https://jing.yandex-team.ru/files/arhey/2021-10-18T07:04:23Z.fa13842.png)
    - do: Тапнуть по ссылке "Маршрут и цены"
    - assert: >-
        * Открылось окно с каждым рейсом пересадки с кнопками покупки (для
        некоторых может не быть кнопки покупки)

        * Есть информация о пересадке - вокзалы и время пересадки

        * Есть кнопка для возвращения к выдаче

        ![image](https://jing.yandex-team.ru/files/arhey/2021-10-18T07:07:58Z.6ac518b.png)
    - do: Тапнуть "Вернуться к результатам поиска"
    - assert: '- Произошел переход на выдачу'
manual: true
Функциональность: Содержание выдачи
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Тач: отображение беспересадочных вагонов в поиске':
    - do: >-
        Открыть выдачу Усинск-Микунь и найти сниппет в котором указано "есть
        вагоны с разным временем прибытия"
    - assert: >-
        - Открывается выдача

        - Есть сниппет вида:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-04_11.36.35-lvoge.png)

        - Время прибытия отображается через многоточие, есть иконка вопроса

        - Для времени в пути есть приставка От
    - do: Тапнуть по иконке вопроса
    - assert: 'Появилась подсказка: "Есть вагоны с разным временем прибытия"'
    - do: Тапнуть по области вне окна с подсказкой
    - assert: Окно сворачивается
manual: true
Функциональность: Содержание выдачи
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: |-
  Перейти на вкладку ЖД билеты
  Открыта произвольная выдача, например, Москва-Казань на завтра
specs:
  'ЖД: Тач: хлебные крошки на выдаче':
    - do: Проскроллировать страницу с выдачей до конца.
    - assert: >-
        Внизу страницы, над подвалом есть информация есть хлебные крошки:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-04_12.02.46-kxevy.png)
    - do: Проскроллить хлебные крошки вправо
    - assert: Хлебные крошки скроллятся до конца
    - do: Тапнуть по “Купить билеты на поезда Москва-Казань”
    - assert: >-
        Открывается страница с выдачей, маршрут соответствует запрошенному
        (например, Москва-Казань), но поиск теперь ведется "на все дни"
    - do: |-
        Задать дату в форме поиска вверху страницы и открыть результаты.
        Проскроллить страницу вниз
    - assert: >-
        Есть переход Ж/Д билеты - “Купить билеты на поезда Москва-Казань” - На
        дату (дата совпадает с датой поиска)
    - do: Тапнуть по "Ж/Д билеты"
    - assert: 'Открылась стартовая страница сервиса, на вкладке ЖД билеты'
manual: true
Функциональность: Форма поиска
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на вкладку ЖД билеты.
  Открыть произвольную выдачу, содержащую разные типы вагонов. Например,
  Москва-Санкт-Петербург на завтра
specs:
  'ЖД: Тач: выбор типа и класса вагона':
    - do: | 
        Найти поезд с одним типом вагонов (не сапсан) и тапнуть "Выбрать место".
        (Если такого поезда нет поискать на другие направления или даты)
    - assert: |
        Открывается страница выбора мест
        **Секция Укажите количество билетов**
        - контролл по количеству взрослых;
        - контролл по количеству детей с местом;
        - контролл по количеству детей без места;

        **Секция Выберите тип вагона и место** (так как тип вагонов 1)
        - Есть всего один тип вагона - выделен в желтую рамку;
        - стоимость каждого типа мест;
        - название класса у всех вагонов под иконкой “?”;
        - иконки характеристик (снежинка, WC и т.п.);
        - описание класса (у некоторых классов может отсутствовать);
        - перевозчик под иконкой “?”
    - do: |
        Вернуться на страницу Выбор поезда
        Выбрать поезд с несколькими типами вагонов 
    - assert: |
        Открывается страница выбора мест
        **Секция Укажите количество билетов**
        - контролл по количеству взрослых;
        - контролл по количеству детей с местом;
        - контролл по количеству детей без места;

        **Секция Выберите тип вагона и место (так как типов вагонов в этом поезде больше одного)**
        - присутствуют табы  с разными типами вагонов (Сидячий, Плацкарт, Купе, Св, Купе-Переговорная и т.д.);
        - стоимость каждого типа мест;
        - по умолчанию выбран 1 тип вагонов в карусели (обведен в желтую рамку);
        - название класса скрыто под иконкой “?”;
        - иконки характеристик (снежинка, WC и т.п.) (у некоторых классов могут отсутствовать);
        - описание класса (у некоторых классов может отсутствовать);
        - перевозчик - скрыто под иконкой “?”

manual: true
Функциональность: Разное по странице выбора мест
Устройство: Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - Smoke
  - Blocker
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на вкладку ЖД билеты
  Открыта произвольная выдача.
  Открыть выбор мест в произвольном поезде с несколькими схемами в одном классе.
  Например, Москва - Санкт-Петербург через месяц и выбрать поезд с большим количеством мест в плацкарте

  https://jing.yandex-team.ru/files/shenfeld/2020-08-20_15.52.03-eivum.png
specs:
  'ЖД: Тач: блок с расчетом стоимости':
    - do: Перейти к выбору мест для поезда из Preconditions
    - assert: |-
        * Произошел переход на страницу выбора мест
        * Корзина с кнопкой Указать пассажиров расположена внизу страницы
    - do: Указать количество пассажиров - 3 взрослых
    - do: |
        Выставить тип вагона так, чтобы отображалось одновременно несколько схем
        Выбрать место на одной из схем
    - assert: >-
        Место выделяется желтым
        Появляется попап стоимости места
        Кнопка "Указать пассажиров" перемещается сразу под схему, появляется
        информация о количестве выбранных мест и стоимости
        ![image](https://jing.yandex-team.ru/files/semirka/Screenshot_76-1.png)
    - do: 'Тапнуть еще раз по месту, чтобы отжать его'
    - assert: Кнопка “Указать пассажиров” перемещается вниз под все схемы
    - do: |-
        Последовательно выбирать места для всех трех на схеме одного вагона
    - assert: >-
        **После выбора первого места:**

        * Место выделяется желтым.

        * Появляется блок со стоимостью места

        * Кнопка “Указать пассажиров” перемещается под схему вагона


        **После выбора второго и третьего мест:**

        * Места выделяются желтым

        * Кнопка “Указать пассажиров” остается под схемой, в которой происходит
        выбор


        * Стоимость и количество мест изменяется согласно выбранному количеству
        мест
    - do: Тапнуть по иконке ?
    - assert: >-
        * Развернулась полная расшифровка стоимости:
        https://jing.yandex-team.ru/files/shenfeld/2020-08-20_15.58.39-98ty3.png
    - do: Тапнуть вне появившейся шторки
    - assert: Шторка с расшифровкой свернулась
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Тач: попапы цен на схемах':
    - do: >-
        Открыть страницу выбора мест для поезда, где в одном классе будет
        несколько вагонов
    - assert: >-
        Открывается страница выбора мест. На ней находится несколько схем
        вагонов
    - do: |-
        Задать двух взрослых пассажиров
        Выбрать одно место
    - assert: >-
        Для выбранного места появился попап с указанием верхнее/нижнее и
        стоимостью

        На остальных схемах вагонов никаких попапов нет
    - do: Выбрать второе место
    - assert: 'Попап скрылся для первого места, появился для второго места'
    - do: Тапнуть в любое место вне схемы вагона
    - assert: Попап закрылся
    - do: |-
        Убрать второе выбранное место
        Тапнуть по месту на схеме, которое недоступно для выбора
    - assert: >-
        Появляется попап, что место выбрать нельзя с местом Х (где Х-место,
        выбранное на шаге 2)

        На остальных схемах вагонов никаких попапов нет

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_053Ya_Usinsk_Syktyvkar_iz_Usinska_v_Mikun_na_29_marta__Yandeks.Puteshestviya_2019-03-05_18-00-48.png)
    - do: Тапнуть в любое место вне схемы вагона
    - assert: Попап закрылся
    - do: |-
        Убрать выбор второго места
        Тапнуть по любому месту, отмеченному точкой
    - assert: >-
        Появляется попап, что место занято.

        На остальных схемах вагонов никаких попапов нет

        ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_053Ya_Usinsk_Syktyvkar_iz_Usinska_v_Mikun_na_29_marta__Yandeks.Puteshestviya_2019-03-05_18-01-01.png)
    - do: Тапнуть в любое место вне схемы вагона
    - assert: Попап закрылся
manual: true
Функциональность: Схемы вагонов
Устройство: Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на вкладку ЖД билеты

  Перейти на выдачу Усинск - Микунь на завтра

  Для поезда 305Я с сидячими вагонами кликнуть по кнопке покупки. (Если сидячих
  мест нет в наличии - поискать на другую дату)
specs:
  'ЖД: Тач: случай, когда нет схемы и требований':
    - do: Перейти на страницу выбора мест для поезда из Preconditions
    - assert: Открывается Выбор мест
    - do: Пролистать страницу к блоку "выберите тип вагона и место"
    - assert: >-
        - По умолчанию отображается тип Сидячий (класс 3С). Если выбран не он, выбрать его кликнув по соответствующему табику.
        Примерный вид ![](https://jing.yandex-team.ru/files/semirka/Screenshot_75-1.png)
        - Отображается название класса
        - Есть приписка "Для этих вагонов нет схем, места выбираются
        автоматически"
        - Есть название перевозчика: ФПК
        - Есть количество мест и цена
        - Есть кнопка Изменить класс
        ![](https://jing.yandex-team.ru/files/shenfeld/2021-01-14_11.52.24-78udc.png)
    - do: >-
        Тапнуть "Указать пассажиров".

        Заполнить данные пассажиров и контактные данные произвольным образом (но
        с учетом валидации введенных в поля значений)

        Тапнуть "Проверить заказ и купить"
    - assert: |-
        Открывается раздел Подтверждение
        Схемы вагона нет
        Отображается выданное место и вагон, тип вагона, класс
    - do: >-
        Тапнуть "Ввести карту и оплатить"

        Заполнить поля на странице оплаты данными тестовой карты **Не для
        асессоров**

        Нажать Оплатить
    - assert: |-
        * Произошел переход на страницу заказа
        * Вагон и место указаны корректно (нет undefined)
manual: true
Функциональность: Схемы вагонов
Устройство: Тач
Страница: Выбор мест
Сервис: ЖД
Окружение:
  - Production
  - Testing
Tag:
  - Arсhived
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на вкладку ЖД билеты

  Нужно подобрать гендерный вагон.

  Можно брать направление Москва - Екатеринбург, где есть места в купе
  (например, поезд 110Э).

  Открыт выбор мест в таком вагоне, выбрано купе и класс вагона, соответствующим
  раздельным купе.

  https://jing.yandex-team.ru/files/shenfeld/2020-09-21_12.51.26-vhr5s.png
specs:
  'ЖД: Тач: попап выбора пола в купе':
    - do: |-
        Установить 2 взрослых
        Выбрать одно место в целом купе
    - assert: >-
        Появляется попап:

        "Решите, каким будет купе"

        Вы первый покупатель билетов в этом купе, поэтому можете сами определить
        тип:

        -Смешанное

        -Женское

        -Мужское


        Есть кнопка "Отмена"
    - do: Тапнуть вне попапа
    - assert: >-
        Попап скрывается

        Открыт выбор мест в гендерном вагоне, выбрано купе и класс вагона,
        соответствующим раздельным купе
    - do: |-
        Выбрать одно место в целом купе
        Тапнуть по кнопке "Отмена" в попапе
    - assert: >-
        Появляется попап:

        “Решите, каким будет купе”

        Вы первый покупатель билетов в этом купе, поэтому можете сами определить
        тип:

        -Смешанное

        -Женское

        -Мужское

        Есть кнопка “Отмена”


        По кнопке "Отмена" попап скрывается

        Открыт выбор мест в гендерном вагоне, выбрано купе и класс вагона,
        соответствующим раздельным купе
    - do: >-
        Выбрать одно место в целом купе

        Задать пол, тапнув по соответствующей кнопке в попапе (например,
        мужской)
    - assert: |-
        Попап свернулся
        Выбранное место выделено желтым
    - do: |-
        Сбросить выбор
        Установить 2 взрослых.
        Выбрать одно место в мужском/женском купе
    - assert: |-
        Место выбралось
        Попап для выбора пола не появился
    - do: Выбрать второе место в целом купе
    - assert: |-
        Место выбралось
        Попап для выбора пола не появился
    - do: >-
        Тапнуть по кнопке перехода на следующий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Указать пассажиров”

        Заполнить все поля произвольной валидной информацией, пол выбрать в
        зависимости от гендерного типа (если выбирали мужское купе, установить
        мужской пол и т.д.)

        Тапнуть “Проверить заказ”
    - assert: >-
        Открыто “Подтверждение”

        Если выбиралось мужское или женское купе на странице подтверждения
        данных есть подпись женское или мужское

        ![image](https://jing.yandex-team.ru/files/shenfeld/Podtverzhdenie_dannyh_v_poezde_016E_Moskva_Ekaterinburg_iz_Moskvy_v_Ekaterinburg_na_21_sentyabrya__Yandeks.Raspisaniya_2018-07-16_12-19-52.png)
manual: true
Функциональность: Схемы вагонов
Устройство: Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  Открыть сервис незалогином в яндексе

  Перейти на вкладку ЖД билеты

  Перейти на выдачу Москва - Екатеринбург

  Перейти по кнопке покупки для любого поезда (если кнопки нет, поискать на
  другую дату)

  Выбрать тип вагона, класс обслуживания и места для 2 взрослых пассажиров, 1
  ребенок с местом, 1 ребенок без места

  Открыта вкладка Данные пассажиров, никаких данных не введено. Контактная
  информация также пустая (или очистить ее до выполнения кейса)
specs:
  'ЖД: Тач: валидация ввода данных пассажиров':
    - do: Просмотреть список пассажиров и формы
    - assert: |-
        Около первого пассажира указано взрослый, номер места
        Около второго пассажира указано взрослый, номер места
        Около первого ребенка указано ребенок (от 5 до 10 лет), номер места
        Около второго ребенка указано ребенок без места (до 5 лет)
    - do: Тапнуть "Проверить заказ и купить"
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус и типа документа обведены
        красным контуром. Под контуром указана ошибка

        * Для ФИ: укажите фамилию/имя пассажира

        * Для отчества: укажите отчество, а если его нет, поставьте галочку под полем ввода

        * Для пола: укажите пол

        * Для даты рождения: укажите дату рождения, формат и пример

        * Для паспорта: (у взрослых) укажите номер паспорта, должно быть 10 цифр

        * Для свидетельства о рождении (для ребенка с местом и без места):
        укажите номер свидетельства о рождении. Должны быть римские цифры
        (латинские буквы), затем две русские буквы, затем еще 6 цифр

        * Для электронной почты: укажите адрес электронной почты

        * Для номера мобильного: укажите номер мобильного в формате +73333333333
    - do: >-
        Ввести в любые поля фамилия, имя, отчество **цифры** и тапнуть
        "Проверить заказ и купить"
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус обведены красным
        контуром.

        Под контуром полей фамилия, имя, отчество указана ошибка

        * Можно использовать буквы, пробелы и дефисы.
    - do: >-
        Ввести в любые поля фамилия, имя, отчество **три пробела** и тапнуть
        “Проверить заказ и купить”
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус обведены красным
        контуром.

        Под контуром полей фамилия, имя, отчество указана ошибка

        * Для ФИ: укажите фамилию/имя пассажира

        * Для отчества: укажите отчество, а если его нет, поставьте галочку под полем ввода
    - do: >-
        Заполнить фамилию, имя для всех пассажиров валидными значениями. Для
        отчества у взрослых проставить галочку, для детей заполнить валидным
        значением и тапнуть “Проверить заказ и купить”
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус, фамилия, имя, отчество
        обведены красным контуром. Под контуром указана ошибка

        * Для пола: укажите пол

        * Для даты рождения: укажите дату рождения, формат и пример

        * Для паспорта: (у взрослых) укажите номер паспорта, должно быть 10 цифр

        * Для свидетельства о рождении (для ребенка с местом и без места):
        укажите номер свидетельства о рождении. Должны быть римские цифры
        (латинские буквы), затем две русские буквы, затем еще 6 цифр

        * Для электронной почты: укажите адрес электронной почты

        * Для номера мобильного: укажите номер мобильного в формате +73333333333
    - do: Заполнить пол для всех пассажиров и тапнуть “Проверить заказ и купить”
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус, фамилия, имя, отчество,
        пол обведены красным контуром. Под контуром указана ошибка

        * Для даты рождения: укажите дату рождения, формат и пример

        * Для паспорта: (у взрослых) укажите номер паспорта, должно быть 10 цифр

        * Для свидетельства о рождении (для ребенка с местом и без места):
        укажите номер свидетельства о рождении. Должны быть римские цифры
        (латинские буквы), затем две русские буквы, затем еще 6 цифр

        * Для электронной почты: укажите адрес электронной почты

        * Для номера мобильного: укажите номер мобильного в формате +73333333333
    - do: |-
        Заполнить поле дата рождения:
        * для одного взрослого датой в будущем
        * для одного взрослого датой два века назад
        * для детей дату так, чтобы возраст был больше 10 лет
        тапнуть “Проверить заказ и купить”
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус, фамилия, имя, отчество,
        пол обведены красным контуром. Под контуром указана ошибка

        * Для даты рождения в будущем: Этот пассажир еще не родился :-)

        * Для даты два века назад: Проверьте год

        * Для детских: Возраст пассажира не соответсвует тарифу
    - do: >-
        Заполнить поле дата рождения одного взрослого так, чтобы ему было меньше
        10 лет, тапнуть “Проверить заказ и купить”
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус, фамилия, имя, отчество,
        пол обведены красным контуром. Под контуром указана ошибка

        * Для даты рождения взрослого с возрастом меньше 10 лет: дата рождения
        не соответствует документу
    - do: >-
        Заполнить дату рождения для всех пассажиров валидными значениями
        (согласно возрастным ограничениям) и тапнуть “Проверить заказ и купить”
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус, фамилия, имя, отчество,
        пол, дата рождения обведены красным контуром. Под контуром указана
        ошибка

        * Для паспорта: (у взрослых) укажите номер паспорта, должно быть 10 цифр

        * Для свидетельства о рождении (для ребенка с местом и без места):
        укажите номер свидетельства о рождении. Должны быть римские цифры
        (латинские буквы), затем две русские буквы, затем еще 6 цифр

        * Для электронной почты: укажите адрес электронной почты

        * Для номера мобильного: укажите номер мобильного в формате +73333333333
    - do: >-
        Заполнить электронную почту либо сочетанием букв и цифр без собачки.

        Заполнить поле номер телефона четырьмя цифрами без плюса  и тапнуть
        “Проверить заказ и купить” (например, 7777)
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус, фамилия, имя, отчество,
        пол, дата рождения обведены красным контуром. Под контуром указана
        ошибка

        * Для электронной почты: Это не выглядит как почтовый адрес

        * Для номера мобильного: Номер указан неправильно. Формат: +73333333333
    - do: >-
        Заполнить электронную почту и номер телефона валидными значениями и
        тапнуть “Проверить заказ и купить”
    - assert: >-
        Сработала валидация. Все поля, кроме РЖД Бонус, фамилия, имя, отчество,
        пол, дата рождения, электронная почта, номер мобильного обведены красным
        контуром. Под контуром указана ошибка

        * Для паспорта: (у взрослых) укажите номер паспорта, должно быть 10 цифр

        * Для свидетельства о рождении (для ребенка с местом и без места):
        укажите номер свидетельства о рождении. Должны быть римские цифры
        (латинские буквы), затем две русские буквы, затем еще 6 цифр
    - do: 'Перейти к формам для взрослого, тапнуть на документ'
    - assert: |-
        Открывается выпадающий список
        * паспорт рф
        * свидетельство о рождении
        * заграничный паспорт
        * паспорт моряка
        * военный билет
        * другой
    - do: 'Перейти к формам для ребенка, тапнуть на документ'
    - assert: |-
        Открывается выпадающий список
        * свидетельство о рождении
        * заграничный паспорт
        * другой
    - do: У любого пассажира тапнуть РЖД Бонус
    - assert: Раскрывается пустое поле для ввода данных РЖД Бонус
    - do: Ввести в поле 2 цифры и тапнуть “Проверить заказ и купить”
    - assert: >-
        Повялется валидационное сообщение: В номере карты РЖД Бонус должно быть
        13 цифр
    - do: >-
        Заполнить поле документов валидными значениями для взрослых и детей,
        поле РЖД Бонус  очистить и тапнуть “Проверить заказ и купить” (для
        свидетельства о рождении, если не подбирается, можно использовать I КБ
        456756)
    - assert: >-
        Открыта вкладка Подтверждение

        В секции Проверьте паспортные данные все данные соответствуют введенным
        на предыдущей странице
manual: true
Устройство: Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  **Для асессоров:**

  Для работы с записной книжкой требуется быть авторизованным. Для этого нужно:

  * Нажать на кнопку Войти в правом верхнем углу

  * На открывшейся странице в тестовом паспорте авторизоваться тестовым
  пользователем. Можно использовать учетную запись: vladlen@yandex.ru password:
  v12345678 _(если по нажатию на кнопку Войти открывается продовый паспорт
  passport.yandex.ru, необходимо в другой вкладке открыть паспорт тестинга
  https://passport-test.yandex.ru и авторизоваться в нем тестовым аккаунтом)_

  * Произойдет переход в тестинг https://travel-test.yandex.ru (у асессоров нет
  доступов)

  * После этого нужно вернуться обратно на стенд для асессоров
  https://travel.crowdtest.yandex.ru - в верхнем правом углу должен появиться
  логин, под которым авторизовались в тестовом паспорте.


  Перейти на вкладку ЖД билеты


  2) Задана произвольная выдача с поездами, где есть гендерные купе

  3) Выбран поезд, тип вагона купе, класс обслуживания и места для одного
  взрослого пассажира (выбрать мужское купе или назначить купе мужским)

  4) Открыта вкладка Данные пассажиров, никаких данных не введено.
specs:
  'ЖД: Тач: отображение валидных и невалидных интентов из записной книжки':
    - do: Перейти к заполнению формы для взрослого
    - assert: >-
        над формой отображаются записи из записной книжки: первые 2 записи попадают на экран,
        остальные нужно проскролить справа налево
        https://nda.ya.ru/t/5-gmJ3Ep4Mthre
        
    - do: Проскроллировать список записей справа-налево и обратно
    - assert: >-
        Все записи прокручиваются,  никакая не обрезается
        Так как выбрано мужское купе, женских записей нет
    - do: Тапнуть по любой активной записи
    - assert: >-
        Данные из записи подставляются в форму: фамилия, имя, отчество, пол,
        дата рождения, документ
    - do: >-
        Проверить, что заполнены поля почты и телефона, если не заполнены, то
        заполнить валидными данными

        Тапнуть “Проверить заказ и купить”
    - assert: |-
        Отображается вкладка Подтверждение.
        Данные пассажира соответствуют выбранным на предыдущей вкладке
manual: true
Устройство: Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на вкладку ЖД билеты

  Открыть произвольную выдачу.
specs:
  'ЖД: Тач: для разных полей раскрываются разные клавиатуры':
    - do: >-
        Выбрать любой поезд, задать места, тип вагона, класс обслуживания, если
        надо.

        Тапнуть "Указать пассажиров"
    - assert: Открыта вкладка Данные пассажиров
    - do: Тапнуть в поле Фамилия
    - assert: Открывается буквенная клавиатура (цифры тоже могут присутствовать)
    - do: 'Повторить шаг 2 для полей Имя, Отчество, Электронная почта'
    - assert: Открывается буквенная клавиатура (цифры тоже могут присутствовать)
    - do: Тапнуть в поле дата рождения
    - assert: Открывается цифровая клавиатура
    - do: >-
        Повторить шаг 4 для полей Паспорт (серия и номер документа), РЖД Бонус,
        Номер мобильного
    - assert: Открывается цифровая клавиатура
    - do: >-
        Изменить тип документа на Свидетельство о рождении. Тапнуть в поле Серия
        и номер документа
    - assert: Открывается буквенная клавиатура (цифры тоже могут присутствовать)
manual: true
Устройство: Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на вкладку ЖД билеты


  Открыта произвольная выдача, содержащая разные типы вагонов. Например,
  Москва-Санкт-Петербург на завтра
specs:
  'ЖД: Тач: чекбокс "постельное белье"':
    - do: >-
        Кликнуть по кнопке Выбрать место для поезда, у которого есть класс Плацкарт

        На открывшейся странице выбрать тип вагона плацкарт (если не выбран по
        умолчанию)

        Проскроллить страницу вниз
    - assert: >-
        Внизу есть блок с кнопкой Указать пассажиров и текстом "Стоимость
        билетов будет известна после выбора мест"
    - do: Выбрать любое место в вагоне
    - assert: |-
        Блок с кнопкой переместился под схему
        Появилась информация о примерной стоимости для одного места
        https://jing.yandex-team.ru/files/shenfeld/2020-08-18_19.31.16-v1i9n.png
    - do: Тапнуть на знак вопроса около итоговой стоимости билета
    - assert: >-
        Открылась шторка с расшифровкой стоимости, чекбоксом выбора постельного
        белья и кнопкой Указать пассажиров
    - do: Снять чекбокс Постельное белье
    - assert: |-
        Чекбокс снялся
        Стоимость билета уменьшилась на цену постельного белья
    - do: Тапнуть Указать пассажиров
    - assert: >-
        Открывается вкладка Данные пассажиров

        Внизу страницы под секцией Укажите контактную информацию отображается
        стоимость билетов

        Сумма совпадает с суммой на предыдущем шаге

        Есть отключенный чекбокс Постельное белье. Оно не включено в стоимость
    - do: |-
        Вернуться на страницу выбора мест
        Поменять тип вагона на купе
        Выбрать место в купе
        Тапнуть по иконке вопроса рядом с суммой за билет
    - assert: >-
        Открылась шторка с расшифровкой стоимости, текстом "Белье включено в
        стоимость" и кнопкой Указать пассажиров
    - do: Тапнуть Указать пассажиров
    - assert: >-
        Открывается вкладка Данные пассажиров.

        Под секцией Укажите контактную информацию отображается стоимость
        билетов.

        Цифра совпадает с цифрой на предыдущем шаге.

        Есть запись, что белье включено в стоимость
    - do: |-
        Заполнить все поля валидными данными
        Нажать Проверить заказ и купить
    - assert: >-
        Произошел переход на страницу подтверждения

        Внизу страницы есть корзина, в ней указана стоимость билета, информация,
        что белье включено в стоимость, блок для добавления страховки и кнопка
        Ввести карту и оплатить
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-06-01_12.49.23-necq3.png)

  Перейти на вкладку ЖД билеты


  Открыта произвольная выдача, например, Москва-Казань на завтра
specs:
  'ЖД: Тач: вкладки страниц покупки':
    - do: Выбрать любой поезд с выдачи и тапнуть "Выбрать место"
    - assert: Происходит переход на вкладку Выбор мест
    - do: 'Проскроллировать список вкладок справа налево, а затем слева направо'
    - assert: |-
        Вкладки идут в следующем порядке:
        - Выбор поезда
        - Выбор мест
        - Данные пассажира
        - Подтверждение
        - Оплата

        Вкладки скроллятся влево-вправо. Названия вкладок можно прочитать.
        Вкладка Выбор поезда выделена черным шрифтом
        Вкладка Выбор мест выделена черным шрифтом и красным подчеркиванием
        Вкладки 3-5 имеют серый цвет
    - do: Тапнуть по вкладкам 3-5 по очереди
    - assert: 'Ничего не происходит, вкладки неактивны'
    - do: Тапнуть на вкладку 1
    - assert: Открывается заданная выдача
    - do: Выбрать любой поезд с выдачи и тапнуть "Выбрать место"
    - assert: Происходит переход на вкладку 2. Выбор мест.
    - do: >-
        Выбрать тип вагона и  места (если возможно)

        Тапнуть "Указать пассажиров" (если срабатывает валидация на какое-то
        поле, то нужно его исправить)
    - assert: |-
        Происходит переход на вкладку Данные пассажиров
        Вкладки 1 и 2 выделены черным шрифтом
        Название вкладки 3 выделено черным шрифтом и красным подчеркиванием
    - do: 'Тапнуть по вкладкам 4, 5 по очереди'
    - assert: 'Ничего не происходит, вкладки неактивны'
    - do: >-
        Задать данные пассажиров (произвольные данные, удовлетворяющие
        валидации), задать контактную информацию (произвольные данные,
        удовлетворяющие валидации).

        Тапнуть "проверить заказ и купить"
    - assert: >-
        Открывается вкладка Подтверждение. Вверху окна находится таймер на
        оплату заказа

        Название вкладок 1-3 черного цвета

        Название вкладки 4 черного цвета и выделено красным подчеркиванием
    - do: Тапнуть по вкладке 2. Выбор мест
    - assert: >-
        Произошел переход на страницу выбора мест

        Вкладка Выбор мест выделена красным шрифтом (потому что в фокусе) и
        красным подчеркиванием

        Вкладка Данные пассажиров активна - выделена черным шрифтом

        Вкладка Подтверждение не выделена, шрифт серый

        Если тапнуть вне кнопок, то фокус снимается и шрифт на вкладке Выбор
        мест становится черным.
manual: true
Функциональность: Действия на подтверждении
Устройство: Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Для асессоров: В кейсе необходимо ждать 30 минут до истечения времени брони.
  Поэтому можно открыть нужную страницу, и пока ждете, выполнять другие кейсы.

  Перейти на вкладку ЖД билеты


  Открыта произвольная выдача, например, Москва-Казань на завтра
specs:
  'ЖД: Тач: модальное окно при истечении срока бронирования':
    - do: >-
        Выбрать места, задать данные пассажиров (произвольные данные,
        удовлетворяющие валидации), задать контактную информацию (произвольные
        данные, удовлетворяющие валидации).

        Тапнуть "проверить заказ и купить"
    - assert: >-
        Открывается окно Подтверждение. Вверху окна находится таймер
        бронирования на оплату заказа. Время на оплату 30 минут
    - do: 'Подождать, пока время бронирования истечет'
    - assert: >-
        Появился попап с подсказкой:

        “Время брони истекло. Вы долго не могли решиться, поэтому выбранные
        места теперь может забронировать кто-то другой" и кнопкой “Выбрать места
        заново”
    - do: Изменить ориентацию девайса с портретной на лендскейп
    - assert: Попап отображается посередине страницы. Верстка корректна
    - do: 'Вернуть портретную ориентацию, тапнуть Перейти к выбору мест'
    - assert: Происходит переход на страницу выбора мест
manual: true
Функциональность: Действия на подтверждении
Устройство: Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Перейти на вкладку ЖД билеты

  Открыта произвольная выдача, например, Москва - Санкт-Петербург на дату через месяц от текущей
specs:
  'ЖД: Общий вид страницы подтверждения. Отмена брони':
    - do: >-
        Выбрать любой поезд из выдачи и нажать кнопку "Выбрать место"
        Выбрать любой тип вагона и выбрать в нем место №10 (если место занято, найти другой вагон)
        Нажать кнопку "Указать пассажиров" и ввести валидные данные пассажиров.
        Нажать кнопку "проверить заказ и купить"
    - assert: >-
        Открывается страница Подтверждение.
        Вверху страницы находится таймер бронирования (30 минут) на оплату заказа
        Есть следующие блоки и данные:
        **Блок с информацией о поезде**
        - номер поезда
        - дата, время и место отправления (соответствует выбранному поезду)
        - дата, время и место прибытия (соответствует выбранному поезду)
        - информация, что время местное
        - время в пути
        - дополнительная информация, например, Электронная регистрация
        **Блок Вагон и места**
        - номер вагона, тип вагона, класс вагона (все соответствует выбранным)
        - места
        - схема вагона с указанным положением мест
        **Блок Пассажиры**
        - Фамилия, Имя, Отчество
        - стоимость билета, вид тарифа (например, полный)
        - дата рождения
        - паспортные данные или данные используемого документа
        - кнопка ? возле суммы
        **Блок Контактная информация**
        - номер мобильного телефона
        - электронная почта
        **Блок Стоимость билетов**
        - тарифы за каждое место
        - чекбокс добавить страховку, стоимость (по умолчанию выключен)
        - название страховой компании
        - сумма Итого
        - есть кнопка "Ввести карту и оплатить"
        - ниже есть ссылка Отменить заказ (если передумали)
    - do: Включить чекбокс страховки
    - assert: Итоговая сумма увеличилась ровно на указанную стоимость страховки
    - do: Проскроллить схему вагона вправо-влево (тач)
    - assert: 'Схема свободно скроллится, верстка соответствует странице'
    - do: кликнуть по иконке ? в блоке паспортных данных
    - assert: >-
        Появляется информационное сообщение о том, из чего складывается
        стоимость билета: цена билета, сервисный сбор

        Общая сумма посчитана верно (цена билета + сервисный сбор)
    - do: Нажать на "Отменить заказ"
    - assert: Перешли к странице выбора мест.
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - Smoke
  - Blocker
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Отображение перевозчика у классов':
    - do: >-
        Перейти на выдачу Москва - Казань

        Для поезда, где есть места в сидячих вагонах, кликнуть по кнопке Выбрать
        место
    - assert: >-
        * Произошел переход на страницу выбора мест

        * Для каждого класса есть указание перевозчика

        * Названия перевозчиков выравнены, отображаются друг под другом

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-09-21_15.10.09-pq2ew.png)
    - do: Навести курсор на название перевозчика
    - assert: Появился попап с подсказкой "Перевозчик"
    - do: Развернуть любой класс кликом по нему
    - assert: Название перевозчика остается на том же месте
manual: true
Функциональность: Разное по странице выбора мест
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
  **Для асессоров:**

  Для работы с записной книжкой требуется быть авторизованным. Для этого нужно:

  * Нажать на кнопку Войти в правом верхнем углу

  * На открывшейся странице в тестовом паспорте авторизоваться тестовым
  пользователем. Можно использовать учетную запись: vladlen@yandex.ru password:
  v12345678

  * Произойдет переход в тестинг https://travel-test.yandex.ru (у асессоров нет
  доступов)

  * После этого нужно вернуться обратно на стенд для асессоров
  https://travel.crowdtest.yandex.ru - в верхнем правом углу должен появиться
  логин, под которым авторизовались в тестовом паспорте.

  Находимся на странице ввода данных, залогинены под тестовым пользователем. На
  интентах отображаются данные пассажиров из записной книжки.
specs:
  'ЖД: Отображение интентов в виде саджестов':
    - do: >-
        Начать вводить в поле с фамилией первую букву фамилии любого из
        пассажиров из записной книжки
    - assert: >-
        * Для поля фамилии появляются саджесты, в которых фамилия пассажира
        начинается с введенного символа

        * На саджестах есть информация: ФИО, дата рождения, тип документа

        * При наведении на саджест он окрашивается желтым (десктопная версия)
    - do: Кликнуть по саджесту
    - assert: |-
        * Саджесты свернулись
        * Данные выбранного пассажира подставились в соотетствующие поля
    - do: |-
        Очистить поле Имя
        Начать вводить первый символ имени любого другого пассажира
    - assert: >-
        * Для поля имени появилилсь саджесты, в которых имя пассажира начинается
        с введенного символа

        * На саджестах есть информация: ФИО, дата рождения, тип документа, номер
        документа

        * При наведении на саджест он окрашивается желтым (десктопная версия)
    - do: Выбрать любой из саджестов
    - assert: |-
        * Саджесты свернулись
        * Во все поля подставились данные для нового пассажира
    - do: |-
        Очистить поле с номером документа
        Начать вводить первую цифру документа любого из пассажиров
    - assert: '* Саджесты не появляются'
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Для проверки кейса нужно зайти на выдачу и выбрать такой поезд, в котором
  остался только один тип вагона, а в этом типе мало свободных мест. Можно
  посмотреть на выдачах Москва - Санкт-Петербург, Москва - Екатеринбург на
  завтра, или на любых других выдачах на близкие даты.

  Страница выбора мест для этого поезда должна выглядеть так:

  ![image](https://jing.yandex-team.ru/files/shenfeld/Vybor_mest_v_poezde_006Sch_Moskva_Ulan-Bator_iz_Moskvy_v_Ekaterinburg_na_13_marta__Yandeks.Puteshestviya_2019-03-12_18-46-01.png)
specs:
  'ЖД: Переход на покупку, когда остался один класс и один тип':
    - do: |-
        Перейти на страницу выбора мест для поезда из описания
        Выбрать любое место
        Кликнуть Указать пассажиров
    - assert: '* Произошел переход на страницу ввода данных, ошибок нет'
manual: true
Функциональность: Схемы вагонов
Устройство: Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: При переходе по прямой ссылке сохраняется выбранный тип и место':
    - do: |-
        Перейти на выдачу Москва - Екатеринбург на завтра
        Для любого поезда кликнуть по кнопке покупки
    - assert: Произошел переход на страницу выбора мест
    - do: Выбрать любой тип вагонов отличный от состоянию по-умолчанию
    - assert: Раскрылись вагоны в выбранном типе
    - do: Скопировать ссылку, вставить в новой вкладке
    - assert: |
        * Открылась страница выбора мест
        * Информация на странице совпадает с информацией в первой вкладке
        * Выбранный тип раскрыт
    - do: |
        Выбрать место в любом типе
        Скопировать ссылку
        Открыть ссылку в новой вкладке
    - assert: |
        * Открылась страница выбора мест
        * Информация на странице совпадает с информацией в предыдущей вкладке
        * Выбранный тип раскрыт сразу, на схеме выбрано место, которое выбирали до этого

manual: true
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Тач: фильтры на выдаче, работа селектов, чекбоксов':
    - do: >-
        Открыть любую выдачу, например, Москва - Санкт Петербург на завтра (эта
        выдача лучше всего подойдет для фильтров)

        Тапнуть на кнопку фильтров

        ![](https://jing.yandex-team.ru/files/shenfeld/2020-12-03_19.29.15-647ex.png)
    - assert: Открывается окно с фильтрами и сортировками
    - do: Тапнуть по фильтру Скоростные поезда
    - assert: >-
        Появляется выпадающий список скоростных поездов

        По умолчанию фильтры не выбраны

        Рядом с вариантами есть цены

        Стрелочка вниз справа в поле ввода сменила направление на стрелочку
        вверх

        скрин:
        https://jing.yandex-team.ru/files/shenfeld/2020-12-03_19.30.38-g8a6n.png
    - do: |-
        Выбрать сначала один чекбокс, потом еще один
        Свернуть фильтр
    - assert: |-
        Чекбоксы проставились
        Строка с фильтром подсвечена желтым
        Кнопка Сбросить стала активна
        Уменьшилось число вариантом на кнопке Показать
    - do: Тапнуть по фильтру Станция прибытия
    - assert: >-
        Появляется выпадающий список станций прибытия

        По умолчанию фильтры не выбраны

        Рядом с доступными вариантами есть цены

        Стрелочка вниз справа в поле ввода сменила направление на стрелочку
        вверх
    - do: |-
        Выбрать станцию
        Свернуть фильтр
    - assert: |-
        Выпадающий список свернулся
        Строка с фильтром Станция прибытия подсвечена желтым
    - do: Тапнуть по кнопке Сбросить
    - assert: >-
        Кнопка Сбросить становится неактивна

        Все выбранные фильтры очищаются.

        Возвращается к первоначальному значению количество вариантов на кнопке
        Показать

        Окно с фильтрами не сворачивается
    - do: Таким же образом развернуть и выбрать остальные фильтры с чекбоксами
    - assert: |-
        Фильтры разворачиваются
        Чекбоксы проставляются
        Меняется количество вариантов на кнопке Показать
    - do: В фильтре Цена переместить бегунки
    - assert: |-
        Бегунки перемещаются
        Сумма на бегунках меняется в зависимости от их положения
    - do: |-
        Сбросить все фильтры
        Тапнуть в поле Сортировка/по времени отправления
    - assert: |-
        Открывается выпадающий список с селектами
        - по времени отправления
        - по времени прибытия
        - по времени в пути
        - по цене
    - do: Выбрать "по времени в пути"
    - assert: |-
        Селект сворачивается
        Отображается выбранный вариант
        Во втором селекте сортировки отображается "Сначала быстрые"
    - do: |-
        Тапнуть по селекту "Сначала быстрые"
        Выбрать "Сначала медленные"
    - assert: |-
        Селект сворачивается
        Отображается выбранный вариант
manual: true
Функциональность: Фильтры и сортировки
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выдача
description: Перейти на вкладку ЖД билеты
specs:
  'ЖД: Тач: саджесты для поля Куда на выдаче':
    - do: Открыть выдачу Москва- Казань на завтра
    - assert: >-
        * Открыта выдача со сниппетами

        * На выдаче сверху есть краткая форма поиска

        * В ней указано “Откуда”, “Куда”, “Когда”, есть кнопка "лупа" для
        запуска поиска

        * Форма заполнена соответственно поиску: Москва-Казань, завтрашняя дата
    - do: Тапнуть по строке с краткой формой поиска
    - assert: >-
        * Форма поиска развернулась

        * Форма поиска состоит из полей “Откуда” (заполнено Москва), “Куда”
        (заполнено Казань), “Когда” (завтрашняя дата), кнопки календарика и
        кнопки “Найти”
    - do: Тапнуть в поле Куда
    - assert: |-
        Открываются саджесты для поля Куда.
        Поле Куда очищено
        Есть стрелка для возвращения назад к форме
        Под полем ввода располагается список саджестов
    - do: Ввести в поле Куда букву С
    - assert: >-
        Список саджество под полем вводам изменяется. В списке отображаются
        только станции, название которых или область начинается на букву С
    - do: Добавить буквы "ам"
    - assert: >-
        В поле ввода отображается "Сам". Список саджествов обновлен,
        соответствует запросу в поле ввода
    - do: Удалить букву "м" и добавить букву "р"
    - assert: >-
        После удаления буквы в поле ввода отображается "Са". Список саджествов
        обновлен, соответствует запросу в поле ввода

        После добавления буквы в поле ввода отображается "Сар". Список
        саджествов обновлен, соответствует запросу в поле ввода
    - do: Ввести в поле Откуда "Саратов" вручную
    - assert: 'Список саджествов обновлен, соответствует запросу в поле ввода'
    - do: Выбрать один из предложенных саджестов и тапнуть по нему
    - assert: >-
        Список саджестов скрывается. Открыта форма поиска. В поле Куда указано
        значение выбранного саджеста
manual: true
Функциональность: Форма поиска
Устройство: Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Перейти на вкладку ЖД билеты


  Открыть выдачу, например, Москва-Самара на завтра. Перейти для любого поезда
  на страницу выбора мест.
specs:
  'ЖД: Тач: выбор мест и скролл схемы':
    - do: |-
        Выбрать 2 взрослых пассажиров
        На схеме вагона тапнуть по любому месту
    - assert: >-
        - место выбирается (становится желтым)

        - у выбранного места появился попап с ценой

        - некоторые места (находящиеся далеко от выбранного) становятся
        недоступными для выбора (полупрозрачными)

        https://jing.yandex-team.ru/files/shenfeld/2021-02-12_14.01.24-gba3z.png
    - do: Выбрать второе место
    - assert: >-
        - место выбирается (становится желтым)

        - у выбранного места появился попап с ценой

        - все остальные места в вагоне становятся недоступными для выбора
        (полупрозрачными)
    - do: Снять выбор поочередно с обоих мест
    - assert: '- все места в вагоне снова доступны для выбора'
    - do: 'Проскроллить схему вагона вправо, затем влево'
    - assert: '- схема скроллится'
manual: true
Функциональность: Схемы вагонов
Устройство: Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  **При тестировании тач-версии ШАГИ (не весь кейс!) с тестированием событий в
  метрику можно пропускать (параметр ym_debug и консоль браузера)**

  Перейти на вкладку ЖД билеты
specs:
  'ЖД: Отображение блока страховки на странице подтверждения':
    - do: >-
        Перейти на выдачу Москва - Санкт-Петербург на завтра с прописанным
        параметром для тестирования событий в метрику - добавить к урлу
        **?_ym_debug=1** и обновить страницу

        Для любого поезда нажать на кнопку покупки

        На странице выбора мест выбрать место и кликнуть по кнопке "Указать
        пассажиров"

        Ввести валидные данные пассажира

        Кликнуть по кнопке "Проверить заказ и купить"
    - assert: >-
        * Осуществился переход на страницу подтверждения

        * В корзине с расшифровкой стоимости (в таче внизу страницы, в десктопе
        справа) есть блок для добавления страховки

        * В блоке есть чекбокс "Добавить страховку  ... Р"

        * По умолчанию чекбокс выключен

        * Под чекбоксом есть текст "Страхования жизни и здоровья всех
        пассажиров" и ссылка "Подробнее об условиях."

        * Есть логотип Ренессанс Страхования

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-08-20_16.41.17-6yiz4.png)
    - do: |-
        Открыть консоль браузера
        Кликнуть по чекбоксу
    - assert: >-
        * Галочка проставилась

        * Итоговая сумма увеличилась на сумму страховки

        * В консоли появилось события в метрику
        "trains_click_insurance_checkbox"
    - do: Кликнуть по чекбоксу
    - assert: |-
        * Галочка снялась
        * Итоговая стоимость уменьшилась на стоимость страховки
    - do: Кликнуть по ссылке "Полные условия"
    - assert: >-
        * В новой вкладке открылась страница поддержки Яндекс.Путешествий
        "Купить страховку от несчастного случая"
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Асессоры не смогут проверить, так как для них отключаем оплату, а без оплаты
  страховка не выкупится.


  Реквизиты тестовой карты: 5100003697253468, 12/20, 090

  Перейти на вкладку ЖД билеты
specs:
  'Покупка билетов со страховкой':
    - do: >-
        Перейти на выдачу Москва - Ростов-на-Дону через неделю

        Для любого поезда кликнуть по кнопке покупки

        Выбрать 3 пассажиров - 1 взрослого, 1 ребенка от 5 до 10 лет, 1 ребенка
        без места

        Выбрать места

        Нажать на кнопку "Указать пассажиров"

        Заполнить все поля валидными данными

        В поле электронной почты указать почту на @yandex-team.ru

        Нажать по кнопке "Проверить заказ и купить"
    - assert: |-
        * Осуществился переход на страницу подтверждения
        * Внизу страницы есть чекбокс для добавления страховки
    - do: Нажать на чекбокс
    - assert: >-
        * В корзинке со стоимостью справа в пункт Страховка добавилась сумма
        страховки

        * К итоговой сумме добавилась стоимость страховки
    - do: |-
        Нажать на кнопку "Ввести карту и оплатить"
        На странице оплаты ввести данные тестовой карты из описания кейса
        Нажать на кнопку "Оплатить"
    - assert: >-
        * Через какое-то время произошел переход на страницу заказа для 3
        пассажиров

        * На странице есть кнопка "Скачать билеты и страховку"

        * На почту пришло письмо о покупке

        * Стоимость заказа в письме совпадает с итоговой суммой со страницы
        подтверждения (равна сумме за билеты + за страховки)

        * В письме есть блок "Страхование" с текстом "Стоимость страхового
        полиса: ... руб. Он включает страхование жизни и здоровья всех
        пассажиров и находится в том же файле, что и посадочный купон." и
        ссылкой "Подробнее об условиях"

        * Для каждого билета на странице успешной покупки билета есть пункт
        Страховка

        * При нажатии на иконку ? рядом с пунктом страховки появляется попап с
        текстом "Страхование жизни и здоровья от несчастных случаев." и ссылкой
        "Подробнее об условиях.", которая ведет на правила от Ренессанса

        * Сумма стоимостей страховки всех пассажиров совпадает с общей
        стоимостью на странице подтверждения

        * Для ребенка без места Цена билета и Сервисный сбор равны 0, Стоимость
        страховки равна 70

        * Для остальных билетов стоимость страховки рассчитана в зависимости от
        стоимости билета:

        ![image](https://jing.yandex-team.ru/files/shenfeld/Kupit_strahovku_ot_neschastnogo_sluchaya_2019-04-05_17-16-41.png)
    - do: Нажать на кнопку "Скачать билеты и страховку"
    - assert: >-
        * Произошло скачивание pdf-файла на десктопе. На таче могут быть
        вариации открытия/сохранения документа
    - do: Открыть файл
    - assert: >-
        * В файле есть электронные билеты для 3 пассажиров и страховки для 3
        пассажиров (3 разных бланка)
    - do: Кликнуть по ссылке "Подробнее об условиях" из письма
    - assert: >-
        * Открылась страница Ренессанс Страхования с подробными условиями
        страхования
    - do: Открыть чек из письма и со страницы заказа
    - assert: >-
        * В чеке 3 позиции "Страхование поездки (страховая премия)"

        * Суммы за страховки и итоговая сумма в чеке совпадают с суммами в
        письме и на странице заказа

        * **В тестинге не проверить из-за заглушки у траста, поэтому просто
        проверить скачивание чека**
    - do: Открыть pdf-файл с билетами из письма
    - assert: >-
        * В файле есть электронные билеты для 3 пассажиров и страховки для 3
        пассажиров (3 разных бланка)
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Асессоры не смогут проверить, так как для них отключаем оплату, а без оплаты
  страховка не выкупится.


  Реквизиты тестовой карты: 5100003697253468, 12/20, 090


  Если на Шаге 4 в тестинге в чеке заглушка (без правильных цен) - его нужно
  пропустить


  При прохождении кейса в поле ввода номера телефона необходимо указать
  действующий номер, для получения кодов из СМС

  Оформить билеты со страховкой на любое направление для 1 взрослого пассажира и
  1 ребенка без места. Находимся на странице заказа.
specs:
  'Возврат билетов со страховкой (дубль 1205, 1207)':
    - do: Дойти до страницы заказа
    - assert: '* Есть пункт про страховку для обоих билетов'
    - do: Нажать на кнопку "Сдать билет"
    - assert: '* Появилось модальное окно для ввода смс-кода'
    - do: >-
        Запомнить сумму, которая отображается как "Сумма к возврату"

        Ввести в поле ввода код из смс, которая пришла на номер, указанный при
        оформлении заказа

        Нажать на кнопку "Подтвердить"
    - assert: >-
        * Через какое-то время появился статус Возврат

        * Через какое-то время сформировалась КРС

        * На указанную почту пришло письмо о возврате

        * Сумма к возврату совпадает с суммой, которая была указана в модальном
        окне возврата
    - do: Открыть чек из письма и на странице заказа
    - assert: >-
        * В чеке есть две позиции "Страхование поездки (страховая премия)" и
        "Услуги перевозки пассажира ж/д

        транспортом"

        * Общая сумма к возврату совпадает с суммой в письме и суммой в
        модальном окне при возврате
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Реквизиты тестовой карты: 5100003697253468, 12/20, 090 (для асессоров шаг
  оплаты пропускается - карту вводить не нужно).


  Для того, чтобы воспроизвести ошибку выкупа страховки **в оркестраторе**,
  установить ФИО пассажира "Ошибка Ошибкаим Статусстраховки".
specs:
  'Обработка случая, когда не удалось выкупить страховку':
    - do: >-
        Оформить заказ **со страховкой** для двух пассажиров, для одного из
        которых произошла ошибка выкупа страховки (ввести ФИО из описания кейса
        ) с прописанным параметром для тестирования метрики **?_ym_debug=1**
    - assert: >-
        * Произошел переход на страницу заказа

        * Кнопка для скачивания билетов называется "Скачать билеты"

        * На странице отображается желтое предупреждение "При покупке страховых
        полисов произошла ошибка, поэтому Яндекс.Путешествиям пришлось оформить
        вам билеты без страховки. Если банк успел снять с карты деньги за
        полисы, он скоро их вернёт."

        * В консоли браузера есть событие в метрику "show_insurance_auto_return"

        * На почту пришло письмо о покупке, в письме нет блока про страховку, но
        есть текст "Здравствуйте, о ооо! Вы оплатили билеты и прошли электронную
        регистрацию. При покупке страховых полисов произошла ошибка, деньги за
        них разблокируются. В списке операций по вашему счёту изменится платёж,
        вместо [сумма с учетом страховки для всех пассажиров] руб. станет [сумма
        без учета страховки для всех пассажиров] руб."

        * Стоимость заказа указана без учета страховки для всех пассажиров

        * Нет пункта про страховку для билетов

        * В письме есть 2 чека: чек о покупке с 2 позициями о страховке + чек о
        возврате страховки (для всех пассажиров)
    - do: |-
        Кликнуть Сдать все билеты
        Запомнить сумму к возврату
        Ввести код из смс
        Кликнуть Подтвердить
    - assert: >-
        * Произошел возврат двух билетов

        * На почту пришло письмо о возврате

        * Сумма к возврату в письме совпадает с суммой в модальном окне при
        возврате

        * Сумма к возврату в чеке совпадает с суммой в модальном окне при
        возврате
    - do: Обновить страницу заказа
    - assert: '* Желтого предупреждения о невыкупе страховки нет'
manual: true
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: >-
    Открыть сервис незалогином в яндексе

    Перейти на вкладку ЖД билеты

    Задана произвольная выдача

    Выбран поезд, тип вагона, класс обслуживания и места для двоих взрослых
    пассажиров, одного ребенка с местом, одного ребенка без места

    Открыта вкладка Данные пассажиров, никаких данных не введено. контактная
    информация также пустая (или очистить ее до выполнения кейса)
specs:
    'ЖД: Тач: страница ввода данных, проверка документов':
        - do: Просмотреть список пассажиров и формы
        - assert: |-
              Около первого пассажира указано взрослый, место А
              Около второго пассажира указано взрослый, место В
              Около первого ребенка указано ребенок (от 5 до 10 лет), место С
              Около второго ребенка указано ребенок без места (до 5 лет)
        - do: 'Перейти к формам для взрослого, тапнуть на документ'
        - assert: |-
              Открывается выпадающий список
              * Паспорт РФ
              * Загранпаспорт РФ
              * Свидетельство о рождении
              * Паспорт моряка
              * Военный билет
              * Другой
        - do: 'Перейти к формам для ребенка, тапнуть на документ'
        - assert: |-
              Открывается выпадающий список
              * Загранпаспорт РФ
              * Свидетельство о рождении
              * Другой
        - do: >-
              Заполнить поля документов:

              * для первого взрослого паспорт РФ и ввести меньше 10 цифр

              * для второго взрослого военный билет и ввести 9 цифр

              * для первого ребенка свидетельство о рождении и 9 цифр

              * для второго ребенка заграничный паспорт и ввести 8 цифр

              остальные поля оставить незаполненными и тапнуть "Проверить заказ и
              купить"
        - assert: >-
              Сработала валидация:

              * для первого взрослого в секции документ: Номер неправильный. Должно
              быть 10 цифр

              * для второго взрослого с военным билетом: Проверьте номер. Должно быть
              две русские буквы и семь цифр без пробелов

              * для первого ребенка в документе: Проверьте номер. Должны быть
              латинские буквы x, i, v, затем две русские и ещё 6 цифр

              * для второго ребенка в документе: Проверьте номер. Должно быть девять
              цифр
        - do: >-
              Заполнить поля документов:

              * для первого взрослого паспорт моряка, ввести 5 цифр

              * для второго взрослого иностранный документ, заполнить поле русскими
              буквами, поле страна оставить пустым

              остальные поля оставить незаполненными и тапнуть “Проверить заказ и
              купить”
        - assert: >-
              Сработала валидация:

              * для первого взрослого в секции документ: Проверьте номер. Должно быть 7 цифр.

              * для второго взрослого: Проверьте номер, для поля страна: Выберите
              страну из списка
        - do: >-
              Заполнить поля документов валидными значениями:

              * для первого взрослого паспорт моряка

              * для второго взрослого военный билет

              * для первого ребенка иностранный документ

              * для второго ребенка заграничный паспорт

              остальные поля оставить незаполненными и тапнуть “Проверить заказ и
              купить”
        - assert: валидация с поля документ снята у всех четырех пассажиров
manual: true
Устройство: Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
Автор: shenfeld
feature: ЖД
type: Оплата
description: |-
  Для воспроизведения ошибки в трейн-апи нужна помощь бекендеров.
  Находимся на странице подтверждения жд заказа для одного пассажира
specs:
  'Обработка случая, когда при Checkout страховки возникла ошибка':
    - do: |-
        Перейти на покупку любого жд билета
        Ввести ФИО из описания
        Установить чекбокс страховки
        Нажать кнопку Ввести карту и оплатить
    - assert: >-
        * Через какое-то время появилось модальное окно c текстом "Не удалось
        купить страховой полис

        При покупке страхового полиса произошла ошибка" и двумя кнопками
        "Выбрать места заново" и "Продолжить без страховки"
    - do: Нажать на кнопку "Продолжить без страховки"
    - assert: Открылась форма оплаты
    - do: |-
        Ввести данные тестовой карты
        Нажать кнопку Оплатить
    - assert: |-
        * Через какое-то время произошел переход на страницу заказа
        * Итоговая сумма без учета страховки
        * В расшифровке стоимости билетов нет пункта страховки
    - do: |-
        Создать еще один заказ, дойти до страницы подтверждения
        Выбрать чекбокс страховки
        Нажать кнопку Ввести карту и оплатить
    - assert: >-
        * Через какое-то время появилось модальное окно c текстом “Не удалось
        купить страховой полис

        При покупке страхового полиса произошла ошибка” и двумя кнопками
        “Выбрать места заново” и “Продолжить без страховки”
    - do: Нажать кнопку "Выбрать места заново"
    - assert: '* Произошел переход на страницу выбора мест'
    - do: Дойти до шага подтверждения
    - assert: '* Чекбокс страховки по умолчанию выключен'
manual: true
Устройство: Десктоп
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: >-
  Не для асессоров - нет шага оплаты.


  Если страховку изначально выбрали, то при возвращении назад убрать ее должно
  быть нельзя.

  Если страховку не выбрали, то при возвращении назад добавить ее можно.

  Находимся на странице подтверждения для одного пассажира
specs:
  'ЖД: Чекбокс страховки дизейблится при возвращении назад с шага оплаты':
    - do: |-
        Установить чекбокс страховки
        Нажать на кнопку Ввести карту и оплатить
    - assert: '* Через какое-то время произошел переход на страницу оплаты'
    - do: Вернуться браузерной кнопкой назад
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Чекбокс страховки установлен, но задизейблен
    - do: 'Вернуться на шаг выбора мест, дойти до страницы подтверждения'
    - assert: >-
        * При переходе на страницу подтверждения чекбокс по умолчанию не
        установлен и не задизейблен
    - do: |-
        Не устанавливать чекбокс страховки
        Нажать Ввести карту и оплатить
    - assert: '* Через какое-то время произошел переход на страницу оплаты'
    - do: Вернуться браузерной кнопкой назад
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Чекбокс страховки не установлен и не задизейблен
    - do: |-
        Выбрать страховку
        Оплатить заказ
    - assert: '- Заказ выкупился со страховкой'
manual: true
Функциональность: Действия на подтверждении
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Кейс не для асессоров, нужен доступ в бэкофис.


  Кейс проверяет соответствие данных о поездке, отображаемых на страницах
  подтверждения и заказа фактическим данным заказа.


  Данные по заказу можно посмотреть в админке:

  Тест: https://travel-orders-admin-testing.common.yandex-team.ru/

  Прод: https://travel-orders-admin.yandex-team.ru/


  Для оплаты в тестинге использовать тестовую карту: 5100003697253468, 12/22,
  090
specs:
  'ЖД: Соответствие данных заказа о поездке отображаемым данным':
    - do: >-
        * Создать заказ на одного взрослого пассажира, одного ребенка от 5 до 10
        лет, одного ребенка без места - такой, чтобы время отправления поезда
        было близко к 00:00 (такой рейс можно найти на направлении Москва -
        Санкт-Петербург)

        * Запомнить данные о поездке на выдаче: номер поезда, дата и время
        отправления/прибытия, станции отправления/прибытия

        * Запомнить данные на странице выбора мест: номер вагона, класс вагона,
        номер места, стоимость заказа, тип вагона

        * Запомнить данные на странице ввода данных: ФИО пассажиров, типы и
        номера документов, контактные данные

        * Дойти до страницы подтверждения
    - assert: >-
        * На странице подтверждения все данные о поезде и пассажирах
        соответствуют запомненным
    - do: Открыть заказ в бэкофисе
    - assert: >-
        * Все данные на странице подтверждения соответствуют данным о заказе в
        бэкофисе
    - do: 'Оплатить заказ, используя тестовую карту из описания'
    - assert: >-
        * Произошел переход на страницу заказа

        * Все данные о поезде и пассажирах на странице заказа соответствуют
        данным о заказе в бэкофисе и данным на предыдущих страницах
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты**


  Для заполнения форм на странице оплаты использовать тестовые карты.


  Например:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/24

  Создать заказ для 1 взрослого, 1 ребенка от 5 до 10 лет и 1 ребенка до 5 лет.

  Для этого нужно перейти на любую выдачу на вкладке ЖД, например, Москва -
  Санкт-Петербург, нажать на кнопку Выбрать место и далее следовать по шагам
  покупки.


  При прохождении кейса в поле ввода номера телефона необходимо указать
  действующий номер, для получения кодов из СМС
specs:
  'ЖД: Возврат сразу всех билетов':
    - do: На странице заказа кликнуть по кнопке Сдать все билеты вверху страницы
    - assert: >-
        * Появилось модальное окно для ввода смс

        * Страница за пределами модального окна затемнена

        * В модальном окне есть заголовок “Вы сдаёте билет. К возврату — [сумма
        к возврату] ₽”

        * Есть предупреждение “Восстановить покупку будет нельзя.”

        * Есть поле для ввода смс с текстом “Введите код, отправленный на номер
        [номер телефона, указанный при бронировании]”

        * На указанный при оформлении заказа номер пришла смс с кодом

        * Есть отсчет времени до отправки следующей смс, начинается с 60 секунд
    - do: 'Ввести код из смс, кликнуть Сдать билет'
    - assert: >-
        * На модальном окне появился лоадер

        * Через какое-то время модальное окно закрылось

        * Появилась красная надпись “Возврат” - одна для взрослого билета и
        билета без места и одна для билета ребенка

        * Появились лоадеры загрузки квитанции для каждого билета

        * Через некоторое время лоадеры пропали, вместо них появилась ссылка
        “Скачать квитанцию” и ссылка “Скачать чек” (у асессоров может не
        появиться ссылка на чек - это нормально, так как пропускается шаг
        оплаты)

        * Рядом со ссылками есть указание суммы к возврату

        * Текст информации для всех билетов окрасился в серый цвет

        * Вверху страницы пропали кнопки “Распечатать”, “Скачать”, “Сдать все
        билеты”

        * Для билетов пропали действия Сдать билет и Отменить электронную
        регистрацию
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты**


  Номер карты (не для асессоров): 5100003697253468

  CVN: 090

  Дата: 12/24

  Создать заказ для 1 взрослого на любую дату и любой поезд
specs:
  'ЖД: Текст "Билет оформлен" на странице заказа':
    - do: Дойти до страницы заказа
    - assert: >-
        * Вверху страницы есть текст об успешной покупке "Билет оформлен"

        * Нет кнопки "Назад" на странице
    - do: Обновить страницу
    - assert: |-
        * Текст об успешной покупке сохранился
        * Нет кнопки “Назад” на странице
    - do: |-
        Скопировать ссылку на заказ
        Открыть в новой вкладке
    - assert: |-
        * Открылась страница заказа
        * Текста про успешную покупку нет
        * Есть кнопка "Назад"
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты**


  Для заполнения форм на странице оплаты использовать тестовые карты, подробнее
  здесь: https://wiki.yandex-team.ru/TRUST/testdata/#operaciisbankovskimikartami


  Например:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20

  Создать заказ для 4 взрослых пассажиров. Для этого перейти на любую выдачу на
  вкладке ЖД, например, Москва - Санкт-Петербург и нажать на кнопку Выбрать
  место. Далее следовать по шагам покупки.

  Дойти до страницы успешного заказа (хэппи пейдж), нажать "Подробнее о заказе"
  - произойдет переход на страницу заказа с данными о заказе.
specs:
  'ЖД: Кнопки возврата дизейблятся во время возврата':
    - do: |-
        Дойти до страницы заказа
        Для одного из пассажиров кликнуть по кнопке Сдать билет
    - assert: |-
        * Появилось модальное окно для ввода смс
        * На указанный при оформлении заказа номер пришла смс с кодом
    - do: |-
        Ввести код из смс
        Кликнуть Подтвердить
    - assert: >-
        * Через какое-то время модальное окно закрылось и началось формирование
        квитанции
    - do: >-
        Пока квитанция не сформировалась, кликнуть по кнопке Сдать билет для
        другого билета
    - assert: |-
        * Кнопка задизейблена (при наведении не подсвечивается, текст серый)
        * Появился попап с текстом "Дождитесь возврата билета"
    - do: |-
        Дождаться, пока квитанция сформируется
        Кликнуть по кнопке Сдать билет еще раз
    - assert: |-
        * Кнопка не задизейблена (подсвечивается при наведении, текст черный)
        * Попап не появился
        * При нажатии открывается модальное окно с полем для кода
    - do: >-
        Ввести код, кликнуть Подтвердить

        Пока не сформировалась квитанция для второго билета, кликнуть по кнопке
        Сдать все билеты вверху страницы
    - assert: |-
        * Кнопка задизейблена (при наведении не подсвечивается, текст серый)
        * Появился попап с текстом “Дождитесь возврата билета”
    - do: |-
        Дождаться формирования квитанции по второму возврату
        Кликнуть по кнопке Сдать все билеты
    - assert: |-
        * Кнопка активна (подсвечивается при наведении, текст черный)
        * Попап не появляется
        * Открылось модальное окно для возврата
manual: true
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты.**


  Чеки в этом кейсе не проверяем, так как нет этапа оплаты.



  Тестовая карта:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/24

  Перейти на вкладку ЖД билеты

  Создать заказ для 1 взрослого на любую дату и любой поезд. Для этого перейти
  на любую выдачу, например, Москва - Санкт-Петербург и нажать на кнопку Выбрать
  место. Далее следовать по шагам покупки.
specs:
  'ЖД: Действия Скачать и Распечатать на странице заказа':
    - do: |-
        Купить билет как описано в Preconditions
        На хэппи пейдж нажать "Подробнее о заказе"
    - assert: |-
        * Открылась страница полного заказа
        * На странице есть кнопки "Распечатать", "Скачать билеты", "Сдать билет"
    - do: Кликнуть по кнопке "Скачать билеты"
    - assert: '* Произошло скачивание бланков билетов в формате pdf'
    - do: Кликнуть по кнопе "Распечатать"
    - assert: '* Открылось окно для печати бланков билетов'
    - do: Отменить печать
    - assert: '* Произошел возврат к предыдущей странице'
    - do: >-
        Вернуть билет (для этого кликнуть по кнопке Сдать билет и дождаться
        окончания возврата)
    - assert: '* Появилась ссылка Скачать квитанцию'
    - do: Кликнуть по ссылке Скачать квитанцию
    - assert: '* Произошло скачивание бланка квитанции разных сборов в формате pdf'
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты.**


  Чеки в этом кейсе не проверяем, так как нет шага оплаты.


  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/24

  Перейти на вкладку ЖД билеты

  Создать заказ для 1 взрослого на любую дату и любой поезд. Для этого перейти
  на любую выдачу, например, Москва - Санкт-Петербург и нажать на кнопку Выбрать
  место. Далее следовать по шагам покупки.
specs:
  'ЖД: Тач: Действие Скачать на странице заказа':
    - do: |-
        Купить билет как описано в Preconditions, дойти до страницы хэппи пейдж
        Нажать на кнопку "Подробнее о заказе"
    - assert: |-
        * Произошел переход на страницу полного заказа
        * На странице есть кнопка "Скачать"
        * Нет кнопки "Распечатать"
    - do: Кликнуть по кнопке "Скачать"
    - assert: '* Произошло скачивание бланков билетов в формате pdf'
    - do: >-
        Вернуть билет (для этого кликнуть по кнопке Сдать билет, Подтвердить и
        дождаться окончания возврата)
    - assert: '* Появилась ссылка Скачать квитанцию'
    - do: Кликнуть по ссылке Скачать квитанцию
    - assert: '* Произошло скачивание бланка квитанции разных сборов в формате pdf'
manual: true
Функциональность: Действия с заказом
Устройство: Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты.**


  Для заполнения форм на странице оплаты использовать тестовые карты, подробнее
  здесь: https://wiki.yandex-team.ru/TRUST/testdata/#operaciisbankovskimikartami


  Например:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20

  Перейти на вкладку ЖД билеты

  Создать заказ для 1 взрослого на любую дату и любой поезд. Для этого перейти
  на любую выдачу, например, Москва - Санкт-Петербург и нажать на кнопку Выбрать
  место. Далее следовать по шагам покупки.
specs:
  'ЖД: Различные случаи с модальными окнами на странице заказа в десктопе':
    - do: Кликнуть по кнопке Сдать билет рядом с данными о пассажире
    - assert: >-
        * Появилось модальное окно для ввода смс

        * Страница за пределами модального окна затемнена

        * В модальном окне есть заголовок “Вы сдаёте билет. К возврату — [сумма
        к возврату] ₽”

        * Есть предупреждение “Восстановить покупку будет нельзя.”

        * Есть поле для ввода смс с текстом “Введите код, отправленный на номер
        [номер телефона, указанный при бронировании]”

        * На указанный при оформлении заказа номер пришла смс с кодом

        * Есть отсчет времени до отправки следующей смс, начинается с 60 секунд
    - do: Кликнуть по области вне окна
    - assert: '* Окно закрылось'
    - do: Снова кликнуть по кнопке Сдать билет
    - assert: |-
        * Открылось модальное окно для возврата
        * Отсчет времени не начался заново
    - do: Дождаться истечения времени
    - assert: '* Текст про время сменился на ссылку "Отправить код еще раз"'
    - do: Кликнуть по ссылке "Отправить код еще раз"
    - assert: |-
        * На указанный при оформлении билета номер пришла смс с новым кодом
        * Ссылка сменилась на текст с отсчетом времени
    - do: Кликнуть по крестику в правом верхнем углу окна
    - assert: '* Окно закрылось'
    - do: Снова кликнуть Сдать билет
    - assert: '* Открылось окно для возврата'
    - do: 'Ничего не вводя в поле, кликнуть Подтвердить'
    - assert: |-
        * Окно не закрылось
        * Поле для ввода подсвечивается красным
        * Появился попап с текстом "Необходимо ввести код"
    - do: |-
        Ввести неверный код
        Кликнуть Подтвердить
    - assert: |-
        * Окно не закрылось
        * Поле подствечивается красным
        * Появился попап с ошибкой "Неправильно введен код"
    - do: Кликнуть по кнопке "Отменить"
    - assert: '* Окно закрылось'
manual: true
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты.**


  Например:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20

  Перейти на вкладку ЖД билеты

  Создать заказ для 1 взрослого на любую дату и любой поезд. Для этого перейти
  на любую выдачу, например, Москва - Санкт-Петербург и нажать на кнопку Выбрать
  место. Далее следовать по шагам покупки.
specs:
  'ЖД: Различные случаи с модальными окнами на странице заказа в таче':
    - do: |
        Рядом с информацией о пассажире кликнуть кнопке "Сдать билет"
    - assert: |
        * Появилось модальное окно
        * Страница за пределами модального окна затемнена
        * В модальном окне есть заголовок “Вы сдаёте билет. К возврату — [сумма
        к возврату] ₽”
        * Есть предупреждение “Восстановить покупку будет нельзя.”
    - do: Кликнуть по области вне окна
    - assert: Окно закрылось
    - do: Снова кликнуть по кнопке Сдать билет
    - assert: Открылось модальное окно для возврата
    - do: Кликнуть по кнопке "Отменить"
    - assert: Окно закрылось
    - do: |
        Снова кликнуть по кнопке "Сдать билет"
        Кликнуть по кнопке "Подтвердить"
    - assert: Окно закрылось, билет сдан

manual: true
Устройство: Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты.**


  Номер карты (не для асессоров): 5100003697253468

  CVN: 090

  Дата: 12/24

  Перейти на вкладку ЖД билеты

  Создать заказ для 1 взрослого, одного ребенка от 5 до 10 лет и одного ребенка
  до 5 лет. Для этого перейти на любую выдачу, например, Москва -
  Санкт-Петербург и нажать на кнопку Выбрать место. Далее следовать по шагам
  покупки. Дойти до страницы успешного заказа (хэппи пейдж), нажать кнопку
  "Подробнее о заказе".
specs:
  'ЖД: Информация о тарифе и стоимости на странице заказа в десктопе':
    - do: Дойти до страницы заказа по инструкции из Preconditions
    - assert: >-
        * Для каждого из пассажиров указан тариф - детский, полный тариф,
        детский без места

        * Рядом с тарифом указана стоимость и есть иконка ?

        * Для детского без места стоимость не указана, нет иконки ?, есть
        приписка "Бесплатно"

        * Сумма за все билеты равна сумме цен каждого билета
    - do: Навести курсор на иконку ? для детского билета
    - assert: '* Появился указатель-рука'
    - do: Кликнуть по иконке
    - assert: |-
        * Появился попап с расшифровкой стоимости
        * В расшифровке два пункта - цена билета и сервисный сбор
        * Сумма цены за билет равна сумме цены билета и сервисного сбора
    - do: Кликнуть по крестику в верхнем правом углу попапа
    - assert: '* Попап закрылся'
    - do: Повторить шаги 2-4 для билета с полным тарифом
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты.**


  Номер карты (не для асессоров): 5100003697253468

  CVN: 090

  Дата: 12/24

  Перейти на вкладку ЖД билеты

  Создать заказ для 1 взрослого, одного ребенка от 5 до 10 лет и одного ребенка
  до 5 лет. Для этого перейти на любую выдачу, например, Москва -
  Санкт-Петербург и нажать на кнопку Выбрать место. Далее следовать по шагам
  покупки. Дойти до страницы успешного заказа (хэппи пейдж), нажать кнопку
  "Подробнее о заказе".
specs:
  'ЖД: Тач: Информация о тарифе и стоимости на странице заказа':
    - do: Дойти до страницы заказа по инструкции из Preconditions
    - assert: >-
        * Для каждого из пассажиров указан тариф - детский, полный тариф,
        детский без места

        * Рядом с тарифом указана стоимость и есть иконка ?

        * Для детского без места стоимость не указана, нет иконки ?, есть
        приписка "Бесплатно"

        * Сумма за все билеты равна сумме цен каждого билета
    - do: Кликнуть по иконке ? для детского тарифа
    - assert: |-
        * Появилась шторка с расшифровкой стоимости
        * В расшифровке два пункта - цена билета и сервисный сбор
        * Сумма цены за билет равна сумме цены билета и сервисного сбора
    - do: Закрыть шторку свайпом вниз
    - assert: '* Шторка закрылась'
    - do: Повторить шаги 2-3 для билета с полным тарифом
manual: true
Функциональность: Покупка
Устройство: Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается, это нормально. Заказ должен оформляться без
  ввода карты.**


  Номер карты: 5100003697253468

  CVN: 090

  Дата: 12/24

  - Перейти на вкладку ЖД билеты

  - Создать заказ для 1 взрослого, одного ребенка от 5 до 10 лет и одного
  ребенка до 5 лет. Для этого перейти на любую выдачу, например, Москва -
  Санкт-Петербург и нажать на кнопку Выбрать место. Далее следовать по шагам
  покупки.

  - Запомнить данные о поезде (номер, направление, дата, места, тип вагона,
  время отправления/прибытия) - на странице выбора мест.

  - Запомнить данные о пассажирах (ФИО, типы документов, номера документов,
  номер телефона и почту) - на странице ввода данных.
specs:
  'ЖД: Отображение данных о пассажирах и поезде на странице заказа':
    - do: |-
        Купить билеты как описано в Preconditions
        Нажать "Подробнее о заказе" на хэппи пейдж
    - assert: >-
        * Произошел переход на страницу полного заказа

        * Если залогин, то наверху есть ссылка "К поездке". Если нет, то "Мои поездки"

        * Ниже есть блок с информацией о поезде

        * Вся информация о поезде совпадает с запомненной

        * Есть блок с информацией о пассажирах

        * Для каждого пассажира ФИО, документ и номер документа совпадает с
        запомненными

        * Есть указание мест и их типов для каждого пассажира (верхнее, нижнее,
        у стола и тд). У детского до 5 будет указано "без места", соответственно
        типов не будет.

        * Есть тариф и стоимость для каждого пассажира

        * Есть блок с итоговой суммой за все билеты

        * Есть блок с контактными данными, данные совпадают с введенными при
        оформлении билетов

        * Есть номер заказа в Путешествиях и номер РЖД:

        ![image](https://jing.yandex-team.ru/files/gouken67/ЖД%20Happy%20Page.png)
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Канонические ссылки':
    - do: 'Перейти на тестовый стенд, вкладка ЖД билеты'
    - do: |-
        * Открыть инструменты разработчика
        * Перейти на вкладку _Elements_
    - do: |-
        * Выполнить поиск (Ctrl+F) по “canonical”
        * Сравнить канонические ссылки
    - assert: >-
        * Ссылки соответствуют ссылкам на скриншоте

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-30_12.42.22-ulgly.png)
    - do: |-
        Выбрать направление и дату поездки
        Кликнуть _Найти_
    - assert: Открылась выдача по выбранному направлению на указанную дату
    - do: >-
        * В инструментах разработчика, на вкладке Elements, выполнить поиск по
        “canonical”

        * Сравнить канонические ссылки
    - assert: >-
        Ссылки соответствуют ссылкам на скриншоте (пункты отправления/прибытия
        могут отличаться)

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-07-30_12.43.33-drf1c.png)
manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Авиа
type: Выдача
description: |-
  Отсутствие логотипа Авиакомпании - не баг, а особенность стенда.
specs:
  'Авиа: Общий вид выдачи в десктопе':
    - do: |-
        Зайти на главную,
        На вкладке авиа ввести в поля
        * откуда - Екатеринбург
        * куда - Москва
        * туда - завтра
        * обратно не заполняем
        Кликнуть "Найти"
    - assert: |-
        * Произошел переход на страницу выдачи

        * На странице вверху есть кнопка Сортировка и блок фильтров: Без пересадок, С багажом,
        Пересадки, Время вылета/прилета, Аэропорты, Авиакомпании, Партнеры

        * Под фильтрами горизонтальный рекламный баннер. (чтобы увидеть, нужно
        отключить блокировщики рекламы в браузере!)

        * Ниже отображаются результаты поиска

        * Справа от выдачи расположен блок с рекламой (чтобы увидеть, нужно
        отключить блокировщики рекламы в браузере!) ИЛИ блок с погодой, блок с отелями
        (порядок с набор блоков может отличаться, это не баг)

        * После нескольких предложенных вариантов отображается блок для
        отслеживания цены

        Каждый блок варианта перелета в выдаче содержит:
               * название авиакомпании
               * логотип (! в тестовом окружении может не быть, считаем это нормой)
               * время отправления
               * время прилета
               * время в пути
               * названия аэропортов отправления/прибытия
               * цена билета (будет указана на жёлтой кнопке)
               * наличие/отсутствие багажа и ручной клади
               * Жёлтая кнопка со стоимостью предложения

        https://jing.yandex-team.ru/files/kuklina/2022-05-20_14-01-36.png (вариант с рекламой справа)
        https://jing.yandex-team.ru/files/kuklina/2022-07-11_18-41-25.png (вариант с погодой и отелями)

    - do: Поскролллить выдачу вниз
    - assert: По мере скоролла подгружаются новые сниппеты
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag:
  - automation (iliasova)
  - Smoke
  - Blocker
Автор: iliasova
feature: ЖД
type: Страница заказа
description: >-
  Для оплаты в тестинге (не для асессоров):

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20

  Залогиниться тестовым аккаунтом:

  логин: vladlenas123

  пароль: v12345678


  Проверить, что для этого аккаунта в ЛК нет пассажиров. Если есть - удалить.

  https://jing.yandex-team.ru/files/shenfeld/2020-08-20_17.18.07-w9k6p.png


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**
specs:
  'ЖД: Покупка билета со страховкой для залогина с пустой ЗКП':
    - do: |-
        Залогиниться под пользователем из подготовки
        Перейти на вкладку ж/д билеты
        Дойти до страницы подтверждения заказа, почту указать свою рабочую
    - assert: '* На странице есть чекбокс добавления страховки'
    - do: |-
        Установить чекбокс
        Кликнуть Перейти к оплате
        Ввести данные тестовой карты из описания (асессорам не надо)
        Кликнуть Оплатить
    - assert: |-
        * Произошел переход на страницу успешного заказа (хэппи пейдж)
        * На почту пришло письмо, суммы в письме и на странице заказа совпадают
    - do: Кликнуть по кнопке "Подробнее о заказе"
    - assert: >-
        - Произошел переход на страницу заказа со всеми данными о заказе

        - На странице есть пункт Страховка, указана стоимость страховки,
        итоговая сумма равна сумме за билет + сумма страховки
    - do: |-
        Кликнуть Сдать билет
        Кликнуть Подтвердить
    - assert: |-
        * Через какое-то время осуществился возврат
        * На почту пришло письмо о возврате
        * Суммы к возврату в письме и на странице заказа совпадают
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Для прохождения кейса необходимо, чтобы была возможность изменить часовой пояс
  на устройстве.


  **Для асессоров: шаг оплаты в тестинге намеренно пропускается, после перехода
  к оплате вы сразу попадете на страницу успешного заказа.**

  Создать заказ на одного пассажира, для этого:

  - перейти на вкладку ж/д билеты

  - выполнить поиск по любому направлению из Москвы (например Москва -
  Екатеринбург) на любую дату

  - для любого поезда кликнуть по кнопке Выбрать место

  - далее следовать по шагам покупки

  - на странице хэппи пейдж нажать "Подробнее о заказе"

  - запомнить дату рождения пассажира, которую указали на шаге ввода данных


  Для оплаты в тестинге можно использовать карту:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20
specs:
  'ЖД: Корректность даты рождения для разных часовых поясов':
    - do: |-
        Изменить часовой пояс на устройстве на Гренландию (UTC - 3)
        Обновить страницу заказа
    - assert: >-
        * Дата рождения пассажира не изменилась, совпадает с той, которую
        указывали
    - do: |-
        Изменить часовой пояс на устройстве на Москва (UTC + 3)
        Обновить страницу заказа
    - assert: >-
        * Дата рождения пассажира не изменилась, совпадает с той, которую
        указывали
    - do: |-
        Изменить часовой пояс на устройстве на Барнаул (UTC + 7)
        Обновить страницу заказа
    - assert: >-
        * Дата рождения пассажира не изменилась, совпадает с той, которую
        указывали
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Для асессоров: шаг оплаты в тестинге намеренно пропускается, после перехода
  к оплате вы сразу попадете на страницу успешного заказа.**
specs:
  'ЖД: Если нет названия города, подставляется название станции':
    - do: >-
        Перейти на вкладку ж/д билеты

        Выполнить поиск по направлению Санкт-Петербург - Новодугинская любую
        дату

        Для любого поезда кликнуть по кнопке Выбрать место (поезд ходит не
        каждый день, можно поискать на другие даты)
    - assert: >-
        * Осуществился переход на страницу выбора мест

        * В блоке информации о поезде вместо города прибытия указана станция
        Новодугинская:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-08-19_15.00.00-szb7a.png)
    - do: |-
        Выбрать любое место
        Кликнуть Указать пассажиров
        Заполнить поля любыми валидными данными
        Кликнуть Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * В блоке информации о поезде указана станция прибытия "Новодугинская"
    - do: |-
        Кликнуть Ввести карту и оплатить
        Ввести данные карты из описания
        Кликнуть Оплатить
    - assert: |-
        * Произошел переход на страницу хэппи пейдж
        * В блоке информации о поезде в пункте прибытия указано "Новодугинская"
    - do: Нажать на кнопку "Подробнее о заказе"
    - assert: |-
        - Произошел переход на страницу заказа с данными о заказе
        - В блоке информации о поезде в пункте прибытия указано "Новодугинская"
manual: true
Функциональность: Покупка
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка фильтра бюджета (минимальное значение)':
    - do: Перейти на вкладку авиабилеты
    - do: |-
        Заполнить форму поиска авиабилетов:
        Откуда: Москва
        Куда: Сочи
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
        Нажать кнопку найти
    - assert: >-
        Открылась страница выдачи. В фильтре бюджета указана максимальная цена
        среди предложений на выдаче.
    - do: Нажать на кнопку фильтра бюджета
    - assert: >-
        Показался блок фильтра. Сверху указана максимальная цена, ниже слайдер
        регулировки максимальной цены. По умолчанию бегунок слайдера максимум
        справа.
    - do: Передвинуть бегунок максимально влево.
    - assert: >-
        Максимальная цена изменилась в меньшую сторону и равна минимальной цене
        в выдаче.

        Блок фильтра не свернулся. В блоке фильтров появилась кнопка “Сбросить”.

        Все предложения на выдаче не дороже цены из фильтра
manual: true
Страница: Выдача
Сервис: Авиа
Окружение: Testing
Tag: Blocker
Автор: tcheremnykh
feature: ЖД
type: Оплата
description: |-
  Кейс для тестинга.
  Не для асессоров - у них нет доступа к форме оплаты в тестинге.
specs:
  'ЖД: Отображение ошибки при оплате (тест)':
    - do: |-
        Перейти на вкладку жд билеты
        Выполнить поиск по любому направлению из Москвы
        Для любого сниппета кликнуть по кнопке покупки
        Далее следовать по шагам покупки до страницы оплаты
    - do: |-
        Ввести данные тестовой карты с неправильным cvc:
        5100003697253468
        01/20
        228
    - do: Кликнуть Оплатить
    - assert: >-
        * Появился лоадер

        * Через какое-то время появилась ошибка:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-08-22_09.22.44-9c1w7.png)
    - do: Кликнуть по кнопке Оплатить
    - assert: '* Произошел переход на страницу ввода карты'
    - do: Повторить шаги 2-3
    - assert: '* Появилась та же ошибка'
    - do: Кликнуть "Выбрать места заново"
    - assert: '* Произошел переход на страницу выбора мест'
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Оплата
description: 'Отдельный кейс для прода, так как асессоры смогут проверить только в проде.'
specs:
  'ЖД: Отображение ошибки при оплате (прод)':
    - do: |-
        Перейти на вкладку жд билеты
        Выполнить поиск по любому направлению из Москвы
        Для любого сниппета кликнуть по кнопке покупки
        Далее следовать по шагам покупки до страницы оплаты
    - do: |-
        Ввести данные несуществующей карты (тестовой) с неправильным cvc:
        5555555555554444
        01/20
        228
    - do: Кликнуть Оплатить
    - assert: >-
        * Появился лоадер

        * Через какое-то время появилась ошибка:

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-08-22_09.22.44-9c1w7.png)
    - do: Кликнуть по кнопке Оплатить
    - assert: '* Произошел переход на страницу ввода карты'
    - do: Повторить шаги 2-3
    - assert: '* Появилась та же ошибка'
    - do: Кликнуть "Выбрать места заново"
    - assert: '* Произошел переход на страницу выбора мест'
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Оплата
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка фильтра пересадок "Без пересадок" (фильтрояк)':
    - do: |-
        Перейти на вкладку авиабилеты
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Вашинтон
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
        Нажать найти
    - assert: Открылась страница выдачи. Фильтр “Без пересадок” не активный.
    - do: Нажать на фильтр пересадок.
    - assert: В выпадающем списке чекбокс без пересадок не активный
manual: true
Страница: Выдача
Сервис: Авиа
Окружение: Testing
Tag: Blocker
Автор: tcheremnykh
feature: ЖД
type: ''
description: >-
  Кейс для того, чтобы помнить, что есть возможность отключить продажи на своей
  стороне и знать, как это сделать.


  Для отключения продаж нужны доступы в админку Расписаний:

  Прод: https://work.admin.rasp.yandex-team.ru/dynamic_settings

  Тест: https://work.admin-test.rasp.yandex-team.ru/dynamic_settings

  Если хотим проверить разные страницы, нужно предварительно в одной вкладке
  открыть жд выдачу с кнопками перехода на покупку, в другой вкладке открыть
  страницу жд заказа.
specs:
  'ЖД: Отключение продаж':
    - do: >-
        Перейти по ссылке из описания в админку

        В динамической настройке TRAN_PURCHASE_ENABLED_PARTNERS убрать всех
        партнеров

        Нажать Save
    - assert: >-
        * В течение нескольких минут (обычно около 1-2) продажи должны
        отключиться:

        1. При загрузке новой выдачи нет цен и кнопок, вверху страницы
        дисклеймер "Продажа билетов временно не работает."

        2. При переходе с выдачи из подготовки (где есть кнопки) получаем ошибку
        на странице выбора мест, что билеты недоступны для продажи

        3. Страница заказа из подготовки при обновлении открывается, но при
        попытке любых действий (сдать билет/сменить статус ЭР), получаем ошибку
        в модальном окне
manual: true
Функциональность: Внутренние вещи для удобства
Устройство:
  - Десктоп
  - Тач
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Записная книжка
type: Главная
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  Для включения Плюса в тестинге необходимо залогиниться, перейти сюда
  https://plus-test.yandex.ru/ и оформить подписку.

  Для оформления понадобится тестовая карта, например:

  5100003697253468

  01/20

  090


  **Для асессоров**

  Можно использовать готовые тестовые аккаунты:

  С плюсом: логин Yaplus, пароль v12345678

  Без плюса: логин vladlen, пароль v12345678

  Как авторизоваться:

  * Нажать на кнопку Войти в правом верхнем углу

  * На открывшейся странице в тестовом паспорте авторизоваться тестовым
  пользователем.

  * Произойдет переход в тестинг Путешествий https://travel-test.yandex.ru (у
  асессоров нет доступов)

  * После этого нужно заменить в урле https://travel-test.yandex.ru на
  https://travel.crowdtest.yandex.ru - в верхнем правом углу должен появиться
  логин, под которым авторизовались в тестовом паспорте.
specs:
  Плюс-брендинг у залогинов:
    - do: |-
        Перейти на главную сервиса
        Залогиниться под аккаунтом с включенным плюсом из описания
    - assert: >-
        * Вокруг аватарки появилась обводка:

        ![image](https://jing.yandex-team.ru/files/alexey-linev/2019-08-06_16.52.14-jr255.png)
    - do: Кликнуть по аватарке
    - assert: |-
        * Раскрылось меню
        * Есть пункт "Плюс активен"
    - do: Залогиниться под пользователем с выключенным плюсом
    - assert: '* Вокруг аватарки пропала обводка'
    - do: Кликнуть по аватарке
    - assert: |-
        * Раскрылось меню
        * Есть пункт "Получить Плюс"
    - do: Выйти из всех аккаунтов
    - assert: |-
        * Аватарка сменилась на кнопку Войти
        * Обводки нет
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Главная
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: Отели
type: Выдача
description: ''
specs:
  Различные состояния карточек на странице поиска отелей:
    - do: >-
        Перейти на страницу поиска отелей в Зимбабве (geoid=20954) с любыми
        датами и кол-вом гостей
    - assert: >-
        - Открылась страница поиска отелей

        - На странице есть карточки с предложениями

        - Не у всех предложений есть фото **

        - На десктопе вместо фото у карточки есть заглушка

        - В карточке отеля может не быть рейтинга, звездности, количества
        отзывов, услуг и предложений от других партнеров или Яндекса

        - Расположение других элементов у карточки без фото ничем не отличается
        от карточек с фото


        https://jing.yandex-team.ru/files/rifat-k/2019-12-17_15-12-23.png




        ** если в выдаче нет отелей без фотографий, следует изменить даты
        заезда-выезда или перейти на следующую страницу (кнопка Далее под
        выдачей)
    - do: >-
        Кликнуть по очереди по элементам на карточке отеля БЕЗ фотографии (с
        заглушкой), **кроме предложений от партнеров, Яндекса и кнопки
        "Выбрать"**:

        - заглушке

        - названию отеля

        - пустое пространство, услуги и другие слова
    - assert: По всем указанным кликам переход на главную отеля
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Автор: iliasova
feature: Отели
type: Бронирование
description: >-
  **Информация для асессоров: доступов во внутренний тестинг нет, поэтому после
  перехода во внутренний тестинг, чтобы открылась ссылка, нужно заменить
  https://travel-test.yandex.ru/ на https://travel.crowdtest.yandex.ru/ - должна
  открыться та же страница бронирования на стенде асессоров.**

  Если не будет офферов от Яндекса на указанные даты, сменить даты на другие,
  пока предложения не будут найдены (кол-во ночей оставить 1)
specs:
  Соответствие информации при переходе со страницы отеля на бронирование:
    - do: >-
        На главной портала нажать на вкладку Отели, в строке поиска написать
        "Маринс Парк" и из саджестов выбрать Маринс Парк для Екатеринбурга

        - 2 гостя

        - дата заезда - завтрашний день

        - дата выезда - послезавтра
    - assert: >-
        Открылась страница отеля
        На странице присутствует:

        - Название отеля - совпадает с запросом

        - Под фотографиями расположен блок с ценами

        - Над блоком с ценами указаны даты заезда-выезда, количество гостей -
        совпадают с изначально указанными данными в запросе
        - Присутствуют предложения от Яндекс.Путешествий (с кнопкой
        Забронировать)
    - do: >-
        Нажать на Забронировать у любого оффера Яндекса

        Если нет предложений от Яндекса, то можно изменить даты заезда-выезда,
        через форму поиска в шапке
    - assert: >-
        Произошел переход на страницу бронирования.

        На странице присутствуют:

        - Название отеля и его адрес

        - Ниже указаны дата и время заезда и выезда, количество гостей

        - Описание номера и условия заселения

        - Ниже поля для ввода имен гостей и контактов - электронная почта и
        номер телефона

        - Справа от блока фотографий блок со стоимостью, количеством ночей,
        итоговая стоимость и желтая кнопка Оплатить



        На странице бронирования все данные о гостинице, датах и цене совпадают
        с предыдущими шагами
manual: true
Функциональность: Бронирование
Устройство: Десктоп
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Smoke
  - Blocker
Автор: iliasova
feature: ЖД
type: Выдача
description: >-
  Кейс для проверки, что поисковые боты видят выдачу, потому что они приходят
  без кук.


  Как отключить куки в браузере (на примере хрома):

  * Перейти в настройки, раздел Конфиденциальность и безопасность

  * Перейти в раздел Настройки сайта

  * Перейти в раздел Файлы сookie и данные сайтов

  * Отключить "Разрешить сайтам сохранять и читать файлы cookie"

  ![image](https://jing.yandex-team.ru/files/shenfeld/2019-10-10_11.51.58-cj7hy.png)
specs:
  'ЖД: Выдача открывается без кук':
    - do: |-
        Перейти на вкладку ЖД билеты
        Перейти на любой поиск
    - assert: '* Страница выдачи отображается'
    - do: |-
        Отключить куки по инструкции из описания
        Обновить страницу выдачи
    - assert: |-
        * Выдача отображается корректно
        * Ошибок на странице нет
manual: true
Функциональность: Содержание выдачи
Устройство: Десктоп
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Авиа
type: ''
description: >-
  Кейс описывает, как в тестовой среде попасть на страницу бронирования
  аэрофлота.


  **Описание для участников команды**


  * В тестинге на вкладке авиа поискать по направлению, по которому летает
  аэрофлот (например, Москва - Екатеринбург, или направление, указанное в
  кейсе).

  * Выбрать в фильтре авиакомпаний аэрофлот

  * Кликнуть по сниппету с предложением аэрофлота.

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота.

  ![image](https://jing.yandex-team.ru/files/shenfeld/2019-09-03_18.57.27-4clao.png)

  * Должна открыться страница бронирования на https://travel-test.yandex.ru
specs: {}
manual: true
Функциональность:
  - Бронирование
  - Внутренние вещи для удобства
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: Авиа
type: ''
description: >-
  Кейс описывает, как в тестовой среде попасть на страницу бронирования
  аэрофлота.


  **Описание для асессоров**

  Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
  бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
  и проверять кейс в таче.


  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре авиакомпаний аэрофлот:

  ![image](https://jing.yandex-team.ru/files/iliasova/2020-03-04_17.04.23-yzmoe.png)

  * Кликнуть по сниппету с предложением аэрофлота (где есть пометка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/iliasova/2020-03-04_17.05.37-zs6f4.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров
specs: {}
manual: true
Функциональность:
  - Бронирование
  - Внутренние вещи для удобства
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Автор: shenfeld
feature: Портал
type: Оплата
description: >-
  Кейс для регресса формы оплаты в формате чек-листа.

  Нужен для проверки, что ничего не сломалось, при изменениях в трасте, чтобы
  ничего не забыть.

  Написан для ЖД, но скорее всего подходит и для остальных вертикалей.


  Можно добавлять/уточнять проверки.
specs:
  Регресс формы оплаты:
    - do: Незалогин
    - do: Залогин без карт - оплата без сохранения карты
    - do: Залогин без карт - оплата с сохранением карты
    - do: Повторный ввод сохраненной карты (как новой) - не должна сохраняться
    - do: Удаление карты
    - do: Максимальное кол-во карт
    - do: >-
        Валидация полей - недостаточное кол-во цифр в номере - не должна быть
        активной кнопка Оплатить
    - do: Валидация полей - ошибка в номере карты
    - do: >-
        Валидация полей - не заполнено поле срока годности - не должна быть
        активна кнопка
    - do: >-
        Валидация полей - ошибки в сроке годности (несуществующий месяц,
        прошедший год итд)
    - do: >-
        Валидация полей - недостаточное кол-во символов в cvc - не должна быть
        активна кнопка
    - do: 'Отображение ошибки при оплате - например, неверный cvc (228)'
    - do: Покупка со страховкой - проверить сумму в шапке
    - do: Отображение фрейма в режиме инкогнито
    - do: Разные браузеры
    - do: Тач
manual: true
Сервис: Портал
Функциональность: Внутренние вещи для удобства
Страница: Оплата
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  При покупке с отложенным клирингом для первого возврата делаем анхолд, для
  второго - обычный возврат.

  - Создать заказ на 2 взрослых и 1 ребенка без места.

  - Для этого перейти на вкладку ЖД билеты, поискать по любому направлению (в
  тестинге - из Москвы) и далее следовать по шагам покупки. Дойти до страницы
  успешного заказа, нажать "Подробнее о заказе".

  - Почту указывать на yandex-team, номер телефона свой личный.
specs:
  'ЖД: Письма о возврате (с отложенным клирингом и без)':
    - do: >-
        На странице заказа нажать Сдать билет для блока взрослый + ребенок без
        места

        Нажать Подтвердить

        Дождаться окончания возврата
    - assert: >-
        * Через какое-то время на почту пришло письмо о возврате - может прийти
        в течение получаса, если не сформировался чек

        * Тема письма "Вы сдали билет на поезд ..."

        * Вся информация о поезде, пассажирах и местах соответствует сданным билетам

        * Есть блок с информацией о том, что деньги скоро разблокируются:

        "Вы оформили возврат по заказу 76596912776942. Поскольку с момента
        заказа прошло меньше двух дней, мы не снимали с вас деньги за билеты —
        пока они заблокированы на вашем счёте. После вычета сборов 447,02 ₽
        разблокируется 2010,30 ₽. В списке операций по вашему счёту сумма сборов
        появится на месте изначального платежа. Обычно деньги приходят в течение
        двух-трёх дней. Срок зависит от вашего банка и не превышает 30 дней. При
        разблокировке банки обычно не уведомляют о возврате денег — не
        беспокойтесь, если не получите смс."

        * Сумма к разблокировке соответствует сумме к возврату на странице
        заказа

        * Блок с билетами в письме называется "Пассажиры" (множественное число)

        * К письму приложены чек и КРС (чека может не быть, если не успел
        сформироваться)
    - do: Кликнуть по ссылке с номером заказа из письма
    - assert: >-
        * Произошел переход на страницу созданного заказа (асессорам для доступа
        к заказу нужно заменить https://travel-test.yandex.ru/ на
        https://travel.crowdtest.yandex.ru/)
    - do: Кликнуть по ссылке Помощь из письма
    - assert: >-
        * Произошел переход на страницу поддержки с темой "Когда вернутся деньги
        после возврата билета"
    - do: |-
        Сдать оставшийся билет в заказе
        Дождаться окончания возврата
    - assert: >-
        * Через какое-то время на указанную почту пришло письмо

        * Тема письма “Вы сдали билет на поезд …”

        * Вся информация о поезде и пассажире соответствует сданному билету

        * Есть блок с информацией о сроках возврата:

        "Вы оформили возврат по заказу 76796912789914. На вашу карту вернётся
        946,80 ₽, обычно деньги приходят в течение двух-трёх дней. Срок зависит
        от вашего банка и не превышает 30 дней."

        * Сумма к возврату соответствует сумме на странице заказа для этого
        билета

        * Блок с билетом в письме называется “Пассажир” (единственное число)

        * К письму приложены чек и КРС (чека может не быть, если не успел
        сформироваться)
    - do: Кликнуть по ссылке с номером заказа из письма
    - assert: >-
        * Произошел переход на страницу созданного заказа (асессорам для доступа
        к заказу нужно заменить https://travel-test.yandex.ru/ на
        https://travel.crowdtest.yandex.ru/)
    - do: Кликнуть по ссылке Помощь из письма
    - assert: >-
        * Произошел переход на страницу поддержки с темой “Когда вернутся деньги
        после возврата билета”
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Отели
type: Главная
description: ''
specs:
  Переход с главной портала на поиск отелей:
    - do: |-
        Открыть главную портала. (no_autotest)
        Перейти в раздел отелей. (Либо по урлу https://travel.yandex.ru/hotels)
    - assert: |-
        * Открыта вкладка "Отели"
        * Есть поля страны, заезда, выезда, кол-ва гостей
    - do: |-
        Ввести в поле поиска страны Москву
        дата заезда - завтра
        дата выезда - послезавтра
        кол-во гостей - 3
        Нажать "Найти"
    - assert: |-
        * Произошел переход внутри портала на выдачу по адресу
        https://travel-test.yandex.ru/hotels/search/......
        в параметрах урла
            * adults=3
            * geoId=213
             * checkinDate и checkoutDate соответствуют выбранным датам на предыдущем шаге.
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница:
  - Главная
  - Выдача
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - automation (iliasova)
  - Blocker
Автор: iliasova
feature: Отели
type: Выдача
description: 'Внешний вид на тачах будет отличаться, но логика работы остается такой же.'
specs:
  Перепоиск номеров через шапку на странице поиска отелей:
    - do: |-
        Перейти на страницу поиска отелей со следующими параметрами
        регион - Екатеринбург (geoid=54)
        дата заезда - первое число следующего месяца
        дата выезда - через три дня после даты заезда
        кол-во гостей - 2
    - assert: >-
        - Открылась страница поиска отелей

        - Внизу под меню отображается форма поиска (в тачах под лого)

        ![image](https://jing.yandex-team.ru/files/iliasova/2022-03-25_21.44.42-ah13c.png)
    - do: Кликнуть по области шапки поиска (шаг только для тачей)
    - assert: >-
        - Шапка с предыдущего шага пропала

        - Появился модал с полями для ввода страны/города/курорта, дат  заезда, выезда, количества гостей

        - В поле региона значение Екатеринбург

        - Заезд - первое число следующего месяца

        - Выезд + 3 дня после даты заезда

        - Количество гостей - 2 взрослый

        ![image](https://jing.yandex-team.ru/files/rifat-k/2019-12-17_15-47-12.png)
    - do: |-
        Изменить в поле заезда дату на завтрашний день
        Выезд на послезавтра
        Количество гостей 1
        Нажать "Найти"
    - assert: >-
        * На месте выдачи появились скелетоны

        * Через 5-10 секунд отобразились карточки отелей

        * Данные в шапке вверху страницы соответствуют данным, введенным на
        предыдущем шаге

manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag:
  - automation (iliasova)
  - Smoke
Автор: iliasova
feature: ЖД
type: Страница заказа
description: >-
  Если на выдаче нет нужного поезда, поискать на соседние даты.

  Если в поезде нет нужного класса, поискать на соседние даты.


  Кейс с покупкой для тестинга, в проде можно пройти шаги 1-6 (до
  подтверждения).


  **Для асессоров**: в тестинге намеренно пропускается шаг оплаты, переход на
  страницу заказа произойдет без ввода данных карты, это нормально.


  **Данные тестовой карты**:

  5100003697253468

  01/20

  090
specs:
  'ЖД: Покупка в купе-переговорную':
    - do: |-
        Перейти на выдачу Москва - Санкт-Петербург через месяц
        Отфильтровать выдачу по Сапсанам
        Для одного из доступных поездов-сапсанов перейти по кнопке покупки
    - assert: >-
        * Открылась страница выбора мест

        * Есть класс Купе-переговорная 1Р

        * Есть бейдж с информацией о том, что цена указана за купе целиком

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-11-15_19.15.54-8xiqa.png)


        Если нет нужного класса, посмотреть другие сапсаны
    - do: Раскрыть класс Купе-переговорная 1Р
    - assert: >-
        * Раскрылась одна схема вагона

        * Для выбора доступен блок мест "Купе-переговорная", остальные места в
        вагоне недоступны для выбора

        * Для класса нет вкладки "Пожелания к местам"

        * Под блоком мест есть указание номеров мест

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-09-30_12.34.31-5kt76.png)

        * В таче схема сразу проскроллена к купе-переговорной
    - do: Выбрать купе-переговорную
    - assert: >-
        * Купе окрасилось в желтый

        * В блоке с информацией о стоимости появилась информация о выбранном
        тарифе - взрослый, 4 места для взрослого и цена

        * Номера мест перечислены через запятую, "места" во множественном числе
    - do: >-
        Поменять пассажиров: 2 взрослых, 1 ребенок от 5 до 10, 1 ребенок до 5
        лет

        Заново выбрать купе-переговорную
    - assert: >-
        * Купе окрасилось в желтый

        * В блоке с информацией о стоимости появилась информация о выбранных
        тарифах - взрослый, взрослый, ребенок 5-10 лет, ребенок до 5 лет

        * Так как купе бронируется целиком, для каждого пассажира передаем все 4 места сразу, это нормально.
        https://jing.yandex-team.ru/files/arhey/2022-02-08T10:59:52Z.0889979.png
    - do: Кликнуть Указать пассажиров
    - assert: >-
        * Произошел переход на страницу ввода данных

        * В блоке для одного из пассажиров с местом перечислено 2 места, для
        двух других пассажиров с местом по 1 месту на пассажира, для пассажира
        без места номера места нет

        * При перечислении нескольких мест используется множественное число -
        "места", для одного места - "место"
    - do: |-
        Заполнить все поля валидными данными
        Кликнуть Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * На схеме выбрано купе-переговорная
        * Распределение мест для пассажиров соответствует предыдущим шагам
    - do: |-
        Кликнуть Ввести карту и оплатить
        Ввести данные тестовой карты из описания
        Кликнуть Оплатить
    - assert: '* Через какое-то время произошел переход на страницу хэппи пейдж'
    - do: Кликнуть по кнопке "Подробнее о заказе"
    - assert: >-
        * Произошел переход на страницу заказа

        * Распределение мест для пассажиров соответствует предыдущим шагам

        * Кнопки Сдать билет есть для каждого пассажира, кроме ребенка без места
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: ''
specs:
  'ЖД: Бронирование двухместного купе целиком':
    - do: |
        Перейти на выдачу Москва - Санкт-Петербург на любую дату
        Найти поезд с вагоном люкс
    - assert: |
        * Открылась страница выбора мест
        * Есть класс Люкс
        * В описании вагона есть информация о том, что цена указана за купе целиком "За все купе (2 места)"

        ![image](https://jing.yandex-team.ru/files/semirka/Screenshot_157.png)
    - do: Выбрать класс Люкс (1М)
    - assert: |
        * Раскрылась схема вагона
        * Каждому купе соответствуют два места
    - do: Выбрать любое купе в Люксе
    - assert: |
        * Выбранное купе окрасилось в желтый
        * Общая цена за купе такая же, как в шаге 3
    - do: Кликнуть Указать пассажиров
    - assert: |
        * Произошел переход на страницу ввода данных
        * Есть форма для ввода данных одного пассажира, с заголовком "Взрослый,
        места 1, 2" - номера мест выбранные
    - do: |
        Заполнить все поля валидными данными
        Кликнуть Проверить заказ и купить
    - assert: |
        * Произошел переход на страницу подтверждения
        * Есть схема с выбранным купе
        * Пассажир указан один, забронированных места - два
    - do: |
        Вернуться на страницу выбора мест
        Выбрать 1 взрослого, 1 ребенка 5-10 лет, 1 ребенка без места
        Выбрать любое купе в Люксе
    - assert: |
        * Нет разбивки по стоимости
        * Указана цена за все купе
        * Цена за все купе на 2 пассажиров немного выше, чем цена на 1 пассажира

manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Создать заказ в купе-переговорную на 2 взрослых, 1 ребенка от 5 до 10, 1
  ребенка до 5 лет

  Для этого:

  - Перейти на выдачу Москва - Санкт-Петербург через месяц

  - Отфильтровать выдачу по Сапсанам

  - Для одного из поездов: 770А, 772А, 774А, 776А перейти по кнопке покупки


  Купить билеты в купе-переговорную. Дойти до страницы полного заказа (на хэппи
  пейдж нажать "Подробнее о заказе)".
specs:
  'Возврат при выкупе купе целиком (дубль 1212)':
    - do: >-
        Для одного из билетов кликнуть по кнопке Сдать билет

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-10-09_12.28.39-3w4c8.png)
    - assert: |-
        * Появилось модальное окно для возврата
        * Есть информация "Можно сдать только все билеты сразу."
        * На указанный при оформлении билетов номер телефона пришел смс-код
    - do: |-
        Ввести код из смс
        Нажать Подтвердить
    - assert: >-
        * Через какое-то время осуществился возврат:

        Появились ссылки на квитанции и чеки у всех билетов (ссылок на чеки
        может не быть, если не успели сформироваться)

        Для всех билетов есть статус рядом с информацией о пассажире "Возврат"
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: |-
  Не актуальный пример.

  Проверка двух фичей:
  * Бронирование в купе целиком
  * Бронирование по кнопке Указать пассажиров, когда нет схемы и требований
specs:
  'ЖД: Бронирование в купе целиком, когда нет схемы и требований':
    - do: >-
        Перейти на вкладку ЖД билеты

        Перейти на выдачу Текстильщики - Заокский на любую дату в пределах 10
        дней от текущей (На выдаче есть поезд с перевозчиком ЦППК если нет,
        поискать на другие даты или выдачи, например, Москва - Калуга, Москва -
        Рязань, Москва-Текстильщики)

        Для любого поезда ЦППК кликнуть по кнопке покупки

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-27_12.48.53-rceuk.png)
    - assert: >-
        * Открылась страница выбора мест

        * Для одного или нескольких классов в поезде нет схемы и требований

        * Для десктопа - есть кнопка Указать пассажиров внутри класса и текст
        "Для этих вагонов нет схем, места выбираются автоматически"

        * Для тача - есть текст "Для этих вагонов нет схем, места выбираются
        автоматически"

        * На классе есть бейдж, что цена указана за все купе

        ![image](https://jing.yandex-team.ru/files/shenfeld/2020-01-27_12.50.09-mkjyn.png)


        **Если нет такого класса, открыть страницу для другого поезда или на
        другую дату**
    - do: Кликнуть по кнопке покупки для этого класса (Указать пассажиров)
    - assert: |-
        * Произошел переход на страницу ввода данных
        * Есть поля ввода для одного пассажира
        * Места не указаны
    - do: |-
        Заполнить все поля валидными данными
        Кликнуть Проверить заказ и купить
    - assert: |-
        * Произошел переход на страницу подтверждения
        * Забронировалось 4 места, пассажир 1
manual: true
Функциональность: Бронь с разными условиями
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Проверяется случай, когда возврат уже в процессе, и происходит ошибка (падает
  ручка информации о заказе - например когда ИМ недоступен).

  Создать заказ на любое направление и кол-во пассажиров. Для этого:

  * Перейти на вкладку ЖД, перейти на любую выдачу (в тестинге - из Москвы)

  * Для любого поезда кликнуть по кнопке покупки

  * Далее следовать по шагам покупки

  * На хэппи пейдж нажать "Подробнее о заказе"


  Для оплаты использовать карту в тестинге:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20


  Для асессоров намеренно пропускается шаг оплаты в тестинге, данные карты
  вводить не нужно.
specs:
  'ЖД: Отображение ошибки, когда во время возврата что-то пошло не так':
    - do: |-
        На странице созданного заказа кликнуть Сдать билет для любого пассажира
        Открыть консоль браузера, вкладка Network
    - assert: '* Появилось модальное окно возврата'
    - do: >-
        Ввести код из смс (если требуется)

        Нажать Подтвердить

        Сразу после нажатия на кнопку, когда возврат уже начался, включить режим
        оффлайн в браузере

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-10-09_13.11.52-wt1br.png)
    - assert: >-
        * На странице появилась ошибка в модальном окне

        ![image](https://jing.yandex-team.ru/files/shenfeld/2019-10-09_13.14.25-kq915.png)
    - do: |-
        Отключить режим оффлайн в браузере
        Кликнуть Перезагрузить страницу
    - assert: |-
        * Открылась страница заказа
        * Возврат в процессе, через какое-то время возврат завершился
manual: true
Функциональность: Действия с заказом
Устройство: Десктоп
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Testing
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Баг воспроизводился, когда отображалось одновременно несколько схем, и в одном
  вагоне было свободно место, которое занято в другом.

  Для прохождения кейса нужно найти поезд, в котором:
  * Есть тип вагонов, в котором >1 вагона (одновременно на странице отображается несколько схем)
  * В одном из вагонов свободно место, которое занято в другом

  Пример:
  ![image](https://jing.yandex-team.ru/files/shenfeld/2019-10-09_13.54.37-wemoq.png)

  Можно посмотреть в Сапсанах, Москва - Питер.
specs:
  'ЖД: Смена мест между вагонами':
    - do: |
        Открыть тип  из подготовки
        Выбрать место в одном вагоне, которое занято во втором вагоне
    - assert: Место окрасилось в желтый цвет
    - do: Выбрать свободное место с другим номером в другом вагоне
    - assert: |
        * Прошлое место снова свободно, не выбрано
        * Новое место окрасилось в желтый
        * Ошибок на странице нет
    - do: Поперекликивать места в раскрытых вагонах
    - assert: '* Места выбираются корректно, ошибок нет'
manual: true
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка ближайших аэропортов для города, у которого есть аэропорты поблизости':
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Екатеринбург
        Куда: Стамбул
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открывается карта, на которой указаны города с аэропортами
        поблизости от Стамбула. Стамбул обозначен красным пином, остальные
        города - синим.
    - do: >-
        Assert: На каждом пине указано расстояние от Стамбула. На некоторых
        пинах указана стоимость полёта в этот город.
    - do: >-
        Assert: Справа также расположен список со всеми аэропортами поблизости.
        Список отсортирован по расстоянию от Стамбула по возрастанию. Для
        направлений с прогретыми ценами указана стоимость полёта на кнопке, для
        остальных кнопка называется просто "Найти".
    - do: Попробовать изменить масштаб карты при помощь колёсика мыши.
    - do: 'Assert: Масштаб карты изменяется корректно.'
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка перехода на выдачу другого города по пинам на карте ближайшего аэропорта:
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Екатеринбург
        Куда: Стамбул
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: 'Assert: Открылась карта ближайших аэропортов'
    - do: Нажать на пин города Александруполис
    - do: >-
        Assert: Открывается страница выдачи для маршрута Екатеринбург -
        Александруполис. В строке поиска указано "Екатеринбург -
        Александруполис" на 5 число следующего месяца для 1 взрослого в классе
        "Эконом".

        **Важно:** Иногда вместо выдачи может открыться карта ближайших
        аэропортов, либо динамика цен (если известны цены на другие дни). Если
        это происходит, попробуйте сдвинуть дату в большую сторону ещё на
        неделю.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов. На карте Александруполис
        выделен красным пином.
    - do: >-
        Вернуться на выдачу Стамбула и проверить стоимость до Александруполиса
        на карте ближайших аэропортов
    - do: >-
        Assert: Если цена до Александруполиса не была прогрета ранее (не была
        известна стоимость на карте ближайших аэропортов) - полученная на выдаче
        стоимость должна отобразиться в пине и в списке справа.
    - do: >-
        Assert: Если цена до Александруполиса уже была прогрета, то прогретая
        цена должна будет измениться на полученную на выдаче стоимость в течение
        2-х минут.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка перехода на выдачу другого города при помощи кнопок из списка на карте аэропортов (прогретая цена):
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Екатеринбург
        Куда: Стамбул
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: 'Assert: Открылась карта ближайших аэропортов'
    - do: >-
        В списке справа нажать на кнопку города с прогретой ценой

        **Важно:** Если прогретой цены в списке нет, можно "прогреть" её по
        одному из направлений. Для этого нужно:

        - Кликнуть по любой кнопке Найти -> попадаем на выдачу (если попали на
        карту - выбрать другой город)

        - Дождаться окончания опроса партнёров

        - Через 5 мин. вернуться на предыдущую выдачу (Екатеринбург-Стамбул)

        - Снова открыть карту ближайших аэропортов -> в этот раз на кнопке
        должна оказаться прогретая цена
    - do: >-
        Assert: Открылась страница выдачи для направления Екатеринбург -
        Выбранный_город. В строке поиска указана корректная информация по
        направлению.
    - do: Нажать на кнопку Аэропорт рядом.
    - do: >-
        Assert: Открылась карта ближайших аэропортов. На карте Выбранный_город
        выделен красным пином.
    - do: >-
        Вернуться на выдачу Стамбула и проверить стоимость до Выбранного_города
        на карте ближайших аэропортов
    - do: >-
        Assert: Старая цена для Выбранного_города должна будет измениться на
        пине и в списке справа на полученную на выдаче стоимость в течение 2-х
        минут.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка перехода на выдачу другого города при помощи кнопок из списка на карте аэропортов (непрогретая цена):
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Екатеринбург
        Куда: Стамбул
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: 'Assert: Открылась карта ближайших аэропортов'
    - do: >-
        В списке справа нажать на кнопку города с непрогретой ценой (где нет
        цены)
    - do: >-
        Assert: Открылась страница выдачи для направления Екатеринбург -
        Выбранный_город. В строке поиска указана корректная информация по
        направлению.

        **Важно:** Иногда вместо выдачи может открыться карта ближайших
        аэропортов, либо динамика цен (если известны цены на другие дни). Если
        это происходит, попробуйте сдвинуть дату в большую сторону ещё на
        неделю.
    - do: Нажать на кнопку Аэропорт рядом.
    - do: >-
        Assert: Открылась карта ближайших аэропортов. На карте Выбранный_город
        выделен красным пином. На пине Стамбула и в списке справа указана
        минимальная стоимость из полученной выдачи для Стамбула.
    - do: >-
        Вернуться на выдачу Стамбула и проверить стоимость до Выбранного_города
        на карте ближайших аэропортов.
    - do: >-
        Assert: Полученная на выдаче для Выбранного_города стоимость должна
        отобразиться в пине и в списке справа.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка корректности расстояний до городов на карте аэропортов:
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Екатеринбург
        Куда: Стамбул
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: 'Assert: Открылась карта ближайших аэропортов'
    - do: >-
        Сравнить расстояние между Стамбулом и несколькими городами на карте с
        результатами запроса в Яндексе
    - do: >-
        Assert: Расстояние, указанное в пине города, и расстояние, полученное в
        результатах Яндекса, не должно отличаться более чем на 15 км.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка карты ближайших аэропортов для городов, у которых нет других аэропортов поблизости':
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Москва
        Куда: Кейптаун
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов. Для Кейптауна не указано
        ни одного аэропорта поблизости. В правой части отобразилось сообщение о
        том, что ближайших аэропортов не найдено.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка карты ближайших аэропортов для городов, у которых много аэропортов поблизости':
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Москва
        Куда: Нью-Йорк
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов. Для Нью-Йорка указано
        более 10 аэропортов поблизости. Все аэропорты указаны в правом списке,
        отсортированные по расстоянию.
    - do: >-
        Assert: Те аэропорты, которые на карте расположены очень близко друг к
        другу, объединяются в одну группу, помеченный цифрой. Цифра обозначает
        количество аэропортов в этой группе.

        При клике по этой группе происходит увеличение масштаба карты, в том
        месте, в котором расположены аэропорты из группы. Группа распадается,
        все аэропорты из группы отображаются по отдельности.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка карты ближайших аэропортов, когда производится поиск до аэропорта города':
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Москва
        Куда: Орли (этот аэропорт расположен в Париже)
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов для Парижа. Все аэропорты,
        находящиеся поблизости от Парижа, отображены на карте.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs: {}
manual: true
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка карты ближайших аэропортов для полёта между городами, находящимися в радиусе друг друга':
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Москва
        Куда: Калуга
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов для Калуги. На карте не
        отмечена Москва.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка на карте ближайших аэропортов, что два города находятся в радиусе друг друга после перехода':
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Санкт-Петербург
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов для Москвы. Калуга
        присутствует на карте.
    - do: 'Перейти на выдачу для Калуги, кликнув на её пин на карте'
    - do: 'Assert: Открывается выдача для Калуги'
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов для Калуги. Москва
        присутствует на карте.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка больших и малых названий на карте ближайших аэропортов:
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Москва
        Куда: Шри-Джаяварденепура-Котте
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. На экране присутствует кнопка
        Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов для
        Шри-Джаяварденепура-Котте. Название сокращается при помощи многоточия в
        списке справа.
    - do: 'Вернуться на выдачу, произвести поиск рейсов из Москвы в Сочи'
    - do: >-
        Assert: Открылась страница выдачи по изменённому направлению. На экране
        присутствует кнопка Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов для Сочи. Название
        корректно отображается на пине и в списке справа.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка больших цен на карте ближайших аэропортов:
    - do: >-
        открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов
        Откуда: Токио
        Куда: Нью-Йорк
        Туда: текущее число, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Лучшая цена превосходит 20000. На
        экране присутствует кнопка Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов. Стоимость перелёта
        полностью помещается в пине и в списке справа.
    - do: 'Перейти на ближайший аэропорт, кликнув на его пин на карте.'
    - do: 'Assert:  Открылась выдача для выбранного аэропорта.'
    - do: Нажать на кнопку Аэропорт рядом
    - do: >-
        Assert: Открылась карта ближайших аэропортов. Стоимость перелёта для
        Токио полностью помещается в пине и в кнопке перехода в списке справа.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка пирога для карты ближайших аэропортов:
    - do: >-
        Открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/


        Заполнить форму поиска авиабилетов:

        Откуда: Екатеринбург

        Куда: Москва

        Туда: 5 число следующего месяца, дату обратно не ставить.

        Пассажиры: 1 взрослый

        Класс: Эконом


        Нажать кнопку “Найти”
    - assert: Открылась страница выдачи. На экране присутствует кнопка Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - assert: Открылась карта ближайших аэропортов.
    - do: Подождать в течение 30 минут.
    - assert: >-
        Над картой появляется картинка с пирогом ("Данные уже устарели"). Её
        можно увидеть, закрыв блок ближайших аэропортов.
manual: true
Функциональность: Пирог
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка корректного изменения размера карты ближайших аэропортов пр изменении размера окна браузера:
    - do: >-
        Открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов:
        Откуда: Екатеринбург
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи. На экране присутствует кнопка Аэропорт рядом.
    - do: Нажать на кнопку Аэропорт рядом
    - assert: Открылась карта ближайших аэропортов.
    - do: Изменить размер окна браузера.
    - assert: >-
        Размер карты ближайших аэропортов корректно изменился вместе с размером
        окна браузера. Страница не зависла.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка сохранения фильтров при переходе из карты ближайших аэропортов:
    - do: >-
        Открыть главную страницу путешествий. **Для асессоров:**
        https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов:
        Откуда: Екатеринбург
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи. На экране присутствует кнопка Аэропорт рядом.
    - do: Применить фильтры в произвольном порядке
    - do: Нажать на кнопку Аэропорт рядом
    - assert: Открылась карта ближайших аэропортов.
    - do: Кликнуть по городу Иваново
    - assert: >-
        Открывается выдача Екатеринбург - Иваново, все применённые фильтры с
        предыдущей выдачи были сброшены.
manual: true
Устройство: Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Главная
description: ''
specs:
  Авиа. Поиск рейсов с разной комбинацией пассажиров:
    - do: >-
        Перейти на главную портала // по умолчанию активирована вкладка
        авиабилетов
            * в поле откуда ввести Екатеринбург
            * куда - Москва
            * дата туда - послезавтра
            * дату обратно не заполняем
            *  в блоке кол-ва пассажиров ничего не меняем
        Нажать "Найти"
    - assert: |-
        Произошел переход на /avia/search/result/...
        В параметрах урла
        adult_seats=1
        children_seats=0
        infant_seats=0
    - do: |-
        Вернуться на главную
        Изменить кол-во пассажиров:
        взрослые - 3
        дети -1
        младенцы - 2
        Нажать "Найти"
    - assert: >-
        Произошел переход на
        https://travel-test.yandex.ru/avia/search/result/...

        В параметрах урла

        adult_seats=3

        children_seats=1

        infant_seats=2
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Главная
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - automation (iliasova)
  - Blocker
Автор: iliasova
feature: Авиа
type: Главная
description: ''
specs:
  'Авиа: проверка рецептов на главной после того, как перешли по рецептам Отелей':
    - do: 'Зайти на портал (https://travel.yandex.ru)'
    - assert: Популярные направления для Авиа присутствуют
    - do: Перейти на Отели
    - do: 'Получить выдачу, кликнув по популярному направлению'
    - do: Пока осуществляется переход - нажать на логотип Путешествий
    - assert: >-
        Вернулись на главную страницу Портала, популярные направления для Авиа
        должны присутствовать.
manual: true
Страница: Главная
Сервис: Авиа
feature: Авиа
type: Главная
description: ''
specs:
  'Авиа: проверка рецептов на главной после авторизации в Яндекс.Паспорте':
    - do: Зайти на главную портала
    - assert: Популярные направления для Авиа присутствуют
    - do: Получить выдачу по произвольному направлению в произвольный день
    - do: 'На экране выдачи: совершить вход в Яндекс.Паспорт'
    - do: Нажать на логотип Путешествий
    - assert: >-
        Вернулись на главную страницу Портала, популярные направления для Авиа
        должны присутствовать.
    - do: Получить выдачу по произвольному направлению в произвольный день
    - do: 'На экране выдачи: разлогиниться из Яндекс.Паспорта'
    - do: Нажать на логотип Путешествий
    - assert: >-
        Вернулись на главную страницу Портала, популярные направления для Авиа
        должны присутствовать.
    - do: Переключиться на ЖД
    - do: Получить выдачу по произвольному направлению в произвольный день
    - do: 'На экране выдачи: совершить вход в Яндекс.Паспорт'
    - do: Нажать на логотип Путешествий
    - assert: >-
        Вернулись на главную страницу Портала, популярные направления для Авиа
        должны присутствовать.
    - do: Снова переключиться на ЖД
    - do: Получить выдачу по произвольному направлению в произвольный день
    - do: 'На экране выдачи: разлогиниться из Яндекс.Паспорта'
    - do: Нажать на логотип Путешествий
    - assert: >-
        Вернулись на главную страницу Портала, популярные направления для Авиа
        должны присутствовать.
    - do: Переключиться на Отели
    - do: Получить выдачу в произвольный город на произвольную дату
    - do: 'На экране выдачи: совершить вход в Яндекс.Паспорт'
    - do: Нажать на логотип Путешествий
    - assert: >-
        Вернулись на главную страницу Портала, популярные направления для Авиа
        должны присутствовать.
    - do: Снова переключиться на Отели
    - do: Активировать чекбокс “Искать отели на Yandex.Travel”
    - do: Получить выдачу в произвольный город на произвольную дату
    - do: 'На экране выдачи: разлогиниться из Яндекс.Паспорта'
    - do: Нажать на логотип Путешествий
    - assert: >-
        Вернулись на главную страницу Портала, популярные направления для Авиа
        должны присутствовать.
manual: true
Страница: Главная
Сервис: Авиа
Окружение: Production
feature: Авиа
type: Выдача
description: ''
specs:
  'Тач: проверка отсутствия кнопки ближайших аэропортов':
    - do: >-
        Открыть главную страницу путешествий на мобильном устройстве. **Для
        асессоров:** https://travel.crowdtest.yandex.ru/
    - do: |-
        Заполнить форму поиска авиабилетов:
        Откуда: Екатеринбург
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи. На экране нет кнопки Аэропорт рядом.
manual: true
Устройство: Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
feature: ЖД
type: Подтверждение
description: >-
  Проверяется правильное отображение сообщения с ошибкой в случае, когда
  происходит возврат на Подтверждение, посредством браузерной кнопки Назад.

  Перейти на вкладку Ж/Д билеты

  Выбрать любое направление, где можно выбрать место. Для примера можно выбрать
  Москва - Санкт-Петербург через неделю.

  Выбрать места для любого количества пассажиров и перейти на следующий шаг,
  нажав на Указать пассажиров.
specs:
  'ЖД: Обработка случая, когда попадаем на страницу подтверждения без создания заказа':
    - do: >-
        На странице Данные пассажиров необходимо заполнить все поля валидными
        данными и нажать на кнопку Проверить заказ и купить
    - assert: Происходит переход на страницу Подтверждение
    - do: >-
        Нажать на Данные пассажиров

        ![image](https://jing.yandex-team.ru/files/rifat-k/2019-11-01_11-53-15-1.png)
    - assert: >-
        Корректный переход на страницу Данные пассажиров, все поля заполнены,
        место в вагоне указано.
    - do: >-
        В окне Данных пассажиров нажать на браузерную кнопку Назад

        ![image](https://jing.yandex-team.ru/files/rifat-k/2019-11-01_12-02-24.png)
    - assert: >-
        Произошел переход на шаг подтверждения

        Задний фон затемнился. Появилось модальное окно с требованием выбрать
        место.

        ![image](https://jing.yandex-team.ru/files/rifat-k/2019-11-01_12-04-14.png)
    - do: Нажать на кнопку Выбрать места заново
    - assert: Переход на страницу Выбор места.
manual: true
Функциональность: Действия на подтверждении
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  **Информация для асессоров: форма оплаты с полями ввода данных карты в
  тестинге намеренно пропускается. Шаги в кейсе, где требуется ввести данные
  карты и нажать кнопку Оплатить, нужно пропустить.**


  Если тестируем тач-версию, кнопки Распечатать на странице не будет, это
  нормально.

  Для тача кнопку для возврата билетов можно найти, кликнув по гамбургеру рядом
  с информацией о пассажире (три точки).



  Например:

  Номер карты: 5100003697253468

  CVN: 090

  Дата: 01/20


  **При оформлении заказа указать действующий номер телефона, тк на него будут
  приходить смс с кодами**

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Предупреждение при возврате билета, что ребенка не пустят в поезд без взрослого':
    - do: >-
        Открыть выдачу Москва - Санкт-Петербург через месяц. Купить билет на 2-х
        взрослых и одного ребенка от 5 до 10 лет. Дойти до хэппи пейдж, нажать
        "Подробнее о заказе"
    - do: Рядом с билетом любого взрослого нажать на кнопку "Сдать билет"
    - assert: |-
        * Появилось модальное окно возврата
        * Есть предупреждение "Восстановить покупку будет нельзя."
    - do: Сдать билет
    - assert: '* Для билета появилась красная надпись “Возврат”'
    - do: Рядом с билетом оставшегося взрослого нажать на кнопку "Сдать билет"
    - assert: >-
        - Появилось модальное окно возврата

        - Есть предупреждение красным цветом "Имейте в виду: если ребёнку не
        исполнилось 10, его не пустят в поезд одного. Восстановить покупку будет
        нельзя."
manual: true
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: ЖД
type: Выбор мест
description: >-
  Если при выборе нет вагона с разными ценами, то следует выбрать другой поезд
  или изменить дату поездки.

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Наличие "от" у цены в описании стоимости в табе типа вагона':
    - do: |
        Открыть выдачу Москва - Санкт-Петербург через неделю
        Нажать на кнопку Выбрать место для любого Сапсана
    - assert: |
        * Открылась страница выбора мест
        * В описании вагонов присутствуют цены на различные типы мест: Х
        у стола, Y обычных, итд.
        * У некоторых цен есть предлог "от" перед ценой (это значит, что в
        данном вагоне, на данный тип мест есть билеты с разной стоимостью)
    - do: Раскрыть класс с припиской "от" у цены
    - assert: |
        * Раскрылась схема вагона/-ов, на которой белыми и зелеными квадратиками
        отображаются свободные места

        * В вагонах данного типа есть свободные места одного типа, но с разной
        стоимостью
    - do: Пройтись по всем типам вагонов в поезде
    - assert: |
        * Если в вагоне есть типы мест с разной стоимостью, то предлог "от" есть
        * Если в вагоне все цены на один тип мест одинаковые, то предлога "от" в
        описании нет

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: ЖД
type: Выдача
description: ''
specs:
  'ЖД: Расширение поисковой выдачи':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск Волгоград - Белорусский вокзал на завтра
    - assert: >-
        * Произошел переход на выдачу

        * Есть текст вверху страницы о том, что поиск осуществился до г. Москва

        * Поезда на выдаче от Волгограда до других вокзалов в Москве (не
        Белорусский)
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Ввод данных
description: |-
  Перейти на вкладку ЖД
  Перейти на выдачу Москва - Екатеринбург на завтра
  Для любого поезда кликнуть по кнопке покупки
  Дойти до шага ввода данных для одного пассажира
specs:
  'ЖД: При невалидном номере бонусной карты поле разворачивается':
    - do: |-
        Раскрыть поле РЖД-бонус
        Ввести номер: 123
        Свернуть поле
        Кликнуть проверить заказ и купить
    - assert: |-
        * Поле РЖД-бонус развернулось
        * Инпунт имеет красную рамку
        * Под инпутом подсказка "В номере карты РЖД Бонус должно быть 13 цифр."
manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Ввод данных
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Подтверждение
description: 'Проверить можно только в проде, потому что в тестинге нет цен на эти рейсы.'
specs:
  'ЖД: Бронирование на поезд внутри СНГ':
    - do: |-
        Открыть вкладку ЖД
        Перейти на выдачу Минск - Гродно
    - assert: '* На выдаче есть кнопки покупки для некоторых или для всех поездов'
    - do: Кликнуть по кнопке покупки
    - assert: >-
        * Произошел переход на страницу выбора мест

        * Все данные о поезде на выдаче соответствуют данным о поезде на
        странице выбора мест
    - do: Оформить заказ на 1 пассажира (дойти до страницы подтверждения)
    - assert: >-
        * Билеты забронировались

        * Все данные на странице подтверждения о поезде и пассажирах
        соответствуют данным на предыдущих шагах

        * Ошибок нет
manual: true
Функциональность: Бронь с разными условиями
Устройство: Десктоп
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение: Production
Автор: shenfeld
feature: ЖД
type: Выдача
description: >-
  **Для асессоров: если кейс проверить нельзя (не наступили следующие сутки во
  Владивостоке) - пропустить кейс.**


  Проверить кейс можно только когда во Владивостоке уже наступили следующие
  сутки.

  Разница с Москвой +7 часов.

  То есть искать нужно после 17 часов по мск.
specs:
  'ЖД: Когда в пункте отправления наступили следующие сутки, поиск не виснет':
    - do: |-
        Перейти на вкладку ЖД
        Перейти на поиск Владивосток - Москва на сегодняшнюю дату
    - assert: >-
        * Открылась страница выдачи

        * Ошибок нет

        * Поиск осуществился на завтрашнюю дату относительно текущего
        местоположения

        * В краткой форме поисковой строки отображается "сегодня"
    - do: >-
        Открыть форму поиска

        Раскрыть календарь

        Выбрать в календаре сегодняшнюю дату относительно текущего
        местоположения

        Нажать Найти
    - assert: |-
        * Открылась страница с ошибкой "Нет рейсов из Владивостока в Москву
        Мы не нашли билетов на это направление.
        Давайте поищем куда-нибудь еще!"
manual: true
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: shenfeld
feature: ЖД
type: Страница заказа
description: >-
  Информация для асессоров: форма оплаты с полями ввода данных карты в тестинге
  намеренно пропускается. Шаги в кейсе, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.


  Для заполнения форм на странице оплаты использовать тестовые карты, подробнее
  здесь: https://wiki.yandex-team.ru/TRUST/testdata/#operaciisbankovskimikartami


  Например:

  Номер карты: 5100003697253468

  CVN: 060

  Дата: 01/20

  НЕ залогиниваться

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Основной флоу бронирования НЕзалогин':
    - do: Открыть выдачу Москва - Калуга через месяц
    - do: >-
        Кликнуть по кнопке “Выбрать место” для поезда со свободными
        платцкартными местами
    - assert: Осуществился переход на страницу выбора мест
    - do: Выбрать любое свободное плацкартное место
    - assert: 'Галка "Постельное белье" стоит, указана стоимость билета'
    - do: >-
        Кликнуть по кнопке перехода на следующий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Указать пассажиров”
    - assert: Открылась страница данных пассажира
    - do: Заполнить все поля валидными данными
    - do: >-
        Кликнуть по кнопке перехода на следующий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ и купить”)
    - assert: Открылась страница подтверждения
    - do: >-
        Проверить что номер поезда, даты, данные пассажира, номер места, сумма
        соответствуют введенным ранее (сумма не округляется)
    - do: >-
        Кликнуть по кнопке перехода на следующий шаг покупки. Кнопка может
        называться по разному, сейчас называется “Ввести карту и оплатить”
    - assert: Открылась страница оплаты заказа
    - do: Оплатить заказ (как- зависит от реализации)
    - assert: >-
        Открылась страница хэппи-пейдж: Вы успешно купили билет на поезд.

        Номер поезда, даты, данные пассажира, номер места, сумма соответствуют
        введенным ранее
    - do: Нажать "Подробнее о заказе"
    - assert: '- Все данные о заказе совпадают с предыдущими шагами'
manual: true
Функциональность: Покупка
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
tlds: ru
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Blocker
Автор: tcheremnykh
feature: ЖД
type: ''
description: >-
  Информация для асессоров: форма оплаты с полями ввода данных карты в тестинге
  намеренно пропускается. Шаги в кейсе, где требуется ввести данные карты и
  нажать кнопку Оплатить, нужно пропустить.


  Для заполнения форм на странице оплаты использовать тестовые карты, подробнее
  здесь: https://wiki.yandex-team.ru/TRUST/testdata/#operaciisbankovskimikartami


  Например:

  Номер карты: 5100003697253468

  CVN: 060

  Дата: 01/20

  Залогиниться под тестовым аккаунтом

  Создать взрослого пассажира с валидными данными

  Перейти на главную сервиса

  Перейти на вкладку Ж/Д билеты
specs:
  'ЖД: Основной флоу бронирования залогин':
    - do: Открыть выдачу Москва - Калуга через месяц
    - do: >-
        Кликнуть по кнопке “Выбрать место” для поезда со свободными
        платцкартными местами
    - assert: Осуществился переход на страницу выбора мест
    - do: Выбрать любое свободное плацкартное место
    - assert: 'Галка "Постельное белье" стоит, указана стоимость билета'
    - do: >-
        Кликнуть по кнопке перехода на следующий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Указать пассажиров”
    - assert: Открылась страница данных пассажира
    - do: Выбрать из интентов пассажира из ЗКП
    - assert: 'Поля заполнились данными, ошибок валидации нет'
    - do: >-
        Кликнуть по кнопке перехода на следующий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Проверить заказ и купить”)
    - assert: Открылась страница подтверждения
    - do: >-
        Проверить что номер поезда, даты, данные пассажира, номер места, сумма
        соответствуют введенным ранее
    - do: >-
        Кликнуть по кнопке перехода на следущий шаг покупки. (Кнопка может
        называться по разному, сейчас называется “Ввести карту и оплатить”
    - assert: Открылась страница оплаты заказа
    - do: Оплатить заказ (как- зависит от реализации)
    - assert: >-
        Открылась страница хэппи-пейдж: Вы успешно купили билет на поезд.

        Номер поезда, даты, данные пассажира, номер места, сумма соответствуют
        введенным ранее
manual: true
Устройство:
  - Десктоп
  - Тач
tlds: ru
Сервис: ЖД
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag: Blocker
Автор: tcheremnykh
feature: Авиа
type: ''
description: >-
    Как попасть на страницу бронирования аэрофлота:


    **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
    бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
    и проверять кейс в таче.**


    * В поиске авиа поискать по направлению, по которому летает аэрофлот
    (например, Москва - Екатеринбург, или направление, указанное в кейсе).

    * Выбрать в фильтре по авиакомпаниям Аэрофлот

    * Кликнуть по сниппету с предложением Я.Путешествий (где есть приписка Продает
    авиакомпания).

    * На открывшейся странице кликнуть по кнопке Купить для Я.Путешествий. //
    произойдет переход на travel-test

    ![image](https://jing.yandex-team.ru/files/gouken67/aeroflot_to_travel.png)

    * **У Асессоров откроется travel.crowdtest** - должна открыться страница
    бронирования с формой ввода данных пассажиров


    При релизном смоуке:

    В тестинге продажа Авиа не всегда работает стабильно, если в релизе нет
    изменений в продаже и нет особых подозрений, то допустимо проверить уже в
    проде, что заказы появляются в админке.

    Залогиниться под тестовым аккаунтом

    Создать взрослого пассажира с валидными данными
    **Важно:** Если  в релизе были изменения по логам редиректа - посмотреть в престейбле логи тоже
specs:
  BOY основной флоу бронирования залогин + логи редиректа:
    - do: Выполнить переход как описано в Description.
    - assert: '1) Переход сработал, открылась страница бронирования'
    - do: Подставить данные пассажира из интента ЗКП
    - assert: Все поля заполнились корректно
    - do: Кликнуть по кнопке "Оплатить"
    - assert: 1)Открылась форма для оплаты
    - do: >-
        Заполнить форму Карта для тестовой оплаты тестовой брони: 4111 1111 1111
        1111 Месяц год: 12/24 CVV: 123

        Если получим ошибку - повторить с 5555 5555 5555 5599 и теми же данными.
    - do: Нажать кнопку оплатить
    - assert: 1)Оплата прошла
    - do: >-
        После спинера, в этом же окне появилась страница воода 3ds, ввести
        12345678 нажать submit
    - assert: >-
        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-24_12-07-00.png
    - do: В этом же окне появилась страница аэрофлота с информацией об оплате
    - assert: >-
        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-24_12-07-42.png
    - do: После успешной оплаты произошёл переход на страницу хэппи пейдж
    - assert: |-
        В шапке информация о том что заказ успешно забронирован
        Есть номер для регистрации на рейс
        Данные о перелёте совпадают с данным со страницы ввода данных пассажиров
        Контактные данные верные
    - do: Нажать Подробнее о заказе
    - assert: >-
        Произошел переход на страницу заказа

        Наверху страницы есть ссылка "Билеты и бронирования"

        Данные о перелёте, багаже, ручной клади совпадают с данным со страницы
        ввода данных пассажиров

        Данные о пассажирах верные

        Цена верная

        Контактные данные верные
    - do: |-
        Перейти по ссылке https://deploy.yandex-team.ru/stages/travel-frontend-portal-testing/logs
        В поле Search parameters ввести message = "AVIA_REDIRECT";
        Кликнуть по кнопке Search
    - assert: Отобразились логи AVIA_REDIRECT и AVIA_REDIRECT_SHOW
    - do: |-
        Среди логов AVIA_REDIRECT отыскать свой:
        - На десктопе: посмотреть свой yandexuid в куках (F12, затем Application), затем найти последний лог с таким же yandexuid
        - На таче: Просто найти подходящий по времени и направлению
    - assert: Нужный лог присутствует в начале поиска логов
    - do: Проверить данные, которые содержит лог
    - assert: |-
        Следующие поля должны быть заполнены соответствующим образом:
        * marker - число-буквенный код с разделителем '-'
        * show_id - 'число.число.0'
        * userip - совпадает с тем, что указано на ip.yandex.ru
        * yandexuid - на десктопе - совпадает с тем, что в куках, на тачах - непустой
        * billing_order_id - число
        * billing_client_id - число
        * national_version - 'ru'
        * original_price - число, совпадает с ценой варианта, по которому совершили редирект
        * price_cpa - число, не равно 0
        * pp - 502 для десктопа, 508 для тачей
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - Smoke
  - Blocker
feature: Записная книжка
type: Пассажиры
description: >-
  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)

  Залогинены, находимся на главной.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Проверка валидации полей формы добавления пассажира (позитивные тесты):
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)
    - do: >-
        Нажать кнопку Добавить

        ![image](https://jing.yandex-team.ru/files/iliasova/2019-11-24_12.33.51-wcyzg.png)
    - assert: |-
        * Открылась форма ввода данных
        * Страница за формой затемнилась (для десктопа)
    - do: Раскрыть селект выбора гражданства
    - assert: >-
        * Селект раскрылся

        * Страны Россия, Украина, Беларусь, Казахстан находятся сверху над
        чертой
    - do: 'Выбрать любое гражданство, кроме Российского'
    - assert: |-
        * В поле документ автоматически подставился “Другой документ”
        * Появился инпут для ввода срока действия документа
    - do: Раскрыть селект документа
    - assert: Среди значений только "Другой документ".
    - do: >-
        Заполнить дату рождения валидным значением (например, 01.01.1992)

        Выбрать любой пол

        В поле серии и номера ввести любую комбинацию из латинских, русских букв
        и чисел. Например, XIАБ123

        Срок действия документа заполнить будущей датой

        Нажать Сохранить
    - assert: |-
        Форма добавления пассажира закрылась
        На странице появился новый пассажир "Безымянный"
        Др, пол, гражданство и данные документа совпадают с данными при создании
        https://jing.yandex-team.ru/files/iliasova/2019-12-01_13.37.48-5hp68.png
    - do: |-
        Нажать кнопку добавления нового пассажира (см. скрин из п.2)
        В форме изменить гражданство на российское
        Раскрыть селект документа
    - assert: |-
        Селект раскрылся, есть документы:
        * Паспорт гражданина РФ
        * Заграничный паспорт гражданина РФ
        * Свидетельство о рождении
        * Военный билет
        * Паспорт моряка
    - do: |-
        Выбрать Паспорт гражданина РФ
        Заполнить дату рождения валидным значением (например, 01.01.1992)
        Выбрать любой пол
        Заполнить поле серии и номера документа 10 цифрами без пробелов
        Нажать Сохранить
    - assert: |-
        Форма добавления пассажира закрылась
        На странице появился новый пассажир “Безымянный”
        Др, пол, гражданство и данные документа совпадают с данными при создании
    - do: |-
        Нажать кнопку Редактировать на ранее созданном документе
        https://jing.yandex-team.ru/files/iliasova/2019-12-01_14.24.30-nfqh6.png
    - assert: |-
        Открылась форма документа
        Отображаются значения, введенные на 8 шаге
    - do: |-
        Заполнить поля Фамилия Имя Отчество кириллицей
        Нажать Сохранить
    - assert: |-
        * Форма закрылась
        * На странице пассажира отобразились введенные ранее ФИО
        * Остальные значения остались без изменений
        https://jing.yandex-team.ru/files/iliasova/2019-12-01_14.29.57-s91a8.png
    - do: >-
        Повторить п.7 и 8 для оставшихся документов в селекте по след. правилам
        для серии и номера документа:

        загранпаспорт - 9 цифр без пробелов

        свидетельство о рождении - римские цифры (вводить латинскими буквами), русские буквы и шесть цифр.
        Без пробелов и тире. Например XIАБ123456

        военный билет - две русские буквы и семь цифр. Без пробелов и тире
        (также заполнять поля ФИ кириллицей)

        паспорт моряка - латинские буквы и семь цифр. Без пробелов. Например,
        XX1234567 (также заполнять поля ФИ кириллицей)
    - assert: >-
        * ОР соответствует описанному в п.8

        * При выборе загранпаспорта появляется поле срока документа
        (необязательное к заполнению), при выборе других документов из селекта
        это поле исчезает.
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение: Production
Автор: iliasova
feature: Записная книжка
type: Пассажиры
description: >-
  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)
specs:
  Создание пассажира с ИНН:
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Нажать кнопку Добавить
    - assert: |-
        * Открылась форма добавления пассажира
        * Есть поле для ИНН )
        https://jing.yandex-team.ru/files/ea-timofeev/mTeRW7EuW4.png
    - do: >-
        Выбрать российское гражданство

        Выбрать любой документ

        Заполнить поля др, пол, серии и номера валидными значениями

        Заполнить ИНН 10 числами, 1 латинским символом, 1 символом кириллицы
        (без пробелов)

        Нажать Сохранить
    - assert: >-
        У поля ИНН появилась красная обводка и попап с текстом "Введите 12 цифр
        без пробелов"
    - do: |-
        Ввести в поле ИНН 13 цифр
        Нажать Сохранить
    - assert: Результат не изменился
    - do: |-
        Стереть один символ из поля ИНН, чтобы осталось ровно 12 цифр
        Нажать Сохранить
    - assert: >-
        * Форма добавления пассажира закрылась

        * На странице появился новый пассажир

        * В блоке данных пассажира отображается ИНН, введенный на предыдущем
        шаге

        https://jing.yandex-team.ru/files/iliasova/2019-12-01_15.55.32-7417c.png
    - do: |-
        Кликнуть на кнопке добавления пассажира
        На форме выбрать гражданство нероссийское
    - assert: |-
        * В форме добавился инпут срока действия документа
        * Поле с ИНН не изменило местоположение
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение: Production
Tag: Blocker
Автор: iliasova
feature: Записная книжка
type: Пассажиры
description: >-
  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.


  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)
specs:
  Редактирование ИНН:
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)

        Найти любого пассажира, у которого заполнен ИНН (если нет, то создать по
        кейсу [974](https://testpalm.yandex-team.ru/testcase/travel-974))

        Кликнуть по значку редактирования пассажира

        https://jing.yandex-team.ru/files/iliasova/2019-12-01_16.05.41-e7g7q.png
    - assert: >-
        * Открылась форма редактирования пассажира

        * На форме есть поле ИНН

        * Значение ИНН совпадает с тем, что отображается на странице пассажира

        *
        https://jing.yandex-team.ru/files/ea-timofeev/OpFf0DdVCi.png
    - do: |-
        Добавить к значению ИНН любой символ
        Нажать Сохранить
    - assert: >-
        У поля ИНН появилась красная обводка и попап с сообщением "Введите 12
        цифр без пробелов"
    - do: |-
        Изменить значение ИНН на любое валидное (12 цифр без пробелов)
        Нажать Сохранить
    - assert: |-
        * Форма закрылась
        * На странице пассажира отображается новое значение ИНН
        * Остальные значения остались без изменений
    - do: |-
        Кликнуть по значку редактирования пассажира
        Стереть данные в поле ИНН
        Нажать Сохранить
    - assert: |-
        * Форма закрылась
        * На странице пассажира исчезла подпись ИНН со значением
        * Остальные данные остались без изменений
        https://jing.yandex-team.ru/files/iliasova/2019-12-01_16.12.46-8x9gv.png
    - do: Кликнуть по значку редактирования пассажира
    - assert: |-
        * Открылась форма редактирования
        * Поле ИНН пустое
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение: Production
Tag: Blocker
Автор: iliasova
feature: Записная книжка
type: Пассажиры
description: >-
  При тестировании тач-версии внешний вид формы и элементов может отличаться от
  скринов в кейсе, но ОР должен совпадать.


  **Для Асессоров: *Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png)

  Для прохождения кейса нужно быть залогиненным.

  Для прода можно использовать свой личный аккаунт.

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678


  Важно, чтобы в записной книжке было как минимум два пассажира с разными
  псевдонимами.

  Псевдонимы должны быть двух видов: отличны от имен (например, "Дочь", "Ленка")
  и не отличны ("Иванов Петр")
specs:
  Поиск пассажиров в записной книжке (дубль для passengers):
    - do: >-
        Зайти в Мои поездки (иконка находится на главной в правом верхнем
        углу)

        Перейти во вкладку “Пассажиры”  (на тачах Пассажиры находятся внутри бургера)
    - assert: |-
        * Слева на странице есть список пассажиров
        * Над списком отображается поисковая строка
        * В строке есть значок лупы и подсказка "Например, псевдоним пассажира"
        https://jing.yandex-team.ru/files/iliasova/2019-12-02_00.32.42-21m7u.png
    - do: Ввести в поисковую строку псевдоним любого пассажира из списка
    - assert: >-
        В списке пассажиров отображается только пассажиры с соответствующим
        псевдонимом
    - do: >-
        Ввести в поиск любую комбинацию символов, не соответствующую ни одному
        псевдониму
    - assert: Вместо списка пассажиров отображается сообщение "Пассажиры не найдены"
manual: true
Функциональность: Действия в записной книжке
Устройство:
  - Десктоп
  - Тач
Страница: Пассажиры
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение: Production
Tag: Blocker
Автор: iliasova
feature: Авиа
type: Страница покупки
description: >-
  Все скрины в кейсе соответствуют десктопной версии. В тач-версии отображение
  отличается, но суть меняться не должна.

  Отсутствие логотипа Авиакомпании - не баг!
  **Важно:** Если  в релизе были изменения по логам редиректа - посмотреть в престейбле этот кейс тоже
specs:
  'Авиа: Редирект на сайт партнёра (НЕ Аэрофлот) + логи редиректа':
    - do: Перейти на вкладку авиабилеты
    - do: |-
        На вкладке авиа ввести в поля
        * откуда - Екатеринбург
        * куда - Москва
        * туда - через неделю
        * обратно не заполняем
        Нажать на кнопку "Найти"
    - assert: '* Произошел переход на страницу выдачи'
    -   do: |-
            Дописать utm-метки: добавить к урлу в конце *&utm_campaign=test1&utm_content=test2&utm_medium=test3&utm_source=test4&utm_term=test5*
            Перейти по новому урлу
    - assert: Выдача обновилась, указанные utm-метки отображаются в куках
    - do: |-
        Применить фильтрацию по партнёру = "City Travel"
        В выдаче нажать на карточку любого рейса
        https://jing.yandex-team.ru/files/gouken67/Кликнуть%20в%20сниппет.png
    - assert: Произошел переход в страницу покупки выбранного рейса
    - do: |-
        Нажать на кнопку Купить у названия City Travel
        - В десктопе в блоке справа
        https://jing.yandex-team.ru/files/rifat-k/2019-12-04_15-08-40.png
        - В таче в блоке внизу
        https://jing.yandex-team.ru/files/shenfeld/2021-02-09_10.13.59-jlb00.png
    - assert: Произошел переход на сайт партнера в новой вкладке. Стоимость на сайте партнёра совпадает со стоимостью, которая была указана на странице покупки.
    - do: |-
          Перейти по ссылке https://deploy.yandex-team.ru/stages/travel-frontend-portal-testing/logs
          В поле Search parameters ввести message = "AVIA_REDIRECT";
          Кликнуть по кнопке Search
    - assert: Отобразились логи AVIA_REDIRECT и AVIA_REDIRECT_SHOW
    - do: |-
          Среди логов AVIA_REDIRECT отыскать свой:
          - На десктопе: посмотреть свой yandexuid в куках (F12, затем Application), затем найти последний лог с таким же yandexuid
          - На таче: Просто найти подходящий по времени и направлению
    - assert: Нужный лог присутствует в начале поиска логов
    - do: Проверить данные, которые содержит лог
    - assert: |-
          Следующие поля должны быть заполнены соответствующим образом:
          * marker - число-буквенный код с разделителем '-'
          * show_id - 'число.число.0'
          * utm-метки - те значения, которые мы ввели ранее
          * userip - совпадает с тем, что указано на ip.yandex.ru
          * yandexuid - на десктопе - совпадает с тем, что в куках, на тачах - непустой
          * billing_order_id - число
          * billing_client_id - число
          * national_version - 'ru'
          * original_price - число, совпадает с ценой варианта, по которому совершили редирект
          * price - число, не равно 0
          * pp - 502 для десктопа, 508 для тачей

manual: true
Функциональность: Переход к партнёру
Устройство:
  - Десктоп
  - Тач
Страница: Страница покупки
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag: Smoke
feature: Отели
type: Главная
description: >-
  Все скрины в кейсе соответствуют десктопной версии. В тач-версии отображение
  отличается, но суть меняться не должна.
specs:
  Переход с рецептов отелей на страницу города:
    - do: 'Перейти на главную, в раздел Отели'
    - assert: >-
        Под блоком рекламы и преимуществ сервиса есть блок Поиск отелей и других
        вариантов размещения

        https://jing.yandex-team.ru/files/iliasova/2021-03-01_19.51.25-e0vu6.png
    - do: 'Нажать на любую карточку, запомнив указанное название города'
    - assert: |-
        * В новой вкладке открылась страница города:
        https://jing.yandex-team.ru/files/papulova/jYFCkH0IG1.png
        * В форме поиска указано название того города, который был на карточке
manual: true
Функциональность: Рецепты
Устройство:
  - Десктоп
  - Тач
Страница: Главная
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag:
  - hotels-api
  - Smoke
feature: Записная книжка
type: Билеты и бронирования
description: >-
  **Для асессоров:**

  Для работы с записной книжкой требуется быть авторизованным. Можно
  использовать учетную запись: vladlen@yandex.ru password: v12345678


  Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с кнопкой Войти) >
  кликнуть Войдите в аккаунт > Авторизоваться тестовым аккаунтом (ссылка ведет
  на passport-test.yandex.ru). Важно чтобы это был именно тестовый аккаунт, т.к.
  через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)
specs:
  Фильтры по заказам:
    - do: >-
        Залогиненным зайти в личный кабинет (иконка ЛК находится на главной в
        правом верхнем углу)
    - assert: >-
        * На странице есть вкладка "Билеты и бронирования" и "Пассажиры"

        *  **Для Десктопа** слева в колонке есть переключатель между: Все
        заказы, Авиабилеты, Ж/Д билеты и Отели. Ниже, под горизонтальным
        разделителем, находится переключатель между Выполненные и В обработке

        https://jing.yandex-team.ru/files/rifat-k/2019-12-04_16-26-31.png

        *  **Для тача** справа есть кнопка для переключения между: Все заказы,
        Авиабилеты, Ж/Д билеты и Отели. Под горизонтальным разделителем
        находятся переключатели между Выполненные и В обработке. Ниже
        располагается желтая кнопка Применить

        https://jing.yandex-team.ru/files/rifat-k/IMG_9758.PNG
    - do: >-
        **В десктопе** поочередно нажимать на фильтры Все заказы, Авиабилеты,
        Ж/Д билеты и Отели

        **В таче** поочередно нажимать на фильтры Все заказы, Авиабилеты, Ж/Д
        билеты и Отели и нажимать на Применить
    - assert: >-
        При выборе соответствующего пункта меняется заголовок, а под ним заказы
        только данного типа
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Билеты и бронирования
Сервис: Записная книжка
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
feature: Авиа
type: Выдача
description: ''
specs:
  Сортировка по времени отправления:
    - do: открыть главную страницу путешествий, вкладка Авиабилеты
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: Текущее число, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: 'Assert: Открылась страница выдачи'
    - do: Нажать на кнопку с сортировками.
    - do: Выбрать сортировку “По времени отправления”. Для тача указать порядок "по возрастанию"
    - do: >-
        Assert: Варианты отсортированы по времени отправления от самого раннего к
        более позднему. В выдаче только те рейсы, до времени отправления которых не
        меньше часа
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка динамики цен со страницы выдачи':
    - do: открыть главную страницу путешествий, вкладка Авиабилеты
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи
    - do: |-
        Проскролить выдачу до блока “Динамика цен”
        Нажать на кнопку “Смотреть весь календарь”
        https://jing.yandex-team.ru/files/kuklina/2022-04-08_21-48-18.png
    - assert: >-
        Общий фон страницы затемнился.
        По центру страницы появилось модальное окно динамики цены.
        1) Выбрана таблица цен
        2) Есть фильтры "Без пересадок", “С Багажом”, “Пересадки”, “Время”
        3) Есть переключатель на График цен
        Отображается строка в виде кнопок, где:
        * Выбран день вылета, кнопка жёлтого цвета
        * Автоматически происходит опрос партнёров (если изначально нет цен на
        какие-то даты) для +- 3 дня от выбранной даты - отображаются лоадеры на
        кнопках
        * Дни, для которых цена известна, содержат ету цену в кнопке. Дни, для которых неизвестна -
        содержат либо примерную цену, либо иконку лупы.

        Screen:
          https://jing.yandex-team.ru/files/gouken67/983_2.png
    - do: >-
        Выбрать день, для которого нет цены. Нажать на кнопку этого дня.
        (При необходимости можно листать календарь боковыми кнопками-стрелочками.)
    - assert: >-
        Запустился опрос партнёров. На кнопке появился лоадер.
        После опроса лоадер исчезает, на кнопке указана цена.
    - do: Нажать ещё раз на эту кнопку
    - assert: Открылась страница выдачи. Варианты для указанного направления. Дата соответствует выбранной в динамике.
    - do: |
        Снова нажать на кнопку “Смотреть весь календарь” Динамики цен
        Перейти на График цен
    - assert: |
        Отображается график в виде гистограммы, где:
        1) Выбран день вылета, столбец жёлтого цвета
        2) Автоматически происходит опрос партнёров (если изначально нет цен на
        какие-то даты) для +- 3 дня от выбранной даты - отображаются лоадеры на
        столбиках
        3) Дни, для которых цена известна, светло серого цвета, под столбцами
        указана цена. Дни, для которых цена не известна, - в полосочку, под
        столбцами - кнопка "Найти"
        4) Есть ватерлиния - пунктирная линия, построенная относительно
        выбранного столбца
        Screen:
        https://jing.yandex-team.ru/files/tcheremnykh/2020-01-28_16-30-08.png
    - do: Выбрать день, для которого нет цены. Нажать на столбик этого дня.
    - assert: >-
        Запустился опрос партнёров. На столбике появился лоадер. Высота
        столбика меняется в зависимости от минимальной полученной цены. После
        опроса лоадер исчезает, столбик остаётся серым, под ним указана цена.
    - do: Нажать ещё раз на этот столбик
    - assert: Прошлый столбик стал серым, выбранный столбик стал жёлтым
    - do: Выбрать другой день и нажать на стоимость под столбиком
    - assert: >-
        Открылась страница выдачи. Варианты для указанного направления.
        Дата соответствует выбранной в динамике.
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка сортировки по времени в пути:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
    - do: Нажать кнопку "Найти"
    - do: 'Assert: Открылась страница выдачи.'
    - do: Нажать на кнопку с сортировками.
    - do: 'Assert: Блок раскрылся. Выбранная сортировка выделена желтым фоном.'
    - do: 'Выбрать сортировку "По времени в пути", порядок "По возрастанию"'
    - do: >-
        Assert: Желтый фон у пункта "Сначала рекомендуемые" пропал, и появился у
        пункта "По времени в пути". Блок с сортировками свернулся. На кнопке
        указано “по времени в пути”
    - do: >-
        Assert: Варианты отсортированы по времени в пути от меньшего к большему.
        Если время в пути совпадает, то выше вариант с наименьшей ценой, если
        цена совпадает, то выше вариант с наименьшим временем вылета.
    - do: Поменять порядок на "По убыванию"
    - do: 'Assert: Варианты отсортированы по времени в пути от большего к меньшему.'
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка фильтра пересадок "Не более одной":
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Есть варианты с 2 и более
        пересадками. В фильтре пересадок ничего не выбрано.
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: Показался блок фильтра. Галочки не на одном из пунктов не
        стоит.Бегунок слайдера длительности пересадки максимально справа.
        Есть серая надпись Сбросить
    - do: Выбрать пункт “Не более одной пересадки”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет кнопки фильтра изменился на
        тёмно-серый. В блоке фильтров появилась кнопка “Сбросить”.
        Надпись Сбросить в фильтре Пересадки стала синей.

        screen: https://jing.yandex-team.ru/files/gouken67/Фильтр%20Пересадки.png
    - do: >-
        Assert: В выдаче отображаются только варианты “Прямой” и с одной
        пересадкой
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: блок фильтра свернулся. Кнопка "Пересадки" выделена тёмно-серым
        цветом.
    - do: |
        Открыть фильтр Пересадки ещё раз
        Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка фильтра пересадок "Без пересадок":
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Есть рейсы с пересадками. В фильтре
        пересадок ничего не выбрано.
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: Показался блок фильтра. Галочки не на одном из пунктов не
        стоит.Бегунок слайдера длительности пересадки максимально справа.
        Есть серая надпись Сбросить
    - do: Выбрать пункт “Без пересадок”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет кнопки фильтра изменился на
        тёмно-серый. Остальные пункты дизейблются. Так же кнопка фильтра Без пересадок стала тёмно-серого
        цвета. В блоке фильтров появилась кнопка “Сбросить”.
        В фильтре Пересадки надпись Сбросить стала синей.
        screen: https://jing.yandex-team.ru/files/gouken67/Без%20пересадок%20%2B%20Сбросить.png
    - do: 'Assert: В выдаче отображаются только варианты “Прямой”'
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: блок фильтра свернулся. Кнопка “Пересадки” выделена тёмно-серым
        цветом.
    - do: |
        Снова открыть фильтр Пересадки
        Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: >-
  “Ночной пересадка считается, если интервал от прилета до вылета пересекается с
  [00:00; 06:00], тут в том числе все пересадки длительностью больше 24 часов
  считаются ночными)”
specs:
  Проверка фильтра пересадок "Без ночных пересадок":
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Лондон
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Есть предложения с ночными
        пересадками. В фильтре пересадок ничего не выбрано.
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: Показался блок фильтра. Галочки не на одном из пунктов не
        стоит.Бегунок слайдера длительности пересадки максимально справа.
        Есть серая надпись Сбросить
    - do: Выбрать пункт “Без ночных пересадок”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет кнопки фильтра изменился на
        тёмно-серым. В блоке фильтров появилась кнопка “Сбросить”.
        В фильтре Пересадки надпись Сбросить стала синей.

        screen: https://jing.yandex-team.ru/files/gouken67/Без%20ночных%20пересадок%20%2B%20Сбросить.png
    - do: 'Assert: В выдаче отображаются только варианты “без ночных пересадок ”'
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: блок фильтра свернулся. Кнопка “Пересадки” выделена тёмно-серым
        цветом.
    - do: |
        Снова открыть фильтр Пересадки
        Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка фильтра пересадок "Без смены аэропорта":
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Лондон
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Есть предложения с пересадками со
        сменой аэропорта. В фильтре пересадок ничего не выбрано.
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: Показался блок фильтра. Галочки не на одном из пунктов не
        стоит.Бегунок слайдера длительности пересадки максимально справа.
        Есть серая надпись Сбросить
    - do: Выбрать пункт “Без смены аэропорта”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет кнопки фильтра изменился на
        тёмно-серый. В блоке фильтров появилась кнопка “Сбросить”.
        В фильтре Пересадки надпись Сбросить стала синей.

        screen: https://jing.yandex-team.ru/files/gouken67/Без%20ночных%20пересадок%20%2B%20Сбросить.png
    - do: 'Assert: В выдаче отображаются только варианты без смены аэропорта'
    - do: Нажать на кнопку фильтра пересадок
    - do: >-
        Assert: блок фильтра свернулся. Кнопка “Пересадки” выделена тёмно-серым
        цветом.
    - do: |
        Снова открыть фильтр Пересадки
        Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка фильтра Аэропорты из города с несколькими аэропортами в город с несколькими аэропортами для направления "Только туда":
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Лондон
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре аэропортов ничего не
        выбрано.
    - do: Нажать на кнопку фильтра аэропортов
    - do: >-
        Assert: Показался блок фильтра для аэропортов туда. Аэропорты
        расположены столбиком друг под другом. Сначала аэропорты “Вылет из
        Москвы”, потом аэропорты “Прибытие в Лондон” и ниже все аэропорты
        возможных пересадок. Галочки не на одном из пунктов не стоит.
    - do: В блоке “Вылет из Москвы” выбрать пункт “Шереметьево”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет кнопки фильтра изменился на
        тёмно-серый. В блоке фильтров появилась кнопка “Сбросить”.
    - do: >-
        Assert: В выдаче отображаются только варианты из аэропорта
        “Шереметьево”.
    - do: В блоке “Прибытие в Лондон” выбрать пункт “Лондон-Сити”
    - do: >-
        Assert: В чек-боксе появилась галочка. Галочка в блоке “Вылет из Москвы”
        также по-прежнему отображается.

        screen: https://jing.yandex-team.ru/files/tcheremnykh/travel-990.png
    - do: >-
        Assert: В выдаче отображаются только варианты из аэропорта “Шереметьево”
        до аэропорта “Лондон-Сити”
    - do: Нажать на кнопку фильтра аэропортов
    - do: >-
        Assert: блок фильтра свернулся. Кнопка “Аэропорты” выделена тёмно-серым
        цветом.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка фильтра Аэропорты из города с одним аэропортом в город с несколькими аэропортами для направления "Только туда":
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Москва
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре аэропортов ничего не
        выбрано.
    - do: Нажать на кнопку фильтра аэропортов
    - do: >-
        Assert: Показался блок фильтра для аэропортов туда. Аэропорты
        расположены столбиком друг под другом. Сначала идут аэропорты 'Вылет из Екатеринбурга', затем -  “Прибытие
        в Москву”. Галочки не на одном из пунктов не стоит.
        Есть серая надпись Сбросить
    - do: В “Прибытие в Москву” выбрать пункт “Домодедово”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет кнопки фильтра изменился на
        тёмно-серый. В блоке фильтров появилась кнопка “Сбросить”.
        В фильтре Пересадки надпись Сбросить стала синей.
    - do: 'Assert: В выдаче отображаются только варианты до аэропорта Домодедово'
    - do: Нажать на кнопку фильтра аэропортов
    - do: >-
        Assert: блок фильтра свернулся. Кнопка “Аэропорты” выделена тёмно-серым
        цветом.
    - do: |
        Снова открыть фильтр Пересадки
        Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка фильтра Аэропорты из города с несколькими аэропортами в город с одним аэропортом для направления "Только туда":
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Лондон
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре аэропортов ничего не
        выбрано.
    - do: Нажать на кнопку фильтра аэропортов
    - do: >-
        Assert: Показался блок фильтра для аэропортов туда. Аэропорты
        расположены столбиком друг под другом. Сначала идут аэропорты “Вылет из
        Лондона”, ниже аэропорты "Прилёт в Екатеринбург". Галочки не на одном из
        пунктов не стоит.
        Есть серая надпись Сбросить
    - do: В блоке “Вылет из Лондона” выбрать пункт “Лондон-сити”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет кнопки фильтра изменился на
        тёмно-серый. В блоке фильтров появилась кнопка “Сбросить”.
        В фильтре Пересадки надпись Сбросить стала синей.
    - do: 'Assert: В выдаче отображаются только варианты из аэропорта “Лондон-сити”'
    - do: Нажать на кнопку фильтра аэропортов
    - do: >-
        Assert: блок фильтра свернулся. Кнопка “Аэропорты” выделена тёмно-серым
        цветом.
    - do: |
        Снова открыть фильтр Пересадки
        Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка фильтра Аэропорты для направления "Туда и обратно"':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Лондон
        Туда: 5 число следующего месяца, Обратно: 20 число следующего месяца
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: >-
        Нажать кнопку “Найти”  (если рейсы не будут найдены, поискать на те же
        даты, но в следующем месяце)
    - do: >-
        Assert: Открылась страница выдачи. В фильтре аэропортов ничего не
        выбрано.
    - do: Нажать на кнопку фильтра аэропортов
    - do: >-
        Assert: Показался блок фильтра для аэропортов разделён на две части,
        слева “ТУДА”:

        Аэропорты расположены столбиком друг под другом. Сначала аэропорты
        “Вылет из Москвы”, потом аэропорты “Прибытие в Лондон”. Галочки не на одном из пунктов не стоит.

        справа “ОБРАТНО”:

        Аэропорты расположены столбиком друг под другом. Сначала аэропорты
        “Вылет из Лондона”, потом аэропорты “Прибытие в Москву”. Галочки не на одном из пунктов не стоит.
        Есть серая надпись Сбросить
    - do: В блоке “Туда” “Вылет из Москвы” выбрать пункт “Шереметьево”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет кнопки фильтра изменился на
        тёмно-серый. В блоке фильтров появилась кнопка “Сбросить”.
        В фильтре Пересадки надпись Сбросить стала синей.
    - do: >-
        Assert: В выдаче отображаются только варианты из аэропорта “Шереметьево”
        (закрыть окно фильтров, если не видно результатов выдачи, но затем снова
        открыть)
    - do: >-
        В блоке “Туда” “Прибытие в Лондон” выбрать пункт “Лондон-Сити” (если
        пункта нет, повторить поиск с теми же числами на следующий месяц)
    - do: >-
        Assert: В чек-боксе появилась галочка. Галочка в блоке “Вылет из Москвы”
        не слетает. Цвет кнопки фильтра по-прежнему тёмно-серый.
    - do: >-
        Assert: В выдаче отображаются только варианты из аэропорта “Шереметьево”
        до аэропорта “Лондон-Сити”
    - do: >-
        В блоке “Обратно” “Вылет из Лондона” выбрать пункт “Гатвик” (если он
        неактивен, повторить все шаги выше, но с поиском на следующие месяцы,
        числа остаются теми же)
    - do: >-
        Assert: В чек-боксе появилась галочка. Галочки в блоке “ТУДА” не
        слетают. Цвет кнопки фильтра по-прежнему тёмно-серый.
    - do: >-
        Assert: В выдаче отображаются только варианты Туда из аэропорта
        “Шереметьево” до аэропорта “Лондон-Сити”. Обратно из аэропорта “Гатвик”
    - do: В блоке “Обратно” “Прибытие в Москву” выбрать пункт “Внуково”
    - do: >-
        Assert: В чек-боксе появилась галочка. Галочки в блоке “ТУДА” и в блоке
        “Обратно” “Вылет из Лондона” не слетают. Цвет кнопки фильтра по-прежнему
        тёмно-серый.
    - do: >-
        Assert: В выдаче отображаются только варианты Туда из аэропорта
        “Шереметьево” до аэропорта “Лондон-Сити”. Обратно из аэропорта “Гатвик”
        до аэропорта “Внуково”
    - do: Нажать на кнопку фильтра аэропортов
    - do: >-
        Assert: блок фильтра свернулся.  Кнопка “Аэропорты” выделена тёмно-серым
        цветом.
    - do: |
        Снова открыть фильтр Пересадки
        Кликнуть по синей надписи Сбросить
    - assert: Значения фильтра сбросились. Надпись стала серой и некликабельной. Выдача вернулась к состоянию до фильтрации.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Выдача
description: 'Значение сортировки сохраняется в куках. 
Если по умолчанию сортировка не "Сначала рекомендуемые", нужно почитить куки'
specs:
  Проверка сортировки по времени отправления:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: Открылась страница выдачи.
    - do: Нажать на кнопку с сортировками.
    - assert: >-
        'Для тача: блок раскрылся. Выбранная сортировка выделена желтым фоном.
        Слева отображается кнопка порядка сортировки. На кнопке отображается
        выбранный порядок.'
    - assert: 'Для десктопа: блок раскрылся. Выбранная сортировка выделена радиокнопкой.'
    - do: Выбрать сортировку “По времени отправления”. 
    - do: >-
        'Для десктопа: кликнуть на кнопку сортировки повторно.
        Для тача: выбрать порядок “По возрастанию”''
    - assert: 'Для тача: блок сортировок свернулся. На кнопке указана “по времени отправления”'
    - assert: 'Для десктопа: блок свернулся. Кнопка Сортировки стала темно-серой.'
    - assert: >-
        'Варианты отсортированы по времени отправления от меньшего к
        большему. Если время вылета совпадает, то выше вариант с наименьшей
        ценой, если цена совпадает, то выше вариант с наименьшим временем в
        пути.'
    - do: 'Для тача: Поменять порядок на “По убыванию”'
    - assert: Варианты отсортированы по времени отправления от большего к меньшему. Блока интересных нет.
    - do: 'Для десктопа: Поменять сортировку на "По времени прибытия"'
    - Assert: Варианты отсортированы по времени прибытия от самого раннего к более позднему.
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: |-
  Съехавшая в таче кнопка отслеживания цен не является багом!

  В таче кнопка "Сбросить" есть всегда внутри блока фильтров.
specs:
  'Авиа: Проверка фильтра пересадок "Без пересадок" (отдельной кнопкой)':
    - do: 'открыть главную страницу Путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. Фильтр “Без пересадок” не активный.
        На кнопке есть информация о минимальной стоимости билета с этим
        фильтром.
    - do: Нажать на кнопку фильтра “Без пересадок”
    - do: >-
        Assert: Цвет фона кнопки стал темно-серым.

        Также у отдельного фильтра пересадок фон стал темно-серым.
        https://jing.yandex-team.ru/files/arhey/2021-11-29T09:03:51Z.3493885.png

        В блоке фильтров (в десктопе) и в шторке фильтров (в таче) у фильтра "Пересадки" появилась галочка у пункта "Без
        пересадок".

        В блоке фильтров появилась кнопка сброса с крестиком (в таче - кнопка сброса расположена внутри шторки тарифов).

        screen:
        https://jing.yandex-team.ru/files/arhey/2021-11-29T09:09:37Z.6dc3dae.png
    - do: >-
        Assert: В выдаче отображаются только варианты без пересадок. Минимальная
        цена билета соответствует указанной на кнопке.
    - do: |-
        В селекте фильтра Пересадки снять чекбокс пересадок
    - do: |-
        Assert: Чекбокс снимается.
        Кнопка "Без пересадок" больше не выделена темно-серым цветом.
        Кнопка селекта "Пересадки" больше не выделена темно-серым цветом.
        (В десктопе) Пропала кнопка сброса.
        (В таче) Стала неактивна ссылка Сбросить в шторке фильтров.
        Варианты в выдаче отображаются и с пересадками, и без.
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: ''
specs:
  'Авиа: Проверка сохранения фильтра при следующем поиске':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: В результате поиска билеты только туда.

        Фильтр “С багажом” не активный.

        На кнопке есть информация о минимальной стоимости билета с этим
        фильтром.
    - do: Нажать на кнопку фильтра “С Багажом”
    - do: |-
        Assert: Цвет фона кнопки стал тёмно-серым.
        В блоке фильтров появилась кнопка “Сбросить”.
    - do: >-
        Assert: В выдаче отображаются только варианты с включённым в стоимость
        багажом
    - do: Поменять в форме поиска число на 15 число следующего месяца
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: В результате поиска билеты только с включённым в стоимость
        багажом. Фильтр “С багажом" активный.
manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка фильтра Время вылета/прилёта для направления "Только туда":
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре “Время вылета/прилёта”
        ничего не выбрано.
    - do: Нажать на кнопку фильтра “Время вылета/прилёта”
    - do: >-
        Assert: Показался блок фильтра. Блок имеет 2 части: "Отправление" и
        "Прибытие". Галочки не на одном из пунктов не стоит.
    - do: Выбрать пункт “День” в части "Отправление"
    - do: >-
        Assert: В чек-боксе "День" появилась галочка. Цвет фона кнопки стал
        желтым.В блоке фильтров появилась кнопка “Сбросить”.

        screen: https://jing.yandex-team.ru/files/tcheremnykh/travel-998.png
    - do: >-
        Assert: В выдаче отображаются только варианты время отправление которых
        не выходит за рамки “12:00-18:00”
    - do: Выбрать пункт “День” в части “Прибытие”
    - do: >-
        Assert: В чек-боксе “День” в части "Прибытие" появилась галочка. В части
        "Отправление" галочка не слетает. В выдаче отображаются только варианты,
        время прибытия и отправления которых не выходит за рамки “12:00-18:00”
    - do: Нажать на кнопку фильтра “Время вылета/прилёта”
    - do: >-
        Assert: блок фильтра свернулся. Кнопка “Время вылета/прилёта” выделена
        желтым цветом.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиа
type: Выдача
description: ''
specs:
  Проверка фильтра Время вылета/прилёта для направления "Туда и обратно":
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Санкт-Петербург
        Туда: 5 число следующего месяца
        Обратно: 10 число следующего месяца
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре “Время вылета/прилёта”
        ничего не выбрано.
    - do: Нажать на кнопку фильтра “Время вылета/прилёта”
    - do: >-
        Assert: Показался блок фильтра. Слева параметры для перелёта “Туда”,
        справа параметры для перелёта “Обратно”. Галочки не на одном из пунктов
        не стоит.
    - do: >-
        Для перелёта “Туда” в части "Отправление" выбрать один из пунктов,
        например, “День”
    - do: >-
        Assert: В чек-боксе появилась галочка. Цвет фона кнопки стал желтым.В
        блоке фильтров появилась кнопка “Сбросить”.
    - do: >-
        Assert: В выдаче отображаются только варианты, у которых время
        отправления рейса туда соответствует выбранному ранее фильтру, например
        для дня - не выходит за рамки “12:00-18:00”
    - do: >-
        Для перелёта “Туда” выбрать любой из пунктов в части “Прибытие”,
        например, также  “День”
    - do: >-
        Assert: В чек-боксе в части “Прибытие” появилась галочка у выбранного
        периода. В части “Отправление” галочка не слетает. В выдаче отображаются
        только варианты, время прибытия и отправления рейса туда соответствует
        выбранным ранее фильтрам прибытия и отправления, например для день+день
        - не выходит за рамки “12:00-18:00” и в прибытии и в отправлении
    - do: >-
        Для перелёта Обратно в части “Отправление” выбрать пункт любой другой
        пункт, например, “Утро”
    - do: >-
        Assert: В выдаче отображаются только варианты, у которых время прибытия
        и отправления рейса туда не выходит за рамки указанно вами периода туда
        (для нашего примера день-  “12:00-18:00”) и время отправления рейса
        обратно не выходит за рамки указанно вами периода ( для нашего примера
        утро - “06:00-12:00”)
    - do: Нажать на кнопку фильтра “Время вылета/прилёта”
    - do: >-
        Assert: блок фильтра свернулся. Кнопка “Время вылета/прилёта” выделена
        желтым цветом.
manual: true
Функциональность: Фильтры и сортировки
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Автобусы
type: Оплата
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular
    Имеет смысл проверить на рейсах с выбором мест и без выбора

    Направления с выбором мест, которые чаще всего есть в тестинге:
    Санкт-Петербург - Великий Новгород.

    Направления без выбора мест:
    Москва - Великий Новгород.

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Автоматическая отмена бронирования при возврате с формы траста:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать".
        - assert: Перешли на шаг заполнения данных пассажира.
        - do: Заполнить все поля валидными данными, указать контактную информацию.
        - dp: Запомнить сумму к оплате, которая указана в корзине.
        - do: Нажать кнопку "Ввести карту и оплатить"
        - assert: Открылась форма траста
        - do: Нажать браузерную кнопку "Назад" и вернуть на на предыдущий шаг.
        - do: Снова нажать "Ввести данные о оплатить"
        - assert: Снова открылась форма траста.

manual: true
Функциональность: Ошибки при оплате
Устройство:
    - Десктоп
    - Тач
Страница: Оплата
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Testing
feature: Автобусы
type: Хлебные крошки
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Пользователь залогинен в сервисе под учеткой: vladlen@yandex.ru password: v12345678
    2. Заполнить форму поиска валидными данными,  например: «Санкт-Петербург - Великий Новгород» на завтра.
    Важно найти рейс, чтобы была схема мест от перевозчика
    3. Нажать кнопку "Найти", а после этого выбрать первый рейс из выдачи
specs:
    Автобусы. Корзина. Выбор тарифа. Покупка детского и взрослого билетов:
        - assert: Перешли на шаг «Данные пассажиров».
        - do: |
              Выбрать из саджестов и интентов любого пассажира с заполненными данными
              Выбрать место на схеме мест
        - do: Нажать "Ввести карту и оплатить"
        - do: |
              Для асессоров: на этапе "Подождите, идет бронирование билетов" нажать браузерную кнопку "Назад"
              https://jing.yandex-team.ru/files/arhey/2022-04-13T10:51:04Z.6286bb4.png
              Не для асессоров: после перехода на шаг ввода карты нажать браузерную кнопку "Назад
        - assert: |
              Вернулись на шаг "Данные пассажиров"
              Введенные пассажирские данные сохранены
              Мест сохранено
        - do: Нажать снова "Ввести карту и оплатить"
        - assert: |
              Для асессоров: перешли на Happy Page
              Не для асессоров: перешли на этап ввода карты
        - do: Не для асессоров - ввести данные и купить билет
        - do: на странице Happy Page нажать кнопку "Распечатать"
        - assert: Проверить, что выбранное на шаге ввода данных мест выкуплено

manual: true
Функциональность: Хлебные крошки
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Хлебные крошки
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Пользователь залогинен в сервисе под учеткой: vladlen@yandex.ru password: v12345678
    2. Заполнить форму поиска валидными данными,  например: «Москва -   Санкт-Петербург» на завтра.
    3. Нажать кнопку "Найти", а после этого выбрать первый рейс из выдачи
specs:
      Автобусы. Хлебные крошки. Сохранение введенных данных на шаге "Данные пассажиров":
        - assert: |
              Перешли на шаг «Данные пассажиров». Шаг подведен красной чертой
              Шаг «Оплата» неактивен и задизейблен
              Шаг «Выбор автобуса» активен
              Для десктопа хлебные крошки выглядят так: https://jing.yandex-team.ru/files/arhey/2021-12-06T08:28:21Z.4199216.png
              Для тача хлебные крошки выглядят так: https://jing.yandex-team.ru/files/arhey/2021-12-06T08:42:20Z.db262d6.png
              Для тача: шаг «Данные пассажиров» по центру экрана
        - do: Ввести валидные пассажирские данные ФИО, дату, пол, документы, контактную информацию
        - do: Перейти на шаг «Выбор автобуса», через хлебные крошки
        - assert: |
              Перешли на выдачу с направлением, датой как указывали в  предусловии
              На странице не «Хлебных крошек»
        - do: Выбрать иной рейс, отличный от выбранного в предусловии и нажать  «Выбрать»
        - assert: |
              Перешли на шаг «Данные пассажира»
              Данные пассажира, введенные ранее сохранились
        - do: Выйти из аакаунта
        - assert: |
              Остались на шаге «Данные пассажира»
              Все данные стерты

manual: true
Функциональность: Хлебные крошки
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ошибки
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»

specs:
    Автобусы. Обработка падения запроса "createOrder" :
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Заполнить все поля валидными данными, указать контактную информацию
        - do: |
              Перейти в devTools на вкладку Network и выбрать опцию Offline
              https://jing.yandex-team.ru/files/arhey/2022-04-15T05:58:03Z.f498ec6.png
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
              Найти на вкладке Network запрос createOrder
              https://jing.yandex-team.ru/files/arhey/2022-04-15T05:59:59Z.a6e6885.png
        - assert: |
              Запрос "упал", выделен красный цветом
              Видим модальное окно
              https://jing.yandex-team.ru/files/arhey/2022-04-15T06:02:07Z.cc6ef9e.png
        - do: Нажать кнопку "К редактированию данных"
        - assert: |
              Проверить, что перешли на шаг "Данные пассажиров"
              Все введенные данные сохранены

manual: true
Функциональность: Ошибки
Устройство:
    - Десктоп
Страница: Данные пассажира
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Ошибки
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»

specs:
    Автобусы. Обработка падения запроса "getOrderState" :
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Заполнить все поля валидными данными, указать контактную информацию
        - do: |
                Перейти в devTools на вкладку Network и выбрать опцию Slow 3G
                https://jing.yandex-team.ru/files/arhey/2022-04-15T05:58:03Z.f498ec6.png
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
              Дождаться появления текста "Подождите, идет бронирование билета"
              Переключить опцию с Slow 3G на Offline
        - do: |
              Найти на вкладке Network запрос getOrderState
              https://jing.yandex-team.ru/files/arhey/2022-04-15T06:07:42Z.b541d6e.png
        - assert: |
              Запрос "упал", выделен красный цветом
              Видим модальное окно
              https://jing.yandex-team.ru/files/arhey/2022-04-15T06:02:07Z.cc6ef9e.png
        - do: Нажать кнопку "К редактированию данных"
        - assert: |
              Проверить, что перешли на шаг "Данные пассажиров"
              Все введенные данные сохранены

manual: true
Функциональность: Ошибки
Устройство:
    - Десктоп
Страница: Данные пассажира
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Ошибки
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»

specs:
    Автобусы. Обработка падения запроса "startPayment" :
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Заполнить все поля валидными данными, указать контактную информацию
        - do: |
              Перейти в devTools на вкладку Network и выбрать опцию Offline
              https://jing.yandex-team.ru/files/arhey/2022-04-15T05:58:03Z.f498ec6.png
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
              Найти на вкладке Network запрос startPayment
              https://jing.yandex-team.ru/files/arhey/2022-04-15T05:59:59Z.a6e6885.png
        - assert: |
              Запрос "упал", выделен красный цветом
              Видим модальное окно
              https://jing.yandex-team.ru/files/arhey/2022-04-15T06:02:07Z.cc6ef9e.png
        - do: Нажать кнопку "К редактированию данных"
        - assert: |
              Проверить, что перешли на шаг "Данные пассажиров"
              Все введенные данные сохранены

manual: true
Функциональность: Ошибки
Устройство:
    - Десктоп
Страница: Форма ввода карты
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Ошибки
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Находимся в ЛК заказа, те. билет на автобус уже куплен
specs:
    Автобусы. Обработка падения запроса "startRefund" :
        - do: Перейти на страницу заказа
        - do: |
              Перейти в devTools на вкладку Network и выбрать опцию Slow 3G
              https://jing.yandex-team.ru/files/arhey/2022-04-15T05:58:03Z.f498ec6.png
        - do: Нажать кнопку "Сдать билет".
        - do: |
              В открывшемся модальном окне подтвердить возврат билетов
              Дождаться появления запроса startRefund
              Очень быстро переключить опцию с Slow 3G на Offline
        - assert: |
              Запрос "упал", выделен красный цветом
              https://jing.yandex-team.ru/files/arhey/2022-04-15T06:27:18Z.54e615f.png
              Видим модальное окно
              https://jing.yandex-team.ru/files/arhey/2022-04-15T06:32:25Z.44cbdd8.png
        - do: |
              Вернуть опцию Slow 3G обратно
              Нажать кнопку "К редактированию данных"
        - assert: |
              Проверить, что перешли на страницу заказа
              Проверить, что заказ возвращен успешно

manual: true
Функциональность: Ошибки
Устройство:
    - Десктоп
Страница: Страница заказа
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Оплата
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Проверка ошибки Authorization_Reject:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Заполнить все поля валидными данными, указать контактную информацию
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
            Не для асессоров: ввести данные тестовой карты, номер, дату окончания
            В качестве CVV кода ввести "268"
            Нажать "Оплатить"
        - assert: |
            Оплата не прошла,  появился текст ошибки "Ваш банк отклонил списание.
            Пожалуйста, обратитесь в банк или используйте другую карту."

manual: true
Функциональность: Ошибки при оплате
Устройство:
    - Десктоп
    - Тач
Страница: Оплата
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Testing
feature: Автобусы
type: Оплата
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Проверка ошибки NotEnoughtFounds:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Заполнить все поля валидными данными, указать контактную информацию
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
              Не для асессоров: ввести данные тестовой карты, номер, дату окончания
              В качестве CVV кода ввести "999"
              Нажать "Оплатить"
        - assert: |
              Оплата не прошла,  появился текст ошибки "На карте недостаточно средств.
              Пополните баланс или используйте другую карту"

manual: true
Функциональность: Ошибки при оплате
Устройство:
    - Десктоп
    - Тач
Страница: Оплата
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Testing
feature: Автобусы
type: Оплата
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Проверка ошибки Other:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Заполнить все поля валидными данными, указать контактную информацию
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
              Не для асессоров: ввести данные тестовой карты, номер, дату окончания
              В качестве CVV кода ввести "218"
              Нажать "Оплатить"
        - assert: |
              Оплата не прошла, появился текст ошибки "Проверьте данные карты,
              пополните баланс или используйте другую карту."

manual: true
Функциональность: Ошибки при оплате
Устройство:
    - Десктоп
    - Тач
Страница: Оплата
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Testing
feature: Автобусы
type: Оплата
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Проверка ошибки Transaction_Not_Permitted:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Заполнить все поля валидными данными, указать контактную информацию
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
              Не для асессоров: ввести данные тестовой карты, номер, дату окончания
              В качестве CVV кода ввести "248"
              Нажать "Оплатить"
        - assert: |
              Оплата не прошла, появился текст ошибки "Этот вид списаний заблокирован для вашей карты.
              Пожалуйста, обратитесь в банк или используйте другую карту."

manual: true
Функциональность: Ошибки при оплате
Устройство:
    - Десктоп
    - Тач
Страница: Оплата
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Testing
feature: Автобусы
type: Ошибки
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы»
    2. Выбрать любое направление из доступных в тестинге
    3. Выбрать доступную дату поездки (обычно в календаре указана стоимость, если есть стоимость, значит и рейсы есть)

specs:
    Автобусы. Ошибка при переходе к вводу данных пассажира :
        - do: |
              Перейти в devTools на вкладку Network и выбрать опцию Slow 3G
              https://jing.yandex-team.ru/files/arhey/2022-04-15T05:58:03Z.f498ec6.png
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - do: Очень быстро переключить опцию с Slow 3G на Offline
        - assert: |
              Видим модальное окно
              https://jing.yandex-team.ru/files/arhey/2022-04-20T11:31:09Z.109d0db.png
        -   do: |
                Вернуть опцию "No Throttling" обратно
                Нажать кнопку "Обновить"
        - assert: |
                Проверить, что перешли на выдачу

manual: true
Функциональность: Ошибки
Устройство:
    - Десктоп
Страница: Данные пассажира
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Страница заказа
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Для воспроизведения сценария нужно приобрести билет на любой автобус на 2х пассажиров
    Перейти на страницу заказа
specs:
    Автобусы. Письмо о частичном возврате билетов:
        - assert: Находимся на странице заказа
        - do: Выбрать одного из пассажиров и сдать 1 билет
        - do: Нажать кнопку "Сдать билет", затем подтвердить возврат билета
        - assert: |
              Возврат прошел
              Через некоторое время пришло письмо на почту
        - do: Перейти в почту
        - assert: |
              В заголовке письма указано "вы сдали билеТ"
              Указано верное направление, номер заказа.
              https://jing.yandex-team.ru/files/arhey/2022-04-18T07:11:00Z.cd678c4.png

              В теле письма есть: направление, фамилия и имя пассажира, сдающего билет, номер заказа,
              время отправления и прибытия, чек возврата

              Сумма к возврату совпадает с указанной в сервисе.
              https://jing.yandex-team.ru/files/arhey/2022-04-18T07:14:18Z.85a1775.png

manual: true
Функциональность: Письма
Устройство:
    - Десктоп
    - Тач
Страница: Страница заказа
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Страница заказа
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Письмо о покупке билета:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: |
              Заполнить все поля валидными данными.
              Указать контактную информацию: email должно быть с домена @yandex-team.ru
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
              Не для асессоров: ввести данные тестовой карты, номер, дату окончания
              Нажать "Оплатить"
        - assert: |
              Оплата прошла, перешли на HappyPage
              Через некоторое время пришло письмо на почту
        - do: Перейти в почту
        - assert: |
              В заголовке письма указаны верно: направление, имя покупателя, номер заказа
              https://jing.yandex-team.ru/files/arhey/2022-04-18T06:32:47Z.53de5f5.png
              В теле письма есть: направление, фамилия и имя пассажира, номер заказа, время отправления и прибытия
              стоимость заказа, чек и билет
              https://jing.yandex-team.ru/files/arhey/2022-04-18T06:35:07Z.94b079a.png

manual: true
Функциональность: Письма
Устройство:
    - Десктоп
    - Тач
Страница: Страница заказа
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Страница заказа
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Для воспроизведения сценария нужно приобрести билет на любой автобус на 2х пассажиров
    Перейти на страницу заказа
specs:
    Автобусы. Письмо о полном возврате билетов:
        - assert: Находимся на странице заказа
        - do: Нажать кнопку "Сдать все билеты", затем подтвердить возврат билетов
        - assert: |
              Возврат прошел
              Через некоторое время пришло письмо на почту
        - do: Перейти в почту
        - assert: |
              В заголовке письма указано "вы сдали билетЫ"
              Указано верное направление, номер заказа
              https://jing.yandex-team.ru/files/arhey/2022-04-18T07:32:40Z.a6e6ef6.png

              В теле письма есть: направление, фамилия и имя обоих пассажиров, сдавших билеты,
              номер заказа, время отправления и прибытия, чек возврата

              Сумма к возврату совпадает с указанной в сервисе.
              https://jing.yandex-team.ru/files/arhey/2022-04-18T07:33:25Z.48fe92e.png

manual: true
Функциональность: Письма
Устройство:
    - Десктоп
    - Тач
Страница: Страница заказа
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Покупка
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular
    
    Перейти на выдачу автобусов
    В кейсе нужно проверить оплату у этих партнеров: 
    - Busfor
    - Unitiki-new

specs: 
  Автобусы. Оплата у  разных партнеров:
    - do: Перейти на выдачу Москва - Великий Новгород
    - do: | 
        Выбрать рейс, у которого в ссылке партнер unitiki-new  https://jing.yandex-team.ru/files/semirka/Screenshot_19-2.png
        В таче можно проверить просто перейдя по ссылке и затем заглянуть в урл https://jing.yandex-team.ru/files/semirka/IMG_20220720_145236.jpg
    - assert: |
        Перешли на страницу ввода данных пассажира
    - do: |
        Выбрать 2 билета взрослый+детский
        Для детского выбрать тариф детский (не для всех есть возможность выбора)
        Заполнить и запомнить данные 
        - Время отправления/прибытия 
        - Кол-во гостей 
        - Данные о гостях 
        - Цена за билеты 
        Перейти на оплату и оплатить(карта для оплаты 5555 5555 5555 4444 12/24 395)       
    - assert: |
        Попали на страницу HP
        Время отправления/прибытия совпадает
        Нажать кнопку "подробнее о заказе"
        Кол-во гостей совпадает
        Данные о гостях совпадают
        Цена за билеты совпадает
    - do: Перейти на выдачу Москва - Воронеж/СПБ/Великий Новгород/Нижний Новгород/Тверь 
    - do: Выбрать рейс, у которого в ссылке партнер busfor - примерный вид https://jing.yandex-team.ru/files/semirka/Screenshot_19-2.png)
    - assert: |
        Перешли на страницу ввода данных пассажира
    - do: |
        Выбрать 2 билета взрослый+дестский
        Для детского выбрать тариф детский (не для всех есть возможность выбора)
        Заполнить и запомнить данные 
        - Время отправления/прибытия 
        - Кол-во гостей 
        - Данные о гостях 
        - Цена за билеты 
        Перейти на оплату и оплатить(карта для оплаты 5555 5555 5555 4444 12/24 395)       
    - assert: |
        Попали на страницу HP
        Время отправления/прибытия совпадает
        Провалиться в заказ
        Кол-во гостей совпадает
        Данные о гостях совпадают
        Цена за билеты совпадает

manual: true
Функциональность: Покупка
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag: Smoke
Автор: semirka
feature: Автобусы
type: Оплата
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Проверка, что в форму Траста передается правильная информация о цене и рейсе:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать".
        - assert: Перешли на шаг заполнения данных пассажира.
        - do: Заполнить все поля валидными данными, указать контактную информацию.
        - dp: Запомнить сумму к оплате, которая указана в корзине.
        - do: Нажать кнопку "Ввести карту и оплатить"
        - assert: |
              Открывается форма траста
              Сумма совпадает с той, что была в корзине (имеют место быть небольшие отклонения не больше 5%)
              В форме траста указано направление и время выезда
              https://jing.yandex-team.ru/files/arhey/2022-04-18T15:28:57Z.eac364f.png

manual: true
Функциональность: Ошибки при оплате
Устройство:
    - Десктоп
    - Тач
Страница: Оплата
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Testing
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по одному из доступных в тестинге направлений на любой доступный день
specs:
    Автобусы. Ввода данных. Проверка передачи данных о рейсе с выдачи:
        - do: Выбрать любой рейс из выдачи и нажать "Выбрать"
        - assert: |
              Перешли на страницу ввода данных пассажира
              Под блоком «Оплата» есть текст
              «Нажимая кнопку перехода к оплате заказа, вы соглашаетесь с условиями покупки электронных билетов на автобусы.
        - do: нажать на ссылку «партнерами»
        - assert: |
              Открывается модальное окно с реквизитами партнера
              Фон затемняется
              В модальном окне указан верный партнер
              В модальном окне указано, что сервис предоставляет ООО Яндекс
        - do: Нажать на «Х»
        - assert: Модальное окно с реквизитами партнера закрылос
        - do: Нажать на ссылку «партнерами»
        - assert: Открывается модальное окно с реквизитами партнера
        - do: Нажать в область затемненного фона
        - assert: Модальное окно с реквизитами партнера закрылось
        - do: Нажать на ссылку «условия покупки электронных билетов на автобус»
        - assert: Перешли на страницу с описанием условий бронирования

manual: true
Функциональность: Ввод данных пассажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Оплата
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Проверка формирования ссылки на страницу оплаты при ошибке:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Заполнить все поля валидными данными, указать контактную информацию
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
              Не для асессоров: ввести данные тестовой карты, номер, дату окончания
              В качестве CVV кода ввести "268"
              Нажать "Оплатить"
        - assert: |
              Оплата не прошла,  появился текст ошибки "Ваш банк отклонил списание.
              Пожалуйста, обратитесь в банк или используйте другую карту."
        - do: Нажать кнопку "К оплате"
        - assert: Проверить, что перешли на шаг "Оплаты"

manual: true
Функциональность: Ошибки при оплате
Устройство:
    - Десктоп
    - Тач
Страница: Оплата
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Testing
feature: Автобусы
type: Оплата
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Проверка формирования ссылки на страницу ввода данных при ошибке:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Заполнить все поля валидными данными, указать контактную информацию
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: |
              Не для асессоров: ввести данные тестовой карты, номер, дату окончания
              В качестве CVV кода ввести "999"
              Нажать "Оплатить"
        - assert: |
              Оплата не прошла, появилась ошибка
        - do: Нажать кнопку "К редактированию данных"
        - assert:
              Проверить, что перешли на шаг "Данные пассажиров"
              Проверить, что введенные данные сохранились

manual: true
Функциональность: Ошибки при оплате
Устройство:
    - Десктоп
    - Тач
Страница: Оплата
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Testing
feature: Автобусы
type: Happy Page
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по одному из доступных в тестинге направлений на любой доступный день
specs:
    Автобусы. Ввода данных. Проверка передачи данных о рейсе с выдачи:
        - do: Выбрать любой рейс из выдачи
        - assert: |
              Запомнить направление, дату, день недели, время отправление, время прибытия, станцию отправления, станцию прибытия
              Проверить, что время в пути вычисляется с учетом часовых поясов
              https://jing.yandex-team.ru/files/arhey/2022-04-13T09:47:55Z.19a07ab.png
        - do: нажать кнопку "Выбрать"
        - assert: |
              Перешли на шаг заполнения данных пассажира
              При загрузке деталей рейса есть скелетоны
        - do: Проверить данные в шапке рейса
        - assert: |
              В шапке закреплен рейс автобуса
              Указано верное направление
              Указана верная дата и день недели
              Указано верное время и точка отправления
              Указано верное время и точка прибытия
              Верно передано время в пути
              Верно передан перевозчик
              Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-13T09:49:12Z.0be7108.png
              Тач: https://jing.yandex-team.ru/files/arhey/2022-04-13T09:50:08Z.460a7dd.png
        - do: |
              Ввести валидные данные пассажира и контактную информацию. Т.е. все необходимое, чтобы купить билет
              Нажать "Ввести карту и оплатить"
              Не для ассесоров: ввести тестовую карту и оплатить билет
        - assert: |
              Оказались на HappyPage
              В шапке закреплен рейс автобуса
              Указано верное направление
              Указана верная дата и день недели
              Указано верное время и точка отправления
              Указано верное время и точка прибытия
              Верно передано время в пути
              Верно передан перевозчик
              Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-13T09:52:49Z.80e4e5a.png
              Тач: https://jing.yandex-team.ru/files/arhey/2022-04-13T09:56:11Z.bcc619d.png
        - do: Нажать кнопку "Подробнее о заказе"
        - assert: |
              Перешли на страницу заказа
              Данные, которые проверяли ранее совпадают и данными на выдаче

manual: true
Функциональность: Передача данных по всем шагам
Устройство:
    - Десктоп
    - Тач
Страница: Happy Page
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Happy Page
description: |
  В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

  Направления, которые чаще всего есть в тестинге:
  Москва - Санкт-Петербург,
  Москва - Воронеж,
  Москва - Богучар

  Перейти Яндекс.Путешествия, вкладка «Автобусы»

specs:
  Автобусы. Проверка работы координат:
    - do: Сформировать поисковую выдачу на направлении "Москва - Великий Новгород" на завтра
    - assert: |
        Пункт отправления или прибытия содержит координаты остановки:
        В десктопе он будет подсвечен синим шрифтом, см. скрин https://jing.yandex-team.ru/files/frangetta/2021-02-18_14.54.45-27wiY.png
        В таче будет выводиться ссылка "Станции на карте", см. скрин https://jing.yandex-team.ru/files/frangetta/2021-02-18_15.38.04-yeNVZ.png
    - do: Кликнуть на подсвеченный пункт прибытия, либо ссылку "Станции на карте" (тач).
    - assert: |
        Открылась модальное окно с картой
        В десктопе модалка выглядит так: https://jing.yandex-team.ru/files/arhey/2021-12-08T14:30:11Z.75971ac.png
        В таче модалка выглядит так: https://jing.yandex-team.ru/files/arhey/2021-12-08T14:30:11Z.75971ac.png
    - do: |
        Закрыть модалку.
        На десктопе: по крестику и по клику мимо окна.
        На таче: переходом назад по ссылке Назад, либо аппаратной кнопкой
    - assert: Модалка закрывается корректно
    - do: Нажать "Выбрать" и перейти на шаг ввода пассажирских данных
    - assert: Обратить внимание, что в блоке "Информация о рейсе" пункт отправления или прибытия содержит координаты остановки
    - do: Кликнуть на подсвеченный пункт прибытия, либо ссылку "Станции на карте" (тач). Проверить, что поведение не изменилось.
    - do: Закрыть модальное окно
    - do: Заполнить данные пассажира валидными данными, указать контактную информацию и нажать "ввести карту и оплатить"
    - assert: |
        Перешли на Happy Page.
        Обратить внимание, что на happy Page пункт отправления или прибытия содержит координаты остановки
    - do: Нажать "Подробнее о заказе" и перейти на страницу заказа
    - assert: Обратить внимание, что на happy Page пункт отправления или прибытия содержит координаты остановки
    - do: Кликнуть на подсвеченный пункт прибытия, либо ссылку "Станции на карте" (тач). Проверить, что открылось модальное окно.
    - do: Кликнуть по ссылке "Построить маршрут до остановки", либо кнопку "Как добраться" (тач)
    - assert: |
        Открывается новое окно яндекс карт
        В пункте "Куда" подставлен адрес остановки, например автовокзал "Великий Новгород"
        На Яндекс.Карте город, в котором лоцируется пользователь, проходящий кейс


manual: true
Функциональность: Координаты остановки
Устройство:
  - Десктоп
  - Тач
Страница: Happy Page
Сервис: Автобусы
Тестирование асессорами: Нет
Tag: Smoke
Автор: arhey
Окружение:
  - Production
  - Testing
feature: Автобусы
type: Схема выбора мест
description: |
    В тестинге автобусов мало данных, если предложенное направление оказалось без тарифа
    следует пропустить кейс.

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Корзина. Выбор тарифа. Покупка детского и взрослого билетов:
        - do: Выбрать любой рейс из выдачи, нажать кнопку "Выбрать"
        - assert: |
              Перешли на шаг заполнения данных пассажира
              В блоке "Места" нет схемы рассадки пассажиров
              Есть приписка "Для этого рейса можно указать только количество пассажиров, а выбрать места вы сможете при посадке в автобус"
              Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-13T07:53:24Z.0a7caef.png
              Тач: https://jing.yandex-team.ru/files/arhey/2022-04-13T07:56:21Z.68b41b0.png
        - do: Нажать "Ввести карту и оплатить"
        - do: Не для асессоров - указать номер тестовой карты и купить билет
        - assert: Заказ оплачен, перешли на HP
        - do: Нажать "Распечатать"
        - assert: В форме билета присутствует случайно выбранное место.

manual: true
Функциональность: Схема выбора мест
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Схема выбора мест
description: |
    В тестинге автобусов мало данных, если предложенное направление оказалось без тарифа
    следует пропустить кейс.

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Санкт-Петербург - Великий Новгород" на любой доступный день
specs:
    Автобусы. Схема выбора мест. Перевозчик присылает места, схему рисуем сами:
        - do: Выбрать первый или второй рейс из выдачи (ИП Кулик В.В), нажать кнопку "Выбрать"
        - assert: |
              Перешли на шаг заполнения данных пассажира
              В блоке "Места" есть схема рассадки пассажиров
              Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-13T08:12:53Z.ec59dc5.png
              Тач: https://jing.yandex-team.ru/files/arhey/2022-04-13T08:13:39Z.7b2114c.png
        - do: |
              Только десктоп: открыть devTools, комбинацией клавиш "Ctrl+Shit+C" и перейти на вкладку Network
              Обновить страницу
              На вкладке найти запрос createRideOffer и кликнуть по нему
              Переключиться на вкладку Preview
              Найти параметр bookParams и раскрыть его
              Обратить внимание, что в plasesMap пустой массив, а в seats перечислены СВОБОДНЫЕ места
              https://jing.yandex-team.ru/files/arhey/2022-04-13T08:04:21Z.8bee9c5.png
        - do: Выбрать любое место, ввести полностью валидные данные пассажира
        - do: Нажать "Ввести карту и оплатить"
        - do: Не для асессоров - указать номер тестовой карты и купить билет
        - assert: Заказ оплачен, перешли на HP
        - do: Нажать "Распечатать"
        - assert: В форме билета присутствует выбранное место на схеме место.

manual: true
Функциональность: Схема выбора мест
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Схема выбора мест
description: |
    В тестинге автобусов мало данных, если предложенное направление оказалось без тарифа
    следует пропустить кейс.

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Санкт-Петербург - Великий Новгород" на любой доступный день
specs:
    Автобусы. Схема выбора мест. Перевозчик схему:
        - do: Выбрать рейс от перевозчика "ООО Фабус", нажать кнопку "Выбрать"
        - assert: |
              Перешли на шаг заполнения данных пассажира
              В блоке "Места" есть схема рассадки пассажиров
              Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-13T08:19:19Z.27c1e70.png
              Тач: https://jing.yandex-team.ru/files/arhey/2022-04-13T08:34:11Z.958cc5a.png
        - do: |
              Только десктоп: открыть devTools, комбинацией клавиш "Ctrl+Shit+C" и перейти на вкладку Network
              Обновить страницу
              На вкладке найти запрос createRideOffer и кликнуть по нему
              Переключиться на вкладку Preview
              Найти параметр bookParams и раскрыть его
              Обратить внимание, что в массив plasesMap не пустой, в нем перечислены СВОБОДНЫЕ места
              https://jing.yandex-team.ru/files/arhey/2022-04-13T08:44:30Z.9916a60.png
        - do: Выбрать любое место, ввести полностью валидные данные пассажира
        - do: Нажать "Ввести карту и оплатить"
        - do: Не для асессоров - указать номер тестовой карты и купить билет
        - assert: Заказ оплачен, перешли на HP
        - do: Нажать "Распечатать"
        - assert: В форме билета присутствует выбранное место на схеме место.

manual: true
Функциональность: Схема выбора мест
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Страница заказа
description: |
    Для воспроизведения сценария нужно приобрести 2 билета на партнера "Басфор"
    Чтобы убедиться, что рейс от Басфор - нужно проверить URL
    https://jing.yandex-team.ru/files/arhey/2022-04-18T07:44:05Z.89fb9d6.png

    Пример направлений:
    "Санкт-Петербург - Великий Новрогод"
    "Ростов-на-Дону - Москва",
    "Москва - Воронеж",

    Перейти на страницу заказа
specs:
    Автобусы. Страница заказов. Общий вид страницы:
        - assert: |
              В блоке "Пассажиры" перечислены те пассажири, на которых куплены билеты
              Под ФИО пассажира указан номер документа, по которому купили билет
              Тип документа не передается (особенность партнера)
              Не передается пол пассажира (особенность партнера)
              В поле "сумма за все билеты" указана списанная на шаге оплаты сумма
              Для тача: есть кнопки "Подробнее" и "Сохранить"
              https://jing.yandex-team.ru/files/arhey/2022-04-18T10:16:53Z.9de770d.png
              Для десктопа: есть кнопки "Подробнее о заказе", "Распечатать" и "Сохранить".
              https://jing.yandex-team.ru/files/arhey/2022-04-18T10:18:16Z.574600e.png
              Контактная информация соответствует введенной на шаге "Данные пассажира"
        -  do: Только для десктопа нажать кнопку "Распечатать"
        -  assert: Открылась форма печати документа. Закрыть ее, нажав на "х"
        -  do: Нажать кнопку "Скачать"
        -  assert: Билет скачался
        -  do: Обновить страницу
        -  assert: Ничего не изменилось

manual: true
Функциональность: Страница заказа
Устройство:
    - Десктоп
    - Тач
Страница: Страница заказа
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Страница заказа
description: |
    Для воспроизведения сценария нужно будучи не залогиненным в сервисе
    приобрести билет любой рейс, который находится в тестинге

    Запомнить электронную почту, на которую купили заказ

    Пример направлений:
    "Санкт-Петербург - Великий Новрогод",
    "Ростов-на-Дону - Москва",
    "Москва - Воронеж",

    Скопировать URL страницы заказа
specs:
    Автобусы. Страница заказов. Просмотр заказа незалогин:
        - do: Открыть браузер в режиме инкогнито, можно использовать Google Chrome, Я.Браузер, FireFox
        - do: Вставить URL купленного заказа
        - assert: |
                Открывается страница поиска заказа
                Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-18T14:06:24Z.6f4b586.png
                Тач: https://jing.yandex-team.ru/files/arhey/2022-04-18T14:18:25Z.c34208c.png
        - do: Ввести произвольную электронную почту, но не ту на которую купили билеты
        - do: Нажать кнопку "Посмотреть заказ"
        - assert: |
              Сработала валидация
              "Необходимо проверить введенные в поле данные."
        - do: Ввести правильную почту, которую укаывали при покупке билета
        - do: Нажать "Посмотреть заказ"
        - assert: Открылась страница заказа
        - do: Обновить страницу
        - assert: Ничего не произошло

manual: true
Функциональность: Поиск билета по контактной информации
Устройство:
    - Десктоп
    - Тач
Страница: Страница заказа
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Страница заказа
description: |
    Для воспроизведения сценария нужно приобрести 2 билета любой рейс в тестинге

    Пример направлений:
    "Санкт-Петербург - Великий Новрогод",
    "Ростов-на-Дону - Москва",
    "Москва - Воронеж",

    Перейти на страницу заказа
specs:
    Автобусы. Страница заказов. Проверка чека покупки-возврата:
        - assert: Находимся на странице заказа
        - do: Кликнуть по ссылке "Чек на оплату"
        - assert: |
                В новом окне открылся чек продажи
                Сумма в чеке совпадает с суммой на странице заказа
        - do: Выбрать одного из пассажиров и нажать кнопку "Сдать билет"
        - do: Подтвердить возврат билета
        - assert:
                Через пару минут после возврата сформировался чек возврата (если чек не сформировался - пропустить сценарий)
                Под фио прописалась сумма "К возврату" и рядом с ней есть ссылка "скачать чек"
        - do: Кликнуть по "Скачать чек"
        - assert: |
                В новом окне открылся чек возврата
                Сумма в чеке возврата совпадает с суммой на странице заказа
        - assert: В блоке "Сумма за все билеты" рядом с "Чеком продажи" появился "Чек возврата 1"
        - do: Кликнуть по "Чек возврата 1"
        - assert: |
                В новом окне открылся чек возврата 1
                Сумма в чеке возврата совпадает с суммой возврата на странице заказа
        - do: Сдать оставшийся билет
        - assert: В блоке "Сумма за все билеты" рядом с "Чеком продажи" появился "Чек возврата 2"
        - do: Кликнуть по "Чек возврата 2"
        - assert: |
                В новом окне открылся чек возврата 2
                Сумма в чеке возврата совпадает с суммой возврата на странице заказа

manual: true
Функциональность: Возврат билета
Устройство:
    - Десктоп
    - Тач
Страница: Страница заказа
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Страница заказа
description: |
    Для воспроизведения сценария нужно приобрести 2 билета на партнера "Басфор"
    Чтобы убедиться, что рейс от Басфор - нужно проверить URL
    https://jing.yandex-team.ru/files/arhey/2022-04-18T07:44:05Z.89fb9d6.png

    Пример направлений:
    "Санкт-Петербург - Великий Новрогод",
    "Ростов-на-Дону - Москва",
    "Москва - Воронеж",

    Перейти на страницу заказа
specs:
    Автобусы. Страница заказов. Возврат одного билета:
        - assert: Находимся на странице заказа
        - do: Выбрать одного из пассажиров и сдать 1 билет
        - do: Нажать кнопку "Сдать билет"
        - assert: |
              Открылось модальное окно о подтверждении возврата
              Сумма возврата не указана
              Есть предупреждение, что операцию отменить невозможно
              https://jing.yandex-team.ru/files/arhey/2022-04-18T07:51:20Z.e7aa2f5.png
        - do: Нажать "Отменить"
        - assert: Модальное окно закрылось, билет не сдан
        - do: Снова нажать "сдать билет" и подтвердить возврат
        - assert: |
              Возврат прошел, у пассажира стоит статус "Возврат"
              Указана сумма, которая вернется пассажиру
              Кнопка, которая раньше называлась "Сдать все билеты" называется теперь "Сдать билет",
              так как остался только один несданный билет
              https://jing.yandex-team.ru/files/arhey/2022-04-18T08:03:36Z.db3f947.png
        - do: Кликнуть "Скачать чек"
        - assert: В отдельной вкладке открылся чек
        - do: Перейти в почту
        - assert: Проверить, что пришло письмо на почту о возврате и в нем тоже есть чек

manual: true
Функциональность: Возврат билета
Устройство:
    - Десктоп
    - Тач
Страница: Страница заказа
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Страница заказа
description: |
    Для воспроизведения сценария нужно приобрести 2 билета на партнера "Unitiki-new"
    Чтобы убедиться, что рейс от Unitiki-new - нужно проверить URL
    https://jing.yandex-team.ru/files/arhey/2022-04-18T08:05:55Z.bceec70.png

    Пример направлений:
    "Москва - Великий Новрогод",
    "Москва - Санкт-Петербург",

    Перейти на страницу заказа
specs:
    Автобусы. Страница заказов. Возврат всех билетов:
        - assert: Находимся на странице заказа
        - do: Нажать кнопку "Сдать все билеты"
        - assert: |
              Открылось модальное окно о подтверждении возврата
              Указана предполагаемая сумма возврата
              Есть предупреждение, что операцию отменить невозможно
              https://jing.yandex-team.ru/files/arhey/2022-04-18T07:51:20Z.e7aa2f5.png
        - do: Нажать "Отменить"
        - assert: Модальное окно закрылось, билет не сдан
        - do: Снова нажать "сдать билет" и подтвердить возврат
        - assert: |
              Возврат прошел, у пассажира стоит статус "Возврат"
              Указана сумма, которая вернется пассажиру
              Кнопка, которая раньше называлась "Сдать все билеты" называется теперь "Сдать билет",
              так как остался только один несданный билет
              https://jing.yandex-team.ru/files/arhey/2022-04-18T08:03:36Z.db3f947.png
        - do: Кликнуть "Скачать чек"
        - assert: В отдельной вкладке открылся чек
        - do: Перейти в почту
        - assert: Проверить, что пришло письмо на почту о возврате и в нем тоже есть чек

manual: true
Функциональность: Возврат билета
Устройство:
    - Десктоп
    - Тач
Страница: Страница заказа
Сервис: Автобусы
Тестирование асессорами: Нет
Автор: arhey
Окружение:
    - Production
    - Testing
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Ввода данных. Добавление пассажиров:
        - do: Выбрать любой рейс из выдачи
        - do: Нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Нажать на кнопку "+"
        - assert: Добавился еще один пассажир, все поля пусты
        - do: Нажать на кнопку "+" еще три раза, чтобы суммарное количество пассажиров было 5
        - assert: Имеем 5 пустых форм по данные пассажира
        - do: нажать на "+" еще раз
        - assert: |
              Шестой пассажир не добавился, кнопка задизейблена
              Появляется хинт-уведомление "Вы можете выбрать в одном заказе не более 5 мест для пассажиров или багажа"
              Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-07T08:51:25Z.29950e0.png
              Тач: https://jing.yandex-team.ru/files/arhey/2022-04-07T08:54:02Z.0d8138c.png

manual: true
Функциональность: Добавление/удаление пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Пользователь залогинен в сервисе под учеткой: vladlen@yandex.ru password: v12345678
    2. Заполнить форму поиска валидными данными,  например: «Москва -   Санкт-Петербург» на завтра.
    3. Нажать кнопку "Найти", а после этого выбрать первый рейс из выдачи
specs:
    Автобусы. Ввод данных. Сохранение данных в ЗКП:
        - do: Ввести данные пассажира с ФИО отличающимся из саджестов ЗКП
        - assert: Для первого пассажира заполнились все данные ФИО, пол, дата рождения, документ и номер документы
        - do: Добавить второго пассажира
        - do: Кликнуть в поле «Фамилия»
        - assert: |
            Открылся выпадающий список с ФИО
            Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-07T08:09:49Z.e808151.png
            Тач: https://jing.yandex-team.ru/files/arhey/2022-04-07T08:13:41Z.1887704.png
        - do: Выбрать любое ФИО из списка
        - assert: Для второго пассажира заполнились данные ФИО, пол, дата рождения, документ и номер документа

manual: true
Функциональность: Записная книжка пассажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Ввода данных. Валидация документов. Свидетельство о рождении:
        - do: Выбрать любой рейс из выдачи
        - do: Нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: |
              Заполнить все поля, кроме документов, валидными данными (ФИО, дата рождения, пол, электронная почта, телефон)
              В поле "Документ" выбрать свидетельство о рождении
              "Серию и номер" не заполнять
              Нажать "Ввести карту и оплатить"
        - assert: |
              Сработала валидация, поле "Серия и номер" выделено красным.
              При наведении на поле хинт-подсказка "Укажите номер документа"
              https://jing.yandex-team.ru/files/arhey/2022-04-07T06:56:27Z.888b951.png
        - do: Ввести невалидные серию и номер свидетельства, например "IVМЮ12"
        - assert: |
              Сработает валидация "Проверьте номер. Должны быть латинские буквы X, I, V, две русские буквы и 6 цифр"
              https://jing.yandex-team.ru/files/arhey/2022-04-07T07:28:07Z.84e4aa1.png
        - do: Ввести валидную серию и номер свидетельства, например на "IVМЮ123456" и нажать "Ввести карту и оплатить"
        - assert: Переходим на этап ввода карты и покупки билета

manual: true
Функциональность: Валидация данных пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
    3. Перейти на шаг заполнения данных пассажира и заполнить пассажирские данные ФИО, пол, документ валидными данными, электронная почта
    4. Поле "Телефон" не заполнять
specs:
    Автобусы. Ввода данных. Валидация контактных данных пассажира. Электронная почта:
        - do: На странице "Данные пассажира" с ззаполненными полями, кроме телефона нажать кнопку "Ввести карту и оплатить"
        - assert: |
              Поле «телефон» выделены красной рамкой
              Для десктопа: при наведении на поле «телефон» всплывает подсказка «Укажите  мобильный телефон в формате +733333333333»
              Для тача: под полем «телефон» текст «Укажите мобильный телефон в формате  +733333333333»
              https://jing.yandex-team.ru/files/arhey/2021-12-06T09:41:28Z.fc9d9cd.png
        - do: Ввести в поле «телефон» произвольный заведомо невалидный номер, например 123 и переключиться на поле «телефон»
        - assert: |
              Поле «телефон» выделено красной рамкой
              Для десктопа: при наведении на поле «телефон» всплывает подсказка «В номере телефона должны быть как минимум 11 символов»
              Для тача: под полем «электронная почта» текст «В номере телефона должны быть как минимум 11 символов»
        - do:  ввести в поле «телефон» валидный номер, например, +79221030344 и нажать кнопку «Ввести карту и оплатить»
        - assert: Валидация пропала, перешли на следующий шаг

manual: true
Функциональность: Валидация данных пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
    3. Перейти на шаг заполнения данных пассажира и заполнить пассажирские данные ФИО, пол, документ валидными данными, телефон
    4. Поле "Электронная почта" не заполнять
specs:
    Автобусы. Ввода данных. Валидация контактных данных пассажира. Телефон:
        - do: На странице "Данные пассажира" с ззаполненными полями, кроме электронной почты нажать кнопку "Ввести карту и оплатить"
        - assert: |
              Поле «электронная почта» выделено красной рамкой
              Для десктопа: при наведении на поле «электронная почта» всплывает подсказка «укажите адрес электронной почты»
              Для тача: под полем «электронная почта» текст «укажите адрес электронной почты»
              https://jing.yandex-team.ru/files/arhey/2021-12-06T09:41:28Z.fc9d9cd.png
        - do: Ввести в поле «электронная почта» произвольный заведомо невалидный  почтовый адрес, например mail@mail и убрать фокус с поля
        - assert: |
              Поле «электронная почта» выделено красной рамкой
              Для десктопа: при наведении на поле «телефон» всплывает подсказка «Это не похоже на адрес почты»
              Для тача: под полем «электронная почта» текст «Это не похоже на адрес почты»
        - do: Ввести в поле «Электронная почта» валидный электронный адрес, например, mail@yandex.ru и убрать фокус с поля
        - assert: Валидация пропала

manual: true
Функциональность: Валидация данных пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Корзина
description: |
    В тестинге автобусов мало данных, если предложенное направление оказалось без тарифа
    следует пропустить кейс.

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Санкт-Петербург - Великий новгород" на любой доступный день
specs:
    Автобусы. Корзина. Выбор тарифа. Покупка детского и взрослого билетов:
        - do: |
              Выбрать первый или второй рейс из выдачи, обычно это ИП Кулик В.В
              https://jing.yandex-team.ru/files/arhey/2022-04-13T06:11:14Z.c35e651.png
        - assert: Перешли на шаг заполнения данных пассажира
        - do: |
              Добавить двух пассажиров, заполнить поля валидными данными.
              Первый пассажир: взрослый, возраст >20 лет
              Второй пассажир: ребенок, возраст <12 лет
              Обоим пассажирам выбрать тариф "Полный"
        - assert: |
              В корзине отображается "Полный 2х 450Р" (сумма для примера)
              https://jing.yandex-team.ru/files/arhey/2022-04-13T07:42:04Z.00eacda.png
        - do: Изменить тариф для второго пассажира на "Детский"
        - assert: |
              В корзину добавлено два пассажира с тарифами "Полный" и "Детский".
              Стоимость "Детского тарифа" в два раза меньше стоимости "Полного".
              https://jing.yandex-team.ru/files/arhey/2022-04-13T06:47:15Z.6e688bb.png
        - do: Выбрать для пассажиров места на схеме.
        - assert: |
              Номер места проставился для каждого пассажира в форму и в корзину соответственно
              https://jing.yandex-team.ru/files/arhey/2022-04-13T06:43:16Z.162db6c.png
              https://jing.yandex-team.ru/files/arhey/2022-04-13T06:46:48Z.6ab9d57.png
        - do: Нажать кнопку "Ввести карту и оплатить"
        - do: Не для асессоров - указать номер тестовой карты и купить билет
        - assert: Заказ оплачен, перешли на HP
        - do: Нажать "Подробнее о заказе"
        - assert: |
              Билеты куплены на двух пассажиров.
              Тарифы и цены переданы верно: "Полный" и "Детский"

manual: true
Функциональность: Корзина
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
    3. Предварительно открыть DevTools и на вкладке NetWorks установить эмуляцию slow3G
specs:
    Автобусы. Ввод данных. Ошибки при потери соединения:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - do: В открытом DevTools установить эмуляцию отключения интернета - Offline
        - assert: |
              Перешли на шаг заполнения данных пассажира
              При загрузке деталей рейса есть скелетоны
              https://jing.yandex-team.ru/files/arhey/2022-04-06T09:47:09Z.7828acc.png
              Через какое-то время появляется модальное окно "не удалось загрузить данные о рейсе"
              https://jing.yandex-team.ru/files/arhey/2022-04-06T09:53:44Z.a339b7f.png
        - do: |
              Включить интернет в DevTools
              Нажать "Обновить"
        - assert: страница прогрузится, попадаем на шаг заполнения данных пассажира
        - do: |
              Отключить интернет в DevTools и снова обновить страницу
              В модальном окне "Не удалось загрузить данные о рейсе" нажать "искать другие рейсы"
        - assert: Вернулись на выдачу по направление "Москва - Санкт-Петербург"

manual: true
Функциональность: Ошибки при потери соединения
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Пользователь залогинен в сервисе под учеткой: vladlen@yandex.ru password: v12345678
    2. Заполнить форму поиска валидными данными,  например: «Москва -   Санкт-Петербург» на завтра.
    3. Нажать кнопку "Найти", а после этого выбрать первый рейс из выдачи
specs:
    Автобусы. Ввода данных. Подстанавка из ЗКП:
        - do: |
            Кликнуть по любому ФИО из этого списка
            Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-07T07:59:50Z.f489c25.png
            Тач: https://jing.yandex-team.ru/files/arhey/2022-04-07T08:12:03Z.66c0d86.png
        - assert: Для первого пассажира заполнились все данные ФИО, пол, дата рождения, документ и номер документы
        - do: Добавить второго пассажира
        - do: Кликнуть в поле «Фамилия»
        - assert: |
            Открылся выпадающий список с ФИО
            Десктоп: https://jing.yandex-team.ru/files/arhey/2022-04-07T08:09:49Z.e808151.png
            Тач: https://jing.yandex-team.ru/files/arhey/2022-04-07T08:13:41Z.1887704.png
        - do: Выбрать любое ФИО из списка
        - assert: Для второго пассажира заполнились данные ФИО, пол, дата рождения, документ и номер документа

manual: true
Функциональность: Записная книжка пассажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Ввода данных. Скелетоны:
        - do: Выбрать любой рейс из выдачи и нажать кнопку "Выбрать"
        - assert: |
              Перешли на шаг заполнения данных пассажира
              При загрузке деталей рейса есть скелетоны
              https://jing.yandex-team.ru/files/arhey/2022-04-06T09:47:09Z.7828acc.png

manual: true
Функциональность: Скелетоны
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Ввода данных. Удаление пассажиров:
        - do: Выбрать любой рейс из выдачи
        - do: Нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: Нажать на кнопку "+"
        - assert: Добавился еще один пассажир, все поля пусты
        - do: Заполнить данными обоих пассажиров
        - do: Нажать на "-"
        - assert: |
            Удалился второй пассажир
            кнопка "-" задизейблена
        - do: Нажать на "-" еще раз
        - assert: |
              Ничего не происходит
              Первый пассажир не удаляется, его данные тоже не удалены

manual: true
Функциональность: Добавление/удаление пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Ввода данных. Валидация документов. Паспорт:
        - do: Выбрать любой рейс из выдачи
        - do: Нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: |
              Заполнить все поля, кроме документов и даты рождения, валидными данными (ФИО, пол, электронная почта, телефон)
              В поле "Документ" выбрать паспорт
              Дату рождения указать такую, чтобы пассажир был младше 14 лет (возраст получения паспорта)
              Убрать фокус с даты рождения
        - assert: |
              Сработала валидация, поле "Дата рождения" выделено красным.
              При наведении на поле хинт-подсказка "Возраст пассажира не соответствует документу"
              https://jing.yandex-team.ru/files/arhey/2022-04-07T06:41:22Z.d51f5bd.png
        - do: |
              Изменить дату рождения на 01.11.1990 и снова убрать фокус из поля
              Указать серию и  номер паспорта "2344 352323" - заведомо невалидная
              Нажать кнопку "Ввести карту и оплатить"
        - assert: |
              Снова сработала валидация и при наведении хинт-подсказка "Похоже есть ошибка в серии и номере паспорта"
              https://jing.yandex-team.ru/files/arhey/2022-04-07T06:45:32Z.819195d.png
              Текст подсказок в будущем может измениться
        - do: Изменить серию и номер паспорта, например на "6720 429600" и нажать "Ввести карту и оплатить"
        - assert: Переходим на этап ввода карты и покупки билета

manual: true
Функциональность: Валидация данных пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Ввода данных. Валидации поля "Дата рождения":
        - do: Выбрать любой рейс из выдачи
        - do: Нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: |
              Заполнить все поля, кроме даты рождения, валидными данными (ФИО, пол, документы, электронная почта, телефон)
              В поле "Дата рождения" ввести 01.11.1900
              Убрать фокус из поля
        - assert: |
              Сработала валидация, поле "Дата рождения" выделено красным.
              При наведении на поле хинт-подсказка "Проверьте год"
              https://jing.yandex-team.ru/files/arhey/2022-04-07T06:29:56Z.53d5f01.png
        - do: Изменить дату рождения на 01.11.2200 и снова убрать фокус из поля
        - assert: |
              Снова сработала валидация и при наведении хинт-подсказка "Этот пассажир еще не родился"
              https://jing.yandex-team.ru/files/arhey/2022-04-07T06:31:52Z.1d3b53b.png
              Текст подсказок в будущем может измениться
        - do: Изменить дату рождения, так чтобы возвраст оказался адекватным для выбранного документа (если выбран паспорт > 14 лет)
        - assert: Валидация поля "дата рождения" пропала

manual: true
Функциональность: Валидация данных пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
title: Deploy Membrace docs
service: making-documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp
  runtime:
    sandbox:
      owner: DOCLOC
      notifications:
        - statuses: FAILURE
          transport: email
          recipients: DOCLOC

  actions:
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
      - sub-paths: ['**']
      - abs-paths: ['build/platform/yfm']

      stages:
      - id: build
        title: Build
        displace: true
      - id: testing
        title: Testing
        displace: true
      - id: stable
        title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/membrace
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/membrace

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production

     
title: Deploy docs
# slug вашего сервиса в ABC. Его можно узнать из url страницы
# вашего сервиса в ABC, например для адреса
# https://abc.yandex-team.ru/services/market/, market - это slug
service: mssngr

ci:
  secret: sec-01g67yxztj5savnwn32c180w7b  # https://docs.yandex-team.ru/ci/quick-start-guide#get-token 
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/ci/quick-start-guide#get-token 
    sandbox:
      owner: MSSNGR
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email уведомлений) и др.
          recipients: MSSNGR

  actions:
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
      - sub-paths: ['**']
      - abs-paths: ['build/platform/yfm']

      stages:
      - id: start
        title: start
        displace:
          on-status:
            - FAILURE
            - WAITING_FOR_STAGE
      - id: build
        title: Build
        displace:
          on-status:
            - FAILURE
            - WAITING_FOR_STAGE
      - id: testing
        title: Testing
        displace:
          on-status:
            - FAILURE
            - WAITING_FOR_STAGE
            - WAITING_FOR_MANUAL_TRIGGER
      - id: stable
        title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/messenger # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # отставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        start:
          title: Start
          task: dummy
          stage: start

        deploy:
          title: Deploy docs
          task: common/docs/deploy
          needs: start
          stage: build
          input:
            targets: docs/messenger # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: true
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Nirvana Onboarding
service: documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/sandbox/groups
    sandbox:
      owner: DOCLOC
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email-уведомлений) и др.
          recipients: DOCLOC

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающем вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/nirvana-onboarding # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # оставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/nirvana-onboarding # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: true
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production


arcanum:
  review:
    skip_review_for: "nirvana:@id=22, nirvana:@id=2"

    groups:
      - name: technical_writer
        roles:
          - "nirvana:@id=22" # technical writer
          - "nirvana:@id=40" # editor
      - name: project_manager
        roles:
          - "nirvana:@id=2" # project manager
          - "nirvana:@id=3" # content manager

    rules:
      reviewers:
        - name: technical_writer
        - name: project_manager
title: Deploy docs
service: passp

ci:
  secret: sec-01g1t6qs9eb838nnma0c5as4z9
  runtime:
    sandbox-owner: PASSPORTDOCS

  actions:
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
      - sub-paths: ['**']
      - abs-paths: ['build/platform/yfm']

      stages:
      - id: build
        title: Build
        displace: true
      - id: testing
        title: Testing
        displace: true
      - id: stable
        title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/passport
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/passport

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Deploy docs
service: paymentsdk

ci:
  secret: sec-01fy93x8q31643h61aw1zrj371
  runtime:
    sandbox-owner: PAYMENTSDK

  actions:
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
      - sub-paths: ['**']
      - abs-paths: ['build/platform/yfm']

      stages:
      - id: build
        title: Build
        displace: true
      - id: testing
        title: Testing
        displace: true
      - id: stable
        title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/payment-sdk
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/payment-sdk

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Arcadia Python docs
service: committeepython

ci:
  secret: sec-01e0d4agf6pfvwdjwxp61n3fvg
  runtime:
    sandbox-owner: YATOOL

  actions:
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
      - sub-paths: ['**']
      - abs-paths: ['build/platform/yfm']

      stages:
      - id: build
        title: Build
        displace: true
      - id: stable
        title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/python
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true

    release-docs:
      jobs:
        deploy:
            title: Deploy docs
            task: common/docs/deploy
            stage: build
            input:
              targets: docs/python

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: deploy
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Deploy docs
# slug вашего сервиса в ABC. Его можно узнать из url страницы
# вашего сервиса в ABC, например для адреса
# https://abc.yandex-team.ru/services/market/, market - это slug
service: making-documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp # id секрета, созданного на шаге 1
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/sandbox/groups
    sandbox:
      owner: DOCLOC
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email уведомлений) и др.
          recipients: migelle

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающим вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/rms # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # отставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/rms # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: true
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Speechkit
service: documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp # id секрета, созданного на шаге 1
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/sandbox/groups
    sandbox:
      owner: DOCLOC
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email уведомлений) и др.
          recipients: DOCLOC

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающим вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/speechkit # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # отставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/speechkit # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: false
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: XScript 5
service: documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp # id секрета, созданного на шаге 1
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/sandbox/groups
    sandbox:
      owner: DOCLOC
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email уведомлений) и др.
          recipients: DOCLOC

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающим вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/xscript # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # отставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/xscript # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: false
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
service: ydo_frontend
title: Yandex Uslugi Docs
arcanum:
  auto_merge:
    requirements:
      - system: arcanum
        type: approved
        required: false
ci:
  secret: sec-01er2fb0mm0xnywzwm94xz58d2
  runtime:
    sandbox-owner: YDO
  actions:
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: [ '**' ]
        - abs-paths: [ 'build/platform/yfm' ]

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/ydo
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/ydo

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: false
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Captcha API
service: documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/sandbox/groups
    sandbox:
      owner: DOCLOC
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email-уведомлений) и др.
          recipients: DOCLOC

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающем вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/captcha-api # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # оставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/captcha-api # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: false
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Drive admin docs
service: documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/sandbox/groups
    sandbox:
      owner: DOCLOC
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email-уведомлений) и др.
          recipients: DOCLOC

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающем вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/driveadmin # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # оставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/driveadmin # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: false
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Deploy docs
# slug вашего сервиса в ABC. Его можно узнать из url страницы
# вашего сервиса в ABC, например для адреса
# https://abc.yandex-team.ru/services/market/, market - это slug
service: documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp # id секрета, созданного на шаге 1
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/sandbox/groups
    sandbox:
      owner: DOCLOC
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email уведомлений) и др.
          recipients: DOCLOC

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающим вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/goals # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # отставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/goals # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: false
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Deploy docs
service: committeego

ci:
  secret: sec-01fyee829gkjrzs7xp0kg57bv8
  runtime:
    sandbox-owner: COMMITTEEGO

  actions:
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/golang/
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/golang/

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: false
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
service: capacity-planning
title: Infra Billing docs
ci:
  secret: sec-01ct4ct9v6ed1xn8vrjqswxnb2
  runtime:
    sandbox-owner: YT_ROBOT

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающим вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
      - sub-paths: ['**']
      - abs-paths: ['build/platform/yfm']

      stages:
      - id: build
        title: Build
        displace: true
      - id: testing
        title: Testing
        displace: true
      - id: stable
        title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/infra_billing # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # отставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/infra_filling # путь до вашего проекта от корня Аркадии
            notify: true

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: intro-api-guide
service: documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp # id секрета, созданного на шаге 1
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/sandbox/groups
    sandbox:
      owner: DOCLOC
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email уведомлений) и др.
          recipients: DOCLOC

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающим вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/intro-api-guide # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # отставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/intro-api-guide # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: false
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Lang Detect
service: documentation

ci:
  secret: sec-01fzfs0sbxsqb628z9zrswfmtp
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/sandbox/groups
    sandbox:
      owner: DOCLOC
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email-уведомлений) и др.
          recipients: DOCLOC

  actions:
    # определение экшена, который будет вызван при пулл-реквесте,
    # затрагивающем вашу документацию
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
        - sub-paths: ['**']
        - abs-paths: ['build/platform/yfm']

      stages:
        - id: build
          title: Build
          displace: true
        - id: testing
          title: Testing
          displace: true
        - id: stable
          title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/lang-detect # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # оставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          stage: build
          input:
            targets: docs/lang-detect # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: false
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Deploy docs
# slug вашего сервиса в ABC. Его можно узнать из url страницы
# вашего сервиса в ABC, например для адреса
# https://abc.yandex-team.ru/services/market/, market - это slug
service: beruapps

ci:
  secret: sec-01d2mn5fn7x4b6q22fbyqv6gwq  # https://docs.yandex-team.ru/ci/quick-start-guide#get-token 
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/ci/quick-start-guide#get-token 
    sandbox:
      owner: BERU_ANDROID
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email уведомлений) и др.
          recipients: BERU_ANDROID

  actions:
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
      - sub-paths: ['**']
      - abs-paths: ['build/platform/yfm']

      stages:
      - id: start
        title: start
        displace:
          on-status:
            - FAILURE
            - WAITING_FOR_STAGE
      - id: build
        title: Build
        displace:
          on-status:
            - FAILURE
            - WAITING_FOR_STAGE
      - id: testing
        title: Testing
        displace:
          on-status:
            - FAILURE
            - WAITING_FOR_STAGE
            - WAITING_FOR_MANUAL_TRIGGER
      - id: stable
        title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/market/mobile # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # отставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        start:
          title: Start
          task: dummy
          stage: start

        deploy:
          title: Deploy docs
          task: common/docs/deploy
          needs: start
          stage: build
          input:
            targets: docs/market/mobile # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: true
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
title: Deploy docs
# slug вашего сервиса в ABC. Его можно узнать из url страницы
# вашего сервиса в ABC, например для адреса
# https://abc.yandex-team.ru/services/market/, market - это slug
service: devtools

ci:
  secret: sec-01fttjf26sphv183pgsk86w97n
  runtime:
    # Sandbox-группа (https://sandbox.yandex-team.ru/admin/groups),
    # в которую должен входить ваш робот
    # Создать группу можно по инструкции https://docs.yandex-team.ru/ci/quick-start-guide#get-token 
    sandbox:
      owner: YATOOL
      # Настройки уведомлений при падении сборки (https://docs.yandex-team.ru/ci/runtime)
      notifications:
        - statuses: FAILURE
          transport: email # доступные транспорты: telegram, email, jabber, q
          # логины сотрудников, Sandbox-группы, рассылки (рассылки только для email уведомлений) и др.
          recipients: spreis

  actions:
    docs:
      title: Deploy docs
      flow: deploy-pr-docs
      triggers:
        - on: pr

  releases:
    release-docs:
      title: Release docs
      flow: release-docs
      auto: true
      filters:
      - sub-paths: ['**']
      - abs-paths: ['build/platform/yfm']

      stages:
      - id: start
        title: start
        displace:
          on-status:
            - FAILURE
            - WAITING_FOR_STAGE
      - id: build
        title: Build
        displace:
          on-status:
            - FAILURE
            - WAITING_FOR_STAGE
      - id: testing
        title: Testing
        displace:
          on-status:
            - FAILURE
            - WAITING_FOR_STAGE
            - WAITING_FOR_MANUAL_TRIGGER
      - id: stable
        title: Stable

  flows:
    deploy-pr-docs:
      jobs:
        deploy:
          title: Deploy docs
          task: common/docs/deploy
          input:
            targets: docs/build # путь до вашего проекта от корня Аркадии
            arcanum_review_id: ${context.launch_pull_request_info.pull_request.id}
            notify: true # отставлять комментарий к ПР с ссылкой на выложенную документацию

    release-docs:
      jobs:
        start:
          title: Start
          task: dummy
          stage: start

        deploy:
          title: Deploy docs
          task: common/docs/deploy
          needs: start
          stage: build
          input:
            targets: docs/build # путь до вашего проекта от корня Аркадии

        release-to-testing:
          title: Release docs to testing
          task: common/docs/release
          needs: deploy
          stage: testing
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: testing

        release-to-stable:
          title: Release docs to stable
          task: common/docs/release
          needs: release-to-testing
          manual: true
          stage: stable
          input:
            projects: ${tasks.deploy.output_params.projects}
            environments: production
feature: Маркетинг
type: Шторка профиля
description: >-
 Быть на главной портала, в правом верхнем углу есть бургер меню с красной точкой, тапнув по нему откроется шторка в которой будет находиться иконка подарочных сертификатов и красный бейджик "новое"
specs:
  'Акция МИР (Тач)':
    - do: >- 
        Кликнуть по иконке с "Подарочными Сертификатами"
    - assert: >- 
        Произойдет переход на страницу с информацией о покупке подарочного сертификата. (в новой вкладке)
manual: true
Функциональность:
  - 'Шторка профиля'
Устройство:
  - Тач
Страница: Все
Сервис: Маркетинг
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag:
feature: Маркетинг
type: Шторка профиля
description: >-
 Быть на главной портала, в правом верхнем углу есть бургер меню с красной точкой, тапнув по нему откроется шторка в которой будет находиться иконка подарочных сертификатов и красный бейджик "новое"
specs:
  'Мир (Десктоп)':
    - do: >- 
        Кликнуть по иконке с "Подарочными Сертификатами"
    - assert: >- 
        Произойдет переход на страницу с информацией о покупке подарочного сертификата. (в новой вкладке)
manual: true
Функциональность:
  - 'Шторка профиля'
Устройство:
  - Тач
Страница: Все
Сервис: Маркетинг
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag:
feature: Авиа
type: Бронирование
description: >-
    Как попасть на страницу бронирования аэрофлота:


    **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
    бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
    и проверять кейс в таче.**


    * В поиске авиа поискать по направлению, по которому летает аэрофлот
    (например, Москва - Екатеринбург, или направление, указанное в кейсе).

    * Выбрать в фильтре по авиакомпаниям Аэрофлот

    * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Заказ на Я.Путешествиях).

    * На открывшейся странице кликнуть по кнопке Купить для Я.Путешествий. //
    произойдет переход на travel-test

    ![image](https://jing.yandex-team.ru/files/gouken67/Я.Путешествия%20Авиа.png)

    * **У Асессоров откроется travel.crowdtest** - должна открыться страница
    бронирования с формой ввода данных пассажиров

    **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
    кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
    аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
    именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

    ![image](https://jing.yandex-team.ru/files/arhey/2022-04-04T09:56:21Z.ced9ee6.png)

    Нужно быть залогиненым. Проверяем только почту, потому что телефона у этого
    аккаунта нет (а свой не хочется добавлять).

    Для тестинга асессоры могут пользоваться тестовым аккаунтом :
    transliteration password: 1234ASDF
specs:
    Проверка автоматической транслитерации данных пассажира залогин:
        - do: |
            Войти в аккаунт transliteration
            Выполнить переход как описано в Description для 1 взрослого, 1 ребёнка и 1 младенца.
        - assert: Переход сработал, открылась страница бронирования
        - do: |
            Кликнуть в поле фамилии для взрослого
            Подставить данные из саджеста для Транслитерированный Иван (можно написать в поле "Транслит", и тогда данные должны отобразиться)
        - assert: |
            Подставленные данные транслитерировались.
            Появляется сообщение "Перевели ваши данные на латиницу. Проверьте, что всё правильно"
        - do: (Только для тачей) Кликнуть по появившемуся сообщению
        - assert: Сообщение исчезает
        - do: Подставить данные Транслитерированного Сергея для ребёнка
        - assert: |
            Подставились данные Translated Sergey Ivanovich
            Сообщения о перевода на латиницу нет
        - do: Подставить данные Транслитерированной Ольги для младенца
        - assert: |
            Подставились данные Translated Olga Ivanovna
            Сообщения о перевода на латиницу нет

manual: true
Функциональность: Бронирование
Устройство:
    - Десктоп
    - Тач
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: gouken67
feature: Авиа
type: Бронирование
description: >-
    Как попасть на страницу бронирования аэрофлота:


    **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
    бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
    и проверять кейс в таче.**


    * В поиске авиа поискать по направлению, по которому летает аэрофлот
    (например, Москва - Екатеринбург, или направление, указанное в кейсе).

    * Выбрать в фильтре по авиакомпаниям Аэрофлот

    * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Заказ на Я.Путешествиях).

    * На открывшейся странице кликнуть по кнопке Купить для Я.Путешествий. //
    произойдет переход на travel-test

    ![image](https://jing.yandex-team.ru/files/gouken67/Я.Путешествия%20Авиа.png)

    * **У Асессоров откроется travel.crowdtest** - должна открыться страница
    бронирования с формой ввода данных пассажиров
specs:
  Проверка автоматической транслитерации данных пассажира незалогин:
    - do: Выполнить переход как описано в Description для 1 взрослого, 1 ребёнка и 1 младенца.
    - assert: Переход сработал, открылась страница бронирования
    - do: Ввести ФИО для взрослого на кириллице
    - assert: |
        Введённые данные автоматически переводятся на латиницу.
        Появляется сообщение "Перевели ваши данные на латиницу. Проверьте, что всё правильно"
    - do: (Только для тачей) Кликнуть по появившемуся сообщению
    - assert: Сообщение исчезает
    - do: Заполнить ФИО для ребёнка и младенца на кириллице
    - assert: |
        Введённые данные автоматически переводятся на латиницу.
        На десктопе появляется сообщение "Перевели ваши данные на латиницу. Проверьте, что всё правильно".
        На таче сообщения нет.

manual: true
Функциональность: Бронирование
Устройство:
    - Десктоп
    - Тач
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Smoke
Автор: gouken67
feature: Авиа
type: Бронирование
description: >-
  Как попасть на страницу бронирования аэрофлота:

  * В поиске авиа поискать по направлению, по которому летает аэрофлот
  (например, Москва - Екатеринбург, или направление, указанное в кейсе).

  * Выбрать в фильтре по авиакомпаниям Аэрофлот

  * Кликнуть по сниппету с предложением Аэрофлота (где есть приписка Продает
  авиакомпания).

  * На открывшейся странице кликнуть по кнопке Купить для аэрофлота. //
  произойдет переход на travel-test

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-12-18_14.23.50-7x9wt.png)

  * **У Асессоров откроется travel.crowdtest** - должна открыться страница
  бронирования с формой ввода данных пассажиров

  Отсутствие лого АК не является багом или проблемой кейса!

  **Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку ЛК (рядом с
  кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым
  аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был
  именно тестовый аккаунт, т.к. через свой аккаунт не впустит**

  ![image](https://jing.yandex-team.ru/files/shenfeld/2020-03-25_17.35.08-4bpdm.png)

  Нужно быть залогиненым. Проверяем только почту, потому что телефона у этого
  аккаунта нет (а свой не хочется добавлять).

  Для тестинга асессоры могут пользоваться тестовым аккаунтом :
  vladlen@yandex.ru password: v12345678
specs:
  Проверка обновления информации в localstorage:
    - do: Открыть новую вкладку браузера в режиме Инкогнито
    - do: Выполнить переход как описано в Description.
    - assert: |-
        * Переход сработал, открылась страница бронирования
    - do: |
        Указать данные пассажира
        Нажать на кнопку Оплатить
    - assert: |
        (Для асессоров) Осуществляется переход на страницу с информацией об успешной покупке билета
        (Для команды) Осуществляется переход на страницу оплаты
    - do: Ввести данные карты  4111 1111 1111 1111 12/24 123 и оплатить заказ (асессоры пропускают шаг)
    - assert: Оплата прошла. Осуществляется переход на страницу с информацией об успешной покупке билета
    - do: |
        Вернуться на главную страницу Портала
        Снова выполнить переход как описано в Description.
    - assert: |
        Переход сработал, открылась страница бронирования
        Данные пассажира предзаполнены той информацией, которая была указана в предыдущем заказе
    - do: |
        Изменить информацию в ФИО, дате рождения, номере документа
        Нажать на кнопку Оплатить
    - assert: |
        (Для асессоров) Осуществляется переход на страницу с информацией об успешной покупке билета
        (Для команды) Осуществляется переход на страницу оплаты
    - do: |
        Открыть Developer Tools (F12)
        Перейти во вкладку Application
        В боковом меню перейти в Storage - Local Storage
        Расхлопнуть и перейти по пункту с адресом сервиса
        Проверить информацию в yaTravel/bookPassengers/AVIA_BOOK
    - assert: Информация о пассажире обновилась в localstorage
manual: true
Функциональность: Бронирование
Устройство:
    - Десктоп
Страница: Бронирование
tlds: hard
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
feature: Авиа
type: Страница покупки
description: >-
specs:
  'Проверка логов редиректа для CPA-партнёра':
    - do: Перейти на вкладку авиабилеты
    - do: |-
          На вкладке авиа ввести в поля
          * откуда - Екатеринбург
          * куда - Москва
          * туда - через неделю
          * обратно не заполняем
          Нажать на кнопку "Найти"
    - assert: '* Произошел переход на страницу выдачи'
    - do: |-
          Дописать utm-метки: добавить к урлу в конце *&utm_campaign=test1&utm_content=test2&utm_medium=test3&utm_source=test4&utm_term=test5*
          Перейти по новому урлу
    - assert: Выдача обновилась, указанные utm-метки отображаются в куках
    - do: |-
          Применить фильтрацию по партнёру = "Аэрофлот"
          В выдаче нажать на карточку любого рейса
          https://jing.yandex-team.ru/files/gouken67/Кликнуть%20в%20сниппет.png
    - assert: Произошел переход в страницу покупки выбранного рейса
    - do: |-
          Нажать на кнопку Купить у названия Аэрофлот
          - В десктопе в блоке справа
          https://jing.yandex-team.ru/files/rifat-k/2019-12-04_15-08-40.png
          - В таче в блоке внизу
          https://jing.yandex-team.ru/files/shenfeld/2021-02-09_10.13.59-jlb00.png
    - assert: Произошел переход на сайт партнера в новой вкладке. Стоимость на сайте партнёра совпадает со стоимостью, которая была указана на странице покупки.
    - do: Проверить данные, которые содержит лог редиректа
    - assert: |-
          Следующие поля должны быть заполнены соответствующим образом:
          * marker - строка с разделителем '-'
          * show_id - 'число.число.0'
          * utm-метки - те значения, которые мы ввели ранее
          * userip - совпадает с тем, что указано на ip.yandex.ru
          * yandexuid - совпадает с yandexuid браузера, указанный в куках (если узнать не получится - проверить, что непустой)
          * billing_order_id - число
          * billing_client_id - число
          * national_version - 'ru'
          * original_price - число, совпадает с ценой варианта, по которому совершили редирект
          * price_cpa - число, не равно 0
          * pp - 502 для десктопа, 508 для тачей
manual: true
Функциональность: Переход к партнёру
Устройство:
    - Десктоп
    - Тач
Страница: Страница покупки
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
feature: Авиа
type: Страница покупки
description: >-
specs:
  'Проверка логов редиректа для CPC-партнёра':
    - do: Перейти на вкладку авиабилеты
    - do: |-
          На вкладке авиа ввести в поля
          * откуда - Екатеринбург
          * куда - Москва
          * туда - через неделю
          * обратно не заполняем
          Нажать на кнопку "Найти"
    - assert: '* Произошел переход на страницу выдачи'
    - do: |-
          Дописать utm-метки: добавить к урлу в конце *&utm_campaign=test1&utm_content=test2&utm_medium=test3&utm_source=test4&utm_term=test5*
          Перейти по новому урлу
    - assert: Выдача обновилась, указанные utm-метки отображаются в куках
    - do: |-
          Применить фильтрацию по партнёру = "Kupibilet"
          В выдаче нажать на карточку любого рейса
          https://jing.yandex-team.ru/files/gouken67/Кликнуть%20в%20сниппет.png
    - assert: Произошел переход в страницу покупки выбранного рейса
    - do: |-
          Нажать на кнопку Купить у названия Kupibilet
          - В десктопе в блоке справа
          https://jing.yandex-team.ru/files/rifat-k/2019-12-04_15-08-40.png
          - В таче в блоке внизу
          https://jing.yandex-team.ru/files/shenfeld/2021-02-09_10.13.59-jlb00.png
    - assert: Произошел переход на сайт партнера в новой вкладке. Стоимость на сайте партнёра совпадает со стоимостью, которая была указана на странице покупки.
    - do: Проверить данные, которые содержит лог редиректа
    - assert: |-
          Следующие поля должны быть заполнены соответствующим образом:
          * marker - строка с разделителем '-'
          * show_id - 'число.число.0'
          * utm-метки - те значения, которые мы ввели ранее
          * userip - совпадает с тем, что указано на ip.yandex.ru
          * yandexuid - совпадает с yandexuid браузера, указанный в куках (если узнать не получится - проверить, что непустой)
          * billing_order_id - число
          * billing_client_id - число
          * national_version - 'ru'
          * original_price - число, совпадает с ценой варианта, по которому совершили редирект
          * price_cpc, price, price_ecpc - числа, не равны 0
          * pp - 502 для десктопа, 508 для тачей
manual: true
Функциональность: Переход к партнёру
Устройство:
    - Десктоп
    - Тач
Страница: Страница покупки
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
feature: Авиабилеты
type: Главная
description: Проверка перехода с рецептов

specs:
    Проверка перехода с рецептов:
        - do: Открыть https://yandex.ru/tune. Указать Москва (no_autotest)
        - do: Открыть главную
        - assert: Под формой поиска билетов блок с рецептами.
        - do: Кликнуть по первой карточке
        - assert: Открылась страница авиа, поля поиска предзаполнены данными, как в рецепте, в десктопе открыт календарь для выбора даты.

files:
    - tests/common/avia/index/avia-recipes.hermione.ts

tags: smoke

# meta
Сервис: Авиа
Страница: Главная
Функциональность:
    - Переход на сервис
    - Рецепты
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
    - Production
Тестирование асессорами: Да
feature: Авиа
type: Выдача
description: ''
specs:
    'Проверка перехода к партнёру по самому дорогоу тарифу (десктоп)':
        - do: |-
              Зайти на главную,
              На вкладке авиа ввести в поля
              * откуда - Екатеринбург
              * куда - Москва
              * туда - 5 число следующего месяца
              * обратно не заполняем
              Кликнуть "Найти"
        - assert: Произошел переход на страницу выдачи
        - do: |
              Убедиться, что выбрана сортировка Сначала рекомендуемые, по возрастанию
              Применить фильтр Авиакомпания = Победа, чекбокс Комбинации авиакомпаний снять
        - assert: На выдаче остались варианты от авиакомпании Победа
        - do: Проверить наличие багажной информации и информации о возврате
        - assert: Багажная информация и информация о возврате содержатся в сниппете в качестве значения выпадающего списка тарифов
        - do: |
              Открыть выпадающий список тарифов для первого сниппета
              Выбрать самый дорогой тариф
        - assert: Выбирается самый дорогой тариф для первого сниппета. Выставляется соответствующая цена на жёлтой кнопке.
        - do: Совершить редирект по выбранному варианту, кликнув по жёлтой кнопке с ценой
        - assert: |
              Происходит редирект к партнёру
              Стоимость у партнёра совпадает с тем, что было указано на выдаче (за вычетом страхования и СМС-информирования - эти доп. услуги добавляет сам партнёр)
              Выбраны те же услуги, что были указаны в условиях тарифа на выдаче (если есть возможность это увидеть)
manual: true
Функциональность: Тарифы авиа
Устройство:
    - Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Regress
feature: Авиа
type: Выдача
description: ''
specs:
    'Проверка перехода к партнёру по самому дорогоу тарифу (тач)':
        - do: |-
              Зайти на главную,
              На вкладке авиа ввести в поля
              * откуда - Екатеринбург
              * куда - Москва
              * туда - 5 число следующего месяца
              * обратно не заполняем
              Кликнуть "Найти"
        - assert: Произошел переход на страницу выдачи
        - do: |
              Убедиться, что выбрана сортировка Сначала рекомендуемые, по возрастанию
              Применить фильтр Авиакомпания = Победа, чекбокс Комбинации авиакомпаний снять
        - assert: На выдаче остались варианты от авиакомпании Победа
        - do: Проверить наличие багажной информации и информации о возврате
        - assert: Багажная информация и информация о возврате содержатся в сниппете в качестве значения выпадающего списка тарифов
        - do: |
              Кликнуть по тарифной информации в первом сниппете
              Выбрать самый дорогой тариф
              Кликнуть по жёлтой кнопке с ценой
        - assert: |
              Происходит редирект к партнёру
              Стоимость у партнёра совпадает с тем, что было указано на выдаче (за вычетом страхования и СМС-информирования - эти доп. услуги добавляет сам партнёр)
              Выбраны те же услуги, что были указаны в условиях тарифа на выдаче (если есть возможность это увидеть)
manual: true
Функциональность: Тарифы авиа
Устройство:
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Regress
feature: Авиа
type: Выдача
description: ''
specs:
  'Форма поиска не очищается при обновлении страницы':
    - do: 'Открыть главную страницу Путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Кейптаун
        Туда: 5 число следующего месяца
        Обратно: любое другое число следующего месяца, для которого нет цены в календаре
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку "Найти"
    - assert: >-
        Открылась страница выдачи.
    - do: Обновить страницу
    - assert: Выдача обновилась. Все города, указанные в форме поиска, остаются на месте.
    - do: Перейти на страницу покупки, кликнув в любой из сниппетов (не по кнопке с ценой)
    - assert: Открылась страница покупки
    - do: (Только для десктопа) Обновить страницу
    - assert: Страница обновилась. Все города, указанные в форме поиска, остаются на месте.
manual: true
Функциональность: Содержание выдачи
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Автопрогрев неизвестных дат в Динамике цен':
    - do: 'Открыть главную страницу Путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Кейптаун
        Туда: 5 число следующего месяца
        Обратно: любое другое число следующего месяца, для которого нет цены в календаре
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку "Найти"
    - assert: >-
        Открылась страница выдачи.

        На выдаче присутствует блок Динамики цен.

        Десктоп: https://jing.yandex-team.ru/files/gouken67/1442_1_desktop.png

        Тач: https://jing.yandex-team.ru/files/gouken67/1442_1_touch.png

        Десктоп: В блоке 7 кнопок с ценами: кнопка для текущего дня и 6 кнопок за +- 3 ближайших дня.

        Тач: В блоке 3 кнопки с ценами и одна кнопка Смотреть. Кнопки с ценами содержат цены и даты для текущего дня и +-1 ближайших дня.

        Цены на кнопках постепенно меняются на более дешёвые.
    - do: |-
        Дождаться, когда на всех кнопках будут получены точные цены (без значка ~).
        Кликнуть по Смотреть весь календарь.
    - assert: |-
        Десктоп: Открывается окно Динамики цен.
        Выбрана вкладка Таблица цен. Клетка, соответствующая датам Туда-Обратно на выдаче, выделена жёлтым цветом.
        Происходит обновление цен для промежутков, на которые цена была неизвестна (лежат по диагонали от выделенной клетки), а также на 6 дополнительных клеток вокруг жёлтой.

        https://jing.yandex-team.ru/files/gouken67/1443_3.png

        Тач: Открывается шторка Динамики цен.
        Происходит, либо уже завершилось получение цен за 6 ближайших дней.

        https://jing.yandex-team.ru/files/gouken67/dynamics-auto-refresh-touch-1.png
    - do: Кликнуть по клетке с уже известной ценой
    - assert: |-
        Осуществляется переход на выдачу Москва - Кейптаун для выбранного дня.
        Самая дешёвая цена на выдаче совпадает с тем, что было указано на кнопке в блоке Динамики цен.
    - do: |-
        Дождаться окончания опроса партнёров
        Через 1 мин. открыть календарь в форме поиска для поля Туда
    - assert: |-
        Под датой обратно стоит цена, равная стоимости минимального предложения на выдаче

        https://jing.yandex-team.ru/files/gouken67/dynamics-auto-refresh-touch-2.png
manual: true
Функциональность: Динамика
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Основной кейс для работы с Динамикой цен (Десктоп)':
    - do: 'Открыть главную страницу Путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Кейптаун
        Туда: 5 число следующего месяца
        Обратно: любое другое число следующего месяца
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку "Найти"
    - assert: >-
        Открылась страница выдачи.

        На выдаче присутствует блок Динамики цен с кнопками:

        https://jing.yandex-team.ru/files/gouken67/1442_1_desktop.png

        В блоке 7 кнопок с ценами: кнопка для текущего дня и 6 кнопок
        за +- 3 ближайших дня.
    - do: |-
        Дождаться, когда догрузятся цены на всех кнопках
        Кликнуть по одной из кнопок
    - assert: |-
        Осуществляется переход на выдачу Москва - Кейптаун для выбранного дня.
        Самая дешёвая цена на выдаче совпадает с тем, что было указано на кнопке в блоке Динамики цен.
    - do: Кликнуть по Смотреть весь календарь.
    - assert: |-
        Открывается окно Динамики цен.
        Выбрана вкладка Таблица цен. Клетка, соответствующая датам Туда-Обратно на выдаче, выделена жёлтым цветом.
        Происходит обновление цен для промежутков, на которые цена была неизвестна (лежат по диагонали от выделенной клетки), а также на 6 дополнительных клеток вокруг жёлтой.

        https://jing.yandex-team.ru/files/gouken67/1443_3.png
    - do: Проскроллить Таблицу цен стрелочками вниз и вправо
    - assert: Таблица цен проскроллилась на 1 столбец вправо и на 1 строку вниз
    - do: Проскроллить Таблицу цен стрелочками вверх и влево
    - assert: Таблица цен проскроллилась на 1 столбец влево и на 1 строку вверх
    - do: Кликнуть по клетке со значком лупы
    - assert: Значок лупы меняется на жёлтый спиннер. Через какое-то время появляется цена, характерная для выбранного периода времени Туда-Обратно.
    - do: Кликнуть по клетке с ценой
    - assert: |-
        Осуществляется переход на выдачу Москва - Кейптаун для выбранного дня.
        Самая дешёвая цена на выдаче совпадает с тем, что было указано на кнопке в блоке Динамики цен.
manual: true
Функциональность: Динамика
Устройство:
    - Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
    - Testing
    - Production
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Основной кейс для работы с Динамикой цен (Тач)':
    - do: 'Открыть главную страницу Путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Кейптаун
        Туда: 5 число следующего месяца
        Обратно: любое другое число следующего месяца
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку "Найти"
    - assert: >-
        Открылась страница выдачи.

        На выдаче присутствует блок Динамики цен с кнопками:

        https://jing.yandex-team.ru/files/gouken67/1442_1_touch.png

        В блоке 3 кнопки с ценами и одна кнопка Смотреть. Кнопки с ценами содержат цены и даты для текущего дня и +-1 ближайших дня.
    - do: |-
        Дождаться, когда догрузятся цены на всех кнопках
        Тапнуть по одной из кнопок
    - assert: |-
        Осуществляется переход на выдачу Москва - Кейптаун для выбранного дня.
        Самая дешёвая цена на выдаче совпадает с тем, что было указано на кнопке в блоке Динамики цен.
    - do: |-
        Тапнуть по Смотреть весь календарь.
        В открывшейся шторке тапнуть по кнопке Открыть полный календарь.
    - assert: |-
        Осуществляется переход на полный календарь Динамики цен.
        Календарь проскроллен до сегодняшней даты

        https://jing.yandex-team.ru/files/gouken67/dynamics-main-flow-touch-1.png
    - do: Доскроллить календарь до выбранного промежутка
    - assert: |-
        Выбранный промежуток выбелен жёлтым цветом
        Цены за промежутки за 6 ближайших дней либо уже известны, либо ещё ищутся (крутится жёлтый спиннер)
    - do: Тапнуть по строке с примерной/неизвестной ценой
    - assert: В строке появляется жёлтый спиннер. Через какое-то время появляется цена, характерная для выбранного периода времени Туда-Обратно.
    - do: Кликнуть по клетке с ценой
    - assert: |-
        Осуществляется переход на выдачу Москва - Кейптаун для выбранного дня.
        Самая дешёвая цена на выдаче совпадает с тем, что было указано на кнопке в блоке Динамики цен.
manual: true
Функциональность: Динамика
Устройство:
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
    - Testing
    - Production
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Таблица цен в Динамике цен':
    - do: 'Открыть главную страницу Путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Кейптаун
        Туда: 5 число следующего месяца
        Обратно: любое другое число следующего месяца, для которого нет цены в календаре
        Пассажиры: 1 взрослый
        Класс: Эконом
    - do: Нажать кнопку "Найти"
    - assert: >-
        Открылась страница выдачи.
        https://jing.yandex-team.ru/files/gouken67/1442_1_desktop.png

        В блоке 7 кнопок с ценами: кнопка для текущего дня и 6 кнопок за +- 3 ближайших дня.

        Цены на кнопках постепенно меняются на более дешёвые.
    - do: |-
        Дождаться, когда на всех кнопках будут получены точные цены (без значка ~).
        Кликнуть по Смотреть весь календарь.
    - assert: |-
        Открывается окно Динамики цен.
        Выбрана вкладка Таблица цен. Клетка, соответствующая датам Туда-Обратно на выдаче, выделена жёлтым цветом.
        Происходит обновление цен для промежутков, на которые цена была неизвестна (лежат по диагонали от выделенной клетки), а также на 6 дополнительных клеток вокруг жёлтой.

        https://jing.yandex-team.ru/files/gouken67/1443_3.png
    - do: Проскроллить Таблицу цен стрелочками вниз и вправо
    - assert: Таблица цен проскроллилась на 1 столбец вправо и на 1 строку вниз
    - do: Проскроллить Таблицу цен стрелочками вверх и влево
    - assert: Таблица цен проскроллилась на 1 столбец влево и на 1 строку вверх
    - do: Кликнуть по клетке со значком лупы
    - assert: Значок лупы меняется на жёлтый спиннер. Через какое-то время появляется цена, характерная для выбранного периода времени Туда-Обратно.
    - do: |
        Доскроллить строки и столбцы случая, когда Туда = Обратно
        https://jing.yandex-team.ru/files/gouken67/Diagonal.png
    - assert: Под клеткой сегодняшнего дня отображается столбец из серых клеток с '-'. Серые клетки заполняют всё пространство под диагональю совпадающих Туда-Обратно

    - do: Кликнуть по клетке с уже известной ценой
    - assert: |-
        Осуществляется переход на выдачу Москва - Кейптаун для выбранного дня.
        Самая дешёвая цена на выдаче совпадает с тем, что было указано на кнопке в блоке Динамики цен.
manual: true
Функциональность: Динамика
Устройство:
    - Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
  'Страница покупки не должна открываться при переходе на сайт партнёра':
    - do: 'Открыть главную страницу Путешествий, вкладка Авиабилеты'
    - do: |-
          Заполнить форму поиска билетов
          Откуда: Москва
          Куда: Санкт-Петербург
          Туда: 5 число следующего месяца
          Обратно: любое другое число следующего месяца, для которого нет цены в календаре
          Пассажиры: 1 взрослый
          Класс: Эконом
    - do: Нажать кнопку "Найти"
    - assert: >-
          Открылась страница выдачи.
    - do: Кликнуть по жёлтой кнопке с ценой для первого сниппета
    - assert: Происходит переход на сайт партнёра в новой вкладке
    - do: Вернуться на предыдущую вкладку
    - assert: Вернулись на страницу выдачи
    - do: (Только для десктопа) Кликнуть по синей ссылке с названием партнёра, расположенной под жёлтой кнопкой (если ссылка есть)
    - assert: Происходит переход на сайт партнёра в новой вкладке. В старой вкладке остаёмся на странице выдачи
    - do: |
          (Только для десктопа) Вернуться на страницу выдачи
          Кликнуть по ссылке Ещё n вариантов для первого варианта (если она есть)
    - assert: Открывается страница покупки
manual: true
Функциональность: Переход к партнёру
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
feature: Авиа
type: Выдача
description: ''
specs:
    'Проверка отображения корректного тарифа при использовании фильтра С багажом':
        - do: |-
              Зайти на главную,
              На вкладке авиа ввести в поля
              * откуда - Екатеринбург
              * куда - Москва
              * туда - 5 число следующего месяца
              * обратно не заполняем
              Кликнуть "Найти"
        - assert: Произошел переход на страницу выдачи
        - do: |
              Убедиться, что выбрана сортировка Сначала рекомендуемые, по возрастанию
              Применить фильтр Авиакомпания = S7, чекбокс Комбинации авиакомпаний снять
        - assert: На выдаче остались варианты от авиакомпании S7
        - do: Проверить наличие багажной информации на сниппете
        - assert:  |
              Багажная информация содержатся в правой части сниппета в виде иконки "чемоданчик на колесах" зеленого или черного цвета.
        - do: Применить фильтр "С багажом"
        - assert: |
              Выдача обновилась
              Во всех сниппетах иконка багажа зеленого цвета
              Тач: на иконке багажа цифрой указан предельный вес багажа
              Десктоп: рядом с иконкой указан предельный вес багажа и количество багажных мест.
        - do: Открыть выбор тарифов (кликнуть в правую часть сниппета, на багажную информацию или на кнопку с ценой)
        - assert: Среди выбора тарифов нет тарифов без багажа
        - do: Кликнуть по первому сниппету (не по кнопке с ценой и не по тарифной информации)
        - assert: |
              Осуществился переход на страницу варианта
              Выбран самый дешёвый тариф, у которого есть багаж
        - do: |
              Вернуться на выдачу
              Снять фильтр С багажом
        - assert: Выдача снова обновилась. На сниппетах выбран самый дешёвый тариф (без багажа)
manual: true
Функциональность: Тарифы авиа
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Smoke
feature: Авиа
type: Выдача
description: ''
specs:
  'Проверка фильтра пересадок "Города пересадок"':
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Екатеринбург
        Куда: Токио
        Туда: 5 число следующего месяца, дату обратно не ставить
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: >-
        Assert: Открылась страница выдачи. В фильтре пересадок ничего не
        выбрано.
    - do: |
        (Шаг для тачей) Открыть блок с фильтрами, нажав на кнопку с ползунками
        https://jing.yandex-team.ru/files/gouken67/Ползунок%20фильтров%20на%20тачах.png
    - do: Кликнуть по фильтру Пересадки
    - do: >-
        Assert: Открылся блок фильтра пересадок. Под ползунком с длительностью пересадки располагается блок Города пересадок.
        Галочки не на одном из пунктов не стоит.
    - do: |
        Выставить чекбокс Все города
        Вернуться на выдачу
    - assert: |
        Все остальные чекбокссы под выбранным ставятся в этот же момент.
        (Для десктопа) Цвет кнопки фильтра Пересадки становится тёмно-серым.
        Количество вариантов на выдаче не изменилось
    - do: |
        Снова открыть фильтр Пересадки
        (Шаги для десктопа) Навести курсор на код AUH для города Абу-Даби
        Кликнуть по появившейся надписи Только (если Абу-Даби нет, поискать на другую дату, либо пропустить шаги)
        (Шаги для тача) Снять чекбокс Все города
        Установить чекбокс для Абу-Даби (если Абу-Даби нет, поискать на другую дату, либо пропустить шаги)
    - do: Вернуться на выдачу
    - assert: Вместо выдачи появился фильтрояк "Нет подходящих вариантов" и синий бабл "Пересадки" с крестиком
    - do: Кликнуть по крестику синего бабла "Пересадки" (если Абу-Даби не было, пропустить шаг)
    - assert: Снова вернулись на выдачу, ни один фильтр не выбран
    - do: |
        Открыть форму поиска
        Заполнить форму следующими данными:
        Откуда: Екатеринбург
        Куда: Сочи
        Туда: 5 число следующего месяца
        Обратно: 10 число следующего месяца
        Пассажиры: 1 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - assert: Открылась страница выдачи Екатеринбург - Сочи.
    - do: |
        (Шаг для тачей) Открыть блок с фильтрами, нажав на кнопку с ползунками
        https://jing.yandex-team.ru/files/gouken67/Ползунок%20фильтров%20на%20тачах.png
    - do: Кликнуть по фильтру Пересадки
    - do: >-
        Assert: Показался блок фильтра пересадок. Под ползунком с длительностью пересадки располагается блок Города пересадок.
        Есть переключатель направления Туда, Обратно. Выбрано Туда.
        Галочки не на одном из пунктов не стоит.
    - do: |
        Выставить город пересадки Туда = Москва
        Переключиться на направление Обратно
        Выставить город пересадки Обратно = Москва
        Вернуться на выдачу
    - assert: На выдаче остались только прямые рейсы и рейсы с пересадками в Москве (SVO, DME, VKO, ZIA - могут быть не все сразу)
manual: true
Функциональность: Фильтры и сортировки
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Tag: Regress
feature: Авиабилеты
type: Выдача
description: ''
specs:
    Проверка отображения признаков заказа на Я.Путешествиях:
        - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Москва
              Куда: Санкт-петербург
              Туда: 5 число следующего месяца, дату обратно не ставить.
              Пассажиры: 1 взрослый
              Класс: Эконом
        - do: Нажать кнопку “Найти”
        - assert: >-
              Открылась страница выдачи.
        - do: Применить фильтр Авиакомпания = Аэрофлот
        - assert: |
              Происходит обновление выдачи
              Отображаются сниппеты, у которых есть лейбл Заказ на Я.Путешествиях
        - do: Кликнуть по кнопке с ценой для сниппета с лейблом Заказ на Я.Путешествиях
        - assert: |
              Открывается попап/шторка с тарифами
              У вариантов в качестве названия партнёра указано Я.Путешествия в кнопке с ценой
              https://jing.yandex-team.ru/files/gouken67/Тарифная%20шторка.png
        - do: Кликнуть в сниппет с лейблом Заказ на Я.Путешествиях
        - assert: |
              Осуществляется переход на страницу покупки
              Среди партнёров есть предложение от Я.Путешествий

files:
    - tests/common/avia/serp/avia-serp-travel-order-label.hermione.ts

Функциональность: Фильтры и сортировки
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение: Testing
Автор: gouken67
Tag: Smoke
feature: Комод
type: Поиск
description: ''
specs:
  Авиа. Переход по саджестам:
    - do: Выполнить поиск авиа по любому направлению только Туда, 1 пассажир, эконом. Запомнить данные
    - do: Вернуться на главную, обновить страницу (чтобы форма поиска очистилась). Кликнуть по пункту «Откуда»
    - do: Кликнуть по сохраненному саджесту    
    - assert: >-
          Открылась выдача авиа по сохраненным параметрам, в т.ч. класс эконом
    - do: Выполнить поиск авиа по другому направлению Туда-обратно, 3 пассажира, бизнес класс
    - do: Вернуться на главную, обновить страницу (чтобы форма поиска очистилась). Кликнуть по пункту «Откуда»
    - do: Кликнуть по новому саджесту
    - assert: >-
          Открылась выдача авиа по сохраненным параметрам, в т.ч. класс бизнес (!)
manual: true
Сервис: Комод
Устройство:
  - Тач
  - Десктоп
Страница: Главная
Тестирование асессорами: Нет
Автор: papulova
Окружение: Production
feature: Комод
type: Поиск
description: ''
specs:
  Авиа. Сохранение поиска в саджесты с главной:
    - do: Выполнить поиск авиа по любому направлению только Туда, 1 пассажир. Запомнить эти данные
    - do: Вернуться на главную, обновить страницу (чтобы форма поиска очистилась). Кликнуть по пункту «Откуда»
    - assert: >-
        В списке саджестов появился пункт с выполненным поиском. Цвет фона светло желтый. 
        Отображаются данные: направление, дата, 1 пассажир, слева есть иконка часиков
    - do: Выполнить поиск авиа по другому направлению Туда-обратно, 3 пассажира, бизнес класс
    - do: Вернуться на главную, обновить страницу (чтобы форма поиска очистилась). Кликнуть по пункту «Откуда»
    - assert: >-
        : В списке саджестов появился пункт с выполненным поиском. Цвет фона светло желтый. Есть заголовок «Вы искали». 
          Отображаются данные: направление, даты туда-обратно, 3 пассажира, слева есть иконка часиков
    - do: Выполнить еще 2 других поиска 
    - assert: В саджесты сохранились только последние 3 поиска
manual: true
Сервис: Комод
Устройство:
  - Тач
  - Десктоп
Страница: Главная
Тестирование асессорами: Нет
Автор: papulova
Окружение: Production
feature: Комод
type: Поиск
description: ''
specs:
  Авиа. Сохранение поиска в саджесты с выдачи:
    - do: Перейти на выдачу авиа по любому направлению
    - do: На выдаче выполнить перепоиск по другому направлению. Запомнить данные
    - do: Вернуться на главную, обновить страницу (чтобы форма поиска очистилась). Кликнуть по пункту «Откуда»
    - assert: >-
        В списке саджестов появился пункт с выполненным поиском. Цвет фона светло желтый. 
        Отображаются данные: направление, дата, 1 пассажир, слева есть иконка часиков
    - do: Выполнить поиск авиа по другому направлению Туда-обратно, 3 пассажира, бизнес класс
    - do: Вернуться на главную, обновить страницу (чтобы форма поиска очистилась). Кликнуть по пункту «Откуда»
    - assert: >-
          В списке саджестов появился пункт с выполненным поиском. Цвет фона светло желтый. Есть заголовок «Вы искали». 
          Отображаются данные: направление, дата, 3 пассажира, слева есть иконка часиков
    - do: Кликнуть по пункту «Куда» 
    - assert: Результат как в предыдущем шаге
manual: true
Сервис: Комод
Устройство:
  - Тач
  - Десктоп
Страница: Главная
Тестирование асессорами: Нет
Автор: papulova
Окружение: Production
feature: Автобусы
type: Главная
description: |
    Проверка корректности загрузки главной страницы и ее элементов
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Главная. Общий вид инфоблока "Билеты на автобусы по России и СНГ":
        - do: Установить в тюне (https://yandex.ru/tune) Екатеринбург, обновить главную Путешествий, раздел “Автобусы”
        - assert: В форме поиска город отправления - Екатеринбург
        - do: Проскролить страницу до инфоблока “Билеты на автобусы по России и СНГ”
        - assert: |
              SEO блок “Билеты на автобусы по России и СНГ” состоит из предложений с популярными направления :
              -  примерный внешний вид для десктопа https://jing.yandex-team.ru/files/semirka/Screenshot_11-1.png
              - примерный внешний вид для тача (выглядит как карусель) https://jing.yandex-team.ru/files/semirka/Screenshot_10-1.png
        - do: Установить в тюне (https://yandex.ru/tune) Москва, обновить главную Путешествий, раздел “Автобусы”
        - assert: В форме поиска город отправления - Москва
        - assert: в футере  SEO блок "ПОможем с заказом" - поменялся номер телефона 

Сервис: Автобусы
Страница: Главная
Функциональность: работа с главной страницей
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
Tag: Smoke
Автор: arhey
feature: Автобусы
type: Главная
description: |
    Кейс проверяет содержимое инфоблока "Как купить билет на автобус на Яндекс.Путешествиях".
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы».
specs:
  Автобусы. Главная. Общий вид инфоблока «Как купить билет на автобус»:
        - do: Проскролить страницу до инфоблока "Как купить билет на автобус на Яндекс.Путешествиях".
        - assert: Верстка на десктопе и таче не поехала
        - assert: |
              Инфоблок состоит из:
              - "Найдите междугородние рейсы
                 Укажите направление и дату поездки в строке поиска и нажмите «Найти» — вы увидите актуальное расписание и стоимость билетов.";
              - "Выберите подходящий вариант
                 Чтобы купить дешевые автобусные билеты онлайн, используйте фильтр по цене.";
              - "Забронируйте билеты
                Укажите паспортные данные: свои и других пассажиров, с которыми вы путешествуете.";
              - "Оплатите заказ банковской картой
                После оплаты скачайте билет в личном кабинете на странице «Ваши билеты». Распечатайте билет, чтобы предъявить его при посадке в автобус."

manual: true
Функциональность: работа с главной страницей
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Да
Tag: Smoke
Автор: arhey
feature: Автобусы
type: Главная
description: |
    Кейс проверяет содержимое инфоблока "Популярные направления".
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы».
specs:
  Автобусы. Главная. Общий вид инфоблока «Популярные направления»:
    - do: |
           Установить в тюне (https://yandex.ru/tune) Москва.
           Обновить главную Путешествий, раздел “Автобусы”
           Проскролить страницу до инфоблока "Популярные направления".
    - assert: Инфоблок состоит из списка популярный направлений «Откуда - Куда» и минимальной цены «от Х Р»
    - do: |
           Найти в списке направлений "Москва - Воронеж", "Москва - Санкт-Петербург" или "Санкт-Петербург - Великий Новгород" и
           Кликнуть по одному из них. Если в списке нет направления - можно кликнуть по любому другому, но выдача будет пустой.
    - assert: |
           Перешли на страницу с заголовком «Билеты на автобус А - Б»
           Открыт календарь, дата не выбрана
           Под заголовком текст «Ищите автобусные билеты на нужную дату. Забронируйте билет на автобус онлайн, получите информацию о перевозчике, автовокзалах и остановках, узнайте время в пути — всё это в одном месте.»
           Есть заголовок «Расписание автобусов А - Б» и сниппеты с вариантами автобусов.
           Есть заголовок «Информация об автобусном маршруте А - Б с указанием минимальной стоимости проезда, расстояния между городами и минимальным временем в пути - на основе поисковой выдачи.
           Есть заголовок «Другие популярные направления», где перечислены пополярные направления либо в пункт А, либо в пункт Б.

manual: true
Функциональность: работа с главной страницей
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Да
Автор: arhey
Tag: Smoke
feature: Автобусы
type: Главная
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular
    Направления, которые чаще всего есть в тестинге: 
    Москва - Санкт-Петербург, 
    Москва - Воронеж, 
    Москва - Богучар 
    
    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
  Автобусы. Главная. Проверка блоков недавние поиски:
    - do: Совершить поиск, например, "Москва - Санкт-Петербург" на завтра
    - assert: Открывается поисковая выдача по заданному маршруту
    - do: Вернуться на Яндекс.Путешествия, вкладка «Автобусы»
    - assert: |
        Сервис отображается без ошибок, верстка не поехала.
        Под формой поиска появился блок с недавним поиском, например, Москва - Санкт-Петербург.
        Указана цена (если маршруты были найдены), время (может не быть) и дата.
    - do: Кликнуть на блок недавнего поиска
    - assert: |
        Открылась выдача, результат выдачи соответствует запросу в блоке, форма
        поиска заполнена данными запроса

manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Главная
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
feature: Автобусы
type: Главная
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
  Автобусы. Главная. Проверка полей "Откуда" и "Куда":
    - do: Ввести в поля "Откуда" и "Куда" направление "Москва - Санкт-Петербург".
    - assert: В полях отображаются выбранные города.
    - do: Нажать на кнопку "Стрелочка".
    - assert: Города меняются местами.
    - do: |
        Очистить поля "Откуда" и "Куда", нажав на «Х».
        Нажать на кнопку "Найти".
    - assert: |
        Появляется сообщение об ошибке "Укажите пункт отправления". Поля
        "Откуда" и "Куда" отображаются красным шрифтом.

manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы
Тестирование асессорами: Да
Tag: Smoke
Автор: arhey
Окружение:
  - Production
  - Testing
feature: Автобусы
type: Главная
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
  Автобусы. Главная. Проверка работы календаря:
    - do: Ввести в поля "Откуда" и "Куда" направление "Москва - Санкт-Петербург".
    - do: Нажать на поле "Когда".
    - assert: |
        Календарь открывается отдельным всплывающим окном и содержит:
        - Сам календарь
        - Кнопки "Сегодня", "Завтра"
        - С левой стороны отображается список с месяцами
    - do: Кликнуть вне календаря.
    - assert: Календарь закрывается.
    - do: Открыть календарь. Кликнуть на кнопку "Сегодня"/"Завтра".
    - assert: |
        Календарь закрывается.
        Вместо надписи "Когда" отображается надпись "Сегодня"/"Завтра".
    - do: Открыть календарь. Проскроллить
    - assert: |
        Календарь скроллится.
        Вместе со скроллом календаря движется красный индикатор месяца.
    - do: Выбрать любой месяц из списка с месяцами.
    - assert: Календарь подскроллен к выбранному месяцу.
    - do: Выбрать число.
    - assert: |
        Календарь закрывается.
        Дата соответствует выбранному месяцу и числу.
    - do: В поле "Когда" нажать на крестик.
    - assert: Поле "Когда" очищается.
    - do: Нажать на кнопку "Найти".
    - assert: Отображается выдача на СЕГОДНЯ по выбранному маршруту.
    - do: |
        Вернуться к форме поиска.
        Заполнить поле "Когда"
        Нажать на кнопку "Найти".
    - assert: Отображается выдача выбранного маршрута с верной датой.

manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Главная
Сервис: Автобусы
Тестирование асессорами: Да
Tag: Smoke
Автор: arhey
Окружение:
  - Production
  - Testing
feature: Автобусы
type: Поиск
description: |
    Проверяем общий вид поисковой выдачи
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Поиск. Общий вид поисковой выдачи:
        - do: Совершить поиск, например, "Москва - Санкт-Петербург" на завтра
        - assert: открылась страница с поисковой выдачей по направлению «Москва - Санкт-Петербург» с завтрашней датой отправления
        - assert: при загрузке выдачи есть скелетоны
        - assert: футер и хедер присутствуют во время загрузки данных и после
        - assert: |
              Верстка страницы корректна: элементы не налазят друг на друга.
              В хедере страницы форма поиска свернута в компактный вид
              Есть блок с фильтрами:
                - Только для десктопа: фильтры по цене, времени и остановкам находятся прямо на экране
                - Только для тача: фильтры спрятаны, чтобы открыть фильтры надо нажать на кнопку рядом с формой поиска.
              Есть заголовок поисковой выдачи: Автобусы из "город отправления" в "город прибытия", дата (число, месяц)
              Есть сортировки
                - Только для десктопа: под заголовком расположены сортировки по времени отправления, по  времени прибытия, по времени в пути и по цене
                - Только для тача: сортировки спрятаны, чтобы открыть сортировки надо нажать на кнопку  рядом с формой поиска.
              Присутствуют сниппеты с данными о рейсе и кнопкой "Выбрать"
              Между сниппетами или под сниппетом есть баннер с рекламой
              В футере есть ссылка на поиск билетов в обратном направлении и хлебными крошками


Сервис: Автобусы
Страница: Выдача
Функциональность: Поиск, общий вид выдачи
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
    - Production
Тестирование асессорами: Да
Tag: Smoke
Автор: arhey
feature: Автобусы
type: Поиск
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
  Автобусы. Поиск. Проверка работы формы поиска:
    - do: Совершить поиск, например, "Москва - Санкт-Петербург" на завтра
    - assert: Открылась страница с поисковой выдачей
    - do: Кликнуть на форму поиска в правом верхнем углу
    - assert: |
        Форма развернулась
        Поле «Откуда» заполнено пунктом отправления, есть крестик очистки поля
        Есть кнопка со стрелками для смены направлений
        Поле «Куда» заполнено пунктом прибытия, есть крестиком очистки поля
        Есть поле с заполненной датой отправления и крестиком очистки поля
        Есть кнопка "Найти"
    - do: Кликнуть на стрелочку смены направления
    - assert: Направления поменялись местами
    - do: Кликнуть мимо формы поиска
    - assert: Форма свернулась в компактный вид
    - do: Кликнуть в форму поиска, а затем на пункт отправления
    - assert: |
        Пункт отправления выделен
        Открылся список вариантов направлений
        У каждого варианта подписан тип (остановка, автовокзал и тд), город и страна
    - do: Клик на крестик в поле пункта отправления
    - assert: |
        Поле очистилось
        Появился список мест с подписью "Вы искали" в нем указан город, который только что стерли, например «Санкт-Петербург».
    - do: Повторить поиск для направлений «Москва - Воронеж», «Москва - Великий Новгород», «Москва - Тверь» затем снова очистить «Х» поле «Откуда»
    - assert: |
        Поле очистилось
        Появился список мест с подписью "Вы искали" в нем уже указаны «Тверь», «Великий Новгород» и «Воронеж»
        Под недавними поисками есть список предлагаемых направлений и он не подсвечиваются

manual: true
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Поиск
Сервис: Автобусы
Тестирование асессорами: Да
Tag: Smoke
Автор: arhey
Окружение:
  - Production
  - Testing
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Ввода данных. Валидация документов. Другое:
        - do: Выбрать любой рейс из выдачи
        - do: Нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: |
              Заполнить все поля, кроме документов и даты рождения, валидными данными (ФИО, пол, электронная почта, телефон)
              В поле "Документ" выбрать "Другое", а поля "Серию и номер" и "Гражденство" не заполнять
              Нажать "Ввести карту и оплатить"
        - assert: |
              Сработала валидация, поле "Серия и номер" и "Гражденство" выделено красным.
              При наведении на поле хинты-подсказки "Укажите номер документа" и "Выберите страну из списка"
              https://jing.yandex-team.ru/files/arhey/2022-04-07T07:12:26Z.8084971.png
        - do: Ввести валидную серию и номер паспорта, например на "72 5633553", выбрать страну, например "Алжир" и нажать "Ввести карту и оплатить"
        - assert: Переходим на этап ввода карты и покупки билета

manual: true
Функциональность: Валидация данных пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Ввода данных. Валидация документов. Загранпаспорт:
        - do: Выбрать любой рейс из выдачи
        - do: Нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: |
              Заполнить все поля, кроме документов, валидными данными (ФИО, дата рождения, пол, электронная почта, телефон)
              В поле "Документ" выбрать загранпаспорт "Серию и номер" не заполнять
              Нажать "Ввести карту и оплатить"
        - assert: |
              Сработала валидация, поле "Серия и номер" выделено красным.
              При наведении на поле хинт-подсказка "Укажите номер документа"
              https://jing.yandex-team.ru/files/arhey/2022-04-07T06:56:27Z.888b951.png
        - do: Ввести валидную серию и номер паспорта, например на "72 5633553" и нажать "Ввести карту и оплатить"
        - assert: Переходим на этап ввода карты и покупки билета

manual: true
Функциональность: Валидация данных пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Ввод данных пассажира
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    1. Перейти Яндекс.Путешествия, вкладка «Автобусы».
    2. Сформировать выдачу по направлению "Москва - Санкт-Петербург" на любой доступный день
specs:
    Автобусы. Ввода данных. Валидация выбора пола:
        - do: Выбрать любой рейс из выдачи
        - do: Нажать кнопку "Выбрать"
        - assert: Перешли на шаг заполнения данных пассажира
        - do: |
              Заполнить все поля, кроме пола, валидными данными (ФИО, дата рождения, документы, электронная почта, телефон)
              В поле ФИО ввести мужские даннын
              Пол выбрать "Женский"
        - do: Нажать кнопку "Ввести карту и оплатить"
        - assert: |
              Сработала валидация, поле "Пол" выделено красным.
              При наведении на поле хинт-подсказка "Пол не соответствует отчеству"
              https://jing.yandex-team.ru/files/arhey/2022-04-07T06:06:32Z.031bb18.png
        - do: Изменить пол на "Мужской" и снова нажать кнопку "Ввести карту и оплатить"
        - assert: Перешли на шаг покупки билетов

manual: true
Функциональность: Валидация данных пасссажира
Устройство:
    - Десктоп
    - Тач
Страница: Ввод данных пассажира
tlds: ru
Сервис: Автобусы
Тестирование асессорами: Нет
Tag:
Автор: arhey
feature: Автобусы
type: Выдача
description : |
    Сформировать поисковую выдачу на любом направлении, например Москва - Санкт-Петербург на завтра.
    Ничего не делать со вкладкой и выдачей в течение 15 минут, в это время на соседней вкладке можно проверять другие сценарии
specs:
  Автобусы. Поиск. Появление черного пирога - «Результаты устарели»:
    - do: Перейти на вкладку из предусловия
    - assert: |
        Появилось модальное окно с заголовком «Результаты устарели»
        Фон вокруг модалки затемнен
        В модальном окне текст "Наличие мест и цены на «Дата-Месяц» по направлению Москва — Санкт-Петербург могли измениться"
        Есть кнопка "Обновить"
    - do: Кликнуть на кнопку "Обновить"
    - assert: |-
        Модальное окно закрылось
        Страница с выдачей обновилась

manual: true
Функциональность: 'Поиск, общий вид выдачи'
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Автобусы
Тестирование асессорами: Да
Tag: Smoke
Окружение:
  - Production
  - Testing
Автор: arhey
feature: Автобусы
type: Выдача
description: |
    Проверяем работу фильтров на странице выдачи
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
    Только для тача: чтобы попасть в меню сортировок и фильтров нужно нажать сюда
    https://jing.yandex-team.ru/files/arhey/2021-12-13T07:02:48Z.070b2b6.png
specs:
  Автобусы. Поиск. Проверка работы фильтров на странице выдачи:
    - do: Совершить поиск, например, "Москва - Санкт-Петербург" на завтра
    - assert: открылась страница с поисковой выдачей
    - do: |
          По очереди раскрыть фильтры по:
          Цене
          Времени отправления / прибытия
          Остановкам отправления / прибытия
    - assert: фильтры открываются, верстка корректна
    - do: Раскрыть фильтр по цене
    - assert: |
          Фильтр открылся, присутствует ползунок для выбора диапазона цены
          Подписана минимальная и максимальная выбранная на текущий момент цена
    - do: Применить фильтр по цене так, чтобы в выдаче остались варианты
    - assert: |
          Выдача фильтруется согласно заданному диапазону
          Только десктоп: Cправа от панели фильтров появилась кнопка "Сбросить"
    - do: Применить фильтр цены так, чтобы результаты на выдаче отсутствовали, чтобы это сделать нужно подвинуть оба ползунка на середину диапазона
    - assert: |
          Отображается заглушка "Нет подходящих вариантов" с текстом "Ни один вариант из результатов поиска не соответствует заданным фильтрам. Пожалуйста, сбросьте один или несколько фильтров."
          Отображается кнопкой сброса фильтра "Цены" с крестиком
    - do: Нажать на крестик и сбросить фильтр по цене
    - assert: |
          В выдаче вновь есть рейсы
    - do: Раскрыть фильтр времени отправления / прибытия
    - assert: |
          Фильтр открылся, присутствуют чекбоксы с диапазонами времени отправления и прибытия, утро, день, вечер, ночь
          У каждого диапазона подписан интервал времени (периода времени может не быть в фильтре, если нет рейсов в этом диапазоне)
    - do: Применить фильтр времени отправления / прибытия
    - assert: выдача фильтруется согласно выбранному фильтру
    - do: Раскрыть фильтр Остановки отправления / прибытия
    - assert: Фильтр открылся, присутствуют чекбоксы с пунктами отправления и прибытия
    - do: Выбрать остановку и применить фильтр
    - assert: Выдача фильтруется согласно заданным данным

manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Автобусы
Тестирование асессорами: Да
Tag: Smoke
Автор: arhey
Окружение:
  - Production
  - Testing
feature: Автобусы
type: Выдача
description: |
  В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

  Направления, которые чаще всего есть в тестинге:
  Москва - Санкт-Петербург,
  Москва - Воронеж,
  Москва - Богучар

  Перейти Яндекс.Путешествия, вкладка «Автобусы»

specs:
  Автобусы. Проверка работы координат:
    - do: Сформировать поисковую выдачу на любом направлении, например Москва - Великий Новгород на завтра
    - assert: |
        Пункт отправления или прибытия содержит координаты остановки:
        В десктопе он будет подсвечен синим шрифтом, см. скрин https://jing.yandex-team.ru/files/frangetta/2021-02-18_14.54.45-27wiY.png
        В таче будет выводиться ссылка "Станции на карте", см. скрин https://jing.yandex-team.ru/files/papulova/NCBE6EvfKG.png
    - do: Кликнуть на подсвеченный пункт прибытия, либо ссылку "Станции на карте" (тач).
    - assert: |
        Открылась модальное окно с картой
        В десктопе модалка выглядит так: https://jing.yandex-team.ru/files/arhey/2021-12-08T14:30:11Z.75971ac.png
        В таче модалка выглядит так: https://jing.yandex-team.ru/files/arhey/2021-12-08T14:30:11Z.75971ac.png
    - do: Кликнуть по ссылке "Построить маршрут до остановки", либо кнопку "Как добраться" (тач)
    - assert: |
        Открывается новое окно яндекс карт
        В пункте "куда" подставлен адрес остановки, например автовокзал "Великий Новгород"
        На Яндекс.Карте город, в котором лоцируется пользователь, проходящий кейс
    - do: |
        Закрыть модалку.
        На десктопе: по крестику и по клику мимо окна.
        На таче: переходом назад по ссылке Назад, либо аппаратной кнопкой
    - assert: Модалка закрывается корректно

manual: true
Функциональность: 'Поиск, общий вид выдачи'
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Автобусы
Тестирование асессорами: Да
Tag: Smoke
Автор: arhey
Окружение:
  - Production
  - Testing
feature: Автобусы
type: Выдача
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
    Только для тача: чтобы попасть в меню сортирофок и фильтров нужно нажать сюда
    https://jing.yandex-team.ru/files/arhey/2021-12-13T07:02:48Z.070b2b6.png
specs:
  Автобусы. Выдача. Проверка работы сортировок:
    - do: Сформировать поисковую выдачу на любом направлении, например "Москва - Санкт-Петербург" на завтра
    - do: Выбрать сортировку «по времени отправления»
    - assert: Выдача отсортирована по времени отправления от самого раннего до самого позднего
    - do: Выбрать сортировку "по времени прибытия"
    - assert: Выдача отсортирована по времени прибытия от самого раннего до самого позднего
    - do: Выбрать сортировку "по времени в пути"
    - assert: Выдача отсортирована по времени в пути от самого короткого до самого длительного времени в дороге.
    - do: Выбрать сортировку "по цене"
    - assert: Выдача отсортирована по цене от самого дешевого рейса до самого дорогого

manual: true
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Автобусы
Тестирование асессорами: Да
Tag: Smoke
Автор: arhey
Окружение:
  - Production
  - Testing
feature: Автобусы
type: Выдача
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге: 
    Москва - Санкт-Петербург, 
    Москва - Воронеж, 
    Москва - Богучар 

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
  Автобусы. Выдача. Проверка работы выдачи:
    - do: Сформировать поисковую выдачу на любом направлении, например Москва - Санкт-Петербург на завтра    
    - assert: |
        Каждый сниппет содержит корректную информацию о:
        - пунктах отправления и прибытия,
        - времени отправления и прибытия, иногда время прибытия может быть неизвестно
        - времени в пути, иногда может отсутствовать при неизвестном времени прибытия, стоит поискать на другом направлении
        - названии перевозчика,
        - минимальной стоимости билета «от ХХХ Р»,
        - количестве свободных мест.

manual: true
Функциональность: 'Поиск, общий вид выдачи'
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Автобусы
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
feature: Авиабилеты
type: Покупка

specs:
    Проверка связи между фильтром багажа в поиске и на покупке:
        - do: Выполнить поиск авиабилетов по направлению Москва - Екатеринбург на следующий день
        - do: Отфильтровать результаты поиска по авиакомпании "Победа", "S7" или "Аэрофлот"
        - do: Включить фильтр багажа. Если нет варинатов с багажом, выбрать другую авиакомпанию
        - do: Кликнуть по первому сниппету (не по кнопке купить)
        - assert: |
             Открылась страница покупки
             В выпадающем списке тарифов выбран тариф, который содержит багаж
        - do: Перейти обратно на страницу покупки (браузерное "назад")
        - do: Выключить фильтр багажа
        - do: Кликнуть по первому сниппету (не по кнопке купить)
        - assert: |
             Открылась страница покупки
             В выпадающем списке тарифов выбран тариф, который не содержит багаж


files:
    - tests/desktop/avia/order/baggageFilter.hermione.ts

tags: regression

Сервис: Авиа
Функциональность: Инфа на покупке
Устройство:
    - Десктоп
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Отели
type: Бронирование отелей
description: >-
    Для попадания на тестовую страницу бронирования отелей нужно перейти на выдачу, кликнуть фильтр Кешбэк плюса, затем перейти кликом на любой сниппет из выдачи, произойдет переход на страницу отеля, где нужно кликнуть Забронировать у выбранного оффера.

    Для попадания на продовую страницу бронирований нужно сделать запрос в поиске
    Яндекса, например "отель в Москве", далее выбрать отель и кликнуть по
    предложению от Яндекс.Путешествий.
specs:
    Корзина заказа на странице бронирования:
        - do: Выполнить поиск и отфильтровать выдачу по наличию бесплатной отмены
        - do: Перейти на страницу отеля
        - do: Перейти на страницу бронирования, кликнув по офферу с бесплатной отменой
        - assert: открылась страница бронирования отеля
        - assert: >-
              справа вверху есть корзинка (блок со стоимостью и кнопкой Оплатить). Для тачей
              - корзинка должна быть расположена внизу, под блоком Контакты.
        - assert: >-
              есть пункты: указание количества ночей и суммы за них, налоги и сборы
              (может отсутствовать), итоговая сумма (равна сумме за ночи и сбор),
              указание крайней даты для бесплатного возврата (либо ничего, если в блок
              слева указано, что оплата не возвращается)
        - assert: >-
              под корзинкой есть текст со ссылками "Нажимая «Оплатить», вы соглашаетесь с пользовательским соглашением, условиями бронирования.
              Мы подтвердим бронирование и спишем указанную сумму с вашей карты.
              Данные об отеле предоставлены продавцами-партнёрами"
files:
    - tests/common/hotels/book/basket-block-on-book-page.hermione.ts
Устройство:
    - Десктоп
    - Тач
Страница: Бронирование
Сервис: Отели
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
Tag:
    - Smoke
Автор: iliasova
feature: Отели
type: Выдача
description: ''
specs:
  'Бесконечный скролл на выдаче отелей':
    - do: выполнить поиск в крупном населенном пункте
    - assert: 'открылась выдача, соответствующая условиям поиска'
    - do: 'проскроллить выдачу до подвала'
    - assert: |-
        |
        в конце выдачи моргают 2 скелетона
        через какое-то время (в зависимости от скорости интернета, возможно скелетоны совсем не заметите) скелетоны пропадают и добавляется новая пачка отелей
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Тач
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag:
  - hotels-api
  - Smoke
  - Blocker
feature: Отели
type: Бронирование отелей
description: Общий вид страницы бронирования отелей

specs:
    Бронирование отеля НЕзалогин:
        - condition: Быть незалогиненым.
        - do: Перейти на страницу бронирования отеля Вега Измайлово.
              | Заезд завтра, выезд послезавтра, 2 гостя
        - assert: Открылась страница бронирования отеля
        - do: Ввести данные гостей
              | 1 гость - Kirill Ivanov
              | 2 гость - Svetlana Maksimova
              | Электронная почта - ivanov@kirill.com
              | Телефон - 89111111111111
        - do: Нажать на кнопку “Оплатить”
        - assert: Открылась страница оплаты заказа
        - do: Заполнить поля
              | Номер карты - 5100 0027 6715 5462
              | Срок действия - 12/22
              | CVC/CVV - 454
        - do: Снять галочку “Сохранить карту для быстрой оплаты в дальнейшем"
        - do: Нажать на кнопку “Оплатить”
        - assert: Появился лоадер с текстом “Создание заказа Создаем заказ и готовимся к оплате”
        - assert: Элементы на странице задизейблены
        - assert:
              Открылась страница успешной брони отеля. На странице должны соответствовать данные из предыдущих шагов
              | Название отеля
              | Даты заеда и выезда
        - do: Нажать на кнопку "Подробнее о заказе"
        - assert:
              Произошел переход на страницу заказа в личном кабинете. На странице должны соответствовать данные из предыдущих шагов
              | Имя/Фамилия гостей
              | Оплаченная сумма

    Бронирование отеля залогин:
        - condition: Быть залогиненым под
              | Логин - mastertester@yandex.ru
              | Пароль - MasterTester1
        - do: Перейти на страницу бронирования отеля Вега Измайлово.
              | Заезд завтра, выезд послезавтра, 2 гостя
        - assert: Открылась страница бронирования отеля
        - assert: Поле телефона и мейла заполнены данными залогина
        - do: Ввести данные гостей
              | 1 гость - Kirill Ivanov
              | 2 гость - Svetlana Maksimova
        - do: Нажать на кнопку “Оплатить”
        - assert: Открылась страница оплаты заказа
        - do: Заполнить поля
              | Номер карты - 5100 0027 6715 5462
              | Срок действия - 12/22
              | CVC/CVV - 454
        - do: Снять галочку “Сохранить карту для быстрой оплаты в дальнейшем"
        - do: Нажать на кнопку “Оплатить”
        - assert: Появился лоадер с текстом “Создание заказа Создаем заказ и готовимся к оплате”
        - assert: Элементы на странице задизейблены
        - assert:
              Открылась страница успешной брони отеля. На странице должны соответствовать данные из предыдущих шагов
              | Название отеля
              | Даты заеда и выезда
              | Контактные данные - электронная почта и телефон
        - do: Нажать на кнопку "Подробнее о заказе"
        - assert:
              Произошел переход на страницу заказа в личном кабинете. На странице должны соответствовать данные из предыдущих шагов
              | Имя/Фамилия гостей
              | Оплаченная сумма

files:
    - tests/desktop/hotels/book/book-flow.hermione.ts

Сервис: Отели
Автор: iliasova
Устройство:
    - Десктоп
Функциональность: Бронирование
Окружение:
    - Production
    - Testing
Tag: automation (iliasova)
Тестирование асессорами: Нет
feature: Отели
type: Бронирование отелей
description: >-
  **Для попадания на тестовую страницу бронирования отелей выполнить шаги:**

  1. Перейти во вкладку отелей, заполнить все поля и нажать на кнопку "Найти" -
  переход осуществится на страницу выдачи отелей в портале.

  2. В фильтре Партнеров выбрать Expedia, поискать

  3. Кликнуть по любой карточке в отфильтрованной
  выдаче -> произойдет переход на страницу отеля в портале.

  4. В блоке офферов кликнуть Забронировать - произойдет переход на страницу бронирования с формой
  ввода данных гостей.
specs:
  Общий вид страницы бронирования отелей:
    - do: >-
        Перейти на страницу бронирований любого отеля по инструкции из
        подготовки

        P.S лучше всего выбрать отель с возможностью бесплатной отмены (для
        выполнения следующих пунктов), а отель без бесплатной отмены проверить
        отдельно.
    - assert: открылась страница бронирования отеля
    - assert: вверху отобразилось меню портала
    - assert: вкладка отелей выделена
    - assert: >-
        в правом углу на том же уровне есть кнопка авторизации и доступа к
        заказам
        https://jing.yandex-team.ru/files/iliasova/2019-06-18_11.23.26.png
    - assert: |-
        еще ниже отображены хлебные крошки
            * Регион отеля
            * Название отеля
            * Бронирование отеля
            * Оплата
    - assert: вкладка бронирования выделена
    - assert: >-
        справа на том же уровне отображен номер телефона техподдержки (пока
        только десктоп)

        https://jing.yandex-team.ru/files/iliasova/2019-10-02_18.48.05-5n7hz.png
    - assert: |-
        на странице есть информация об отеле:
              * хлебные крошки (Название регина (берется из страницы поиска) - Название отеля - Бронирование - Оплата). Активна крошка Бронирование
              * название
              * оценка
              * адрес
              * даты заеда и выезда
              * количество гостей
              * тип размещения
              * фото номера
              * информация о бесплатной отмене
              * тип питания
              * тип кроватей
              * услуги
              * условия заселения (если отсутуствуют, убедиться, что есть в другом отеле)
        https://jing.yandex-team.ru/files/tcheremnykh/2020-01-27_15-19-40.png
    - assert: под блоком описания отеля располагается блок для ввода данных гостей
    - assert: поля для ввода фамилии и имени гостей
    - assert: >-
        количество пар полей ФИ соответствует количеству гостей в блоке
        информации об отеле
    - assert: |-
        у первого гостя есть приписка "на кого оформляется бронь"
        https://jing.yandex-team.ru/files/iliasova/2019-08-30_12.32.49.png
    - assert: |-
        ниже отображается блок контактов пользователя
               * поле для ввода почты
               * поле для ввода телефона
    - assert: |-
        над полями есть приписка "куда отправить информацию о бронировании"
              https://jing.yandex-team.ru/files/iliasova/2019-08-30_12.30.57.png
    - do: Навести курсор на иконку ? рядом с информацией о бесплатной отмене
    - assert: появился указатель-рука
    - do: Кликнуть по иконке
    - assert: >-
        появился попап с информацией о бесплатной отмене: до какой даты и
        времени можно отменить бесплатно, до какой даты и времени со штрафом,
        сумма штрафа (эти два пункт могут отсутствовать как правило, зависит от
        дальности даты заезда и кол-ва ночей), после какой даты и времени
        стоимость не возвращается
    - do: Кликнуть по крестику на попапе
    - assert: попап закрылся
    - do: Снова кликнуть по иконке информации
    - do: Кликнуть вне раскрывшегося попапа
    - assert: попап закрылся
    - do: Кликнуть по ссылке Еще в блоке Услуги
    - assert: развернулись все услуги
    - assert: все услуги перечислены через ·
    - do: >-
        Кликнуть по ссылке Условия заселения (если их нет, пропустить этот и
        след шаги)
    - assert: развернулся текст с условиями
    - assert: >-
        стрелка на ссылке
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-25_17-34-11.png)
        перевернулась:
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-25_17-35-00.png)
    - do: кликнуть по ссылке Условия заселения еще раз
    - assert: текст с условиями свернулся
    - assert: cтрелка на ссылке перевернулась
    - do: кликнуть по ссылке "пользовательским соглашением"
    - assert: |-
        открылась страница с пользовательским соглашением
        https://yandex.ru/legal/travel_termsofuse
    - do: кликнуть по ссылке "условиями бронирования"
    - assert: >-
        открылась страница с условиями бронирования отелей на сервисе
        "Яндекс.Путешествия"

        https://yandex.ru/legal/hotels_booking_conditions
    - do: кликнуть по ссылке "продавцами-партнерами"
    - assert: открылось модальное окно "Реквизиты"
    - assert: фон за окном затемнился
    - assert: 'в окне есть реквизиты организаций: отеля, партнера, Яндекса'
    - assert: >-
        для каждой организации есть информация: ОГРН (только для РФ),
        фактический и юридический адреса, время работы (фактического может не
        быть, если он совпадает с юридическим)
    - do: кликнуть по области вне модального окна
    - assert: окно закрылось
    - do: вернуться на поиск отелей
    - do: сделать поиск того же отеля на на 1 гостя на 4 ночи
    - do: перейти на предложение Яндекс.Путешествий
    - assert: открылась страница бронирования отеля на Яндекс.Путешествиях
    - assert: в корзинке указано количество ночей - 4 ночи
    - assert: >-
        рядом с указанием количества ночей есть иконка для раскрытия выпадающего
        списка
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-26_18-06-44.png)
    - do: навести курсор на иконку
    - assert: появился указатель-рука
    - do: кликнуть по иконке
    - assert: развернулся список
    - assert: >-
        иконка сменилась на
        ![image](https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-26_18-07-52.png)
    - assert: >-
        в списке перечислены 4 ночи в формате "1 ночь, 2 ночь..." с указанием
        стоимости за каждую ночь
    - assert: сумма за 4 ночи равна сумме этих стоимостей
    - do: кликнуть по иконке выпадающего списка
    - assert: список свернулся
    - do: 'если есть бесплатная отмена, кликнуть на иконку вопроса возле нее'
    - assert: >-
        появился попап с указанием даты и времени для бесплатного возврата
        (совпадает с датой на корзинке), датой и времени, с которого стоимость
        не возвращается
    - do: кликнуть по области вне попапа
    - assert: попап закрылся
files:
    - tests/desktop/hotels/book/book-view.hermione.ts    
Устройство: Десктоп
Страница: Бронирование
tlds: ru
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - Smoke
  - Blocker
Автор: iliasova
feature: ТК Авиа
description: |
    Описание перехода на бронирование для команды: https://testpalm.yandex-team.ru/testcase/clone_travel-930
    Описание перехода на бронирование для асессоров: https://testpalm.yandex-team.ru/testcase/clone_travel-931

specs:
    Не подтверждение оплаты аэрофлотом:
        - do: Дернуть ручку тестового контекста https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_SUCCESS&checkAvailabilityBeforeBookingOutcome=CAO_SUCCESS&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_PAYMENT_FAILED&mqEventOutcome=MEO_SUCCESS
        - do: Положить значение из "token" в куку variantTestContext, из "payment_token" в куку paymentTestContext
        - do: Перейти на страницу бронирования (шаги описаны в Description)
        - assert: Открылась страница бронирования
        - do: Заполнить данные о пассажирах валидными данными
        - do: Перейти на шаг оплаты
        - assert: Открылась страница sad page "Мы не смогли подтвердить заказ"

files:
    - tests/desktop/avia/booking/booking-cancelled-by-aeroflot.hermione.ts

tags: smoke

Сервис: Авиа
Функциональность: BOY
Устройство:
    - Десктоп
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Авиабилеты
type: Бронирование
description: |
    Описание перехода на бронирование для команды: https://testpalm.yandex-team.ru/testcase/clone_travel-930
    Описание перехода на бронирование для асессоров: https://testpalm.yandex-team.ru/testcase/clone_travel-931

specs:
    BOY Проверка совпадения данных на странице:
        - do: Выполнить переход как описано в Description.
        - assert: Переход сработал, открылась страница бронирования
        - assert: |
            Информация в блоке о перелёте (время в пути, номер рейса, тип самолёта, время вылета, время прилёта, дата, пункт вылета и пункт прилёта) совпадает с данными со страницы поиска
            https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_09-21-58.png
        - assert: |
            Выбранная цена совпадает с ценой в поиске
            https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-01_09-22-56.png

files:
    - tests/common/avia/booking/booking-correct-data.hermione.ts

tags: smoke

Сервис: Авиа
Функциональность: BOY
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
feature: ТК Авиа
description: |
    Описание перехода на бронирование для команды: https://testpalm.yandex-team.ru/testcase/clone_travel-930
    Описание перехода на бронирование для асессоров: https://testpalm.yandex-team.ru/testcase/clone_travel-931

specs:
    Вариант стал недоступен на этапе подтверждения после оплаты:
        - do: Дернуть ручку тестового контекста https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_SUCCESS&checkAvailabilityBeforeBookingOutcome=CAO_SUCCESS&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_VARIANT_NOT_AVIALABLE&mqEventOutcome=MEO_SUCCESS
        - do: Положить значение из "token" в куку variantTestContext, из "payment_token" в куку paymentTestContext
        - do: Перейти на страницу бронирования (шаги описаны в Description)
        - assert: Открылась страница бронирования
        - do: Заполнить данные о пассажирах валидными данными
        - do: Оплатить заказ
        - assert: Открылась страница sad page "Мы не смогли подтвердить заказ"

files:
    - tests/desktop/avia/booking/booking-not-available-after-payment.hermione.ts

tags: smoke

Сервис: Авиа
Функциональность: BOY
Устройство:
    - Десктоп
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: ТК Авиа
description: |
    Описание перехода на бронирование для команды: https://testpalm.yandex-team.ru/testcase/clone_travel-930
    Описание перехода на бронирование для асессоров: https://testpalm.yandex-team.ru/testcase/clone_travel-931

specs:
    Ошибка оплаты:
        - do: Дернуть ручку тестового контекста https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_SUCCESS&checkAvailabilityBeforeBookingOutcome=CAO_SUCCESS&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_PAYMENT_FAILED&mqEventOutcome=MEO_NO_EVENT
        - do: Положить значение из "token" в куку variantTestContext, из "payment_token" в куку paymentTestContext
        - do: Перейти на страницу бронирования (шаги описаны в Description)
        - assert: Открылась страница бронирования
        - do: Заполнить данные о пассажирах валидными данными
        - do: Нажать "Оплатить заказ" (страницы оплаты не будет, тк оплата замокана)
        - assert: Открылась страница sad page "Мы не смогли подтвердить заказ"

files:
    - tests/desktop/avia/booking/booking-payment-error.hermione.ts

tags: smoke

Сервис: Авиа
Функциональность: BOY
Устройство:
    - Десктоп
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: ТК Авиа
description: |
    Описание перехода на бронирование для команды: https://testpalm.yandex-team.ru/testcase/clone_travel-930
    Описание перехода на бронирование для асессоров: https://testpalm.yandex-team.ru/testcase/clone_travel-931

specs:
    Изменение цены при переходе на бой:
        - do: Дернуть ручку тестового контекста https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_PRICE_CHANGED&checkAvailabilityBeforeBookingOutcome=CAO_SUCCESS&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_SUCCESS&mqEventOutcome=MEO_NO_EVENT
        - do: Положить значение из "token" в куку variantTestContext, из "payment_token" в куку paymentTestContext
        - do: Перейти на страницу бронирования (шаги описаны в Description)
        - assert: |
            Открылась страница бронирования
            Появился модал "Цена изменилась". У него две кнопки: "Продолжить бронирование","Вернуться к результатам поиска"
        - do: Нажать "Продолжить бронирование"
        - assert: |
            Модал закрылся
            В корзинке появилась вторая цена и в блоке тарифов и в блоке итого. Новая цена на 10р больше исходной.
            В корзинке появился лейбл "Цена изменилась после уточнения предложения у Авиакомпании."
        - do: Запомнить новую цену
        - do: Заполнить данные о пассажирах валидными данными
        - assert: |
            Открылась страница оплаты
        - do: Выполнить оплату
        - assert: Открылась страница happy page "Вы успешно забронировали билеты"
        - do: Кликнуть по кнопке Подробнее о заказе.
        - assert: |
            Перешли на страницу заказа в ЛК.
            Оплаченная сумма в корзинке равна той, что мы запомнили в п.3

files:
    - tests/common/avia/booking/booking-price-changed-boy.hermione.ts

tags: smoke

Сервис: Авиа
Функциональность: BOY
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: ТК Авиа
description: |
    Описание перехода на бронирование для команды: https://testpalm.yandex-team.ru/testcase/clone_travel-930
    Описание перехода на бронирование для асессоров: https://testpalm.yandex-team.ru/testcase/clone_travel-931

specs:
    Изменение цены при оплате:
        - do: Дернуть ручку тестового контекста https://api.travel-balancer-test.yandex.net/api/test_context/v1/avia_token?checkAvailabilityOnRedirOutcome=CAOR_SUCCESS&checkAvailabilityBeforeBookingOutcome=CAO_PRICE_CHANGED&tokenizationOutcome=TO_SUCCESS&confirmationOutcome=CO_SUCCESS&mqEventOutcome=MEO_SUCCESS
        - do: Положить значение из "token" в куку variantTestContext, из "payment_token" в куку paymentTestContext
        - do: Перейти на страницу бронирования (шаги описаны в Description)
        - assert: Открылась страница бронирования
        - do: Заполнить данные о пассажирах валидными данными
        - do: Запомнить сумму заказа и нажать кнопку "Оплатить"
        - assert: |
            Открылась страница оплаты
            Появился модал "Цена изменилась" с кнопками "Вернуться к результатам поиска" и "Продолжить бронирование"
        - do: Запомнить сумму2 из модала и нажать кнопку "Продолжить бронирование"
        - assert: |
            Открылась страница happy page "Вы успешно забронировали билеты"
            Оплаченная сумма в корзинке равна сумме2 из модала
            Цена у единственного пассажира в корзинке также равна сумме2

files:
    - tests/desktop/avia/booking/booking-price-changed.hermione.ts

tags: smoke

Сервис: Авиа
Функциональность: BOY
Устройство:
    - Десктоп
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Авиабилеты
type: Бронирование
description: |
    Описание перехода на бронирование для команды: https://testpalm.yandex-team.ru/testcase/clone_travel-930
    Описание перехода на бронирование для асессоров: https://testpalm.yandex-team.ru/testcase/clone_travel-931

specs:
    Общий вид страницы бронирования:
        - do: Выполнить переход как описано в Description.
        - assert: Переход сработал, открылась страница бронирования
        - assert: В шапке страницы лого портала Путешествий, кнопка личного кабинета, кнопка войти
        - assert: Под меню находится лого аэрофлота и информация о том, что такое Яндекс.Авиабилеты.
        - assert: Ниже расположены вкладки Выбор перелёта - Детали перелёта - Данные пассажиров - Оплата заказа
        - assert: |
            Ниже находится блок с информацией о перелёте, если есть пересадки, то сегменты находятся друг под другом, между ними информация о времени пересадки.
            Если перелёт туда и обратно, то под перелётом туда находится блок информации о перелёте обратно.
        - assert: Справа от блока с информацией находится блок с тарифами, ценой, кнопкой “Оплатить” и кнопкой “Показать все тарифы”, если тарифов больше чем 2 ( для тача блок расположен в нижней части страницы )
        - assert: Под блоком с информацией о перелёте находится блок с информацией о пассажирах, если пассажиров несколько, то каждый находится друг под другом - сначала взрослые, потом дети, потом младенцы
        - assert: Под блоком информации о пассажирах находится блок с контактными данными покупателя
        - assert: Внизу находится портальный футер

files:
    - tests/common/avia/booking/booking-view.hermione.ts

tags: smoke

Сервис: Авиа
Функциональность: BOY
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Авиабилеты
type: Бронирование
description: Поиск и бронирование билетов - BoY

specs:
    Бронирование авиабилетов неавторизованным пользователем:
        - do: Выполнить поиск авиабилетов по направлению Москва - Сочи
        - do: Отфильтровать рейсы авиакомпании "Аэрофлот" при помощи фильтра авиакомпаний
        - do: Кликнуть по сниппету с пометкой "Заказ на Я.Путешествиях"
        - do: На открывшейся странице кликнуть по кнопке "Купить" для Яндекс Путешествий
        - assert: Открылась страница редиректа и через некоторое время произошел редирект на страницу бронирования
        - do: Заполнить форму пассажира и форму контактов валидными данными
        - do: Нажать по кнопке оплатить
        - assert: Открылась страница оплаты
        - do: |
                Заполнить форму оплаты. Реквизиты тестовой карты:
                Номер - 5555555555555599
                Дата - 12/24
                CVV - 123
        - do: Нажать кнопку "оплатить"
        - assert: Оплата прошла успешно. Спустя некоторое время (не больше минуты) произошёл редирект на страницу happyPage
        - do: Нажать кнопку "Подробнее о заказе"
        - assert: В шапке отображается номер для регистрации на рейс
        - assert: Данные о перелёте совпадают с данными на странице бронирования (отправление, прибытие, номер рейса, багаж, ручная кладь)
        - assert: Данные пассажиров совпадают с теми, что были указаны на странице бронирования
        - assert: Цена совпадает с ценой указанной на шаге бронирования
        - assert: Почта и телефон совпадают с теми, что были указаны на странице бронирования

    Бронирование авиабилетов авторизованным пользователем:
        - tech: Создать аккаунт (https://wiki.yandex-team.ru/test-user-service/)
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу)
              Перейти в "Мои поездки" (иконка-чемоданчик в правом верхнем углу)
              Перейти во вкладку "Пассажиры"
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на латинице
              ФИО - Ivanov Ivan Ivanovich
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505654321
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: Выполнить поиск авиабилетов по направлению Москва - Сочи
        - do: Отфильтровать рейсы авиакомпании "Аэрофлот" при помощи фильтра авиакомпаний
        - do: Кликнуть по сниппету с пометкой "Заказ на Я.Путешествиях"
        - do: На открывшейся странице кликнуть по кнопке "Купить" для Яндекс Путешествий
        - assert: Открылась страница редиректа и через некоторое время произошел редирект на страницу бронирования
        - do: Выбрать интент (синяя кнопка выше формы пассажиров) с добавленным ранее в личном кабинете пассажиром - форма заполнится данными
        - do: Заполнить форму контактов валидными данными
        - do: Нажать по кнопке оплатить
        - assert: Открылась страница оплаты
        - do: |
            Заполнить форму оплаты. Реквизиты тестовой карты:
            Номер - 5555555555555599
            Дата - 12/24
            CVV - 123
        - do: Нажать кнопку "оплатить"
        - assert: Оплата прошла успешно. Спустя некоторое время (не больше минуты) произошёл редирект на страницу happyPage
        - do: Нажать кнопку "Подробнее о заказе"
        - assert: В шапке отображается номер для регистрации на рейс
        - assert: Данные о перелёте совпадают с данными на странице бронирования (отправление, прибытие, номер рейса, багаж, ручная кладь)
        - assert: Данные пассажиров совпадают с теми, что были указаны на странице бронирования
        - assert: Цена совпадает с ценой указанной на шаге бронирования
        - assert: Почта и телефон совпадают с теми, что были указаны на странице бронирования
        - tech: Удаляем аккаунт

files:
    - tests/desktop/avia/booking/booking.hermione.ts

tags: smoke

Сервис: Авиа
Функциональность: BOY
Устройство:
    - Десктоп
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Подтверждение

specs:
    Общий вид страницы подтверждения. Отмена брони.:
        - do: Перейти на вкладку ЖД
        - do: Открыть произвольную выдачу, например, Москва-Казань на месяц плюс один - семь дней
        - do: Выбрать места.
        - do: Задать данные пассажиров (произвольные данные, удовлетворяющие валидации)
        - do: Задать контактную информацию (произвольные данные, удовлетворяющие валидации)
        - do: Нажать "Проверить заказ и купить"
        - assert: Открывается страница Подтверждения
        - assert: Отображается таймер бронирования (29 минут) на оплату заказа
        - assert: Есть ссылка "Отменить заказ (если передумали)"
        - assert: Секция Проверьте поезд и места
        - assert: Дата отправления соответствует выбранному поезду
        - assert: Время отправления соответствует выбранному поезду
        - assert: Станция отправления соответствует выбранному поезду
        - assert: Дата прибытия соответствует выбранному поезду
        - assert: Время прибытия соответствует выбранному поезду
        - assert: Станция прибытия соответствует выбранному поезду
        - assert: Номер поезда соответствует выбранному поезду
        - assert: Маршрут поезда соответствует выбранному поезду
        - assert: Название поезда соответствует выбранному поезду
        - assert: Отображается информация, что время местное
        - assert: Отображается бейдж электронной регистрации
        - assert: Отображается номер вагона соответствует выбранному
        - assert: Отображается вид вагона соответствует выбранному
        - assert: Отображается класс вагона соответствует выбранному
        - assert: Отображается место соответствует выбранному
        - assert: Отображается схема вагона
        - assert: Места указанные на схеме соответствуют выбранным
        - assert: Секция Проверьте паспортные данные
        - assert: Отображается фамилия пассажира соответствует заполненному
        - assert: Отображается имя пассажира соответствует заполненному
        - assert: Отображается отчество пассажира соответствует заполненному
        - assert: Отображается дата рождения пассажира соответствует заполненному
        - assert: Отображается номер паспорта пассажира соответствует заполненному
        - assert: Отображается стоимость билета, соответствует цене на выборе мест
        - assert: Отображается вид тарифа билета (например, полный)
        - assert: Отображается кнопка i информационная
        - assert: Секция проверьте контактную информацию
        - assert: Номер мобильного телефона соответствует заполненному
        - assert: Электронная почта соответствует заполненному
        - assert: Секция страхование.
        - assert: Чекбокс добавить страховку выключен
        - assert: Отображается название страховой компании
        - assert: Отображается секция итоговой суммы.
        - assert: Отображается кнопка "Ввести карту и оплатить"
        - do: Включить чекбокс страховки
        - assert: Итоговая сумма увеличилась ровно на указанную стоимость страховки
        - do: Проскроллировать схему вагона вправо-влево (тач) (no_autotest)
        - assert: Схема свободно скроллится, верстка соответствует странице (no_autotest)
        - do: Нажать по иконке i в блоке паспортных данных
        - assert: Появляется информационное сообщение о том, из чего складывается стоимость билета
        - assert: Отображается цена билета
        - assert: Отображается сервисный сбор
        - assert: Общая сумма билета посчитана верно (цена билета + сервисный сбор)
        - do: Нажать на "Отменить заказ"
        - assert: Перешли к странице выбора мест
        - assert: На странице не появляется ошибка

files:
    - tests/common/trains/order/confirmation/bookingCancellation.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Подтверждение
description: |
    Пример ссылки на выбор мест для пересадок: https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-11T13.50&fromId=c2&fromName=Санкт-Петербург&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10

specs:
    ЖД+ЖД Хлебные крошки:
        - do: Перейти на страницу выбора мест в первый поезд, для сложного заказа с пересадкой
        - assert: находимся на вкладке "Выбор мест. Первый поезд"
        - assert: вкладка "Выбор поезда" доступна для выбора
        - assert: остальные вкладки заблокированы
        - do: Выбрать двух взрослых пассажиров
        - do: Выбрать место для первого пассажира
        - assert: вкладка "Выбор мест. Второй поезд" неактивна
        - do: Выбрать место для второго пассажира
        - assert: вкладка "Выбор мест. Второй поезд" стала активной
        - do: Нажать на "Выбор мест. Второй поезд"
        - assert: открылась страница выбора мест во второй поезд
        - assert: все предыдущие вкладки доступны для выбора
        - assert: все последующие вкладки заблокированы
        - do: Выбрать одно место
        - assert: вкладка "Данные пассажиров" неактивна
        - do: Выбрать второе место
        - assert: вкладка "Данные пассажиров" стала активной
        - do: Кликнуть по вкладке "Данные пассажиров"
        - assert: открылась страница ввода данных
        - assert: все предыдущие вкладки доступны для выбора
        - assert: все последующие вкладки заблокированы
        - do: Ввести любые валидные данные
        - do: Нажать "Проверить заказ и купить"
        - assert: произошел переход на вкладку "Подтверждение"
        - assert: все предыдущие вкладки доступны для выбора
        - assert: все последующие вкладки заблокированы
        - do: Кликнуть по вкладке "Выбор мест. Первый поезд"
        - assert: произошел переход на страницу выбора мест в первый поезд
        - assert: вкладки "Выбор поезда", "Выбор мест. Первый поезд" и "Выбор мест. Второй поезд" доступны, остальные заблокированы

files:
    - tests/common/trains/order/confirmation/breadcrumbsWithTransfer/breadcrumbsWithTransfer.hermione.ts

# meta
Сервис: ЖД
Страница: Подтверждение
Функциональность: ЖД+ЖД Пересадки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Нет
feature: Звонки с bluethooth-гарнитурой 

specs:

    Принятие входящего аудиозвонка при подключенной bluethooth-гарнитуре[manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Звонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего пользователем Б
        - assert: |
              На экране появляется окно входящего звонка
              В окне есть кнопки "Принять" (зеленная трубка) и "Отклонить" (красная трубка)
              На экране входящшего отображается аватар и имя звонящего пользоваателя
              Звук входящего звонка идет в наушники
        - do: Пользователем Б нажать на кнопку принятия входящего аудиозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и В слышат друг друга 
              Звук у пользователя Б идет в наушники

    Совершение исходящего аудиозвонка при подключенной bluethooth-гарнитуре[manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем Б открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Звонок"
        - assert: |
              На экране отображается "Исходящий звонок"
              Звук исходящих гудков идет в наушники
        - do: Проверить наличие входящего пользователем А
        - assert: |
              На экране появляется окно входящего звонка
        - do: Пользователем А нажать на кнопку принятия входящего аудиозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат друг друга 
              Звук у пользователя Б идет в наушники 

    Отключение bluethooth-гарнитуры после принятия входящего ауудиозвонка [manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Звонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего пользователем Б
        - assert: |
              На экране появляется окно входящего звонка
              В окне есть кнопки "Принять" (зеленная трубка) и "Отклонить" (красная трубка)
              На экране входящшего отображается аватар и имя звонящего пользоваателя
              Звук входящего звонка идет в наушники
        - do: Пользователем Б нажать на кнопку принятия входящего аудиозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат друг друга 
              Звук у пользователя Б идет в наушники
        - do: Пользователем Б отключить гарнитуру
        - assert: |
              Гарнитура отключена
              У пользователя Б отображается попапп на смену устройства
              Микрофон у пользователя Б не работает
        - do: В попаппе для микрофона сменить устройство на по-умолчанию и нажать "Продолжить звонок"
        - assert: |
              Пользователи А и Б слышат друг друга


  Отключение bluethooth-гарнитуры во время совершения исходящего аудиозвонка [manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем Б открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Звонок"
        - assert: |
              На экране отображается "Исходящий звонок"
              Гудки исходящего вызова идут в наушники
        - do: Проверить наличие входящего пользователем А
        - assert: На экране появляется окно входящего звонка
        - do: Пользователем Б отключить гарнитуру
        - assert: |
              Гарнитура отключена
              У пользователя Б отображается попапп на смену устройства
        - do: В попаппе для микрофона сменить устройство на по-умолчанию и нажать "Продолжить звонок"
        - assert: У пользователя Б отображается "Исходящий звонок"
        - do: Пользователем А нажаать на кнопку принятия входящего звонка и начать говорить. 
        - assrt: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат друг друга. 

  Подключение bluethooth-гарнитуры после принятия входящего ауудиозвонка [manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Звонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего пользователем Б
        - assert: |
              На экране появляется окно входящего звонка
              В окне есть кнопки "Принять" (зеленная трубка) и "Отклонить" (красная трубка)
              На экране входящшего отображается аватар и имя звонящего пользоваателя
        - do: Пользователем Б нажать на кнопку принятия входящего аудиозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат друг друга 
        - do: Пользователем Б подключить гарнитуру к компьютеру
        - assert: |
              Гарнитура подключена
              У пользователя Б отображается попапп на смену устройства
              Микрофон у пользователя Б не работает
        - do: В попаппе для микрофона сменить устройство на bluethooth-гарнитуру и нажать "Продолжить звонок"
        - assert: |
              Попапп пропадает
              Пользователи А и Б слышат друг друга
              У пользователя Б звук идет в наушники

  Подключение bluethooth-гарнитуры во время отображения входящего ауудиозвонка [manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Звонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего пользователем Б
        - assert: |
              На экране появляется окно входящего звонка
              В окне есть кнопки "Принять" (зеленная трубка) и "Отклонить" (красная трубка)
              На экране входящшего отображается аватар и имя звонящего пользоваателя
        - do: Пользователем Б подключить гарнитуру к компьютеру
        - asser: |
              Гарнитура подключена
              У пользователя Б отображается попапп на смену устройства 
        - do: В попаппе для микрофона сменить устройство на bluethooth-гарнитуру и нажать "Продолжить звонок"
        - assert: |
              Попапп пропадает
              Звук входящего звонка идет в наушники
        - do: Пользователем Б нажать на кнопку принятия входящего аудиозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат друг друга 
              У пользователя Б звук идет в наушники

  Совершение исходящего аудиозвонка при отключенной bluethooth-гарнитуре, если в настройках выставлена bluethooth-гарнитура[manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем Б нажать на шестеренку в списке чатов
        - assert: Открывается окно с настройками профиля
        - do: Проскроллить до настроек звонка, нажать на "Микрофон" и выбрать bluethooth-гарнитуру
        - assert: У пользователя Б в настройках профиля для звонков выставлена bluethooth-гарнитура
        - do: Нажать на крестик на экране настроек
        - assert: Экран настроек закрывается
        - do: Пользователем Б отключить bluethooth-гарнитуру от компьютера
        - assert: Гарнитура отключена
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем Б открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Звонок"
        - assert: |
              На экране отображается "Исходящий звонок"
              Появляется попапп на смену устройства 
        - do: В попаппе нажать на "Микрофон", сменить устройство на "По-умолчанию" и нажать "Продолжить звонок"
        - assert: |
              Попапп пропадает
              Отображается исходящий звонок 
              Идут гудки исходящего звонка
        - do: Проверить наличие входящего пользователем А
        - assert: |
              На экране отображается окно входящего звонка
        - do: Пользователем А нажать на кнопку принятия входящего аудиозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат друг друга 
              
  Принятие входящего аудиозвонка при отключенной bluethooth-гарнитуре, если в настройках выставлена bluethooth-гарнитура[manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем Б нажать на шестеренку в списке чатов
        - assert: Открывается окно с настройками профиля
        - do: Проскроллить до настроек звонка, нажать на "Микрофон" и выбрать bluethooth-гарнитуру
        - assert: У пользователя Б в настройках профиля для звонков выставлена bluethooth-гарнитура
        - do: Нажать на крестик на экране настроек
        - assert: Экран настроек закрывается
        - do: Пользователем Б отключить bluethooth-гарнитуру от компьютера
        - assert: Гарнитура отключена
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Звонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего звонка пользователем Б
        - assert: |
              На экране отображается окно входящего звонка
        - do: Пользователем Б нажать на кнопку принятия входящего аудиозвонка
        - assert: |
              Отображается экран установленного соединения
              У пользователя Б появляется попапп на смену устройства
        - do: Пользователем Б в попаппе нажать на "Микрофон", сменить устройство на "По-умолчанию" и нажать "Продолжить звонок"
        - assert: |
              Попапп пропадает
              Отображается экран установленного соединения  
              Пользователи А и Б слышат друг друга

  Принятие входящего видеозвонка при подключенной bluethooth-гарнитуре[manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Видеозвонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего пользователем Б
        - assert: |
              На экране появляется окно входящего звонка
              В окне есть кнопки "Принять" (зеленная видеокамера) и "Отклонить" (красная трубка)
              На экране входящшего отображается аватар и имя звонящего пользоваателя
              Звук входящего звонка идет в наушники
        - do: Пользователем Б нажать на кнопку принятия входящего видеозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и В слышат и видят друг друга 
              Звук у пользователя Б идет в наушники

    Совершение исходящего видеозвонка при подключенной bluethooth-гарнитуре[manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем Б открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Видеозвонок"
        - assert: |
              На экране отображается "Исходящий звонок"
              Звук исходящих гудков идет в наушники
        - do: Проверить наличие входящего пользователем А
        - assert: |
              На экране появляется окно входящего звонка
        - do: Пользователем А нажать на кнопку принятия входящего видеозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат и видят друг друга 
              Звук у пользователя Б идет в наушники 

    Отключение bluethooth-гарнитуры после принятия входящего видеозвонка [manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Видеозвонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего пользователем Б
        - assert: |
              На экране появляется окно входящего звонка
              В окне есть кнопки "Принять" (зеленая видеокамера) и "Отклонить" (красная трубка)
              На экране входящшего отображается аватар и имя звонящего пользоваателя
              Звук входящего звонка идет в наушники
        - do: Пользователем Б нажать на кнопку принятия входящего видеозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат и видят друг друга 
              Звук у пользователя Б идет в наушники
        - do: Пользователем Б отключить гарнитуру
        - assert: |
              Гарнитура отключена
              У пользователя Б отображается попапп на смену устройства
              Микрофон у пользователя Б не работает
        - do: В попаппе для микрофона сменить устройство на по-умолчанию и нажать "Продолжить звонок"
        - assert: |
              Пользователи А и Б слышат друг друга


  Отключение bluethooth-гарнитуры во время совершения исходящего видеозвонка [manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке 
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем Б открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Видеозвонок"
        - assert: |
              На экране отображается "Исходящий звонок"
              Гудки исходящего вызова идут в наушники
        - do: Проверить наличие входящего пользователем А
        - assert: На экране появляется окно входящего звонка
        - do: Пользователем Б отключить гарнитуру
        - assert: |
              Гарнитура отключена
              У пользователя Б отображается попапп на смену устройства
        - do: В попаппе для микрофона сменить устройство на по-умолчанию и нажать "Продолжить звонок"
        - assert: У пользователя Б отображается "Исходящий звонок"
        - do: Пользователем А нажаать на кнопку принятия входящего звонка и начать говорить. 
        - assrt: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат и видят друг друга. 

  Подключение bluethooth-гарнитуры после принятия входящего видеозвонка[manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Видеозвонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего пользователем Б
        - assert: |
              На экране появляется окно входящего звонка
              В окне есть кнопки "Принять" (зеленная видеокамера) и "Отклонить" (красная трубка)
              На экране входящшего отображается аватар и имя звонящего пользоваателя
        - do: Пользователем Б нажать на кнопку принятия входящего видеозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат и видят друг друга 
        - do: Пользователем Б подключить гарнитуру к компьютеру
        - assert: |
              Гарнитура подключена
              У пользователя Б отображается попапп на смену устройства
              Микрофон у пользователя Б не работает
        - do: В попаппе для микрофона сменить устройство на bluethooth-гарнитуру и нажать "Продолжить звонок"
        - assert: |
              Попапп пропадает
              Пользователи А и Б слышат и видят друг друга
              У пользователя Б звук идет в наушники

  Подключение bluethooth-гарнитуры во время отображения входящего видеозвонка [manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Видеозвонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего пользователем Б
        - assert: |
              На экране появляется окно входящего звонка
              В окне есть кнопки "Принять" (зеленная видеокамера) и "Отклонить" (красная трубка)
              На экране входящего отображается аватар и имя звонящего пользоваателя
        - do: Пользователем Б подключить гарнитуру к компьютеру
        - asser: |
              Гарнитура подключена
              У пользователя Б отображается попапп на смену устройства 
        - do: В попаппе для микрофона сменить устройство на bluethooth-гарнитуру и нажать "Продолжить звонок"
        - assert: |
              Попапп пропадает
              Звук входящего звонка идет в наушники
        - do: Пользователем Б нажать на кнопку принятия входящего видеозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат и видят друг друга 
              У пользователя Б звук идет в наушники

  Совершение исходящего видеозвонка при отключенной bluethooth-гарнитуре, если в настройках выставлена bluethooth-гарнитура[manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем Б нажать на шестеренку в списке чатов
        - assert: Открывается окно с настройками профиля
        - do: Проскроллить до настроек звонка, нажать на "Микрофон" и выбрать bluethooth-гарнитуру
        - assert: У пользователя Б в настройках профиля для звонков выставлена bluethooth-гарнитура
        - do: Нажать на крестик на экране настроек
        - assert: Экран настроек закрывается
        - do: Пользователем Б отключить bluethooth-гарнитуру от компьютера
        - assert: Гарнитура отключена
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем Б открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Видеозвонок"
        - assert: |
              На экране отображается "Исходящий звонок"
              Появляется попапп на смену устройства 
        - do: В попаппе нажать на "Микрофон", сменить устройство на "По-умолчанию" и нажать "Продолжить звонок"
        - assert: |
              Попапп пропадает
              Отображается исходящий звонок 
              Идут гудки исходящего звонка
        - do: Проверить наличие входящего пользователем А
        - assert: |
              На экране отображается окно входящего звонка
        - do: Пользователем А нажать на кнопку принятия входящего видеозвонка и начать говорить
        - assert: |
              Соединение между пользователями А и Б установлено
              Пользователи А и Б слышат и видят друг друга 
              
  Принятие входящего видеозвонка при отключенной bluethooth-гарнитуре, если в настройках выставлена bluethooth-гарнитура[manual]:
        - automation:
        - description: |
              Для прохождения кейса необходимо 2 аккаунта, 2-ым вспомогательным аккаунтом нужно авторизоваться на мобильном клиенте. 
              Приложение можно скачать по ссылке
              для android - https://play.google.com/store/apps/details?id=com.yandex.yamb
              для ios - https://apps.apple.com/ru/app/yamb-messenger/id1124487701
              В Мессенджере и проверяемом браузере разрешены  доступы к камере и микрофону
              Между пользователем А и Б есть общий приватный чат
              У пользователя Б к компьютеру подключена bluethooth-гарнитура
              На компьютере включен звук
              Данный тест-кейс аткуален только для данных браузеров Firefox, Yabro и Chrome
        - do: Под пользователем Б открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Под пользователем Б нажать на шестеренку в списке чатов
        - assert: Открывается окно с настройками профиля
        - do: Проскроллить до настроек звонка, нажать на "Микрофон" и выбрать bluethooth-гарнитуру
        - assert: У пользователя Б в настройках профиля для звонков выставлена bluethooth-гарнитура
        - do: Нажать на крестик на экране настроек
        - assert: Экран настроек закрывается
        - do: Пользователем Б отключить bluethooth-гарнитуру от компьютера
        - assert: Гарнитура отключена
        - do: Под пользователем А открыть список чатов
        - assert: Открывается окно списка чатов
        - do: Пользователем А открыть чат из description
        - assert: Открыто окно чата
        - do: Нажать на кнопку вызова в шапке чата
        - assert: Открылось меню с возможностью выбора типа звонка
        - do: Нажать на "Видеозвонок"
        - assert: На экране отображается "Исходящий звонок"
        - do: Проверить наличие входящего звонка пользователем Б
        - assert: |
              На экране отображается окно входящего звонка
        - do: Пользователем Б нажать на кнопку принятия входящего видеозвонка
        - assert: |
              Отображается экран установленного соединения
              У пользователя Б появляется попапп на смену устройства
        - do: Пользователем Б в попаппе нажать на "Микрофон", сменить устройство на "По-умолчанию" и нажать "Продолжить звонок"
        - assert: |
              Попапп пропадает
              Отображается экран установленного соединения  
              Пользователи А и Б слышат друг друга


files: []

v-team: Chat

tlds: ru

tags:
    - yamb
    - y-team

feature: Поезда
type: Страница заказа

specs:
    Кассовый возврат:
        - do: |
            Перейти на вкладку ЖД
            Перейти на поиск Москва - Санкт-Петербург через месяц
            Для любого поезда кликнуть по кнопке Выбрать место
            На странице выбора мест выбрать любое место в любом вагоне
            Нажать Указать пассажиров
            Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=10&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0
            В ответе запомнить токен из поля test_context_token
            Добавить к урлу параметр trainTestContextToken со значением полученного токена
            Перейти по полученной ссылке
            Заполнить все поля валидными данными
            Нажать Проверить заказ и купить
            Нажать Ввести карту и оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
            Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: |
            Произошел переход на страницу заказа
        - do: |
            Выждать 10 секунд
            Обновить страницу
        - assert: |
            Пропала кнопка Сдать билет
            Вместо кнопки Сдать есть приписка "Возврат"
            Есть ссылка на чек возврата
            Нет ссылки на квитанцию возврата

files:
    - tests/common/trains/order/orderPage/cashRefund.hermione.ts

tags:
    - TK
    - orkestrator

# meta
Сервис: ЖД
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Маркетинг
type: Шторка профиля
description: >-
 Быть на главной портала, в правом верхнем углу есть бургер меню с красной точкой, тапнув по нему откроется шторка в которой будет находиться иконка подарочных сертификатов и красный бейджик "новое"
specs:
  'Подарочные сертификаты в шторке прфоиля (Тач)':
    - do: >- 
        Кликнуть по иконке с "Подарочными Сертификатами"
    - assert: >- 
        Произойдет переход на страницу с информацией о покупке подарочного сертификата. (в новой вкладке)

manual: true
Функциональность:
  - 'Шторка профиля'
Устройство:
  - Тач
Страница: Все
Сервис: Маркетинг
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
feature: Маркетинг
type: Шапка
description: >-
 В шапке портала есть иконка подарка которая имеет анимацию сияния. (Десктоп)
specs:
  'Подарочные сертификаты в шапке портала (Десктоп)':
    - do: >-
        Кликнуть по иконке с "Подарочными Сертификатами"
    - assert: >-
        Произойдет переход на страницу с информацией о покупке подарочного сертификата. (в новой вкладке)
    - do: >-
        Вернуться на портал
    - assert: >- 
        Проверить что другие, соседние иконки в шапке не накладываются друг на друга и не сползают с общей линии их положения
    
    - do: >- 
        Выбрать Отели, в поле города выбрать Москву, выбрать дату через месяц на 3 дня, на 2-их человек и произвести поиск
    - assert: >- 
        Находимся на выдаче Отелей, проверить что иконки в шапке не сломались
    
    - do: >-
        Включить фильтр баллов плюса и выбрать любой отель
    - assert: >- 
        Оказываемся на странице отеля, проверить что иконки в шапке не сломались
    
    - do: >- 
        Включить фильтр баллов плюса и выбрать любой отель
    - assert: >- 
        Оказываемся на странице отеля, проверить что иконки в шапке не сломались
        
    
manual: true
Функциональность:
  - 'Шапка портала'
Устройство:
  - Десктоп
Страница: Все
Сервис: Маркетинг
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
feature: Отели
type: Страница города

specs:
    Переход на страницу отеля со страницы города:
        - do: Перейти на вкладку Отели на главной странице
        - assert: |
              На главной Отелей присутствует блок рецептов:
              https://jing.yandex-team.ru/files/gouken67/hotelRecipes.png
        - do: Кликнуть по первой карточке из рецептов
        - assert: Оказываемся на странице выбранного города
        - do: |
              Доскроллить до сниппетов отелей
              Кликнуть по кнопке Выбрать для первого сниппета
        - assert: |
              Для десктопа - Открылось модальное окно Выберите даты и количество гостей
              Для тача - Появилась шторка с возможностью выбора дат и количества гостей
        - do: |
              Заполнить поисковую форму
              Дата заезда через 5 дней от текущего дня
              Дата выезда Через 6 дней от текущего дня
              1 взрослый
              Кликнуть по кнопке Найти
        - assert: |
              Осуществился переход на страницу отеля
              Данные в форме поиска совпадают с теми данными, которые были введены на странице города


files:
    - tests/common/hotels/cityPage/city-page-go-to-hotel.hermione.ts

manual: true
Функциональность: Форма поиска
Устройство:
    - Тач
    - Десктоп
Страница: Страница города
Сервис: Отели
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
Tag: Smoke
Автор: gouken67
feature: Отели
type: Страница города

specs:
    Переход на поиск со страницы города:
        - do: Перейти на вкладку Отели на главной странице
        - assert: На главной Отелей присутствует блок "Поиск отелей и других вариантов размещения"
        - do: Кликнуть по первой карточке из блока
        - assert: Оказываемся на странице выбранного города
        - do: |
              Заполнить поисковую форму
              Город тот, который выбран (не изменять)
              Дата заезда через 5 дней от текущего дня
              Дата выезда Через 6 дней от текущего дня
              1 взрослый
              Кликнуть по кнопке Найти
        - assert: |
                  Осуществился переход на страницу выдачи
                  Данные в форме поиска совпадают с теми данными, которые были введены на странице города

files:
    - tests/common/hotels/cityPage/city-page-go-to-serp.hermione.ts

manual: true
Функциональность: Форма поиска
Устройство:
    - Десктоп
    - Тач
Страница: Страница города
Сервис: Отели
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
Tag: Smoke
Автор: gouken67
feature: Отели
type: Страница отеля
description: >-
    В таче может отличаться порядок и внешний вид элементов, но важно чтобы они
    были.

    Фраза "перейти на страницу отеля" без дополнительных условий означает, что
    нужно прямо на главной странице ввести указанные параметры в форме поиска, а
    затем нажать кнопку Найти.
specs:
    Общий вид страницы:
        - do: |-
              Перейти на страницу отеля со следующими параметрами
              отель - Бета Измайлово (выбрать из саджестов, которые появятся)
              дата заезда - завтра
              дата выезда - послезавтра
              кол-во гостей - 1
        - assert: >-
              * Сначала отображается лоадер "Загрузка отеля Загружаем информацию об
              отеле и получаем самые выгодные предложения" (может не отображаться,
              если данные загрузились мгновенно)

              * Далее отображается страница отеля со следующими составляющими:

              * На уровне хэдера шапка поиска (в тачах форма под хэдером)
                В шапке отображаются данные, введенные ранее
              * Под хэдэром баннер рекламы (в тачах он под ссылкой на выдачу)

              * Ниже стрелка назад и ссылка на выдачу с указанием региона

              * Под ссылкой название отеля

              * Под названием адрес и отметка "N км до центра" (где N - расстояние) и станция метро с
              расстоянием до нее (на тачах под кнопкой выбора номера).

              * Возле названия отеля есть сердечко (добавление в избранное) и иконка шэринга

              * Справа от названия рейтинг, что понравилось гостям, ссылка на отзывы (на тачах нет "что понравилось гостям", а ссылка на отзывы находится под названием)

              * Ниже расположены фото отеля.

              * Под фото находится блок Про отель - отображены топ фичи и ссылка Все
              услуги

              * (Только для десктопа) Справа расположен блок Отель на карте

                * В нем указан адрес отеля.

                * Под адресом в блоке находится карта

                * Сниппет отеля Бета Измайлово есть на карте (в тачах нет карты)

              * Ниже находится блок номеров

              * В вверху блока указаны даты и кол-во гостей

              * Ниже отображается форма поиска

              * Даты и кол-во гостей в форме и заголовке соответствуют введенным
              данным на первом шаге кейса

              * Ниже расположены предложения

              * Каждое предложение содержит

              * название номера

              * фото или заглушку под фото (в тачах фото и заглушки может не быть
              совсем)

              * указание типов кроватей и площади

              * топ фичи номера

              * ссылка "Подробнее о номере"

              * ниже расположены предложения с указанием информации о питании и
              бесплатной отмене, а также цены с указанием кол-ва ночей, кол-во баллов
              плюса и кнопка Забронировать

              * Под картой находится блок похожих отелей (в тачах после отзывов)

              * В блоке есть название отеля, фото (или заглушка), кол-во отзывов
              (может отсутствовать у отелей без отзывов), тип (гостиница, хостел и
              т.д), рейтинг и мин цена

              * Ниже расположен блок Гостям понравилось (в таче после блока номеров)

              * Еще ниже находится блок отзывов

              * Есть общее кол-во отзывов, варианты сортировки, теги

              * Затем отображаются отзывы

              * В каждом отзыве есть фото (или заглушка), имя, дата отзыва,
              оценка, текст, икноки лайка и дизлайка

              * Отображаются первые 5 отзывов

              * Под последним отзывом есть ссылка Еще отзывы (в тачах - кнопка)

              * Внизу страницы над футером отображаются хлебные крошки Отели -> Область отеля -> Город отеля
              - > Название отеля (название некликабельно)
Устройство:
    - Десктоп
    - Тач
Страница: Страница отеля
Tag:
    - Smoke
Сервис:
    - Отели
Автор:
    - molox
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
files:
    - tests/common/hotels/hotel/common-hotelPage-view.hermione.ts
feature: Комод
type: Кроссейл
specs:
    Карта отелей на хп жд:
        - do: Открыть выдачу Москва - Санкт-Петербург на любую дату
        - do: Кликнуть по кнопке “Выбрать место” для поезда без пересадок со свободными платцкартными местами
        - do: Выбрать любое свободное плацкартное место
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Указать пассажиров”.
        - do: Заполнить все поля валидными данными
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Проверить заказ и купить”.
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Ввести карту и оплатить”.
        - do: Оплатить заказ
        - do: Дождаться загрузки страницы Happy page
        - assert: >-
                * Под блоком с промокодом отображается карта с отелями

                Десктоп - https://jing.yandex-team.ru/files/papulova/TNV0r3zUBL.png
                Тач - https://jing.yandex-team.ru/files/papulova/6AxZ5Etuew.png

                * В десктопе один раскрытый сниппет с отелем, в таче нет раскрытых сниппетов
        - do: Кликнуть по любому месту на карте
        - assert: >-
                 Открылась выдача отелей: дата заезда соответствует дате отправления на хп, дата выезда на 1 день больше
Сервис: Комод
files:
    - tests/common/trains/happyPage/common-hp-crossale-hotels.hermione.ts
Устройство:
    - Тач
    - Десктоп
Страница: Happy page
Тестирование асессорами: Нет
Автор: papulova
feature: Отели
type: Happy page
description: ''
specs:
  'Общий вид HP':
    - do: >-
    
        - Через ТК создать офферы в отель Вега Измайлово (ID отеля 742) на любые даты в будущем 
        
        - Заполнить информацию о гостях и контактную информацию любыми валидными данными

        - Оплатить заказ

        - Дождаться загрузки страницы Happy page
    - assert: >-
        На Happy page отображаются:

        - блок с информацией об отеле и контактными данными

        - заголовок "Отель забронирован", картинка с девочкой и текст "Отправили подтверждение на почту ***@yandex.ru". Только для залогина текст "сохранили в разделе "Мои поездки"
        
        - для залогина на десктопе уведомление "Отель сохранен в ваши поездки" и красный кружок у иконки чемодана. На таче только красный кружок на бургер-меню

        - номер заказа
        
        - телефон поддержки

        - кнопка "Подробнее о заказе"

        - кнопки "Скачать" и "Распечатать" (в таче только "Скачать")

        - баннер, какой это баннер зависит от текущей акции, может не быть совсем

        - транспортная карусель, есть кнопка  "Найти перелет" и "Купить билет"  (хотя бы одна из них) Если блока нет, сделать бронь в другой отель в другом городе с другими датами

        - футер
files:
    - tests/common/hotels/happyPage/common-hp-view.hermione.ts

Устройство:
    - Тач
    - Десктоп
Страница: Happy page
Сервис: Отели
Тестирование асессорами: Нет
Окружение: Testing
Tag: Smoke
Автор: shenfeld
feature: Поезда
type: Happy page

specs:
    Общий вид HP:
        - do: Открыть выдачу Москва - Екатеринбург через месяц
        - do: Кликнуть по кнопке “Выбрать место” для поезда со свободными платцкартными местами
        - do: Выбрать любое свободное плацкартное место
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Указать пассажиров”.
        - do: Заполнить все поля валидными данными
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Проверить заказ и купить”.
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Ввести карту и оплатить”.
        - do: Оплатить заказ
        - do: Дождаться загрузки страницы Happy page
        - assert: На Happy page отображаются |
              блок с информацией о рейсе и контактными данными |
              заголовок "Билет оформлен" |
              номер заказа |
              кнопка "Подробнее о заказе" |
              кнопки "Скачать" и "Распечатать" (в таче только "Скачать") |
              телефон поддержки |
              футер

files:
    - tests/common/trains/happyPage/common-hp-view.hermione.ts

tags: smoke

Сервис: ЖД
Страница: Happy page
Функциональность: Happy page
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Авиабилеты
type: Happy page

specs:
    Общий вид HP:
        - do: Выполнить поиск авиабилетов по направлению Москва - Сочи
        - do: Отфильтровать рейсы авиакомпании "Аэрофлот" при помощи фильтра авиакомпаний
        - do: Кликнуть по сниппету аэрофлота
        - do: На открывшейся странице кликнуть по кнопке "Купить" для аэрофлота (блок "продает авиакомпания" или "лучшая цена от авиакомпании")
        - do: Заполнить форму пассажира и форму контактов валидными данными
        - do: Нажать по кнопке оплатить
        - do: Оплатить заказ
        - do: Дождаться загрузки страницы Happy page
        - assert: На Happy page отображаются |
              блок с информацией о рейсе и контактными данными |
              заголовок "Билет оформлен" |
              номер заказа |
              телефон поддержки |
              кнопка "Подробнее о заказе" |
              футер

files:
    - tests/common/avia/happyPage/common-hp-view.hermione.ts

tags: smoke

Сервис: Авиа
Страница: Happy page
Функциональность: Happy page
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Отели
type: Принятие оферты для Travelline

specs:
  Общий вид страницы:
    - do: Перейти на страницу принятия офферты для Travelline
    - assert: На странице должен отображаться логотип
    - assert: На странице должен присутствовать неотмеченный чекбокс
    - assert: На странице должна быть кнопка

Устройство:
  - Десктоп
  - Тач
Страница: Партнеры
Сервис: Отели
files:
  - tests/common/hotels/offer/common-travelineOfferPage-view.hermione.ts
feature: Поезда
type: Подтверждение

specs:
    ТК ЖД Ошибка при бронировании:
        - do: |
              Перейти на поиск Москва - Санкт-Петербург через месяц
              Для любого поезда кликнуть по кнопке Выбрать место
              На странице выбора мест выбрать любое место в любом вагоне
              Нажать Указать пассажиров
              Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_FAILURE&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0
              В ответе запомнить токен из поля test_context_token
              Добавить к урлу параметр trainTestContextToken со значением полученного токена
              Перейти по полученной ссылке
              Заполнить поля любыми валидными данными
              Нажать Проверить заказ и купить
        - assert: |
              Переход на страницу подтверждения не произошел
              Отображается ошибка "Что-то пошло не так
              Билеты недоступны для покупки"
              с кнопкой "Выбрать места заново"
        - do: Нажать "Выбрать места заново"
        - assert: Произошел переход на страницу выбора мест

files:
    - tests/common/trains/order/confirmation/confirmationError.hermione.ts

tags:
    - TK
    - orkestrator

Сервис: ЖД
Страница: Подтверждение
Функциональность: Подтверждение
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
# https://testpalm.yandex-team.ru/testcase/travel-1261
feature: Отели
type: Бронирование отелей
description: Для генерации ошибки нужно дернуть ручку тестового контекста
    https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=742&partnerId=PI_TRAVELLINE&checkinDate=2020-06-20&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_NOT_FOUND&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1
    При ответе с кодом 200 в booking_page_url будет содержаться урл страницы брони.

specs:
    (ТЛ) Обработка ошибки при подтверждении брони:
        - do: Перейти на страницу брони по сгенерированному урлу с заездом-выездом на завтра-послезавтра
        - assert: Открылась страница бронирования

        - do: Заполнить данные гостей и контактные данные валидными значениями
        - do: Кликнуть по Оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
        - assert:
              Появился лоадер с текстом "Создание заказа Создаем заказ и готовимся к оплате"
              | Элементы на странице задизейблены https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png
              | Далее произошел переход на страницу ошибки при бронировании
              | Заголовок ошибки Забронировать номер не получилось. Деньги вернутся в течение часа
              | Ниже информация для пользователя о том, куда обратиться
              | Ссылка на поддержку https://yandex.ru/support/travel/troubleshooting.html
              | Указан номер заказа в формате YA-XXXX-XXXX-XXXX
              | Ниже отображается информация об отеле
              | Название - Вега Измайлово
              | Адрес и рейтинг
              | Даты заезда и выезда - завтра и послезавтра
              | Кол-во гостей - 2
              | Название оффера - test
              | Информация про питание - завтрак включен
              | Информация про кровати
              | Справа от названия отеля есть фото отеля
              | Под фото название отеля от партнера и ссылка Описание отеля от партнера
              | В самом низу блока об отеле расположены две кнопки
              | Начать новый поиск и Найти номера в отеле

        - do: Кликнуть по ссылке Описание отеля от партнера
        - assert: Открылся модал
              | Модал содержит название отеля, фото, карту и описание от партнера
              | Вверху модала есть крестик для закрытия

        - do: Кликнуть по крестику над модалом
        - assert: Модал закрылся

        - do: Кликнуть по кнопке Начать новый поиск
        - assert: Произошел переход на выдачу отелей из гео-региона бронируемого отеля

        - do: Вернуться на предыдущую страницу
        - do: Кликнуть по Найти номера в отеле
        - assert: Открылась страница отеля Вега Измайлово с теми же параметрами дат и гостей

files:
    - tests/common/hotels/book/flowErrorsTravelline/confirmationNotFound.hermione.ts

Сервис: Отели
Автор: iliasova
Устройство:
    - Десктоп
    - Тач
Функциональность: Бронирование
Страница: Бронирование
Окружение:
    - Testing
tags: ТК
Тестирование асессорами: Нет
# https://testpalm.yandex-team.ru/testcase/travel-1261
feature: Отели
type: Бронирование отелей
description: Для генерации ошибки нужно дернуть ручку тестового контекста
    https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=1221&partnerId=PI_BNOVO&checkinDate=2020-06-20&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_NOT_FOUND&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1
    При ответе с кодом 200 в booking_page_url будет содержаться урл страницы брони.

specs:
    (Bnovo) Обработка ошибки при подтверждении брони:
        - do: Перейти на страницу брони по сгенерированному урлу с заездом-выездом на завтра-послезавтра
        - assert: Открылась страница бронирования

        - do: Заполнить данные гостей и контактные данные валидными значениями
        - do: Кликнуть по Оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
        - assert:
              Появился лоадер с текстом "Создание заказа Создаем заказ и готовимся к оплате"
              | Элементы на странице задизейблены https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png
              | Далее произошел переход на страницу ошибки при бронировании
              | Заголовок ошибки Забронировать номер не получилось. Деньги вернутся в течение часа
              | Ниже информация для пользователя о том, куда обратиться
              | Ссылка на поддержку https://yandex.ru/support/travel/troubleshooting.html
              | Указан номер заказа в формате YA-XXXX-XXXX-XXXX
              | Ниже отображается информация об отеле
              | Название - Амай
              | Адрес и рейтинг
              | Даты заезда и выезда - завтра и послезавтра
              | Кол-во гостей - 2
              | Название оффера - test
              | Информация про питание - завтрак включен
              | Справа от названия отеля есть фото отеля
              | Под фото название отеля от партнера и ссылка Описание отеля от партнера
              | В самом низу блока об отеле расположены две кнопки
              | Начать новый поиск и Найти номера в отеле

        - do: Кликнуть по ссылке Описание отеля от партнера
        - assert: Открылся модал
              | Модал содержит название отеля и карту
              | Вверху модала есть крестик для закрытия

        - do: Кликнуть по крестику над модалом
        - assert: Модал закрылся

        - do: Кликнуть по кнопке Начать новый поиск
        - assert: Произошел переход на выдачу отелей из гео-региона бронируемого отеля

        - do: Вернуться на предыдущую страницу
        - do: Кликнуть по Найти номера в отеле
        - assert: Открылась страница отеля Амай с теми же параметрами дат и гостей

files:
    - tests/common/hotels/book/flowErrorsBnovo/confirmationNotFound.hermione.ts

Сервис: Отели
Автор: iliasova
Устройство:
    - Десктоп
    - Тач
Функциональность: Бронирование
Страница: Бронирование
Окружение:
    - Testing
tags: ТК
Тестирование асессорами: Нет
feature: Поезда
type: Подтверждение
description: |
    Пример ссылки на выбор мест для пересадок: https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-11T13.50&fromId=c2&fromName=Санкт-Петербург&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10

specs:
    ЖД+ЖД Бронирование и данные о рейсах на странице подтверждения:
        - do: Перейти на страницу выбора мест в первый поезд, для сложного заказа с пересадкой
        - do: Выбрать двух взрослых пассажиров
        - do: Запомнить данные о рейсах (номера поездов, время отправления/прибытия, пункты отправления/прибытия, данные о пересадке)
        - do: Выбрать любые места в первом поезде
        - do: Нажать "Далее"
        - assert: открылась страница выбора мест во второй поезд
        - do: Выбрать любые места
        - do: Нажать Указать пассажиров
        - assert: открылась страница ввода данных
        - do: Ввести любые валидные данные
        - do: Нажать Проверить заказ и купить
        - assert: открылась страница подтверждения
        - assert: в блоке с данными о рейсах все данные совпадают с шагом выбора мест (номера поездов, время отправления, пункты отправления/прибытия, информация о пересадке)
        - assert: в блоке с данными о рейсах появились бейджи для рейсов "Электронная регистрация"
        - assert: в блоке "Вагон и места" для обоих поездов есть - направление, данные о выбранных местах, схема вагона с выбранными местами
        - assert: в блоке "Пассажиры" для обоих пассажиров есть приписки с направлением каждого рейса, номером места и тарифом
        - assert: все данные совпадают с выбранными на предыдущих шагах

files:
    - tests/common/trains/order/confirmation/confirmationWithTransfer/confirmationWithTransfer.hermione.ts

# meta
Сервис: ЖД
Страница: Подтверждение
Функциональность: ЖД+ЖД Пересадки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Страница заказа

specs:
    Не удалось получить сумму к возврату:
        - do: |
            Перейти на вкладку ЖД
            Перейти на поиск Москва - Санкт-Петербург через месяц
            Для любого поезда кликнуть по кнопке Выбрать место
            На странице выбора мест выбрать любое место в любом вагоне
            Нажать Указать пассажиров
            Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_FAILURE&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0
            В ответе запомнить токен из поля test_context_token
            Добавить к урлу параметр trainTestContextToken со значением полученного токена
            Перейти по полученной ссылке
            Заполнить все поля валидными данными
            Нажать Проверить заказ и купить
            Нажать Ввести карту и оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
            Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: |
            Произошел переход на страницу заказа
            Есть кнопка Сдать билет
        - do: Кликнуть по кнопке Сдать билет
        - assert: Появилось модальное окно с ошибкой “Не удалось выполнить операцию” и кнопкой "Перезагрузить страницу"
        - do: Нажать Перезагрузить страницу
        - assert: |
            Страница обновилась
            Для билета есть кнопка Сдать билет

files:
    - tests/common/trains/order/orderPage/couldNotGetRefundAmount.hermione.ts

tags:
    - TK
    - orkestrator

# meta
Сервис: ЖД
Страница: Страница заказа
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
# https://testpalm.yandex-team.ru/testcase/travel-1252
feature: Отели
type: Бронирование отелей
description:
    Для генерации события soldout (все номера раскуплены) на этапе создания заказа нужно дернуть ручку тестового контекста
    https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=742&partnerId=PI_TRAVELLINE&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&partiallyRefundRate=50&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SOLD_OUT&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_SUCCESS&priceMismatchRate=1
    При ответе с кодом 200 в booking_page_url будет содержаться урл страницы брони.

specs:
    (ТЛ) Обработка события солдаут при создании брони:
        - do: Перейти на страницу брони по сгенерированному урлу с заездом-выездом на завтра-послезавтра
        - assert: Открылась страница бронирования

        - do: Заполнить данные гостей и контактные данные валидными значениями
        - do: Кликнуть по Оплатить
        - assert:
              Появился лоадер с текстом "Создание заказа Создаем заказ и готовимся к оплате"
              | Элементы на странице задизейблены https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png
              | Через какое-то время произошел переход на страницу с сообщением Все номера такого типа уже забронированы
              | Ниже отображается информация об отеле
              | Название - Вега Измайлово
              | Адрес и рейтинг
              | Даты заезда и выезда - завтра и послезавтра
              | Кол-во гостей - 2
              | Название оффера - test
              | Информация про питание - Завтрак включен
              | Информация про кровати
              | Справа от названия отеля есть фото отеля
              | Под фото название отеля от партнера и ссылка Описание отеля от партнера
              | В самом низу блока об отеле расположены две кнопки
              | Начать новый поиск и Найти номера в отеле

        - do: Кликнуть по ссылке Описание отеля от партнера
        - assert: Открылся модал
              | Модал содержит название отеля, фото, карту и описание от партнера
              | Вверху модала есть крестик для закрытия

        - do: Кликнуть по крестику над модалом
        - assert: Модал закрылся

        - do: Кликнуть по кнопке Начать новый поиск
        - assert: Произошел переход на выдачу отелей из гео-региона бронируемого отеля

        - do: Вернуться на предыдущую страницу
        - assert: Произошел переход на страницу бронирования (особенность Тестового Контекста)

        - do: Кликнуть по Оплатить
        - assert: Произошел переход на страницу с сообщением Все номера такого типа уже забронированы

        - do: Кликнуть по Найти номера в отеле
        - assert: Открылась страница отеля Вега Измайлово с теми же параметрами дат и гостей

files:
    - tests/common/hotels/book/flowErrorsTravelline/createOrderSoldout.hermione.ts

Сервис: Отели
Автор: iliasova
Устройство:
    - Десктоп
    - Тач
Функциональность: Бронирование
Страница: Бронирование
Окружение:
    - Testing
tags: ТК
Тестирование асессорами: Нет
# https://testpalm.yandex-team.ru/testcase/travel-1252
feature: Отели
type: Бронирование отелей
description:
    Для генерации события soldout (все номера раскуплены) на этапе создания заказа нужно дернуть ручку тестового контекста
    https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=1221&partnerId=PI_BNOVO&occupancy=2&forceAvailability=true&cancellation=CR_FULLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SOLD_OUT&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1
    При ответе с кодом 200 в booking_page_url будет содержаться урл страницы брони.

specs:
    (Bnovo) Обработка события солдаут при создании брони:
        - do: Перейти на страницу брони по сгенерированному урлу с заездом-выездом на завтра-послезавтра
        - assert: Открылась страница бронирования

        - do: Заполнить данные гостей и контактные данные валидными значениями
        - do: Кликнуть по Оплатить
        - assert:
              Появился лоадер с текстом "Создание заказа Создаем заказ и готовимся к оплате"
              | Элементы на странице задизейблены https://jing.yandex-team.ru/files/shenfeld/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-03-27_13-02-02.png
              | Через какое-то время произошел переход на страницу с сообщением Все номера такого типа уже забронированы
              | Ниже отображается информация об отеле
              | Название - Амай
              | Адрес и рейтинг
              | Даты заезда и выезда - завтра и послезавтра
              | Кол-во гостей - 2
              | Название оффера - test
              | Информация про питание - Завтрак включен
              | Справа от названия отеля есть фото отеля
              | Под фото название отеля от партнера и ссылка Описание отеля от партнера
              | В самом низу блока об отеле расположены две кнопки
              | Начать новый поиск и Найти номера в отеле

        - do: Кликнуть по ссылке Описание отеля от партнера
        - assert: Открылся модал
              | Модал содержит название отеля и карту
              | Вверху модала есть крестик для закрытия

        - do: Кликнуть по крестику над модалом
        - assert: Модал закрылся

        - do: Кликнуть по кнопке Начать новый поиск
        - assert: Произошел переход на выдачу отелей из гео-региона бронируемого отеля

        - do: Вернуться на предыдущую страницу
        - assert: Произошел переход на страницу бронирования (особенность Тестового Контекста)

        - do: Кликнуть по Оплатить
        - assert: Произошел переход на страницу с сообщением Все номера такого типа уже забронированы

        - do: Кликнуть по Найти номера в отеле
        - assert: Открылась страница отеля Амай с теми же параметрами дат и гостей

files:
    - tests/common/hotels/book/flowErrorsBnovo/createOrderSoldout.hermione.ts

Сервис: Отели
Автор: iliasova
Устройство:
    - Десктоп
    - Тач
Функциональность: Бронирование
Страница: Бронирование
Окружение:
    - Testing
tags: ТК
Тестирование асессорами: Нет
feature: Отели
type: Главная

specs:
    Переход с рецептов на страницу города:
        - do: Перейти на главную, в раздел Отели
        - assert: Под блоком рекламы и преимуществ сервиса есть блок Поиск отелей и других вариантов размещения
        - do: Нажать на любую карточку, запомнив указанное название города
        - assert: В новой вкладке открылась страница города
        - assert: В форме поиска указано название того города, который был на карточке

files:
    - tests/common/hotels/index/enter-city-page-from-index.hermione.ts

tags: smoke, hotels-api

Сервис: Отели
Страница: Главная
Функциональность: Рецепты
Устройство:
    - Тач
    - Десктоп
Окружение:
    - Testing
Тестирование асессорами: Да
feature: whiteLabel
type: Главная

specs:
    Переход с рецептов на страницу выдачи:
        - do: Перейти на главную wl
        - assert: Под баннером есть блок "Куда еще можно поехать"
        - do: Нажать на любую карточку, запомнив указанное название города
        - assert: В новой вкладке открылась страница выдачи этого города
        - assert: В форме поиска указано название того города, который был на карточке, дата заезда - завтра, дата выезда - послезавтра

tags: smoke, hotels-api

Сервис: whiteLabel
Страница: Главная
Функциональность: Рецепты
Устройство:
    - Тач
    - Десктоп
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Подтверждение

specs:
    Ошибка добавления страховки:
        - do: |
              Перейти на вкладку ЖД
              Перейти на поиск Москва - Санкт-Петербург через месяц
              Для любого поезда кликнуть по кнопке Выбрать место
              На странице выбора мест выбрать любое место в любом вагоне
              Нажать Указать пассажиров
              Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_FAILURE&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0
              В ответе запомнить токен из поля test_context_token
              Добавить к урлу параметр trainTestContextToken со значением полученного токена
              Перейти по полученной ссылке
              Заполнить поля любыми валидными данными
              Нажать Проверить заказ и купить
              Установить чекбокс страховки
              Нажать Ввести карту и оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
        - assert: |
            Произошел переход на страницу заказа
            На странице отображается желтое предупреждение "При покупке страховых полисов произошла ошибка, поэтому билеты оформлены без страховки. Деньги за нее вернутся в ближайшее время."
            В билетах нет пункта "Страховка"
            Итоговая сумма указана без учета страховки

files:
    - tests/common/trains/order/confirmation/errorAddingInsurance.hermione.ts

tags:
    - TK
    - orkestrator

# meta
Сервис: ЖД
Страница: Подтверждение
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Отели
type: Бронирование отелей

specs:
    Неуспешное применение промокода:
        - condition: Быть залогиненым.
        - do: Перейти на страницу бронирования для любого отеля, на любые даты.
        - assert: Открылась страница бронирования.
        - assert: В корзинке есть галка "У меня есть промокод", по умолчанию выключена. Поле инпут для промокода и кнопка "Применить" не показывается.
        - do: Включить галку "У меня есть промокод"
        - assert: Появилось Поле инпут для промокода и кнопка "Применить"
        - assert: Кнопка по умолчанию неактивна
        - do: В инпут написать промокод "EXPIRED", нажать применить
        - assert: Появился тултип "Срок действия промокода истёк"
        - do: В инпут написать промокод "NOT_APPLICABLE", нажать применить
        - assert: Появился тултип "Промокод не подходит для этого заказа по условиям использования"
    Промокод отклонен на этапе бронирования:
        - condition: Быть залогиненым.
        - do: Перейти на страницу бронирования для любого отеля, на любые даты
        - assert: Открылась страница бронирования.
        - assert: В корзинке есть галка "У меня есть промокод", по умолчанию выключена. Поле инпут для промокода и кнопка "Применить" не показывается.
        - do: Включить галку "У меня есть промокод"
        - assert: Появилось Поле инпут для промокода и кнопка "Применить"
        - do: Запомнить итоговую сумму заказа
        - do: В инпут написать промокод "SUCCESS_ALREADY_APPLIED", нажать применить
        - assert: Инпут, кнопка и галка задизейблились
        - assert: В блоке с промокодом появилась сумма скидки "− 200 ₽"
        - assert: Появилась ссылка "Отменить"
        - assert: Сумма заказа стала на 200р меньше, чем была до применения промокода
        - do: Заполнить информацию о гостях и контактную информацию любыми валидными данными.
        - do: Нажать оплатить.
        - assert: Остались на странице бронирования.
        - assert: Появился попап с текстом "Этот промокод уже был использован. Вы можете оплатить заказ без промокода или использовать другой."
        - assert: В попапе две кнопки - "Изменить промокод", "Оплатить"
        - assert: В попапе две цены - без скидки и со скидкой
        - do: Нажать кнопку "Изменить промокод"
        - assert: Открылась страница бронирования.
        - assert: Галка "У меня есть промокод" отжата
        - assert: Поле инпут для промокода и кнопка "Применить" не показывается.
        - assert: Сумма без учета промокода
        - do: Повторить применение промокода до нажатия кнопки "Отменить заказ"
        - do: Нажать "Оплатить" (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
        - assert: Открылась страница успешного заказа
        - do: Нажать на кнопку "Подробнее о заказе"
        - assert: Открылась страница заказа в личном кабинете
        - assert: Сумма заказа без скидки.
        - assert: Лейбла с промокодом нет
        - do: Повторить с промокодом SUCCESS_NOT_APPLICABLE
        - assert: Все результаты по шагам будут такими же, кроме текста в попапе - "Промокод не подходит для этого заказа по условиям использования. Вы можете оплатить заказ без промокода или использовать другой."

files:
    - tests/common/hotels/book/promoCodes/failed-promoCodes.hermione.ts

Сервис: Отели
Страница: Бронирование
Автор: tcheremnykh
Устройство:
    - Тач
    - Десктоп
Функциональность: Промокод
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Авиабилеты
type: Страница рейса
description: >-
    Пример страницы рейса:
    Прод: https://travel.yandex.ru/avia/flights/SU-2/
    Тестинг: https://travel-test.yandex.ru/avia/flights/SU-2/

    Для асессоров: https://travel.crowdtest.yandex.ru/avia/flights/SU-2/
specs:
    'Проверка перехода на страницу заказа со страницы рейса':
        - do: Перейти на страницу рейса для рейса SU-2
        - assert: |
              Открылась корректная страница рейса
              Есть заголовок "Рейс SU 2 Москва – Санкт-Петербург авиакомпании Аэрофлот"
              Есть блок Билеты с кнопкой Найти билеты на этот рейс.
              Отсутствие дуги между городами не является ошибкой.
              Пример страницы на десктопе: https://jing.yandex-team.ru/files/gouken67/Страница%20рейса.png
        - do: |
              Запомнить предложенную дату
              Кликнуть по кнопке Найти билеты на этот рейс (если кнопки нет, сменить дату вверху над картой)
        - assert: |
              Осуществился переход на страницу заказа для этого рейса
              Переход происходит в той же вкладке
              Указаны корректные номер рейса и дата
              Присутствует блок с выбором тарифа:
              https://jing.yandex-team.ru/files/gouken67/Страница%20заказа%20с%20блоком%20тарифов.png
        - do: Кликнуть по кнопке Купить для самого лучшего предложения
        - assert: |
              Происходит переход на сайт партнёра в новой вкладке. Если лучшее предложение на ЯндексПутешествиях,
              то происходит переход на страницу покупки Я.Путешевстуий на новой вкладке.

files:
    - tests/common/avia/flightPage/flights-redirect-to-order-page.hermione.ts

Устройство:
    - Десктоп
    - Тач
Страница: Страница рейса
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Smoke
feature: Комод
type: Мои поездки
description: Подгрузка прошедших поездок

specs:
    Подгрузка прошедших поездок:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "Мои поездки"
        - assert: В блоке прошедших поездок отображается две поездки "Сочи", "Санкт-Петербург — Александровск-Сахалинский"
        - do: Кликнуть на кнопку "Показать еще"
        - assert: |
              В блоке прошедших поездок стало 4 поездки "Сочи", "Санкт-Петербург — Александровск-Сахалинский" и "Казань", "Ростов-на-Дону"
        - assert: Кнопка "Показать еще" не должна отображаться

files:
    - tests/common/account/trips/get-more-past-trips.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Мои поездки
Функциональность: Подгрузка прошедших поездок
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
# "https://testpalm.yandex-team.ru/testcase/travel-1251"
feature: Отели
type: Бронирование отелей
description:
    Для генерации события soldout (все номера раскуплены) нужно дернуть ручку тестового контекста
    https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=742&partnerId=PI_TRAVELLINE&occupancy=2&forceAvailability=true&cancellation=CR_NON_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11&getOfferOutcome=OO_SOLD_OUT&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1
    При ответе с кодом 200 в booking_page_url будет содержаться урл страницы брони.

specs:
    (ТЛ) Обработка солдаута при переходе на бронь:
        - do: Перейти на страницу брони по сгенерированному урлу с заездом-выездом на завтра-послезавтра
        - assert:
              Вместо страницы бронирования открылась страница с сообщением "Все номера такого типа уже забронированы" (пример https://jing.yandex-team.ru/files/iliasova/2020-04-24_16.40.55-ksz3k.png)
              | Ниже отображается информация об отеле
              | Название - Вега Измайлово
              | Адрес и рейтинг
              | Даты заезда и выезда - завтра и послезавтра
              | Кол-во гостей
              | Название оффера - test
              | Информация про питание
              | Информация про кровати
              | Справа от названия отеля есть фото отеля
              | Под фото название отеля от партнера и ссылка Описание отеля от партнера
              | В самом низу блока об отеле расположены две кнопки
              | Начать новый поиск и Найти номера в отеле

        - do: Кликнуть по ссылке Описание отеля от партнера
        - assert: Открылся модал
              | Модал содержит название отеля, фото, карту и описание от партнера
              | Вверху модала есть крестик для закрытия

        - do: Кликнуть по крестику над модалом
        - assert: Модал закрылся

        - do: Кликнуть по кнопке Начать новый поиск
        - assert: Произошел переход на выдачу отелей из гео-региона бронируемого отеля

        - do: Вернуться на предыдущую страницу
        - do: Кликнуть по Найти номера в отеле
        - assert: Открылась страница отеля Вега Измайлово с теми же параметрами дат и гостей

files:
    - tests/common/hotels/book/flowErrorsTravelline/getOfferSoldout.hermione.ts

Сервис: Отели
Автор: iliasova
Устройство:
    - Десктоп
    - Тач
Функциональность: Бронирование
Страница: Бронирование
Окружение:
    - Testing
tags: ТК
Тестирование асессорами: Нет
# "https://testpalm.yandex-team.ru/testcase/travel-1251"
feature: Отели
type: Бронирование отелей
description:
    Для генерации события soldout (все номера раскуплены) нужно дернуть ручку тестового контекста
    https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=1221&partnerId=PI_BNOVO&occupancy=2&forceAvailability=true&cancellation=CR_NON_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11&getOfferOutcome=OO_SOLD_OUT&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_SUCCESS&priceMismatchRate=1.1
    При ответе с кодом 200 в booking_page_url будет содержаться урл страницы брони.

specs:
    (Bnovo) Обработка солдаута при переходе на бронь:
        - do: Перейти на страницу брони по сгенерированному урлу с заездом-выездом на завтра-послезавтра
        - assert:
              Вместо страницы бронирования открылась страница с сообщением "Все номера такого типа уже забронированы" (пример https://jing.yandex-team.ru/files/iliasova/2020-04-24_16.40.55-ksz3k.png)
              | Ниже отображается информация об отеле
              | Название - Амай
              | Адрес и рейтинг
              | Даты заезда и выезда - завтра и послезавтра
              | Кол-во гостей
              | Название оффера - test
              | Информация про питание
              | Справа от названия отеля есть фото отеля
              | Под фото название отеля от партнера и ссылка Описание отеля от партнера
              | В самом низу блока об отеле расположены две кнопки
              | Начать новый поиск и Найти номера в отеле

        - do: Кликнуть по ссылке Описание отеля от партнера
        - assert: Открылся модал
              | Модал содержит название отеля и карту
              | Вверху модала есть крестик для закрытия

        - do: Кликнуть по крестику над модалом
        - assert: Модал закрылся

        - do: Кликнуть по кнопке Начать новый поиск
        - assert: Произошел переход на выдачу отелей из гео-региона бронируемого отеля

        - do: Вернуться на предыдущую страницу
        - do: Кликнуть по Найти номера в отеле
        - assert: Открылась страница отеля Амай с теми же параметрами дат и гостей

files:
    - tests/common/hotels/book/flowErrorsBnovo/getOfferSoldout.hermione.ts

Сервис: Отели
Автор: iliasova
Устройство:
    - Десктоп
    - Тач
Функциональность: Бронирование
Страница: Бронирование
Окружение:
    - Testing
tags: ТК
Тестирование асессорами: Нет
feature: Поезда
type: Страница заказа

specs:
    Получение билета в кассе:
        - do: |
            Перейти на вкладку ЖД
            Перейти на поиск Москва - Санкт-Петербург через месяц
            Для любого поезда кликнуть по кнопке Выбрать место
            На странице выбора мест выбрать любое место в любом вагоне
            Нажать Указать пассажиров
            Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=10&alwaysTimeoutAfterConfirmingInSeconds=0
            В ответе запомнить токен из поля test_context_token
            Добавить к урлу параметр trainTestContextToken со значением полученного токена
            Перейти по полученной ссылке
            Заполнить все поля валидными данными
            Нажать Проверить заказ и купить
            Нажать Ввести карту и оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
            Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: |
            Произошел переход на страницу заказа
        - do: |
            Выждать 10 секунд
            Обновить страницу
        - assert: |
            Над заказом есть текст на желтом фоне “Вернуть билет онлайн нельзя, так как вы получили бумажный билет в кассе или терминале. Вы можете сдать билет в кассе.”
            Есть приписка “Выдан посадочный купон” рядом с билетом
            Нет действий Сдать и Отменить ЭР
            Есть кнопка Скачать
            Кнопка Распечатать есть в десктопе и отсутствует в тачах

files:
    - tests/common/trains/order/orderPage/gettingTicketAtTicketOffice.hermione.ts

tags:
    - TK
    - orkestrator

# meta
Сервис: ЖД
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: ЖД
type: Happy Page
description: |
    Информация для асессоров: форма оплаты с полями ввода данных карты втестинге намеренно пропускается.
    Шаги, где требуется ввести данные карты и нажать кнопку Оплатить, нужно пропустить.

    При выборе мест стараемся выбирать место №10 в вагоне.
specs:
  'Happy Page оплаты билетов "Туда-Обратно"':
      - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда - Обратно».
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд туда»
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд обратно» и перейти на шаг выбора мест.
      - do: Указать количество пассажиров "1 взрослый" и выбрать места на поезда туда-обратно. Запомнить номера мест и схемы поездов.
      - do: Указать данные пассажира и нажать кнопку «Проверить заказ и купить»
      - do: Ввести данные карты и купить билеты.
      - assert: |
            * Произойдет переход на Happy Page, которая внешне не отличается от HP при покупке в одном направлении, кроме того, что вместо одного сегмента «туда» отрисованы два сегмента «туда-обратно»: https://jing.yandex-team.ru/files/papulova/o6g89MVagm.png
            * Под заголовком "Билет оформлен" есть текст "Отправили подтверждение на почту"
      - do: Только десктоп - нажать кнопку «Распечатать»
      - assert:	Открылось окно с электронными билетами в оба направления "туда и обратно"
      - do: Нажать кнопку «Скачать»
      - assert:	Скачался файл, в котором билеты в оба направления "туда и обратно"

manual: true
tags: smoke
Функциональность: Happy Page
Устройство:
  - Десктоп
  - Тач
Страница: Happy Page
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
Tag: Smoke
feature: Поезда
type: Выдача
description: Общий вид выдачи в десктопе

specs:
    Подсказки при неизвестном пункте отправления/прибытия:
        - do: |
            Перейти на главную сервиса
            Перейти на вкладку Ж/Д билеты
        - do: В поле "Откуда" написать Альба-Лонга, в поле "Куда" - Брундизий и кликнуть кнопку "Найти" (1)
        - assert: |
            Перехода на выдачу не происходит
            Первое поле подсвечивается черным (no_autotest)
            Для первого поля есть подсказка "Неизвестный пункт отправления"
        - do: |
            Ввести в первое поле Москва
            Кликнуть Найти
        - assert: |
            Перехода на выдачу не происходит
            Второе поле подсвечивается черным (no_autotest)
            Для второго поля есть подсказка “Неизвестный пункт прибытия” (2)
        - do: |
            Перейти на выдачу Москва - Санкт-Петербург
            Повторить шаги от (1) до (2)
        - assert: Подсказки совпадают


files:
    - tests/desktop/trains/serp/hintsForUnknowItem.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Устройство:
    - Десктоп
Функциональность: Форма поиска
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Отели
type: Страница отеля
description: Кейс проверяет, что не ломается верстка на странице отеля, когда с бэкэнда не пришли румы (комнаты)

specs:
    Общий вид страницы отеля без румов:
    - do: >-
        На главной сервиса в вкладке отелей в первое поле ввести Novotel Москва
        Сити

        Выбрать даты завтра-послезавтра и кол-во гостей 2

        Кликнуть Найти

        К полученному урлу на странице отеля добавить
        &srcParams=travel:enablePermarooms=false
    - assert: >-
        Произошел переход на страницу отеля

        Верстка на всей странице в норме

        Под фото и формой поиска есть блок офферов

        https://jing.yandex-team.ru/files/iliasova/2021-07-22_16.43.13-6yd3j.png

        *Если такого блока нет, поискать на другие даты, но с диапазоном в одну
        ночь

        В каждом оффере есть

        - название (с припиской "T")

        - информация об отменяемости

        - цена и указание кол-ва ночей

        - кнопка Забронировать

        При этом у каждого предложения не должно быть фото номера и перечень
        услуг (если фото и услуги есть, то нужно поискать другой отель, например
        Бутик отель Красная гора, Бэрри Хостел)

Сервис: Отели
Страница: Страница отеля
Автор: iliasova
Устройство:
  - Тач
  - Десктоп
Окружение:
  - Production
  - Testing
Тестирование асессорами: Нет
files:
  - tests/common/hotels/hotel/hotel-without-group-rooms.hermione.ts
feature: Отели
type: Страница отеля
description: >-
    В таче может отличаться порядок и внешний вид элементов, но важно чтобы они
    были.
specs:
    Страница отеля без дат:
        - do: |-
              Перейти по ссылке на страницу отеля https://travel-test.yandex.ru/hotels/moscow/cosmos-moscow-vdnh-hotel
              для асессоров - https://travel.crowdtest.yandex.ru/hotels/moscow/cosmos-moscow-vdnh-hotel
        -   assert: >-
                * Отображается страница отеля со следующими составляющими:

                * На уровне хэдера форма поиска (в тачах форма под хэдером)
                  В форме отображается название отеля и "Выберите дату"
                * Под хэдэром баннер рекламы (в тачах он под ссылкой на выдачу)

                * Ниже стрелка назад и ссылка на выдачу с указанием региона

                * Под ссылкой название отеля

                * Под названием адрес и отметка "N км до центра" (где N - расстояние) и станция метро с
                расстоянием до нее (на тачах под кнопкой выбора номера).

                * Возле названия отеля есть сердечко (добавление в избранное) и иконка шэринга

                * Справа от названия рейтинг, что понравилось гостям, ссылка на отзывы (на тачах нет "что понравилось гостям", а ссылка на отзывы находится под названием)

                * Ниже расположены фото отеля.

                * Под фото находится блок Про отель - отображены топ фичи и ссылка Все
                услуги

                * (Только для десктопа) Справа расположен блок Отель на карте

                  * В нем указан адрес отеля.

                  * Под адресом в блоке находится карта

                  * Сниппет отеля есть на карте (в тачах нет карты)

                * Ниже находится блок номеров

                * В заголовке блока находится надпись "Наличие мест Укажите дату заезда и выезда"

                * Ниже отображается форма поиска

                * Даты в форме не заполнены, кол-во гостей - 2 взрослых, на кнопке написано "Проверить цены"

                * Ниже расположены предложения, у каждого предложения кнопка с надписью "Проверить цены", цена не написана

                * Под картой находится блок похожих отелей (в тачах после отзывов)

                * В блоке есть название отеля, фото (или заглушка), кол-во отзывов
                (может отсутствовать у отелей без отзывов), тип (гостиница, хостел и
                т.д), рейтинг и надпись Узнать цену

                * Ниже расположен блок Гостям понравилось (в таче после блока номеров)

                * Еще ниже находится блок отзывов

                * Есть общее кол-во отзывов, варианты сортировки, теги

                * Затем отображаются отзывы

                * Внизу страницы над футером отображаются хлебные крошки Отели -> Область отеля -> Город отеля
                - > Название отеля (название некликабельно)
        -   do: |-
                В форме над офферами заполнить дату заезда 5-е число следующего месяца, дату выезда - 6-е
        -   assert: >-
                * Отображается страница отеля

                * В форме в шапке отображаются даты, введенные ранее

                * В форме над предложениями отображаются даты, введенные ранее

                * В блоке похожих отелей у отелей появилась минимальная цена

                * Остальные элементы такие же как на первом шаге

Устройство:
    - Десктоп
    - Тач
Страница: Страница отеля
Tag:
    - Smoke
Сервис:
    - Отели
Автор:
    - ivalor
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
files:
    - tests/common/hotels/hotel/hotelPage-without-date.hermione.ts
feature: Комод
type: Моя поездка
description: Блок отельного кросс-сейла в моей поездке

specs:
    Блок отельного кросс-сейла в моей поездке:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - do: Проскроллить до блока кросс-сейла
        - do: Кликнуть по блоку
        - assert: Произошел переход на выдачу отеля - "/hotels/search"
        - assert: Даты соответствуют датам из поездки
        - do: Вернуться в поездку
        - do: Нажать крестик у кроссейл блока
        - assert: Блок кросс-сейла скрылся
        - do: Обновить страницу
        - assert: После перезагрузки блок не показывается

files:
    - tests/common/account/trips/hotels-cross-sale.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Моя поездка
Функциональность: Блок отельного кросс-сейла
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
title: Membrace
description: Membrace — это сервис модерации пользовательского контента (текстов, картинок и ссылок). Например, вы можете придти к нам с текстом, а мы вернем для него список нарушений. Гибкий подход к модерации контента позволяет получить эффективные готовые решения.
meta:
  title: Метаданные
  noIndex: true
links:
- title: С чего начать
  description: Запросите демо и получите индивидуальное готовое решение
  href: concept/demo
- title: Запуск потоковой обработки
  description: Пошаговый запуск нового проекта
  href: concept/commissioning
- title: Как работает Membrace
  description: Описание работы сервиса
  href: concept/how-it-work
- title: FAQ
  description: Ответы на вопросы о сервисе
  href: concept/faq

      title: Документация Messenger SDK
description: Тут можно написать более подробное описание, а внизу добавить ссылки на более популярные разделы документации
meta:
  title: Документация Messenger SDK
links:
  - title: Contribute guide
    description:  Как внести правки в документацию
    href: contribute
  - title: Android Quick Start
    description: Быстрый старт для Android
    href: android/inittitle: Документация PaymentSDK
description: PaymentSDK – мобильная библиотека, которая позволяет проводить платежи (в том числе с помощью GooglePay и ApplePay), привязывать новые карты. Функционал библиотеки постоянно расширяется.
meta:
  title: Документация PaymentSDK
links:
  - title: О PaymentSDK
    href: main
  - title: Диалог PaymentSDK How to
    href: paymentsdk/
  - title: Компоненты в Android Quick Start
    description: Быстрый старт с компонентами для Android
    href: android/quick
  - title: Компоненты в iOS Quick Start
    description: Быстрый старт с компонентами для iOS
    href: ios/quick
  - title: Android Core API
    description: Описание Core API для платформы Android
    href: android/core/
  - title: Android Prebuilt UI
    description: Prebuilt UI компоненты, доступные для Android
    href: android/ui/
  - title: iOS Core API
    description: Описание Core API для платформы iOS
    href: ios/core/
  - title: iOS Prebuilt UI
    description: Prebuilt UI компоненты, доступные для iOS
    href: ios/ui/
  - title: Схема работы с данными банковских карт
    description: Подробная схема работы с данными банковских карт используя Core API и Prebuilt UI
    href: scheme
title: Документация Speechkit
meta:
  title: Speechkit
  noIndex: true
links:
  - title: SpeechKit Box
    description:  SpeechKit Box  позволяет распознавать и синтезировать речь и предоставляет для этого MRCP-интерфейс.
    href: box-guide/
  - title:  SpeechKit Mobile SDK
    description: SpeechKit Mobile SDK — мультиплатформенная библиотека, которая позволяет добавить в мобильные приложения распознавание, синтез речи и голосовую активацию.
    href: mobilesdk-nda/
feature: Портал
type: Главная
description: Рекламный блок

specs:
    Рекламный блок:
        - do: Перейти на вкладку Авиабилеты
        - assert: Под формой поиска расположен рекламный блок (содержание может отличаться)
        - do: Перейти на вкладку ЖД билеты
        - assert: Под формой поиска расположен рекламный блок (содержание может отличаться)
        - do: Перейти на вкладку Отели
        - assert: Под формой поиска расположен рекламный блок (содержание может отличаться)
        - do: Перейти на вкладку Автобусы
        - assert: Под формой поиска расположен рекламный блок (содержание может отличаться)

files:
    - tests/common/common/index/index-adfox.hermione.ts

tags: smoke
Сервис: Портал
Страница: Главная
Функциональность: работа с главной страницей
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Главная
description: ''
specs:
  Переход на поиск с популярных ж/д маршрутов:
    - do: |-
        Перейти на вкладку Ж/д билеты
        Проскроллить страницу
    - assert: |-
        - Есть блок "Выгодные предложения по ж/д билетам"
        - Отображается несколько карточек направлений
        - Для каждой карточки есть направление, цена, картинка
    - do: Кликнуть по маршруту "Из Москвы в Санкт-Петербург"
    - assert: >-
        * Произошел переход на страницу направления на вкладке ЖД, в десктопе
        раскрыт календарь, в таче вверху страницы полная форма поиска

        * Поле "Когда" не заполнено

        * Поиск осуществился от и до пунктов, указанных в карточке

        * Отображается расписание поездов на завтра (либо может быть на более
        позднюю дату, если нет поездов на завтра)

files:
    - tests/common/trains/index/index-popular-places.hermione.ts

manual: true
Функциональность: Рецепты
Устройство:
  - Десктоп
  - Тач
Страница: Главная
tlds: ru
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Smoke
  - Blocker
Автор: shenfeld
feature: Отели
type: Главная
description: проверка корретности загрузки главной страницы и ее элементов

specs:
    Отображается блок популярных мест:
        - do: Зайти на главную страницу отелей
        - assert: На странице есть блок “Популярные места”

    Есть хотя бы одно популярное место:
        - do: Зайти на главную страницу отелей
        - do: На странице есть хотя бы одно популярное место

    Заполнение и отправка формы поиска с переходом на поисковую отельную выдачу:
        - do: Зайти на главную страницу отелей
        - do: Заполнить поле "Страна, курорт или отель" городом "Грозный"
        - do: Заполнить поля "Заезд" завтрашней датой и "Выезд" послезавтрашней
        - do: Указать гостей 3 взрослых, ребенок 0 лет и ребенок 3 года
        - do: Нажать "Найти"
        - assert: Осуществился переход на поисковую выдачу с соответствующим запросом

    Заполнение и отправка формы поиска с переходом на отель:
        - do: Зайти на главную страницу отелей
        - do: Заполнить поле "Страна, курорт или отель" городом "Отель Грозный Сити"
        - do: Заполнить поля "Заезд" завтрашней датой и "Выезд" послезавтрашней
        - do: Указать гостей 1 взрослый
        - do: Нажать "Найти"
        - assert: Осуществился переход на страницу отеля с соответствующим запросом

files:
    - tests/common/hotels/index/index.hermione.ts

tags: smoke

# meta
Сервис: Отели
Функциональность: работа с главной страницей
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Главная
description: проверка корретности загрузки главной страницы и ее элементов

specs:
    Отображается блок популярных направлений:
        - do: Зайти на главную страницу поездов
        - assert: На странице есть блок “Выгодные предложения по ж/д билетам”

files:
    - tests/common/trains/index/index.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Функциональность: работа с главной страницей
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: whiteLabel
type: Главная
description: проверка корректности загрузки главной страницы и ее элементов

specs:
    Отображается правильный хедер:
        - do: Зайти на главную страницу wl
        - assert: в хедере есть партнерское лого
        - assert: в хедере есть кнопки Поддержка, Избранное, Мои поездки, нет Сертификатов

    Отображается корректная форма ввода:
        - do: Зайти на главную страницу wl
        - assert: отображается форма ввода с полями "Куда вы хотите поехать", "Заезд", "Выезд", "Количество гостей" и кнопкой "Найти"
        - assert: сверху формы заголовок

tags: smoke

# meta
Сервис: whiteLabel
Функциональность: работа с главной страницей
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Главная
description: проверка корретности загрузки главной страницы и ее элементов

specs:
    Работа популярных ж/д направлений:
        - do: Зайти на главную страницу поездов
        - do: Нажать на первое популярное направление
        - assert: Произошел переход на страницу поиска поездов,
              Города отправления и прибытия соотвествуют выбранному популярному напаравлению

files:
    - tests/desktop/trains/index/index.hermione.ts

tags: smoke

# meta
Сервис: ЖД
feature: Авиабилеты
type: Главная
description: Проверка корретности загрузки главной страницы и ее элементов

specs:
    Отображаются популярные авиа направления:
        - do: Зайти на главную страницу авиабилетов
        - assert: На странице есть блок “Дешёвые авиабилеты на популярные направления”

    Популярные авиа направления соотвествуют геолокации пользователя:
        - do: Зайти на главную страницу авиабилетов с предустановленным местоположением пользователя
        - assert: |
              В блоке “Дешёвые авиабилеты на популярные направления” отображаются популярные направления.
              В заголовке указан "Вылет из ..." с городом с ближайшим аэропортом

    Заполнение и отправка формы поиска авиабилетов с переходом на поисковую выдачу:
        - do: Зайти на главную страницу авиабилетов
        - do: Заполнить поля "Откуда" и "Куда" любым направлением
        - do: Заполнить поле "Туда" завтрашней датой
        - do: Заполнить поле "Обратно" завтрашней датой плюс неделя
        - do: Указать пассажира взрослого, ребенка и младенца в бизнес класс
        - do: Нажать "Найти"
        - assert: Осуществился переход на поисковую выдачу с соответствующим запросом

    По умолчанию выбрана вкладка авиабилетов:
        - do: Перейти на главную портала
        - assert: по умолчанию активирована вкладка авиабилетов

    Поиск рейсов без выбора количества пассажиров:
        - do: в поле откуда ввести Екатеринбург
        - do: куда - Москва
        - do: дата туда - послезавтра
        - do: дату обратно не заполняем
        - do: Нажать “Найти”
        - assert: |
            Произошел переход на https://travel-test.yandex.ru/avia/search/result/...,
            В параметрах урла
            adult_seats=1
            children_seats=0
            infant_seats=0

    Поиск рейсов c выбором количества пассажиров:
        - do: в поле откуда ввести Екатеринбург
        - do: куда - Москва
        - do: дата туда - послезавтра
        - do: дату обратно не заполняем
        - do: Изменить кол-во пассажиров взрослые - 3, дети -1, младенцы - 2
        - do: Нажать “Найти”
        - assert: |
            Произошел переход на https://travel-test.yandex.ru/avia/search/result/...
            В параметрах урла
            adult_seats=3
            children_seats=1
            infant_seats=2

files:
    - tests/common/avia/index/index.hermione.ts

tags: smoke

# meta
Сервис: Авиа
Страница: Главная
Функциональность: Форма поиска
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
title: Membrace
description: Membrace is a service for moderating user content (texts, images, and links). You can send us a text, and we'll send you a list of violations in it. A flexible approach to content moderation allows us to provide you with effective ready-to-go solutions.
meta:
  title: Metadata
  noIndex: true
links:
- title: Getting started
  description: Request a demo and get an individual ready-to-go solution
  href: concept/demo
- title: Launching stream processing
  description: "Launching a new project: a step-by-step guide"
  href: concept/commissioning
- title: How Membrace works
  description: Service description
  href: concept/how-it-work
- title: FAQ
  description: Answers to questions about Membrace
  href: concept/faqfeature: Поезда
type: Подтверждение

specs:
    Не удалось получить цены страховки:
        - do: |
            Перейти на вкладку ЖД
            Перейти на поиск Москва - Санкт-Петербург через месяц
            Для любого поезда кликнуть по кнопке Выбрать место
            На странице выбора мест выбрать любое место в любом вагоне
            Нажать Указать пассажиров
        - assert: Произошел переход на страницу ввода данных
        - do: |
            Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_FAILURE&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0
            В ответе запомнить токен из поля test_context_token
            Добавить к урлу параметр trainTestContextToken со значением полученного токена
            Перейти по полученной ссылке
            Заполнить все поля валидными данными
            Нажать Проверить заказ и купить
        - assert: |
            Произошел переход на страницу подтверждения
            На странице нет блока для добавления страховки

files:
    - tests/common/trains/order/confirmation/insurancePrices.hermione.ts

tags:
    - TK
    - orkestrator

# meta
Сервис: ЖД
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Выдача
description: ''
specs:
  Комод. Карта отелей на выдаче жд:
    - do: Перейти на выдачу жд по любому направлению
    - assert: >-
        * После первого блока сниппетов с билетами отображается карта с отелями

        Десктоп - https://jing.yandex-team.ru/files/papulova/Kzrvo5T9pA.png

        Тач - https://jing.yandex-team.ru/files/papulova/GDjETTcBcm.png

        * В шапке карты указаны даты на 1 ночь (например, с 2 по 3 февраля), в
        десктопе один раскрытый сниппет с отелем, в таче нет раскрытых сниппетов
    - do: Кликнуть по любому месту на карте
    - assert: >-
        Открылась выдача отелей на указанные даты в городе из пункта Куда в жд
        поиске
    - do: Вернуться назад и кликнуть по кнопке/ссылке "Выбрать подходящий отель"
    - assert: >-
        Открылась выдача отелей на указанные даты в городе из пункта Куда в авиа
        поиске
manual: true
Сервис: Комод
Устройство:
  - Тач
  - Десктоп
Страница: Выдача
Тестирование асессорами: Нет
Автор: papulova
feature: Поезда
type: Подтверждение

specs:
    ТК ЖД Ошибка получения данных о заказе:
        - do: |
              Перейти на вкладку ЖД
              Перейти на поиск Москва - Санкт-Петербург через месяц
              Для любого поезда кликнуть по кнопке Выбрать место
              На странице выбора мест выбрать любое место в любом вагоне
              Нажать Указать пассажиров
              Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInMinutes=0&officeAcquireDelayInMinutes=0&alwaysTimeoutAfterConfirmingInSeconds=10
              В ответе запомнить токен из поля test_context_token
              Добавить к урлу параметр trainTestContextToken со значением полученного токена
              Перейти по полученной ссылке
              Заполнить поля любыми валидными данными
              Нажать Проверить заказ и купить
              Нажать Ввести карту и оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
              Выждать 10 секунд
              Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: |
              Произошел переход на страницу заказа
              Страница не открывается
              Отображается ошибка "Произошла ошибка
              Не удалось загрузить данные о заказе. Попробуйте позднее. Если проблема повторяется, свяжитесь со службой поддержки по номеру 8 800 511-71-04 или через форму обратной связи."
              с кнопками "Вернуться на главную" и "Перезагрузить страницу"
        - do: Нажать "Перезагрузить страницу"
        - assert: |
              Страница обновилась
              Отображается ошибка
        - do: Нажать "Вернуться на главную"
        - assert: Произошел переход на главную портала

files:
    - tests/common/trains/order/confirmation/noOrderDataError.hermione.ts

tags:
    - TK
    - orkestrator

Сервис: ЖД
Страница: Подтверждение
Функциональность: Подтверждение
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Оплата

specs:
    Не удалось подтвердить страховку:
        - do: |
            Перейти на вкладку ЖД
            Перейти на поиск Москва - Санкт-Петербург через месяц
            Для любого поезда кликнуть по кнопке Выбрать место
            На странице выбора мест выбрать любое место в любом вагоне
            Нажать Указать пассажиров

        - assert: Произошел переход на страницу ввода данных
        - do: |
            Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_FAILURE&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0
            В ответе запомнить токен из поля test_context_token
            Добавить к урлу параметр trainTestContextToken со значением полученного токена
            Перейти по полученной ссылке
            Заполнить все поля валидными данными
            Нажать Проверить заказ и купить
        - assert: |
            Произошел переход на страницу подтверждения
            На странице есть блок для добавления страховки
        - do: |
            Запомнить итоговую сумму без страховки
            Выбрать страховку
            Нажать Ввести карту и оплатить
        - assert: |
            Осуществился переход на страницу оплаты
            Через какое-то время появилось модальное окно c текстом "Не удалось купить страховой полис
            При покупке страхового полиса произошла ошибка" и двумя кнопками "Выбрать места заново" и "Продолжить без страховки"
        - do: Нажать на кнопку "Продолжить без страховки"
        - assert: Открылась форма оплаты
        - do: |
            Ввести данные тестовой карты
            Например: 5100003697253468, 12/20, 090
            Нажать Оплатить
            Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: |
            Произошел переход на страницу заказа
            Рядом с ценами за билеты нет позиции "Страховка"
            Итоговая сумма равна сумме без страховки на странице подтверждения

files:
    - tests/common/trains/order/pay/notAbleToConfirmInsurance.hermione.ts

tags:
    - TK
    - orkestrator

# meta
Сервис: ЖД
Страница: Оплата
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Авиабилеты
type: Покупка
description: ''
specs:
    'Проверка выбора тарифов на странице варианта в десктопе':
        - do: |-
              Зайти на главную,
              На вкладке авиа ввести в поля
              * откуда - Екатеринбург
              * куда - Москва
              * туда - 5 число следующего месяца
              * обратно не заполняем
              Кликнуть "Найти"
        - assert: Произошел переход на страницу выдачи
        - do: |
              Убедиться, что выбрана сортировка Сначала рекомендуемые, по возрастанию
              Применить фильтр Авиакомпания = S7, чекбокс Комбинации авиакомпаний снять
        - assert: На выдаче остались варианты от авиакомпании S7
        - do: Кликнуть по первому сниппету (не по кнопке с ценой)
        - assert: Осуществился переход на страницу выбранного варианта
        - do: Проверить наличие багажной информации и информации о возврате
        - assert: Багажная информация и информация о возврате содержатся в сниппете в качестве значения выпадающего списка тарифов и блока тарифов в карточке рейса
        - do: Кликнуть по значению выпадающего списка
        - assert: |
              Появляется окно с выбором тарифа
              Текущий выбранный тариф выделен жёлтой рамкой
              Значения выбранного тарифа соответствуют тому, что было указано для свёрнутого выпадающего списка
              В каждом пункте выбора тарифа указаны:
              * Цена предложения с указанным тарифом
              * Значение ручной клади
              * Значение багажа
              * Значение возвратности
              Пример: https://jing.yandex-team.ru/files/gouken67/Выбор%20тарифа%20десктоп.png
        - do: |
              Выбрать соседний пункт в окне тарифов
              Запомнить данные выбранного пункта
        - assert: |
              Окно тарифов закрывается
              Значение самой дешёвой цены изменяется на то, которое было указано в выбранном пункте тарифа
              Корректно изменяются значения багажа и возвратности
              Изменяется тарифная информация в карточке рейса
        - do: Сравнить данные тарифа из выбора тарифов с тарифной информацией в карточке рейса (https://jing.yandex-team.ru/files/gouken67/Тарифная%20информация%20в%20карточке%20рейса.png)
        - assert: Данные совпадают
        - do: Кликнуть по жёлтой кнопке Купить
        - assert: |
              Происходит редирект к партнёру
              Стоимость у партнёра совпадает с тем, что было указано на выдаче (за вычетом страхования и СМС-информирования - эти доп. услуги добавляет сам партнёр. Не всегда применимо)

files:
    - tests/desktop/avia/order/order-all-tariffs-desktop.hermione.ts

Устройство:
    - Десктоп
Страница: Страница заказа
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Smoke
feature: Авиабилеты
type: Покупка
description: ''
specs:
    'Проверка выбора тарифов на странице варианта в таче':
        - do: |-
              Зайти на главную,
              На вкладке авиа ввести в поля
              * откуда - Екатеринбург
              * куда - Москва
              * туда - 5 число следующего месяца
              * обратно не заполняем
              Кликнуть "Найти"
        - assert: Произошел переход на страницу выдачи
        - do: |
              Убедиться, что выбрана сортировка Сначала рекомендуемые, по возрастанию
              Применить фильтр Авиакомпания = S7, чекбокс Комбинации авиакомпаний снять
        - assert: На выдаче остались варианты от авиакомпании S7
        - do: |
              Запомнить багажную информацию и цену предложения на первом сниппете
              Кликнуть по первому сниппету (не по кнопке с ценой и багажной информации)
        - assert: Осуществился переход на страницу выбранного варианта
        - do: Проскроллить страницу до вариантов от партнёров
        - assert: |
              Над партнёрами расположена карусель с выбором тарифа
              Значения выбранного тарифа соответствуют тому, что было указано на сниппете
              'В каждом пункте выбора тарифа указаны:'
              * Цена предложения
              * Значение ручной клади
              * Значение багажа
              * Значение возвратности
              Пример: https://jing.yandex-team.ru/files/gouken67/Выбор%20тарифа%20на%20странице%20варианта%20в%20таче.png
        - do: Проскроллить варианты тарифов в шторке
        - assert: Варианты скроллятся корректно
        - do: |
              Проскроллить до второго варианта
              Тапнуть по нему
        - assert: |
              Значение самой дешёвой цены изменяется на то, которое было указано в выбранном пункте тарифа
              Корректно изменяются значения багажа и возвратности
              Изменяется тарифная информация в карточке рейса
        - do: Сравнить данные тарифа из выбора тарифов с тарифной информацией в карточке рейса (https://jing.yandex-team.ru/files/kuklina/2022-05-20_14-24-46.png)
        - assert: Данные совпадают
        - do: Кликнуть по жёлтой кнопке Купить
        - assert: |
              Происходит редирект к партнёру
              Стоимость у партнёра совпадает с тем, что было указано на выдаче (за вычетом страхования и СМС-информирования - эти доп. услуги добавляет сам партнёр)

files:
    - tests/touch/avia/order/order-all-tariffs-touch.hermione.ts

Устройство:
    - Тач
Страница: Страница заказа
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Smoke
feature: Авиабилеты
type: Покупка

specs:
    Соответствие данных на покупке Москва — Симферополь:
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |
              Заполнить форму поиска билетов
              Откуда: Москва
              Куда: Севастополь
              Туда: текущее число, дату обратно не ставить.
              Пассажиры: 1 взрослых
              Класс: Эконом
        - do: Нажать кнопку “Найти”
        - assert: открылась выдача
        - assert: выдача соответствует параметрам поиска
        - do: Кликнуть по первому сниппету(не по кнопке купить)
        - assert: открылась страница покупки
        - assert: есть заголовок Москва- Симферополь
        - assert: есть дата вылета
        - assert: есть надпись "1 пассажир эконом-класс"
        - assert: есть хотя бы одна кнопка перехода к партнеру
        - do: перейти по кнопке купить у любого партнера(no_autotest)
        - assert: в новой вкладке открылась страница партнера, параметры поиска соответствуют выбранным на сервисе(no_autotest)

    Соответствие данных на покупке Москва — Санкт-Петербург:
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |
            Заполнить форму поиска билетов
            Откуда: Домодедово
            Куда: Пулково
            Туда: текущее число, дату обратно не ставить.
            Пассажиры: 1 взрослых
            Класс: Эконом
        - do: Нажать кнопку “Найти”
        - assert: открылась выдача
        - assert: выдача соответствует параметрам поиска
        - do: Кликнуть по первому сниппету(не по кнопке купить)
        - assert: открылась страница покупки
        - assert: есть заголовок Москва — Санкт-Петербург
        - assert: есть дата вылета
        - assert: есть надпись "1 пассажир эконом-класс"
        - assert: есть хотя бы одна кнопка перехода к партнеру
        - do: перейти по кнопке купить у любого партнера(no_autotest)
        - assert: в новой вкладке открылась страница партнера, параметры поиска соответствуют выбранным на сервисе(no_autotest)

    Соответствие данных на покупке Берлин — Париж:
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |
              Заполнить форму поиска билетов
              Откуда: Берлин
              Куда: Париж
              Туда: текущее число, дату обратно не ставить.
              Пассажиры: 1 взрослых
              Класс: Бизнес
        - do: Нажать кнопку “Найти”
        - assert: открылась выдача
        - assert: выдача соответствует параметрам поиска
        - do: Кликнуть по первому сниппету(не по кнопке купить)
        - assert: открылась страница покупки
        - assert: есть заголовок Берлин — Париж
        - assert: есть дата вылета
        - assert: есть надпись "1 пассажир бизнес-класс"
        - assert: есть хотя бы одна кнопка перехода к партнеру
        - do: перейти по кнопке купить у любого партнера(no_autotest)
        - assert: в новой вкладке открылась страница партнера, параметры поиска соответствуют выбранным на сервисе(no_autotest)

    Соответствие данных на покупке Новосибирск — Иркутск:
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |
            Заполнить форму поиска билетов
            Откуда: Новосибирск
            Куда: Иркутск
            Туда: текущее число, дату обратно указать через пару дней.
            Пассажиры: 2 взрослых
            Класс: Эконом
        - do: Нажать кнопку “Найти”
        - assert: открылась выдача
        - assert: выдача соответствует параметрам поиска
        - do: Кликнуть по первому сниппету(не по кнопке купить)
        - assert: открылась страница покупки
        - assert: есть заголовки Новосибирск — Иркутск, Иркутск — Новосибирск
        - assert: есть дата вылета и прилёта
        - assert: есть надпись "2 пассажира эконом-класс"
        - assert: есть хотя бы одна кнопка перехода к партнеру
        - do: перейти по кнопке купить у любого партнера(no_autotest)
        - assert: в новой вкладке открылась страница партнера, параметры поиска соответствуют выбранным на сервисе(no_autotest)

files:
    - tests/common/avia/order/order-correct-data.hermione.ts

tags: regression

Сервис: Авиа
Страница: Покупка
Функциональность: Инфа на покупке
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Комод
type: Моя поездка
description: Переход к заказу из поездки

specs:
    Переход к заказу из поездки:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - do: Нажать на первый авиа заказ
        - assert: Произошел переход на страницу авиа заказа
        - do: Вернуться в браузере назад
        - do: Нажать на первый ж/д заказ
        - assert: Произошел переход на страницу ж/д заказа
        - do: Вернуться в браузере назад
        - do: Нажать на первый отельный заказ
        - assert: Произошел переход на страницу отельного заказа

files:
    - tests/common/account/trips/order-navigation.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Моя поездка
Функциональность: Переход к заказу из поездки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Авиабилеты
type: Покупка

specs:
    Общий вид страницы покупки:
        - do: Открыть авиа выдачу Москва - Екатеринбург на завтра с фильтром авиакомпания Аэрофлот
        - do: Выбрать первое предложение
        - assert: |
            Открылась страница покупки, урл вида avia/order/. На ней присутствуют:
            1. (Только в десктопе) Шапка: Лого Авиа, табы (Авиабилеты Ж/д билеты Отели Автобусы), свернутая форма поиска с заполненными данными(пункты откуда- куда, даты туда-обратно, кол-во пассажиров, класс - все что не влезло скрывается многоточием), иконка личного кабинета, кнопка войти.
            2. (Только в десктопе)Ссылка "Все варианты перелёта" назад к выдаче
            3. (Только в десктопе)"Поделиська" - сокращалка урлов с кнопкой скопировать
            4. (Только в десктопе)соц. кнопки: vk,twitter,fb
            5. Количество пассажиров в поиске, класс билетов(эконом/бизнес)
            6. Два блока с перелетами туда и обратно соответственно, каждый из которых состоит из:
                6.1. Заголовок пункт- пункт, дата туда-обратно, время в пути
                6.2. Cегментов, в которых:
                    - Название Ак, номер рейса, вид самолета,
                    - доп инфа по самолету (расстояние между сидениями) - опционально (no_autotest)
                    - время вылета, город вылета, аэропорт вылета, IATA код аэропорта вылета
                    - время в полете
                    - время прилета, город прилета, аэропорт прилета, IATA код аэропорта прилета, дата прилета(если прилетает в день отличный от даты вылета)
                    - информация о задержках(задерживается на/бывает отменён) - опционально (no_autotest)
                    - инфа о багаже (Возможна оплата багажа/Бесплатный багаж) (no_autotest)
                    - инфа о ручной клади (правила провоза багажа уточняйте на сайте авиакомпании/бесплатная ручная кладь) (no_autotest)
                    - инфа об удобствах на борту (Нет Wi-Fi/Есть розетки и тд) - опционально (no_autotest)
                6.3. Надпись о пересадке: пересадка в {пункт} {продолжительность пересадки} (no_autotest)
            7. Блок с предложениями партнеров:
                - Лого/название партнера
                - Цена
                - Кнопки купить
                - Лучшая цена от авиакомпании - если есть цена от АК
            8. Кнопка С багажом от {цена} - опционально, при условии что есть варианты и с багажом и без. В десктопе в блоке предложений партнеров. В таче - сверху перед перелетами. (no_autotest)
            9. (Только в таче) Прилипший к низу экрана блок с лучшей ценой - Лого/название АК/ цена/ кнопка купить
            10. Дисклеймеры:
                - "Пометка «Возможна оплата багажа» значит..." - опционально
                - "Покупка билетов происходит на партнерских сайтах..."
                - "Если на сайте партнёра указана другая цена"
            11. Блок директа
            12. Футер
files:
    - tests/common/avia/order/order-view.hermione.ts

tags: regression

Сервис: Авиа
Страница: Покупка
Функциональность: Инфа на покупке
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Выбор мест
description: |
    Пример ссылки на выбор мест для пересадок: https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-11T13.50&fromId=c2&fromName=Санкт-Петербург&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10

specs:
    ЖД+ЖД сложный заказ в ЛК, подробности заказа:
        - do: Перейти на страницу выбора мест в первый поезд, для сложного заказа с пересадкой
        - do: Выбрать 1 взрослого, 1 ребенка с местом, 1 ребенка без места
        - do: Выбрать любые места
        - do: Нажать "Далее"
        - do: Выбрать любые места
        - do: Нажать "Указать пассажиров"
        - do: Ввести данные пассажиров
        - do: Ввести контакты
        - do: Нажать "Проверить заказ и купить"
        - do: Добавить страховку
        - do: Нажать "Ввести карту и оплатить"
        - do: Провести оплату
        - do: Нажать кнопку "Подробнее о заказе"
        - assert: Открылась страница заказа
        - assert: Должен отображается номер заказа
        - assert: Должен отображается статус заказа
        - assert: На десктопе должна отображаться кнопка "Распечатать"
        - assert: Должна отображаться кнопка "Скачать билеты"
        - assert: Должна отображаться кнопка "Сдать все билеты"
        - assert: Должен отображаться блок с данными о маршруте и поездах
        - assert: Должен отображаться блок с данными о пассажирах
        - assert: Должен отображаться блок с контактной информацией
        - assert: В заголовке данных о поездке должен быть указан верный пункт отправления
        - assert: В заголовке данных о поездке должен быть указан верный пункт прибытия
        - assert: В заголовке данных о поездке должен быть указана верная дата отбытия первого поезда
        - assert: Должны отображаться два блока с информацией о двух поездах
        - assert: Для каждого сегмента отображается название перевозчика
        - assert: Для каждого сегмента отображается номер поезда и его маршрут
        - assert: Для каждого сегмента отображается номер вагона
        - assert: Для каждого сегмента отображается тип вагона
        - assert: Для каждого сегмента отображается два места
        - assert: Для каждого сегмента отображается дата отправления
        - assert: Для каждого сегмента отображается время отправления
        - assert: Для каждого сегмента отображается дата прибытия
        - assert: Для каждого сегмента отображается время прибытия
        - assert: Для каждого сегмента отображается время в пути
        - assert: Для каждого сегмента отображается город отправления
        - assert: Для каждого сегмента отображается станция отправления
        - assert: Для каждого сегмента отображается город прибытия
        - assert: Для каждого сегмента отображается станция прибытия
        - assert: Должна отображаться информация о пересадке
        - assert: Должна отображаться продолжительность пересадки
        - assert: Должны отображаться два номера заказа РЖД
        - assert: Должны отображаться все пассажиры
        - assert: Для каждого пассажира должно отображаться правильное фио
        - assert: Для каждого пассажира должен отображаться правильный номер документа
        - assert: Для каждого пассажира должна отображаться правильная дата рождения
        - assert: Для каждого пассажира должна отображаться правильный пол
        - assert: Для каждого пассажира должны отображаться два билета
        - assert: Для каждого билета должны отображаться пункты отправления и прибытия
        - assert: Для каждого билета должна отображаться цена страховки
        - assert: Для каждого билета должна отображаться иконка вопроса у страховки
        - assert: Для каждого билета должно отображаться название тарифа
        - assert: Для каждого билета должно отображаться цена тарифа
        - assert: Для каждого билета должен отображаться икнока вопроса с детализацией тарифа
        - assert: Для каждого билета клик по иконке вопроса рядом с тарифом показывает детализацию цены
        - assert: Для каждого билета, кроме детских без места должна отображаться кнопка возврата
        - assert: Должна отображаться итоговая цена за все билеты и страховки
        - assert: Должна отображаться ссылка на скачивание чека
        - assert: Должна отображаться ссылка на полные условия страховки
        - assert: В блоке контактной информации должен отображаться текст о том, что билет отправлен на почту
        - assert: В блоке контактной информации должен отображаться правильный email
        - assert: В блоке контактной информации должен отображаться правильный телефон

files:
    - tests/common/trains/order/orderPage/orderPageWithTransfer/orderPageWithTransfer.hermione.ts

# meta
Сервис: ЖД
Страница: Страница заказа
Функциональность: ЖД+ЖД Пересадки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Подтверждение
description: |
    Бронируем места в оба поезда со схемой.

    Пример ссылки на выбор мест для пересадок: https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-11T13.50&fromId=c2&fromName=Санкт-Петербург&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10

specs:
    ЖД+ЖД Корзинка в таче:
        - do: Перейти на страницу выбора мест в первый поезд, для сложного заказа с пересадкой
        - do: Выбрать 1 взрослого пассажира, 1 ребенка с местом, 1 ребенка без места
        - assert: внизу отображается корзинка с кнопкой Далее, заголовком "Стоимость билетов" и направлением для первого рейса
        - do: Выбрать тип вагона Плацкарт
        - do: Выбрать любые места
        - assert: корзина переместилась под схему
        - assert: отображается стоимость за 2 места
        - do: Нажать на иконку вопроса
        - assert: открылось окно с расшифровкой стоимости
        - assert: есть заголовок с направлением движения первого поезда
        - assert: отображается стоимость за все билеты, для ребенка без места стоимость = 0
        - assert: есть чекбокс постельного белья, установлен
        - assert: есть сумма Итого, она включает сумму за все билеты в первый поезд
        - do: Нажать "Далее"
        - assert: произошел переход на страницу выбора мест во второй поезд
        - assert: внизу страницы в корзинке появился блок с направлением второго рейса
        - do: Выбрать любые места в плацкарте
        - assert: корзина переместилась к схеме
        - assert: отображается стоимость за 2 места во втором поезде
        - do: Нажать на иконку вопроса
        - assert: открылось окно с расшифровкой стоимости
        - assert: есть 2 блока, в заголовках направление движения первого и второго поезда
        - assert: отображается стоимость за все билеты, для ребенка без места стоимость = 0
        - assert: есть чекбокс постельного белья для обоих рейсов, установлен
        - assert: есть сумма Итого, она включает сумму за все билеты в оба поезда
        - do: Снять чекбокс "Постельное белье" для второго рейса
        - assert: чекбокс снялся
        - assert: сумма Итого уменьшилась на сумму за белье
        - do: Нажать Указать пассажиров
        - do: Ввести любые данные
        - do: Нажать Проверить заказ и купить
        - assert: открылась страница подтверждения заказа
        - assert: внизу страницы в корзине есть два блока - с билетами на первый рейс и на второй
        - assert: для каждого блока есть заголовок с направлением рейса
        - assert: в блоке с билетами во второй рейс нет информации о белье, в блоке с первым рейсом есть текст "Бельё включено в стоимость"
        - assert: есть сумма Итого, она совпадает с суммой за все билеты на оба рейса
        - do: Установить чекбокс страховки
        - assert: сумма Итого увеличилась на сумму страховки

files:
    - tests/touch/trains/order/confirmation/orderSummaryWithTransfer/orderSummaryWithTransfer.hermione.ts

# meta
Сервис: ЖД
Страница: Подтверждение
Функциональность: ЖД+ЖД Пересадки
Устройство:
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Подтверждение
description: |
    Бронируем места в один поезд без схемы, во второй со схемой.

    Пример ссылки на выбор мест для пересадок: https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-11T13.50&fromId=c2&fromName=Санкт-Петербург&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10

specs:
    ЖД+ЖД Корзинка в десктопе:
        - do: Перейти на страницу выбора мест в первый поезд, для сложного заказа с пересадкой
        - do: Выбрать 1 взрослого пассажира, 1 ребенка с местом, 1 ребенка без места
        - assert: справа отображается корзинка с кнопкой Далее, заголовком "Стоимость билетов" и направлением для первого рейса
        - do: Выбрать тип вагона Плацкарт
        - do: Выбрать места
        - assert: в корзине появился цена за билеты
        - assert: появился чекбокс "Добавить постельное белье", чекбокс установлен
        - assert: стоимость Итого  равна сумме за все билеты в первом вагоне.
        - do: Нажать "Далее"
        - assert: произошел переход на страницу выбора мест во второй поезд
        - assert: в корзинке появился блок с направлением второго рейса
        - do: Выбрать любые места в плацкарте
        - assert: в корзинке появились данные о выбранных местах и стоимости
        - assert: стоимость для ребенка без места - 0 р.
        - assert: появился чекбокс "Постельное белье" для второго рейса, установлен
        - assert: стоимость Итого равна сумме билетов в первом и втором поезде.
        - do: Снять чекбокс "Постельное белье" для второго рейса
        - assert: чекбокс снялся
        - do: Нажать Указать пассажиров
        - do: Ввести любые данные
        - do: Нажать Проверить заказ и купить
        - assert: открылась страница подтверждения заказа
        - assert: в корзине есть два блока - с билетами на первый рейс и на второй
        - assert: для каждого блока есть заголовок с направлением рейса
        - assert: в блоке с билетами во второй рейс нет информации о белье, в блоке с первым рейсом есть текст "Бельё включено в стоимость"
        - assert: появилась сумма Итого, она совпадает с суммой за все билеты на оба рейса
        - do: Установить чекбокс страховки
        - assert: сумма Итого увеличилась на сумму страховки

files:
    - tests/desktop/trains/order/confirmation/orderSummaryWithTransfer/orderSummaryWithTransfer.hermione.ts

# meta
Сервис: ЖД
Страница: Подтверждение
Функциональность: ЖД+ЖД Пересадки
Устройство:
    - Десктоп
Окружение:
    - Production
    - Testing
Тестирование асессорами: Нет
feature: Отели
type: Выдача
description: ''
specs:
  'Отели: пагинация':
    - do: выполнить поиск в крупном населенном пункте
    - assert: 'открылась выдача, соответствующая условиям поиска'
    - do: 'проскроллить выдачу до подвала, нажать кнопку "Далее"'
    - assert: |-
        |
        офферы в выдаче сменились
        и соответствуют условиям поиска(no_autotest)
    - do: 'проскроллить выдачу до подвала, нажать кнопку "Назад"'
    - assert: |-
        |
        отобразились офферы с предыдущей выдачи,
        офферы соответствуют  условиям поиска(no_autotest)
manual: true
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing
Tag:
  - hotels-api
  - Smoke
  - Blocker
feature: Авиабилеты
type: Покупка
description: Отображение страницы покупки на прошедшую дату

specs:
    Непротухающая страница покупки:
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |
            Заполнить форму поиска билетов
            Откуда: Москва
            Куда: Екатеринбург
            Туда: текущее число, дату обратно не ставить.
            Пассажиры: 1 взрослых
            Класс: Эконом
        - do: Нажать кнопку “Найти”
        - do: Кликнуть по первому сниппету(не по кнопке купить)
        - do: Изменить в урле параметр “when=” на прошедшую дату от 1 до 7 дней назад
        - assert: |
            Страница покупки обновилась.
            Информация о рейсе есть. В блоке партнёров сообщение:
            “Ничего не нашлось. Увы, машину времени ещё не изобрели, а выбранная дата отправления уже в прошлом.”

files:
    - tests/common/avia/order/outdatedOrder.hermione.ts

tags: regression

Сервис: Авиа
Функциональность: Отображение ошибок на странице покупки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Записная книжка
type: Пассажиры
description: |
      При тестировании тач-версии внешний вид формы и элементов может отличаться от скринов в кейсе, но ОР должен совпадать.
      Для Асессоров: Выполнить вход удается ТОЛЬКО через кнопку Мои поездки (рядом с кнопкой Войти) > кликнуть Войдите в аккаунт > Авторизоваться тестовым аккаунтом (ссылка ведет на passport-test.yandex.ru). Важно чтобы это был именно тестовый аккаунт, т.к. через свой аккаунт не впустит
      ![image](https://jing.yandex-team.ru/files/gouken67/Новый%20вход%20в%20ЛК.png).
      Для тестинга асессоры могут пользоваться тестовым аккаунтом : vladlen@yandex.ru password: v12345678

specs:
    Добавление первого пассажира на кириллице:
        - do: |
              Зайти в Мои поездки (иконка находится на главной в правом верхнем углу)
              Перейти во вкладку “Пассажиры” (на тачах Пассажиры находятся внутри бургера)

        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Для тачей - кликнуть по блоку с ФИО созданного пассажира
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление первого пассажира на латинице:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на латинице
              ФИО - Ivanov Ivan Ivanovich
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505654321
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление и редактирование пассажира с ИНН:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
              ИНН - 123123123123
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: Нажать на кнопку редатирования пассажира (карандаш напротив псевдонима)
        - assert: Открылась форма редактирования данных
        - do: |
              Заполнить форму редатирования пассажира все поля на кириллице
              Имя на сайте - Джохни джжохнсон
              Дата рождения - 01.01.1980
              Пол - ж
              ИНН - 321321321321
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир сохранился. Данные пасажира совпадают с введенными (псевдоним = lastName firstName из данных, дата рождения, пол и номер ИНН)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление пассажира, когда уже есть созданные:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на латинице
              ФИО - Ivanov Ivan Ivanovich
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505654321
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: Нажать кнопку "Добавить"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление паспорта со всеми полями:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: На документе нажать на иконку "Корзинка"
        - assert: Открылся диалог подтверджения удаления
        - do: Нажать кнопку "Да, удалить"
        - assert: Проверить, что отобразилась надпись "Без документов вы не сможете купить билет или забронировать номер."
        - do: |
              На десктопе - Нажимаем на интент (кнопку ниже текста "Добавить документ:") "Паспорт гражданина РФ"
              На таче - Нажимаем на кнопку Добавить документ, далее - синюю кнопку Паспорт гражданина РФ
        - assert: Открылась форма заполнения данных для документа
        - do: |
              Заполнить форму добавления документа
              Фамилия (кириллица) - Иванов
              Имя (кириллица) - Иван
              Отчество (кириллица) - Иванович
              Фамилия (латиница) - Ivanov
              Имя (латиница) - Ivan
              Отчество (латиница) - Ivanovich
              Серия и Номер - 1234567890
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление паспорта только с обязательными полями:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: |
              На десктопе - Нажимаем на интент (кнопку ниже текста "Добавить документ:") "Паспорт гражданина РФ"
              На таче - Нажимаем на кнопку "Добавить документ", далее - синюю кнопку Паспорт гражданина РФ
        - assert: Открылась форма заполнения данных для документа
        - do: |
              Заполнить форму добавления документа
              Серия и Номер - 0987654321
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление заграна только с обязательными полями:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: |
              На десктопе - Нажимаем на интент (синюю кнопку ниже текста "Добавить документ:") "Заграничный паспорт гражданина РФ"
              На таче - Нажимаем на кнопку Добавить документ, далее - синюю кнопку "Заграничный паспорт гражданина РФ"
        - assert: Открылась форма заполнения данных для документа
        - do: |
              Заполнить форму добавления документа
              Серия и Номер - 123456789
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление свидетельства о рождении только с обязательными полями:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: |
              На десктопе - Нажимаем на интент (синюю кнопку ниже текста "Добавить документ:") "Свидетельство о рождении"
              На таче - Нажимаем на кнопку Добавить документ, далее - синюю кнопку "Свидетельство о рождении"
        - assert: Открылась форма заполнения данных для документа
        - do: |
              Заполнить форму добавления документа
              Серия и Номер - XIАБ123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление военного билета только с обязательными полями:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: |
              На десктопе - Нажимаем на интент (синюю кнопку ниже текста "Добавить документ:") "..." (троеточие) а затем выбираем "Военный билет"
              На таче - Нажимаем на кнопку Добавить документ, далее - синюю кнопку "Военный билет"
        - assert: Открылась форма заполнения данных для документа
        - do: |
              Заполнить форму добавления документа
              Фамилия - Иванов
              Имя - Иван
              Серия и Номер - АБ1234567
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление паспорта моряка только с обязательными полями:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: |
              На десктопе - Нажимаем на интент (синюю кнопку ниже текста "Добавить документ:") "..." (троеточие) а затем выбираем "Паспорт моряка"
              На таче - Нажимаем на кнопку Добавить документ, далее - синюю кнопку "Паспорт моряка"
        - assert: Открылась форма заполнения данных для документа
        - do: |
              Заполнить форму добавления документа
              Фамилия - Иванов
              Имя - Иван
              Серия и Номер - XX1234567
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Добавление другого документа (Украина) только с обязательными полями:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на кириллице
              ФИО - Иванов Иван Иванович
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - do: |
              На десктопе - Нажимаем на интент (синюю кнопку ниже текста "Добавить документ:") "..." (троеточие) а затем выбираем "Другой документ"
              На таче - Нажимаем на кнопку Добавить документ, далее - синюю кнопку "Другой документ"
        - assert: Открылась форма заполнения данных для документа
        - do: |
              Заполнить форму добавления документа
              Гражданство - Украина
              Серия и Номер - es123456
        - do: Нажать кнопку "Сохранить"
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Редактирование документа пассажира:
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу, в тачах - внутри бургера)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Отображается кнопка "Добавить первого пассажира"
        - do: Нажать на пноку "Добавить первого пассажира"
        - assert: Открылась форма заполнения данных
        - do: |
              Заполнить форму добавления пассажира все поля на латинице
              ФИО - Ivanov Ivan Ivanovich
              Дата рождения - 01.01.1970
              Пол - м
              Гражданство - Россия
              Документ - Паспорт РФ
              Серия и Номер - 6505654321
        - do: Нажать кнопку "Сохранить"
        - assert: Информация о пассажире совпадает (псевдоним = Фамилия + Имя)
        - assert: Пассажир добавился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Нажимает на "карандаш" (редактирование) у документа пассажира (должен быть 1 и все поля совпадают с введенными)
        - assert: Открылась форма редактирования документа
        - do: |
              Заполнить форму редактирования следующими полями
              Серия и Номер - АБЫРВАЛГ
        - do: Нажать кнопку "Сохранить"
        - assert: Отобразился хинт о неправильном вводе с текстом "Введите 10 цифр без пробелов"
        - do: |
              Заполнить форму редактирования следующими полями
              Фамилия - Изменен
              Имя - Измен
              Отчество - Изменыч
              Фамилия на латинице - "" (пустая строка)
              Имя на латинице - "" (пустая строка)
              Отчество на латинице - "" (пустая строка)
              Серия и Номер - 6507321123
        - do: Нажать кнопку "Сохранить"
        - assert: Документ сохранился, данные совпадают с введенными (проверяем все поля документа, который добавился)
        - do: Нажать кнопку "Удалить пассажира"
        - do: Подтвердить удаление
        - assert: Проверить, что пассажиров в аккаунте нет
        - assert: Отображается кнопка "Добавить первого пассажира"

    Поиск пассажиров в записной книжке:
        - do: |
            Для прохождения кейса нужно быть залогиненным.
            Для прода можно использовать свой личный аккаунт.
            Для тестинга асессоры могут пользоваться тестовым аккаунтом : vladlen@yandex.ru password: v12345678

            Важно, чтобы в записной книжке было как минимум два пассажира с разными псевдонимами.
            Псевдонимы должны быть двух видов: отличны от имен (например, “Дочь”, “Ленка”) и не отличны (“Иванов Петр”)
        - do: |
              Зайти в личный кабинет (иконка ЛК находится на главной в правом верхнем углу)
              Перейти в раздел "Моя поездка", затем во вкладку “Пассажиры”
        - assert: Слева на странице есть список пассажиров
        - assert: Над списком отображается поисковая строка
        - assert: В строке есть значок лупы и подсказка "Например, псевдоним пассажира"
        - do: Ввести в поисковую строку псевдоним любого пассажира из списка
        - assert: В списке пассажиров отображается только пассажиры с соответствующим псевдонимом
        - do: Нажать на крестик в конце строки
        - assert: Значение в поиске очистилось
        - assert: В списке отображаются все пассажиры
        - do: Ввести в поиск любую комбинацию символов, не соответствующую ни одному псевдониму
        - assert: Вместо списка пассажиров отображается сообщение "Пассажиры не найдены"

files:
    - tests/common/account/passengers/passengers.hermione.ts

tags: smoke

# meta
system:
    parallelLimit: 1

Сервис: Записная книжка
Страница: Пассажиры
Устройство:
    - Десктоп
    - Тач
Функциональность: Действия в записной книжке
Окружение:
    - Production
    - Testing
Tag:
    - automation (iliasova)
    - Smoke
Тестирование асессорами: Да
feature: Поезда
type: Выбор мест
description: |
    Пример ссылки на выбор мест для пересадок: https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-11T13.50&fromId=c2&fromName=Санкт-Петербург&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10

specs:
    ЖД+ЖД Блок с выбором пассажиров:
        - do: Перейти на страницу выбора мест в первый поезд, для сложного заказа с пересадкой
        - assert: находимся на вкладке "Выбор мест. Первый поезд"
        - assert: в блоке "Укажите количество билетов" есть текст - "Количество пассажиров на всех частях маршрута должно быть одинаковым"
        - do: Выбрать 2 взрослых пассажиров
        - do: Выбрать любые места
        - do: Нажать "Далее"
        - assert: открылась страница выбора мест для второго поезда
        - assert: в блоке "Укажите количество билетов" есть текст - "Количество пассажиров на всех частях маршрута должно быть одинаковым"
        - assert: в блоке "Укажите количество билетов" все селекты заблокированы, выбрано 2 взрослых пассажира

files:
    - tests/common/trains/order/places/passengersWithTransfer/passengersWithTransfer.hermione.ts

# meta
Сервис: ЖД
Страница: Выбор мест
Функциональность: ЖД+ЖД Пересадки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Оплата

specs:
    Основной флоу бронирования залогин:
        - do: |
            Залогиниться под тестовым аккаунтом
            Создать взрослого пассажира с валидными данными
            Перейти на главную сервиса
            Перейти на вкладку Ж/Д билеты
        - do: Открыть выдачу Москва - Екатеринбург через месяц
        - do: Кликнуть по кнопке “Выбрать место” для поезда со свободными платцкартными местами
        - do: Выбрать любое свободное плацкартное место
        - assert: Галка "Постельное белье" стоит или белье включено в стоимость
        - assert: Указана общая стоимость
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Указать пассажиров”.
        - do: Выбрать из интентов пассажира из ЗКП
        - assert: Поля заполнились данными, ошибок валидации нет
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Проверить заказ и купить”.
        - do: |
              Проверить что номер поезда, даты, данные пассажира, номер места,
              сумма соответствуют введенным ранее (сумма не округляется)(no_autotest)
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Ввести карту и оплатить” (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
        - do: Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: Общая стоимость совпадает со страницей подтверждения
        - assert: Дата и время отправления совпадает со страницей подтверждения
        - assert: Дата и время прибытия совпадает со страницей подтверждения
        - assert: Номер поезда совпадает со страницей подтверждения
        - assert: Номер места совпадает со страницей подтверждения
        - assert: |
              Совпадают данные пассажира
                имя
                фамилия
                отчество
                дата рождения
                номер документа
                пол

files:
    - tests/common/trains/order/pay/payLogged.hermione.ts

Сервис: ЖД
Страница: Страница заказа
Функциональность: Бронирование
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Оплата

specs:
    Основной флоу бронирования НЕзалогин:
        - do: НЕ залогиниваться
        - do: Открыть выдачу Москва - Екатеринбург через месяц
        - do: Кликнуть по кнопке “Выбрать место” для поезда со свободными платцкартными местами
        - do: Выбрать любое свободное плацкартное место
        - assert: Галка "Постельное белье" стоит или белье включено в стоимость
        - assert: Указана общая стоимость
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Указать пассажиров”.
        - do: Заполнить все поля валидными данными
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Проверить заказ и купить”.
        - do: |
              Проверить что номер поезда, даты, данные пассажира, номер места,
              сумма соответствуют введенным ранее (сумма не округляется)(no_autotest)
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Ввести карту и оплатить” (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
        - do: Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: Общая стоимость совпадает со страницей подтверждения
        - assert: Дата и время отправления совпадает со страницей подтверждения
        - assert: Дата и время прибытия совпадает со страницей подтверждения
        - assert: Номер поезда совпадает со страницей подтверждения
        - assert: Номер места совпадает со страницей подтверждения
        - assert: |
              Совпадают данные пассажира
                имя
                фамилия
                отчество
                дата рождения
                номер документа
                пол

files:
    - tests/common/trains/order/pay/payNotLogged.hermione.ts

tags: smoke

Сервис: ЖД
Страница: Страница заказа
Функциональность: Бронирование
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Оплата

specs:
    Покупка билетов на поезд, у которого нет схемы и требований:
        - do: Открыть выдачу Москва - Калуга на завтра
        - do: Для одного из поездов ЦППК, где есть сидячие вагоны, кликнуть по кнопке "Выбрать место" (если нет, поискать на другую дату)
        - assert: Для десктопа для сидячего типа внутри всех классов есть кнопка "Указать пассажиров"
        - assert: Есть подсказка "Для этих вагонов нет схем, места выбираются автоматически"
        - do: Кликнуть по кнопке "Указать пассажиров" для одного из сидячих классов без схем
        - assert: Для десктопа отображается предварительная стоимость
        - do: Заполнить все поля валидной информацией
        - do: Кликнуть кнопку "Проверить заказ и купить"
        - assert: На странице подтверждения данных вагон и место указаны корректно (нет undefined)
        - assert: Схема вагона не отображается
        - assert: Отображаться точная итоговая стоимость, без "от"
        - do: Кликнуть кнопку "Оплатить"
        - assert: Место указано корректно (нет undefined)
        - assert: Вагон указан корректно (нет undefined)
        - do: Заполнить все поля валидными данными
        - do: Кликнуть кнопку "Оплатить"
        - do: Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: Отображается "Вы успешно купили билет на поезд"
        - assert: Номер вагона совпадает со страницей подтверждения
        - assert: Номер места совпадает со страницей подтверждения

files:
    - tests/common/trains/order/pay/payNotSchema.hermione.ts

tags: smoke

Сервис: ЖД
Страница: Страница заказа
Функциональность: Бронирование
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Нет
feature: Отели
type: Бронирование отелей

specs:
    Ошибка оплаты - повторная оплата:
        - condition: Быть залогиненым.
        - do: Перейти на страницу бронирования для любого отеля, на любые даты
        - assert: Открылась страница бронирования.
        - assert: В корзинке есть галка "У меня есть промокод", по умолчанию выключена. Поле инпут для промокода и кнопка "Применить" не показывается.
        - do: Включить галку "У меня есть промокод"
        - do: В инпут написать промокод "AUTOTEST_PROMOCODE_200", нажать применить
        - assert: В блоке с промокодом появилась сумма скидки "−200₽"
        - do: Запомнить итоговую сумму
        - do: Заполнить информацию о гостях и контактную информацию любыми валидными данными.
        - do: Нажать оплатить.
        - assert: Открылась страница с формой оплаты.
        - assert: Сумма к оплате соответствует сумме с примененным промокодом
        - do: Оплатить заказ картой с ошибкой (указать CVN карты 228)
        - assert: Остались на странице с трастом
        - assert: Показался попап "Ошибка оплаты Проверьте данные карты, пополните баланс или используйте другую карту."
        - assert: В нем две кнопки - Отменить заказ, Попробовать еще раз
        - assert: Сумма c учетом промокода
        - do: Нажать на кнопку "Попробовать еще раз"
        - assert: Попап скрылся
        - assert: Открылась форма траста
        - do: Завершить оплату
        - assert: Открылась страница успешного заказа
        - do: Нажать на кнопку "Подробнее о заказе"
        - assert: Открылась страница заказа в личном кабинете
        - assert: Сумма соответствует сумме с учетом промокода
    Ошибка оплаты - отмена заказа:
        - condition: Быть залогиненым.
        - do: Перейти на страницу бронирования для любого отеля, на любые даты
        - assert: Открылась страница бронирования.
        - assert: В корзинке есть галка "У меня есть промокод", по умолчанию выключена. Поле инпут для промокода и кнопка "Применить" не показывается.
        - do: Включить галку "У меня есть промокод"
        - do: В инпут написать промокод "AUTOTEST_PROMOCODE_200", нажать применить
        - assert: В блоке с промокодом появилась сумма скидки "−200₽"
        - do: Запомнить итоговую сумму
        - do: Заполнить информацию о гостях и контактную информацию любыми валидными данными.
        - do: Нажать оплатить.
        - assert: Открылась страница с формой оплаты.
        - assert: Сумма к оплате соответствует сумме с примененным промокодом
        - do: Оплатить заказ картой с ошибкой (указать CVN карты 228)
        - assert: Остались на странице с трастом
        - assert: Показался попап "Ошибка оплаты Проверьте данные карты, пополните баланс или используйте другую карту."
        - assert: В нем две кнопки - Отменить заказ, Попробовать еще раз
        - assert: Сумма c учетом промокода
        - do: Нажать на кнопку "Отменить заказ"
        - assert: Попап закрылся
        - assert: Открылась страница бронирования
        - assert: Промокод не применен

files:
    - tests/common/hotels/book/errorFlow/payment-fail.hermione.ts

Сервис: Отели
Страница: Бронирование
Автор: tcheremnykh
Устройство:
    - Тач
    - Десктоп
Функциональность: Промокод
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Оплата

specs:
    Ошибка подтверждения брони в ИМ:
        - do: |
              Перейти на вкладку ЖД
              Перейти на поиск Москва - Санкт-Петербург через месяц
              Для любого поезда кликнуть по кнопке Выбрать место
              На странице выбора мест выбрать любое место в любом вагоне
              Нажать Указать пассажиров
              Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_FAILURE&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0
              В ответе запомнить токен из поля test_context_token
              Добавить к урлу параметр trainTestContextToken со значением полученного токена
              Перейти по полученной ссылке
              Заполнить поля любыми валидными данными
              Нажать Проверить заказ и купить
              Нажать Ввести карту и оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
        - assert: Появился лоадер загрузки
        - do: Подождать несколько секунд
        - assert: |
              Появилось модальное окно с ошибкой "Что-то пошло не так
              Не удалось выкупить билет. Попробуйте ещё раз. Не волнуйтесь, деньги не списались. Если проблема повторяется, свяжитесь со службой поддержки по телефону 8 800 511-71-04."
        - do: Нажать "Выбрать места заново"
        - assert: Произошел переход на страницу выбора мест

files:
    - tests/common/trains/order/pay/paymentError.hermione.ts

tags:
    - TK
    - orkestrator

Сервис: ЖД
Страница: Оплата
Функциональность: Бронирование
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Отели
type: Бронирование отелей

specs:
    Обработка ошибки при доплате брони:
        - condition: Быть залогиненным.
        - do: Перейти на страницу бронирования отеля c параметрами
              | бесплатная отмена
              | 1 ночь
              | 2 взрослых
        - do: Выбрать чекбокс "Оплатить позже".
        - assert: Чекбокс рассрочки должен содержать текст "Оплатить позже".
        - do: В корзинке над рассрочками активировать чекбокс "У меня есть промокод" и ввести промокод "SUCCESS" и нажать "Применить".
        - do: Заполнить валидными данными гостей и контактную инфу и нажать "Забронировать".
        - do: Перейти по ссылке на страницу заказа.
        - do: Кликнуть на кнопку "Доплатить".
        - do: Оплатить заказ картой с ошибкой (указать CVN карты 228).
        - assert: Остались на странице с трастом.
        - assert: Показался попап "Ошибка оплаты. Проверьте данные карты, пополните баланс или используйте другую карту."
        - assert: В попапе две кнопки "Отмена" и "Попробовать еще раз".
        - assert: Цена доплаты в попапе совпадает с ценой на бронировании.
        - do: Нажать на кнопку "Отмена".
        - assert: Попап закрылся.
        - assert: Открылась страница заказа.
        - assert: Есть кнопка доплатить и информация о доплате.
        - do: Кликнуть на кнопку "Доплатить".
        - do: Оплатить заказ картой с ошибкой (указать CVN карты 228).
        - assert: Остались на странице с трастом.
        - assert: Показался попап "Ошибка оплаты. Проверьте данные карты, пополните баланс или используйте другую карту."
        - assert: В попапе две кнопки "Отмена" и "Попробовать еще раз".
        - assert: Цена доплаты в попапе совпадает с ценой на бронировании.
        - do: Нажать на кнопку "Попробовать еще раз".
        - assert: В заголовке отображается "Доплата".
        - assert: Цена доплаты на странице оплаты совпадает с ценой на странице бронирования.
        - do: Ввести данные карты и нажать "Оплатить".
        - assert: После прокрутки всех необходимых лоадеров произошел переход на HappyPage.
        - assert: В заголовке отображается "Отель оплачен полностью".
        - assert: Информация про внесении доплаты отсутствует.

files:
    - tests/common/hotels/book/deferredPayment/paymentFail-deferredPayment.hermione.ts

Сервис: Отели
Страница: Бронирование
Автор: iliasova
Устройство:
    - Тач
    - Десктоп
Функциональность:
    - Рассрочки
    - Промокод
Окружение:
    - Testing
    - Production
Тестирование асессорами: Нет
feature: Поезда
type: Выбор мест

specs:
      Отображение информации в блоке "Выберите тип вагона и место":
        - do: Открыть выдачу Москва - Екатеринбург на любой ближайший день (плюс 1-10 дней)
        - do: Найти поезд, в котором есть три и больше типов вагонов (Плацкарт, Купе, СВ)
        - do: Кликнуть на кнопку "Выбрать место" у сниппета этого поезда
        - assert: |
              Каждый тип содержит вагоны;
              Каждый вагон имеет номер вагона;
              Каждый вагон имеет свободные места на схеме
              или если схемы нет, кнопку "указать пассажиров".
              Примерный внешний вид:
              ![](https://jing.yandex-team.ru/files/semirka/Screenshot_89.png)
              ![](https://jing.yandex-team.ru/files/semirka/Screenshot_90.png)

files:
    - tests/common/trains/places/places.hermione.ts

tags: smoke
Сервис: ЖД
Страница: Выбор мест
Функциональность: Разное по странице выбора мест
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Комод
type: Моя поездка
description: Блок PNR на странице моей поездки

specs:
    Блок PNR на странице моей поездки:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - do: В первом авиа заказе нажать на кнопку копирования
        - assert: |-
              * Открылся модал
              * Заголовок модала должен быть "Код бронирования" на таче и "Код скопирован" на десктопе
              * PNR должен совпадать со значением на странице поездки
              * Должен быть текст "На сайте авиакомпании с ним можно управлять бронированием и оформить регистрацию на рейс"
              * Должна быть кнопка "Перейти на сайт авиакомпании"
              * Кнопка должна вести на aeroflot.ru

files:
    - tests/common/account/trips/pnr-modal.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Моя поездка
Функциональность: Блок PNR
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: ЖД
type: Выбор мест
description: |
    Перейти на вкладку ЖД билеты
    Открыта произвольная выдача, содержащая разные типы вагонов.
    Например, Москва-Санкт-Петербург на завтра

specs:
  'Подскролл табиков при клике по ним':
      - do: Найти поезд с бразными типами вагонов (например Сапсан) и тапнуть "Выбрать место"
      - assert: |
            * Открывается страница выбора мест
            * Есть блок "Выберите тип вагона и место" и кол-во табиков с типом вагонов больше чем помещается в карусели на экране

            Примерный внешний вид для десктопа -  https://jing.yandex-team.ru/files/semirka/IMG_20220120_153521_776.jpg
            Приерный внешний вид для тачей - https://jing.yandex-team.ru/files/semirka/IMG_20220120_153525_410.jpg

      - do: Кликнуть по крайнему справа табику
      - assert: Произошел подскролл табика в карусели
      - do: Прокликать по каждому табику в карусели
      - assert: |
            * Все табики кликабельны
            * Выбраный табик выделяется в желтую рамку.
            * При клике по обрезанным табикам в карусели происходит подскролл и выделенный табик становится виден полностью.

manual: true
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
default:
  API-key: API-key
internal:
  audience: internal
external:
  audience: external
default:

  locale: ru

  tracker-name: Tracker
  tracker-full-name: Yandex Tracker
  datalens-name: Datalens
  datalens-full-name: Yandex Datalens
  vs: Value stream
feature: Отели
type: Страница отеля
description: >-
    В таче может отличаться порядок и внешний вид элементов, но важно чтобы они
    были.

    Фраза "перейти на страницу отеля" без дополнительных условий означает, что
    нужно прямо на главной странице ввести указанные параметры в форме поиска, а
    затем нажать кнопку Найти.
specs:
    Перепоиск на странице отеля:
        - do: |-
              Перейти на страницу отеля со следующими параметрами
              отель - Бета Измайлово (выбрать из саджестов, которые появятся)
              дата заезда - завтра
              дата выезда - послезавтра
              кол-во гостей - 1
        - assert: >-
              * Сначала отображается лоадер "Загрузка отеля Загружаем информацию об
              отеле и получаем самые выгодные предложения" (может не отображаться,
              если данные загрузились мгновенно)
              * Далее отображается страница отеля со следующими составляющими:

              * На уровне хэдера шапка поиска (в тачах форма под хэдером)
                В шапке отображаются данные, введенные ранее
              * Под хэдэром баннер рекламы (в тачах он под ссылкой на выдачу)

              * Ниже стрелка назад и ссылка на выдачу с указанием региона

              * Под ссылкой название отеля

              * Под названием адрес и отметка "N км до центра" (где N - расстояние) и станция метро с
              расстоянием до нее (на тачах под кнопкой выбора номера).

              * Возле названия отеля есть сердечко (добавление в избранное) и иконка шэринга

              * Справа от названия рейтинг, что понравилось гостям, ссылка на отзывы (на тачах нет "что понравилось гостям", а ссылка на отзывы находится под названием)

              * Ниже расположены фото отеля.

              * Под фото находится блок Про отель - отображены топ фичи и ссылка Все
              услуги

              * (Только для десктопа) Справа расположен блок Отель на карте

                * В нем указан адрес отеля.

                * Под адресом в блоке находится карта

                * Сниппет отеля Бета Измайлово есть на карте (в тачах нет карты)

              * Ниже находится блок номеров

              * В вверху блока указаны даты и кол-во гостей

              * Ниже отображается форма поиска

              * Даты и кол-во гостей в форме и заголовке соответствуют введенным
              данным на первом шаге кейса

              * Ниже расположены предложения

              * Каждое предложение содержит

              * название номера

              * фото или заглушку под фото (в тачах фото и заглушки может не быть
              совсем)

              * указание типов кроватей и площади

              * топ фичи номера

              * ссылка "Подробнее о номере"

              * ниже расположены предложения с указанием информации о питании и
              бесплатной отмене, а также цены с указанием кол-ва ночей, кол-во баллов
              плюса и кнопка Забронировать

              * Под картой находится блок похожих отелей (в тачах после отзывов)

              * В блоке есть название отеля, фото (или заглушка), кол-во отзывов
              (может отсутствовать у отелей без отзывов), тип (гостиница, хостел и
              т.д), рейтинг и мин цена

              * Ниже расположен блок Гостям понравилось (в таче после блока номеров)

              * Еще ниже находится блок отзывов

              * Есть общее кол-во отзывов, варианты сортировки, теги

              * Затем отображаются отзывы

              * В каждом отзыве есть фото (или заглушка), имя, дата отзыва,
              оценка, текст, икноки лайка и дизлайка

              * Отображаются первые 5 отзывов

              * Под последним отзывом есть ссылка Еще отзывы (в тачах - кнопка)

              * Внизу страницы над футером отображаются хлебные крошки Отели -> Область отеля -> Город отеля
              - > Название отеля (название некликабельно)
Устройство:
    - Десктоп
    - Тач
Страница: Страница отеля
Tag:
    - Smoke
Сервис:
    - Отели
Автор:
    - molox
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
files:
    - tests/common/hotels/hotel/re-search-hotelPage.hermione.ts
feature: Recent Stickers

import-steps:
    - tests/hermione/suites/messenger/shared-steps/open-messenger.testpalm.steps.yml

specs:

  Появляется новый стикерпак с недавно отправленными стикерами[manual]:
    - automation: MSSNGRFRONT-4504
    - attach: Открытие чата q
    - do: найти в поиске и открыть чат с ботом "Автотестер Мессенджеров"
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - screenshot: окно со стикерами без стикерпака недавно отправленных [https://jing.yandex-team.ru/files/karserg/2019-10-22T16:32:51Z.png]
    - do: кликнуть / тапнуть на стикер
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - do: кликнуть / тапнуть на первый стикерпак (иконка часов)
    - assert: открылась вкладка с последними отправленными стикерами
    - screenshot: окно со стикером в новом стикерпаке недавно отправленных [https://jing.yandex-team.ru/files/karserg/2019-10-22T16:42:31Z.png]

  Добавление двух стикеров в стикерпак недавно отправленных[manual]:
    - automation: MSSNGRFRONT-4504
    - attach: Открытие чата q
    - do: найти в поиске и открыть чат с ботом "Автотестер Мессенджеров"
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - do: кликнуть / тапнуть на первый стикер
    - assert: первый стикер отправился в сообщении
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - do: кликнуть / тапнуть на второй стикер
    - assert: второй стикер отправился в сообщении
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - do: кликнуть / тапнуть на первый стикерпак (иконка часов)
    - screenshot: окно с несколькими стикерами в стикерпаке недавно отправленных [https://jing.yandex-team.ru/files/karserg/2019-10-22T16:41:53Z.png]

  Отправка стикера из недавно отправленных[manual]:
    - automation: MSSNGRFRONT-4504
    - attach: Открытие чата q
    - do: найти в поиске и открыть чат с ботом "Автотестер Мессенджеров"
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - do: кликнуть / тапнуть на стикер
    - assert: стикер отправился в сообщении
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - do: кликнуть / тапнуть на первый стикерпак (иконка часов)
    - screenshot: окно со стикерами с новым стикерпаком недавно отправленных [https://jing.yandex-team.ru/files/karserg/2019-10-22T16:42:31Z.png]
    - do: кликнуть / тапнуть на первый стикер
    - assert: тот же стикер отправился в сообщении
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно с недавно используемыми стикерами
    - screenshot: окно со стикерами с новым паком недавно отправленных [https://jing.yandex-team.ru/files/karserg/2019-10-22T16:42:31Z.png]

  Отправка второго стикера из стикерпак недавно отправленных (перемещение на первое место)[manual]:
    - automation: MSSNGRFRONT-4504
    - attach: Открытие чата q
    - do: найти в поиске и открыть чат с ботом "Автотестер Мессенджеров"
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - do: кликнуть / тапнуть на первый стикер
    - assert: первый стикер отправился в сообщении
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - do: кликнуть / тапнуть на второй стикер
    - assert: второй стикер отправился в сообщении
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - do: кликнуть / тапнуть на первый стикерпак (иконка часов)
    - screenshot: окно с несколькими стикерами в стикерпаке недавно отправленных [https://jing.yandex-team.ru/files/karserg/2019-10-22T16:41:53Z.png]
    - do: кликнуть / тапнуть на второй стикер в списке
    - assert: стикер отправился в сообщении
    - do: кликнуть / тапнуть по кнопке со стикерами (смайлик справа от поля ввода)
    - assert: открылось окно со стикерами
    - screenshot: окно с несколькими стикерами, где второй стикер стал первым [https://jing.yandex-team.ru/files/karserg/2019-10-22T16:48:13Z.png]

files: []

v-team: Chat

tlds: all

tags:
  - q
feature: Предобработка URL запроса

specs:
    Если URL не содержит экранированных символов, редирект не должен происходить:
        -   do: Перейти на страницу с URL "/avia/?adult_seats=1&children_seats=0&fromId=c213&infant_seats=0&klass=economy&oneway=2&return_date=2021-09-29&toId=c239&when=2021-09-25"
        -   assert: Браузер не должен изменить pathname и search-параметры
    Если URL содержит экранированные символы, должен произойти редирект на правильный URL:
        -   do: Перейти на страницу, в URL которой & заменен на &amp;, "/avia/?adult_seats=1&amp;children_seats=0"
        -   assert: Браузер должен быть перенаправлен на страницу, где &amp; в search-параметрах заменен на &, pathname измениться не должен
    Если URL закодирован правильно, не должен образоваться бесконечный редирект:
        -   do: Перейти на страницу с URL "/trains/order/?forward=P1_020У_2006004_9602494_2021-10-01T00%3A20&fromId=c213&toId=c2&when=2021-10-01"
        -   assert: Браузер не должен изменить pathname и search-параметры

files:
    - tests/common/common/decodeUrlMiddleware/redirect-to-decoded-url.hermione.ts

Сервис: Портал
Устройство:
    - Десктоп
    - Тач
common:
    # записи были перенесены
    - from: /android/for-new-employee.md
      to: /common/welcome-to-yandex.md

    - from: /ios/for-new-employee.md
      to: /common/welcome-to-yandex.md
feature: Отели
type: Бронирование отелей

specs:
    Возврат брони в рассрочку:
        - condition: Быть залогиненным.
        - do: Перейти на страницу бронирования отеля c параметрами
              | бесплатная отмена
              | 1 ночь
              | 2 взрослых
        - do: Выбрать чекбокс "Оплатить позже".
        - assert: Чекбокс рассрочки должен содержать текст "Оплатить позже".
        - do: В корзинке над рассрочками активировать чекбокс "У меня есть промокод" и ввести промокод "SUCCESS" и нажать "Применить".
        - do: Заполнить валидными данными гостей и контактную инфу и нажать "Забронировать".
        - do: Ввести данные карты и нажать "Оплатить".
        - do: Перейти по ссылке на страницу заказа.
        - assert: Есть информация о сумме рассрочки и общей сумме заказа (с учетом скидки).
        - assert: Ниже указано, сколько необходимо доплатить, до какого числа и времени и есть кнопка "Доплатить".
        - assert: Все суммы и даты с временем совпадают с информацией на бронировании.
        - assert: На странице есть активная кнопка "Отменить бронирование".
        - do: Кликнуть по кнопке "Отменить бронирование".
        - do: В открывшемся попапе подтвердить отмену.
        - assert: Появился лоадер с текстом "Загрузка заказа. Загружаем подробную информацию о заказе".
        - assert: После закрытия попапа и перезагрузке страницы отображается стандартная страница возврата.
        - assert: Есть текст "К возврату 0 р"

    Возврат брони после доплаты:
        - condition: Быть залогиненным.
        - do: Перейти на страницу бронирования отеля c параметрами
              | бесплатная отмена
              | 2 ночи
              | 2 взрослых
        - do: Выбрать чекбокс "Оплатить позже".
        - do: В корзинке над рассрочками активировать чекбокс "У меня есть промокод" и ввести промокод "SUCCESS" и нажать "Применить".
        - do: Заполнить валидными данными гостей и контактную инфу и нажать "Оплатить".
        - assert: После прокрутки всех спиннеров произошел переход на страницу успешного заказа.
        - do: Нажать кнопку "Подробнее о заказе"
        - assert: Есть информация о сумме рассрочки и общей сумме заказа (с учетом скидки).
        - assert: Ниже указано, сколько необходимо доплатить, до какого числа и времени и есть кнопка "Доплатить".
        - assert: Все суммы и даты с временем совпадают с информацией на бронировании.
        - assert: На странице есть активная кнопка "Отменить бронирование".
        - do: Кликнуть по кнопке "Отменить бронирование".
        - do: В открывшемся попапе подтвердить отмену.
        - assert: Появился лоадер с текстом "Загрузка заказа. Загружаем подробную информацию о заказе".
        - assert: После закрытия попапа и перезагрузке страницы отображается стандартная страница возврата.
        - assert: В блоке стоимости отеля указана общая сумма возврата (с учетом скидки).
        - assert: Рядом есть ссылка "Чеки и документы"
        - do: Кликнуть на ссылку.
        - assert: Открылось меню с чеками и документами. https://jing.yandex-team.ru/files/papulova/Iil6FPL3V4.png
        - assert: Открылся модал чека прихода.
        - do: Кликнуть на ссылку "Чек на платеж"
        - assert: Сумма в чеке равна сумме бронирования.
        - do: Закрыть модал по крестику.
        - do: Кликнуть на ссылку "Чек на возврат
        - assert: Открылся модал чека возврата - если появляется попап, что чек пока недоступен - перезагрузить страницу.
        - assert: Открылся модал чека возврата прихода.
        - assert: Сумма в чеке равна сумме бронирования.
        - do: Закрыть модал по крестику.

files:
    - tests/common/hotels/book/deferredPayment/refund-deferredPayment.hermione.ts

tags: smoke

Сервис: Отели
Страница: Страница заказа
Автор: iliasova
Устройство:
    - Тач
    - Десктоп
Функциональность:
    - Рассрочки
    - Промокод
Окружение:
    - Testing
    - Production
Тестирование асессорами: Нет
# https://testpalm.yandex-team.ru/testcase/travel-1263
feature: Отели
type: Бронирование отелей
description: Для генерации ошибки нужно дернуть ручку тестового контекста
    https://api.travel-balancer-test.yandex.net/api/test_context/v1/tokens?originalId=742&partnerId=PI_TRAVELLINE&occupancy=2&forceAvailability=true&cancellation=CR_PARTIALLY_REFUNDABLE&pansionType=PT_BB&offerName=test&priceAmount=11000&partiallyRefundRate=50&getOfferOutcome=OO_SUCCESS&createOrderOutcome=OO_SUCCESS&hotelDataLookupOutcome=HO_REAL&reservationOutcome=RO_SUCCESS&confirmationOutcome=CO_SUCCESS&refundOutcome=RF_UNEXPECTED_PENALTY&priceMismatchRate=2
    При ответе с кодом 200 в booking_page_url будет содержаться урл страницы брони.

specs:
    (ТЛ) Обработка ошибки при возврате:
        - do: Перейти на страницу брони по сгенерированному урлу с заездом-выездом на завтра-послезавтра
        - assert: Открылась страница бронирования

        - do: Заполнить данные гостей и контактные данные валидными значениями
        - do: Кликнуть по Оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
        - assert: Произошел переход на хэппи пейдж
        - do: Нажать на кнопку "Подробнее о заказе"
        - assert: Произошел переход на страницу заказа в личном кабинете
        - assert: На странице есть кнопка "Отменить бронирование"
              | Кнопка кликабельна

        - do: Кликнуть по кнопке "Отменить бронирование"
        - do: В раскрывшемся попапе кликнуть "Отменить бронирование"
        - assert:
              Появился лоадер с текстом “Загрузка заказа Загружаем подробную информацию о заказе”
              | Далее открылась страница ошибки при возврате
              | Заголовок ошибки Не получилось отменить бронирование
              | Далее указан номер поддержки и номер заказа в формате YA-XXXX-XXXX-XXXX
              | Ниже отображается информация об отеле
              | Название - Вега Измайлово
              | Адрес
              | Даты заезда и выезда - завтра и послезавтра
              | Кол-во гостей - 2
              | Название оффера - test
              | Информация про питание - Завтрак включен
              | Информация про кровати
              | Справа есть фото отеля

files:
    - tests/common/hotels/book/flowErrorsTravelline/refundUnexpectedPenalty.hermione.ts

Сервис: Отели
Автор: iliasova
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
tags: ТК
Тестирование асессорами: Нет
feature: Портал
type: Главная
description: |-
    Для просмотра файла нужно добавить к урлу главной страницы /robots.txt
    Например:
    https://travel.yandex.ru/robots.txt
    https://travel-test.yandex.ru/robots.txt
    https://travel.crowdtest.yandex.ru/robots.txt
specs:
    Файл robots:
        - do: Открыть файл роботс для нужного стенда
        - assert: >-
              Содержание файла совпадает со скриншотом:

              ![](https://jing.yandex-team.ru/files/kuklina/2022-07-25_13-39-16.png)

files:
    - tests/common/common/robots.hermione.ts
manual: false
Устройство:
    - Десктоп
Страница: Главная
Сервис: Портал
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
Tag:
    - Smoke
Автор: shenfeld
feature: Поезда
type: Оплата

specs:
    Бронирование Сапсана с дорожной картой:
        - do: НЕ залогиниваться
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц
        - do: Кликнуть по кнопке “Выбрать место” для "Сапсана" со свободными местами
        - do: Выбрать любое свободное место
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Указать пассажиров”.
        - do: |
              Указать тестовые данные с дорожной картой
              ФИО: Колосов Олег Семенович
              Паспорт РФ: 4505120245
              День рождения: 02.03.1977
              № карты: 9001900090068
        - do: Кликнуть по кнопке перехода на следующий шаг покупки “Проверить заказ и купить”.
        - assert: В деталях заказа отображается "Тариф карта"

files:
    - tests/common/trains/order/confirmation/sapsanWithRoadCard.hermione.ts

tags: smoke

Сервис: ЖД
Страница: Подтверждение
Функциональность: Бронирование
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Контекст
description: ''
specs:
    Сохранение контекста с главной на главную - автобусы-жд:
        - do: Перейти на главную автобусов. Заполнить форму поиска Москва-Санкт-Петербург на любую дату
        - do: Не выполняя поиск перейти на ЖД
        - assert: Дата Когда в форме поиска соответствует дате из автобусов. Города соответствуют городам из автобусов

    Сохранение контекста с главной на главную - автобусы-отели:
        - do: Перейти на главную автобусов. Заполнить форму поиска Москва-Санкт-Петербург на любую дату
        - do: Не выполняя поиск перейти на Отели
        - assert: В форму поиска отелей подставился Санкт-Петербург. Даты не подставились. Календарь раскрылся

    Сохранение контекста с главной на главную - отели-автобусы:
        - do: Перейти на главную Отелей. Заполнить форму поиска Казань, любые даты
        - do: Не выполняя поиск перейти на Автобусы
        - assert: В пункт Куда подставился город Казань. Даты не подставились. Календарь раскрылся

    Сохранение контекста с главной на главную - авиа-автобусы:
        - do: Перейти на главную Авиа. Заполнить форму поиска Москва-Пулково на любые даты
        - do: Не выполняя поиск перейти на Автобусы
        - assert: В форму поиска подставилось Москва-Санкт-Петербург. Дата Когда соответствует дате из Авиа

files:
    - tests/common/komod/save-context-bus-main.hermione.ts

tags: smoke
Сервис: Комод
Функциональность: Форма поиска
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Комод
type: Контекст
description: ''
specs:
    Сохранение контекста с главной на главную - авиа-жд:
        - do: Перейти на главную авиа. Заполнить форму поиска Шереметьево-Санкт-Петербург туда-обратно на любые даты
        - do: Не выполняя поиск перейти на ЖД
        - assert: Даты в форме поиска соответствуют датам из авиа. Город отправления в жд соответствует аэропорту из авиа. Город прибытия совпадает с авиа

    Сохранение контекста с главной на главную - авиа-отели:
        - do: Перейти на главную авиа. Заполнить форму поиска Москва-Санкт-Петербург туда-обратно на любые даты
        - do: Не выполняя поиск перейти на Отели
        - assert: В форму поиска отелей подставился Санкт-Петербург. Даты не подставились. Календарь раскрылся

    Сохранение контекста с главной на главную - жд-отели:
        - do: Перейти на главную ЖД. Заполнить форму поиска Москва-Санкт-Петербург, только туда на любую дату
        - do: Не выполняя поиск перейти на Отели
        - assert: В форму поиска отелей подставился Санкт-Петербург. Даты не подставились. Календарь раскрылся

    Сохранение контекста с главной на главную - отели-авиа:
        - do: Перейти на главную Отелей. Заполнить форму поиска Казань, любые даты
        - do: Не выполняя поиск перейти на Авиа
        - assert: В пункт Куда подставился город Казань. Даты не подставились. Календарь раскрылся
files:
    - tests/common/komod/save-context-main.hermione.ts

tags: smoke
Сервис: Комод
Функциональность: Форма поиска
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Комод
type: Контекст
description: ''
specs:
    Сохранение контекста с выдачи на главную - авиа-жд:
        - do: Перейти на главную авиа. Заполнить форму поиска Шереметьево-Санкт-Петербург туда-обратно на любые даты и выполнить поиск
        - do: На выдаче выполнить перепоиск Кольцово-Казань туда-обратно на другие даты
        - do: Не выполняя поиск перейти на жд
        - assert: Даты в форме поиска соответствуют датам из авиа. Город отправления в жд соответствует аэропорту из авиа. Город прибытия совпадает с авиа

    Сохранение контекста с выдачи на главную - жд-авиа:
        - do: Перейти на главную жд. Заполнить форму поиска Москва-Санкт-Петербург на любые даты и выполнить поиск
        - do: На выдаче выполнить перепоиск Екатеринбург-Казань на другие даты
        - do: Не выполняя поиск перейти на авиа
        - assert: Даты в форме поиска соответствуют датам из жд. Города отправления и прибытия в авиа совпадают с жд.

    Сохранение контекста с выдачи на главную - авиа-отели:
        - do: Перейти на главную авиа. Заполнить форму поиска Москва-Санкт-Петербург туда-обратно на любые даты и выполнить поиск
        - do: На выдаче выполнить перепоиск Екатеринбург-Казань туда-обратно на другие даты
        - do: Не выполняя поиск перейти на Отели
        - assert: В форму поиска отелей подставился город Казань. Даты не подставились. Календарь раскрылся

    Сохранение контекста с выдачи на главную - жд-отели:
        - do: Перейти на главную ЖД. Заполнить форму поиска Москва-Санкт-Петербург, только туда на любую дату  выполнить поиск
        - do: На выдаче выполнить перепоиск Казань-Москва только туда на другую дату
        - do: Не выполняя поиск перейти на Отели
        - assert: В форму поиска отелей подставился город Москва. Даты не подставились. Календарь раскрылся

    Сохранение контекста с выдачи на главную - отели-авиа:
        - do: Перейти на главную Отелей. Заполнить форму поиска Казань, любые даты и выполнить поиск
        - do: На выдаче выполнить перепоиск Сочи на другие даты
        - do: Не выполняя поиск перейти на Авиа
        - assert: В пункт Куда подставился город Сочи. Даты не подставились. Календарь раскрылся
files:
    - tests/common/komod/save-context-search-page.hermione.ts

tags: smoke
Сервис: Комод
Функциональность: Форма поиска
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Портал
type: Главная
description: ''
specs:
    '[Десктоп] Портал. Ввод в поля формы поиска. Авиа':
        - do: >-
            Открыть главную страницу, вкладка авиа

            Кликнуть на первый инпут

            Если в первом инпуте уже заполнено значение, то вместо клика на инпут
            кликаем на крестик в нем
        - assert: Раскрывается попап с саджестами
        - do: Выбираем значение из саджеста
        - assert: 'Раскрывается попап следующего поля, предыдущий попап закрывается'
        - do: |-
            Со всеми следующими инпутами формы поиска аналогично:
            Устанавливаем значение в попапе
        - assert: >-
            Раскрывается попап следующего поля (кроме предзаполненных полей с
            количеством пассажиров)
        - do: Устанавливаем значение в последнем попапе
        - assert: Попап скрывается
        - do: Нажать на кнопку Найти
        - assert: Произошел переход на поиск по заданным направлению и дате
    '[Десктоп] Портал. Ввод в поля формы поиска. ЖД':
        - do: Выполнить шаги кейса для ЖД (нет контрола пассажиров, это ок)
        - assert: ОР совпадает с шагами первого кейса
    '[Десктоп] Портал. Ввод в поля формы поиска. Отели':
        - do: Выполнить шаги кейса для Отелей
        - assert: ОР совпадает с шагами первого кейса
    '[Десктоп] Портал. Ввод в поля формы поиска. Автобусы':
        - do: Выполнить шаги кейса для Автобусов (нет контрола пассажиров, это ок)
        - assert: ОР совпадает с шагами первого кейса
files:
    - tests/desktop/portal/searchForm/search-form.hermione.ts
Функциональность: Форма поиска
Устройство: Десктоп
Страница: Главная
tlds: ru
Сервис: Портал
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - automation (iliasova)
  - Smoke
  - Blocker
Автор: tcheremnykh
feature: Автобусы
type: Поиск
description: |
    В тестинге автобусов мало данных, можно попробовать поискать https://testing.backend.internal.bus.yandex.net/api/popular

    Направления, которые чаще всего есть в тестинге:
    Москва - Санкт-Петербург,
    Москва - Воронеж,
    Москва - Богучар

    Перейти Яндекс.Путешествия, вкладка «Автобусы»
specs:
    Автобусы. Проверка получения пустой выдачи:
      - do: Сформировать поисковую выдачу в направлении, куда явно не ходят автобусы, например "Москва - Ньюпорт" на завтра
      - assert: |
            Получили пустую выдачу с заглушкой,
            См. скрин https://jing.yandex-team.ru/files/ivalor/2022-04-21T12%3A59%3A10Z.53043b2.png


files:
    - tests/common/buses/search/date/search-no-results.hermione.ts

Функциональность: 'Поиск, общий вид выдачи'
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Автобусы
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
feature: Поезда
type: Выбор мест
description: Проверяются 3 поезда (обычный, скоростной, фирменный)

specs:
    Совпадение данных о поезде на странице выбора мест с выдачей. Нефирменный вагон:
        - do: Открыть выдачу Москва - Екатеринбург через месяц (если нет, поискать на другую дату)
        - do: Найти на выдаче любой обычный поезд - не фирменный и не скоростной. Запомнить информацию на выдаче о поезде - номер поезда, значок ЭР (есть/нет), перевозчик, дата и время отправления/прибытия, время в пути.
        - do: Кликнуть по кнопке Выбрать место
        - assert: Осуществился переход на страницу выбора мест
        - assert: Вся информация о поезде совпадает с информацией о поезде c выдачи (если у поезда на выдаче было две буквы в номере, то на странице выбора мест может быть одна из этих букв - это нормально)
        - do: Обновить страницу
        - assert: Вся информация о поезде совпадает с запомненной ранее
    Совпадение данных о поезде на странице выбора мест с выдачей. Сапсан:
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц (если нет, поискать на другую дату)
        - do: Найти на выдаче поезда Сапсан. Запомнить информацию на выдаче о поезде - номер поезда, значок ЭР (есть/нет), перевозчик, дата и время отправления/прибытия, время в пути
        - do: Кликнуть по кнопке Выбрать место
        - assert: Осуществился переход на страницу выбора мест
        - assert: Вся информация о поезде совпадает с информацией о поезде c выдачи
        - assert: Есть название поезда - Сапсан
        - do: Обновить страницу
        - assert: Вся информация о поезде совпадает с запомненной ранее
    Совпадение данных о поезде на странице выбора мест с выдачей. Фирменный вагон:
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц (если нет, поискать на другую дату)
        - do: Найти на выдаче любой фирменный поезд. Запомнить информацию на выдаче о поезде - номер поезда, значок ЭР (есть/нет), перевозчик, дата и время отправления/прибытия, время в пути, признак фирменности.
        - do: Кликнуть по кнопке Выбрать место
        - assert: Осуществился переход на страницу выбора мест
        - assert: Вся информация о поезде совпадает с информацией о поезде c выдачи (если у поезда на выдаче было две буквы в номере, то на странице выбора мест может быть одна из этих букв - это нормально)
        - assert: Есть признак фирменности
        - do: Обновить страницу
        - assert: Вся информация о поезде совпадает с запомненной ранее


files:
    - tests/desktop/trains/serp/searchAndOrderSegmentsAreEqual.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Функциональность: Разное по странице выбора мест
Устройство:
    - Десктоп
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: SecureIframeProxy

specs:
    Двусторонний обмен сообщениями:
        - do: Перейти на страницу для тестирования SecureIframeProxy /test/3ds/
        - do: Нажать кнопку "Отправить сообщение во фрейм"
        - assert: Список сообщений на странице должен быть пуст
        - assert: Список сообщений внутри фрейма должен содержать одно сообщение
        - do: Нажать кнопку внутри фрейма "Отправить сообщение на страницу"
        - assert: Список сообщений на странице должен содержать одно сообщение

    Открытие страниц вне политик csp:
        - do: Перейти на страницу для тестирования SecureIframeProxy /test/3ds/external
        - assert: Должна отобразиться ссылка с mironline

files:
    - tests/common/common/secureIframeProxy/secure-iframe-proxy.hermione.ts

Сервис: Портал
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing

Тестирование асессорами: Нет
feature: Поезда
type: Выбор мест
description: |
    Проверяем блок: https://jing.yandex-team.ru/files/shenfeld/2021-04-20_11.00.34-ih6sh.png

    Пример ссылки на выбор мест для пересадок: https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-11T13.50&fromId=c2&fromName=Санкт-Петербург&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10

specs:
    ЖД+ЖД Блок с данными о рейсах на выборе мест:
        - do: Перейти на страницу выбора мест в первый поезд, для сложного заказа с пересадкой и со сменой вокзала
        - assert: открывается шаг выбора мест
        - assert: вверху страницы есть блок с данными о рейсах
        - assert: в блоке есть заголовок с пунктами отправления/прибытия для полного маршрута, дата отправления, день недели
        - assert: для обоих поездов есть данные - перевозчик (только в десктопе), номер и название поезда, время и дата отправления/прибытия, время в пути, приписка "Время местное", пункты отправления/прибытия
        - assert: блок с первым поездом выделен желтой рамкой (no_autotest)
        - assert: есть информация о пересадке - иконка с бегущим человеком и текст - Пересадка в "город пересадки" ("вокзал1" → "вокзал2") — 6 ч 8 мин
        - do: Выбрать любое место в первом поезде
        - do: Нажать "Далее"
        - assert: произошел переход на шаг выбора мест во второй поезд
        - assert: в блоке с данными о рейсах рамкой выделен второй рейс (no_autotest)

files:
    - tests/common/trains/order/places/segmentsInfoWithTransfer/segmentsInfoWithTransfer.hermione.ts

# meta
Сервис: ЖД
Страница: Выбор мест
Функциональность: ЖД+ЖД Пересадки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Нет
feature: Портал

specs:
    Автовыбор саджеста в форме поиска при потере фокуса:
        - do: |
            Перейти на главную авиа
            В поле "Откуда" ввести "Моск"
            Не выбирая саджест из списка кликнуть по полю "Куда" (в таче перейти назад по стрелке)
        - assert: В поле Откуда подставился саджест "Москва"
        - do: В "Куда" ввести "Санкт"
        - assert: В "Куда" подставился саджест "Санкт-Петербург"
        - do: Повторить шаги для ЖД, автобусов и отелей (в отелях одно поле и называется по другому)
        - assert: Ожидаемый результат должен соответствовать предыдущему - при уходе с поля (если что то вводили) подставляется первый релевантный саджест из поиска.
        - do: |
            Перейти на выдачу авиа с любыми параметрами
            Повторить шаги 1-2
        - assert: Ожидаемый результат должен соответствовать 1-2
        - do: Повторить шаги 1-2 на выдаче жд, автобусов и отелей (для отелей только шаг 1)
        - assert: Ожидаемый результат должен соответствовать 1-2

files:
    - tests/common/common/searchForm/select-suggest-on-blur.hermione.ts

tags: smoke

Сервис: Портал
Страница: Главная
Устройство:
    - Десктоп
    - Тач
Функциональность: Форма поиска
Окружение:
    - Testing
    - Production
Тестирование асессорами: Нет
feature: Авиабилеты
type: Выдача
description: ''
specs:
    'Проверка выбора тарифов на выдаче в десктопе':
        - do: |-
              Зайти на главную,
              На вкладке авиа ввести в поля
              * откуда - Екатеринбург
              * куда - Москва
              * туда - 5 число следующего месяца
              * обратно не заполняем
              Кликнуть "Найти"
        - assert: Произошел переход на страницу выдачи
              Применить фильтр Авиакомпания = Победа, чекбокс Комбинации авиакомпаний снять
        - assert: На выдаче остались варианты от авиакомпании Победа
        - do: Проверить наличие информации о ручной клади и багажной информации
        - assert: |
            Багажная информация и информация о ручной клади содержатся в правой части сниппета.

            Информация о ручной клади
            Для вариантов без ручной клади иконка с сумкой чёрная, для вариантов с ручной кладью - зелёная с указанием веса.
            Если неизвестен допустимый вес для ручной клади или допустимые габариты клади меньше стандартных (например,
            авиакомпании Победа и ЮТэйр), рядом с иконкой будут указаны габариты.

            Информация о багаже
            Для безбагажных вариантов иконка с чемоданом чёрная, для вариантов с багажом - зелёная с указанием веса.
            В десктопе на сниппете указано количество багажных мест.

        - do: Кликнуть по значению Багажной информации
        - assert: |
              Появляется окно с выбором тарифа
              Присутствует информация о перелёте
              В каждом пункте выбора тарифа указаны:
              * Цена предложения с указанным тарифом
              * Значение ручной клади
              * Значение багажа
              * Значение возвратности
              * Ссылка на предложения партнёров (если есть)
              Пример: https://jing.yandex-team.ru/files/kuklina/2022-05-25_15-32-44.png
        - do: Кликнуть по ссылке "Ещё Х предложений" для любого варианта
        - assert: |
              Открывается окно со списком вариантов от партнёров
              Количество партнёров совпадает с тем, что было указано в ссылке (без учёта основного предложения)
              https://jing.yandex-team.ru/files/gouken67/Окно%20с%20предложениями%20от%20партнёров.png
        - do: | 
              Закрыть окно с партнёрами
              Кликнуть в жёлтую кнопку для второго пункта тарифов
        - assert: |
              Происходит редирект к партнёру
              Стоимость у партнёра совпадает с тем, что было указано в выбранном варианте (за вычетом страхования и СМС-информирования - эти доп. услуги добавляет сам партнёр), если цена в другой валюте - не сравниваем

files:
    - tests/desktop/avia/serp/serp-all-tariffs-desktop.hermione.ts

Функциональность: Содержание выдачи
Устройство:
    - Десктоп
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Smoke
feature: Авиа
type: Выдача
description: ''
specs:
    'Сравнение тарифов на BoY':
        - do: |-
              Зайти на главную,
              На вкладке авиа ввести в поля
              * откуда - Екатеринбург
              * куда - Москва
              * туда - 5 число следующего месяца
              * обратно не заполняем
              Кликнуть "Найти"
        - assert: Произошел переход на страницу выдачи
        - do: |
              Применить фильтр Авиакомпания = Аэрофлот
        - assert: На выдаче остались только варианты от Аэрофлота
        - do: |
              Найти вариант с партнёром Я.Путешествия
              Для десктопа: кликнуть в дропдаун с тарифной информацией, а затем выбрать самый дорогой тариф и кликнуть по жёлтой кнопке с ценой
              Для тачей: кликнуть по жёлтой кнопке с ценой, зетем - ещё раз в шторке для самого дорогого тарифа
        - assert: |
              Происходит переход на страницу BoY (book on Yandex)
              Стоимость и условия тарифа совпадают с тем, что было на выдаче
manual: true
Функциональность: Тарифы авиа
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Regress
feature: Авиа
type: Выдача
description: ''
specs:
    'Проверка вариантов с 1 тарифом':
        - do: |-
              Зайти на главную,
              На вкладке авиа ввести в поля
              * откуда - Екатеринбург
              * куда - Сочи
              * туда - 5 число следующего месяца
              * обратно не заполняем
              Кликнуть "Найти"
        - assert: Произошел переход на страницу выдачи
        - do: |
              Установить сортировку По цене, По убыванию
              Проверить тарифную информацию для первых 10 вариантов
              Для десктопа - кликнуть в дропдаун тарифной информации в сниппете
              Для тача - тапнуть в саму тарифную информацию
        - assert: |
              Открывается выбор тарифа
              Среди осмотренных вариантов удалось найти вариант, дял которого есть всего 1 тариф
        - do: |
              Закрыть выбор тарифа
              Кликнуть по сниппету (не по жёлтой кнопке с ценой)
        - assert: |
              Переходим на страницу покупки
              Над блоком партнёра нет возможности выбрать тариф
manual: true
Функциональность: Тарифы авиа
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Regress
feature: Авиабилеты
type: Выдача
description: ''
specs:
    'Проверка выбора тарифов на выдаче в таче':
        - do: |-
              Зайти на главную,
              На вкладке авиа ввести в поля
              * откуда - Екатеринбург
              * куда - Москва
              * туда - 5 число следующего месяца
              * обратно не заполняем
              Кликнуть "Найти"
        - assert: Произошел переход на страницу выдачи
        - do: |
              Убедиться, что выбрана сортировка Сначала рекомендуемые, по возрастанию
              Применить фильтр Авиакомпания = Уральские авиалинии, чекбокс Комбинации авиакомпаний снять
        - assert: На выдаче остались варианты от авиакомпании Уральские авиалинии
        - do: Тапнуть по значению багажной информации для первого сниппета
        - assert: |
              Открывается шторка с выбором тарифа
              Значения выбранного тарифа соответствуют тому, что было указано на сниппете
              В каждом пункте выбора тарифа указаны:
              * Жёлтая кнопка с ценой предложения и названием партнёра
              * Надпись Ещё n предложений под жёлтой кнопкой (может отсутствовать)
              * Значение ручной клади
              * Значение багажа
              * Значение возвратности
        - assert: |
              Также отображается подробная информация о перелёте:
              * Направление рейса
              * Дата вылета
              * Авиакомпании
              * Детали перелёта: время вылета, прилёта, время в пути, пункт вылета, прилёта, пересадки (ели есть)
              https://jing.yandex-team.ru/files/gouken67/Тарифы%20выдача%20тач.png
        - do: Проскроллить варианты тарифов в шторке
        - assert: Варианты скроллятся корректно
        - do: Закрыть шторку свайпом вниз
        - assert: |
              Шторка корректно закрывается
              Значения багажности/возврата не изменились
        - do: |
              Открыть тарифную шторку снова
              Кликнуть по ссылке Ещё n вариантов для первого сниппета (если нет ссылки - пропустить шаг)
        - assert: |
              Открывается шторка с предложениями от партнёров
              https://jing.yandex-team.ru/files/gouken67/Шторка%20партнёров%20в%20тарифах.png
        - do: Кликнуть по кнопке Купить для любого предложения партнёра
        - assert: |
              Происходит редирект к партнёру в новой вкладке
              Стоимость у партнёра совпадает с тем, что было указано на выдаче
        - do: Вернуться на вкладку с выдачей Авиа в Путешествиях
        - assert: Шторка с предложениями партнеров открыта
        - do: Тапнуть по экрану за пределами шторки
        - assert:  |
              Шторка с предложениями партнеров закрывается
              Остается открытой шторка с тарифами
        - do: |
              Проскроллить шторку тарифов до второго варианта
              Кликнуть по жёлтой кнопке с ценой
        - assert: |
              Происходит редирект к партнёру
              Стоимость у партнёра совпадает с тем, что было указано на выдаче (за вычетом страхования и СМС-информирования - эти доп. услуги добавляет сам партнёр)

files:
    - tests/touch/avia/serp/serp-all-tariffs-touch.hermione.ts

Функциональность: Содержание выдачи
Устройство:
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: gouken67
Tag:
    - Smoke
feature: Комод
type: Кроссейл
description: ''
specs:
  Переход по кроссейл карте с выдачи авиа:
    - do: Перейти на выдачу авиа по любому направлению на 5 число следующего месяца
    - do: Кликнуть по любому месту на кроссейл карте на выдаче
    - assert: >-
        Открылась выдача отелей: дата заезда соответствует дате вылета в авиа, дата выезда на 1 день больше
    - do: >-
        Снова перейти на выдачу авиа по любому направлению больше, чем на 1 день,
        Например, 5-7 октября
    - do: Кликнуть по кнопке/ссылке "Выбрать подходящий отель" на кроссейл карте
    - assert: >-
        Открылась выдача отелей: даты соответствуют датам из авиа поиска
Сервис: Комод
files:
    - tests/common/avia/serp/serp-click-on-crossale.hermione.ts
Устройство:
  - Тач
  - Десктоп
Страница: Выдача
Тестирование асессорами: Нет
Автор: papulova
feature: Авиа
type: Выдача
description: |-
    'Общая логика баннера:|-
    баннер зеленого цвета = в страну разрешен въезд туристов и нет карантинов,
    серый баннер = туризм разрешен, но есть карантины (для всех \ для привитых \ для непривитых),
    красный баннер = страна закрыта для туризма.
    В этих случаях по клику на баннер открываем окно с подрбной инфомацией.
    Если информации о туризме нет, баннер серый и по клику раскрывается ссылка для обратной связи (https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-11-41.png)
    Если ограничения изменились и на выдаче баннер другого цвета (и это не противоречит "общей логике баннера"), попробуйте пройти кейс с любым аэропортом Норвегии, Объединенных Арбских Эмиратов, Киргизии, Узбекитана. Также можно подобрать страну из списка https://tourism.gov.ru/contents/covid-19/deystvuyushchie-ogranicheniya-po-vezdu-v-inostrannye-gosudarstva/'
specs:
    'Авиа: Проверка ковидного баннера с условиями "туризм разрешен, нет карантина"':
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Москва
              Куда: Лондон
              Туда: 5 число следующего месяца, дату обратно не ставить
              Количество пассажиров и класс полета выбрать произвольно
        - do: Нажать кнопку “Найти”
        - assert: >-
              Начинается загрузка выдачи, виден скелетон баннера
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-28-00.png https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-39-31.png
              - do: Дождаться появления первых вариантов на выдаче
              - assert: >-
              На странице выдачи над вариантами рейсов отображается баннер с информацией о ковидных ограничениях.
              Баннер зеленого цвета, на нем есть зеленая круглая иконка, заголовок вида "Страна: резолюция", дополнительный текст более мелким шрифтом и стрелочка в правой части баннера.
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-15_17-11-50-1.png
        - do: Кликнуть на баннер
        - assert: >-
              Открывается попап-окно\шторка с подробной информацией об ограничениях
              В окне есть:>-
              название страны,
              короткая резолюция (для путешествий открыто\закрыто),
              текст "Актуально для граждан России",
              блоки с подробной информацией (ПЦР и\или вакцинация, Регистрация прибивающих, Карантин, Виза),
              текст "Нашли ошибку в сведениях?" и ссылка "Сообщить" на https://yandex.ru/support/travel/avia/covid.html),
              текст "Требования часто меняются, проверьте актуальность данных на официальных сайтах перед вылетом.".
              Блоки обязательно содержат иконку и заголовок, дополнительный текст может отсутствовать.
              Для десктопа: крестик в правом верхнем углу
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-11-58.png https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-37-28.png
        - do: |-
              Для десктопа: Кликнуть на крестик в правом верхнем углу попапа
              Для тача: Свайпнуть шторку вниз
        - assert: Попап-ап окно закрывается. Страница с выдачей остается прежней.
manual: true
Функциональность: Ковидный баннер
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: kuklina
Tag: Regress
feature: Авиа
type: Выдача
description: |-
    'Общая логика баннера:|-
    баннер зеленого цвета = в страну разрешен въезд туристов и нет карантинов,
    серый баннер = туризм разрешен, но есть карантины (для всех \ для привитых \ для непривитых),
    красный баннер = страна закрыта для туризма.
    В этих случаях по клику на баннер открываем окно с подрбной инфомацией.
    Если информации о туризме нет, баннер серый и по клику раскрывается ссылка для обратной связи (https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-11-41.png)
    Если ограничения изменились и на выдаче баннер другого цвета (и это не противоречит "общей логике баннера"), попробуйте пройти кейс с любым аэропортом Таиланда, Филиппин, Замбии. Также можно подобрать страну из списка https://tourism.gov.ru/contents/covid-19/deystvuyushchie-ogranicheniya-po-vezdu-v-inostrannye-gosudarstva/'
specs:
    'Авиа: Проверка ковидного баннера с условиями "туризм разрешен, есть карантин"':
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Москва
              Куда: Денпасар
              Туда: 5 число следующего месяца, дату обратно не ставить
              Количество пассажиров и класс полета выбрать произвольно
        - do: Нажать кнопку “Найти”
        - assert: >-
              Начинается загрузка выдачи, виден скелетон баннера
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-28-00.png https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-39-31.png
              - do: Дождаться появления первых вариантов на выдаче
              - assert: >-
              На странице выдачи над вариантами рейсов отображается баннер с информацией о ковидных ограничениях.
              Баннер серого цвета, на нем есть красная круглая иконка, заголовок вида "Страна: резолюция", дополнительный текст более мелким шрифтом и стрелочка в правой части баннера.
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-13-50.png
        - do: Кликнуть на баннер
        - assert: >-
              Открывается попап-окно\шторка с подробной информацией об ограничениях
              В окне есть:>-
              название страны,
              короткая резолюция (для путешествий открыто\закрыто),
              текст "Актуально для граждан России",
              блоки с подробной информацией (ПЦР и\или вакцинация, Регистрация прибивающих, Карантин, Виза),
              текст "Нашли ошибку в сведениях? Сообщить" со ссылкой на https://yandex.ru/support/travel/avia/covid.html)
              текст "Требования часто меняются, проверьте актуальность данных на официальных сайтах перед вылетом."
              Блоки обязательно содержат иконку и заголовок, дополнительный текст может отсутствовать.
              Для десктопа: крестик в правом верхнем углу
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-14-02.png https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-37-28.png
        - do: |-
              Для десктопа: Кликнуть на крестик в правом верхнем углу попапа
              Для тача: Свайпнуть шторку вниз
        - assert: Попап-ап окно закрывается. Страница с выдачей остается прежней.
manual: true
Функциональность: Ковидный баннер
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: kuklina
Tag: Regress
feature: Авиа
type: Выдача
description: |-
    'Общая логика баннера:|-
    баннер зеленого цвета = в страну разрешен въезд туристов и нет карантинов,
    серый баннер = туризм разрешен, но есть карантины (для всех \ для привитых \ для непривитых),
    красный баннер = страна закрыта для туризма.
    В этих случаях по клику на баннер открываем окно с подрбной инфомацией.
    Если информации о туризме нет, баннер серый и по клику раскрывается ссылка для обратной связи (https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-11-41.png)
    Если ограничения изменились и на выдаче баннер другого цвета (и это не противоречит "общей логике баннера"), попробуйте пройти кейс со странами: Французская Полинезия, Британские Виргинские острова'
specs:
    'Авиа: Проверка ковидного баннера с условиями "нет информации"':
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Москва
              Куда: Роатан
              Туда: 5 число следующего месяца, дату обратно не ставить
              Количество пассажиров и класс полета выбрать произвольно
        - do: Нажать кнопку “Найти”
        - assert: >-
              Начинается загрузка выдачи, виден скелетон баннера
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-28-00.png https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-39-31.png
              - do: Дождаться появления первых вариантов на выдаче
              - assert: >-
              На странице выдачи над вариантами рейсов отображается баннер с информацией о ковидных ограничениях.
              Баннер серого цвета, на нем есть красная круглая иконка, заголовок вида "Страна: резолюция", дополнительный текст более мелким шрифтом и стрелочка вниз в правой части баннера.
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-11-45.png
        - do: Кликнуть на баннер
        - assert: >-
              Баннер раскрывается,  стрелочка указывает вверх, появляется ссылка "Сообщить о правилах въезда" на https://yandex.ru/support/travel/avia/covid.html
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-11-41-1.png https://jing.yandex-team.ru/files/kuklina/2022-02-17_18-05-53.png
        - do: Кликнуть на баннер ещё раз
        - assert: Баннер сворачивается, стрелочка указывает вниз
manual: true
Функциональность: Ковидный баннер
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: kuklina
Tag: Regress
feature: Авиа
type: Выдача
description: |-
    'Общая логика баннера:|-
    баннер зеленого цвета = в страну разрешен въезд туристов и нет карантинов,
    серый баннер = туризм разрешен, но есть карантины (для всех \ для привитых \ для непривитых),
    красный баннер = страна закрыта для туризма.
    В этих случаях по клику на баннер открываем окно с подрбной инфомацией.
    Если информации о туризме нет, баннер серый и по клику раскрывается ссылка для обратной связи (https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-11-41.png)
    Если ограничения изменились и на выдаче баннер другого цвета (и это не противоречит "общей логике баннера"), попробуйте пройти кейс с любым аэропортом США, Японии, Канады, Чехии. Также можно подобрать страну из списка https://tourism.gov.ru/contents/covid-19/deystvuyushchie-ogranicheniya-po-vezdu-v-inostrannye-gosudarstva/'
specs:
    'Авиа: Проверка ковидного баннера с условиями "туризм запрещен"':
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Москва
              Куда: Варшава
              Туда: 5 число следующего месяца, дату обратно не ставить
              Количество пассажиров и класс полета выбрать произвольно
        - do: Нажать кнопку “Найти”
        - assert: >-
              Начинается загрузка выдачи, виден скелетон баннера
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-28-00.png https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-39-31.png
              - do: Дождаться появления первых вариантов на выдаче
              - assert: >-
              На странице выдачи над вариантами рейсов отображается баннер с информацией о ковидных ограничениях.
              Баннер красного цвета, на нем есть красная круглая иконка, заголовок вида "Страна: резолюция", дополнительный текст более мелким шрифтом и стрелочка в правой части баннера.
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-09-28.png
        - do: Кликнуть на баннер
        - assert: >-
              Открывается попап-окно\шторка с подробной информацией об ограничениях
              В окне есть:>-
              название страны,
              короткая резолюция (для туристов закрыто),
              текст "Актуально для граждан России",
              текст "Туризм временно невозможен",
              текст "Нашли ошибку в сведениях?" и ссылка "Сообщить" на https://yandex.ru/support/travel/avia/covid.html),
              текст "Требования часто меняются, проверьте актуальность данных на официальных сайтах перед вылетом."
              Для десктопа: крестик в правом верхнем углу
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-14-39.png
        - do: |-
              Для десктопа: Кликнуть на крестик в правом верхнем углу попапа
              Для тача: Свайпнуть шторку вниз
        - assert: Попап-ап окно закрывается. Страница с выдачей остается прежней.
manual: true
Функциональность: Ковидный баннер
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: kuklina
Tag: Regress
feature: Авиа
type: Выдача
description: |-
    'Кейс актуален до снятия "ковидных требований" (меры для предотвращения распространения коронавирусной инфекции) на въезд в Россию для россиян'
specs:
    'Авиа: Десктоп: Проверка ковидного баннера на въезд в Россию':
        - do: Открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Лондон
              Куда: Москва
              Туда: 5 число следующего месяца, дату обратно не ставить
              Количество пассажиров и класс полета выбрать произвольно
        - do: Нажать кнопку “Найти”
        - assert: >-
              Начинается загрузка выдачи, виден скелетон баннера
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-28-00.png https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-39-31.png
        - do: Дождаться появления первых вариантов на выдаче
        - assert: >-
              На странице выдачи над вариантами рейсов отображается баннер с информацией о ковидных ограничениях.
              Баннер серого цвета, на нем есть красная иконка с восклицательным знаком, текст "Россия: правила въезда в страну" и стрелочка в правой части баннера.
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_11-24-36.png
        - do: Кликнуть на баннер
        - assert: >-
              Открывается попап-окно\шторка с подробной информацией об ограничениях.
              В окне есть: >-
              заголовок "Россия: правила въезда в страну";
              текст "Актуально для граждан России";
              блоки информацией о необходимости ПЦР и/или вакцинации, карантина, регистрации, визы. Блок состоит из иконки, заголовка и может содержать дополнительный текст (разъяснения, исключения);
              текст "Нашли ошибку в сведениях?" и ссылка "Сообщить" (ведет на https://yandex.ru/support/travel/avia/covid.html);
              текст "Требования часто меняются, проверьте актуальность данных на официальных сайтах перед вылетом."
              Для десктопа: крестик в правом верхнем углу
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_11-24-39.png
        - do: |-
              Для десктопа: Кликнуть на крестик в правом верхнем углу попапа
              Для тача: Свайпнуть шторку вниз
        - assert: >-
              Окно с дополнительной информацией закрывается. Страница с выдачей остается прежней
        - do: Кликнуть на баннер
        - assert: >-
              Открывается попап-окно с подробной информацией об ограничениях. Вид прежний
        - do: Кликнуть в любое место страницы за пределами попапа\шторки
        - assert: >-
              Окно с дополнительной информацией закрывается. Страница с выдачей остается прежней.
Функциональность: Ковидный баннер
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: kuklina
Tag: Regress
feature: Авиа
type: Выдача
description: |-
    'Кейс актуален до снятия "ковидных требований" (меры для предотвращения распространения коронавирусной инфекции) в мире.
    Общая логика баннера:|-
    баннер зеленого цвета = в страну разрешен въезд туристов и нет карантинов,
    серый баннер = туризм разрешен, но есть карантины (для всех \ для привитых \ для непривитых),
    красный баннер = страна закрыта для туризма'
specs:
    'Авиа: Проверка ковидного баннера Smoke':
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Москва
              Куда: Лондон
              Туда: 5 число следующего месяца, дату обратно не ставить
              Количество пассажиров и класс полета выбрать произвольно
        - do: Нажать кнопку “Найти”
        - assert: >-
              Начинается загрузка выдачи, виден скелетон баннера
        - do: Дождаться появления первых вариантов на выдаче
        - assert: >-
              На странице выдачи над вариантами рейсов отображается баннер с информацией о ковидных ограничениях.
              Баннер зеленого, серого или красного цвета, на нем есть круглая иконка, заголовок вида "Страна: резолюция", дополнительный текст более мелким шрифтом и стрелочка в правой части баннера.
              screen: https://jing.yandex-team.ru/files/kuklina/2022-02-15_17-11-50.png
        - do: Кликнуть на баннер
        - assert: >-
              Открывается попап-окно\шторка с подробной информацией об ограничениях
              В окне есть:>-
              название страны,
              короткая резолюция (для путешествий открыто\закрыто),
              текст "Актуально для граждан России",
              блоки с подробной информацией (ПЦР и\или вакцинация, Регистрация прибивающих, Карантин, Виза),
              текст "Нашли ошибку в сведениях? Сообщить" со ссылкой на https://yandex.ru/support/travel/avia/covid.html),
              текст "Требования часто меняются, проверьте актуальность данных на официальных сайтах перед вылетом.".
              Блоки обязательно содержат иконку и заголовок, дополнительный текст может отсутствовать.
              Для десктопа: крестик в правом верхнем углу
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_16-11-58.png https://jing.yandex-team.ru/files/kuklina/2022-02-17_14-37-28.png
        - do: |-
              Для десктопа: Кликнуть на крестик в правом верхнем углу попапа
              Для тача: Свайпнуть шторку вниз
        - assert: Попап-ап окно закрывается. Страница с выдачей остается прежней
        - do: Кликнуть на баннер
        - assert: Открывается попап-окно\шторка с подробной информацией об ограничениях. Вид прежний
        - do: Кликнуть в любое место страницы за пределами попапа
        - assert: Попап-ап окно закрывается. Страница с выдачей остается прежней.
        - do: |
              Для тача: сменить ориентацию экрана
        - assert: страница отрисуется соразмерно экрану. Баннер по ширине равен сниппетам выдачи
        - do: |
              Для тача: Кликнуть на баннер
        - assert:  >-
              Открывается шторка с информацией, верстка соразмерна ширине экрана
              Screen: https://jing.yandex-team.ru/files/kuklina/2022-02-17_15-58-59.png
manual: true
Функциональность: Ковидный баннер
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Автор: kuklina
Tag: Smoke
feature: Комод
type: Кроссейл
description: ''
specs:
  Карта отелей на выдаче авиа:
    - do: Перейти на выдачу авиа по любому направлению и только Туда
    - assert: >-
        * После двух сниппетов с билетами отображается карта с отелями

        Десктоп - https://jing.yandex-team.ru/files/papulova/u1eSTArMeK.png

        Тач - https://jing.yandex-team.ru/files/papulova/1sKCNkySXg.png

        * В шапке карты указаны даты на 1 ночь (например, 1-2 октября), в
        десктопе один раскрытый сниппет с отелем, в таче нет раскрытых сниппетов
    - do: >-
        Снова перейти на выдачу по любому направлению больше, чем на 1 день,
        например, 1-5 октября
    - assert: '* В шапке карты указаны верные даты из поиска'
Сервис: Комод
files:
    - tests/common/avia/serp/serp-crossale-hotels.hermione.ts
Устройство:
  - Тач
  - Десктоп
Страница: Выдача
Тестирование асессорами: Нет
Автор: papulova
feature: Авиа
type: Выдача
description: ''
specs:
    'Авиа: Проверка фильтра С багажом в динамике цен':
        - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Екатеринбург
              Куда: Санкт-Петербург
              Туда: 5 число следующего месяца, дату обратно не ставить.
              Пассажиры: 1 взрослых
              Класс: Эконом
        - do: Нажать кнопку “Найти”
        - do: 'Assert: Открылась страница выдачи'
        - do: Кликнуть по ссылке Смотреть весь календарь в блоке Динамики цен.
        - do: 'Assert: Открылась динамика цен. Фильтры не активированы'
        - do: Нажать на кнопку фильтра “С Багажом”
        - do: >-
              Assert: Во время обновления данных
              появился лоадер. Данные в динамике обновились.
              Screen: https://jing.yandex-team.ru/files/snejca/12210912.png
        - do: кликнуть на кнопку со стоимостью для любой даты, отличной от текущей
        - assert: >-
              Открылась новая вкладка с выдачей на выбранную дату, фильтр "С багажом"
              на выдаче включен
        - do: |
              Дождаться загрузки выдачи
              Кликнуть по кнопке из Динамики цен:
              https://jing.yandex-team.ru/files/gouken67/1009_1.png
        - assert: Осуществился переход на выдачу за выбранную дату. Фильтр С багажом включён.
manual: true
Функциональность: Динамика
Устройство: Десктоп
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Нет
Окружение:
    - Testing
    - Production
Tag:
    - automation (iliasova)
Автор: gouken67
feature: Авиабилеты
type: Выдача
description: Проверка фильтра Авиакомпаний

specs:
    Проверка фильтра Авиакомпаний:
        - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
        - do: |-
              Заполнить форму поиска билетов
              Откуда: Екатеринбург
              Куда: Санкт-Петербург
              Туда: 5 число следующего месяца, дату обратно не ставить.
              Пассажиры: 1 взрослых
              Класс: Эконом
        - do: Нажать кнопку “Найти”
        - do: >-
              Assert: Открылась страница выдачи. В фильтре авиакомпаний ничего не
              выбрано.
        - do: Нажать на кнопку фильтра авиакомпаний
        - assert: |
              Показался блок фильтра.
              Галочки не на одном из пунктов не стоит.
              Есть галочка Комбинации авиакомпаний, она снята
              Есть кнопка сбросить, она неактивна
              Кнопка альянсов активна на “Все альянсы”
        - do: Выбрать авиакомпанию “S7 Airlines”
        - assert: |
              В чек-боксе появилась галочка, фон чек-бокса стал жёлтым.
              Цвет кнопки фильтра изменился на тёмно-серый.
              Активировалась кнопка альянсов Oneworld.
              В блоке фильтров появилась красная кнопка “Сбросить”.
              В фильтре авиакомпаний синяя надпись Сбросить стала активна

              screen: https://jing.yandex-team.ru/files/gouken67/aviacompany_1.png
        - assert: |
              В выдаче остались только предложения где все сегменты перелёта
              выполняет авиакомпания “S7 Airlines
        - do: Выбрать авиакомпанию “Аэрофлот”
        - assert: В чек-боксе появилась галочка, фон чек-бокса стал жёлтым.
        - assert: |
              В выдаче остались только предложения где все сегменты перелёта
              выполняет авиакомпания “S7 Airlines” или “Аэрофлот”, а так же смежные
              рейсы где перелёт осуществляют эти компании
        - do: |
              Снова открыть фильтр авиакомпаний
              Установить чекбокс Комбинации авиакомпаний
        - assert: |
              Выдача обновилась. Теперь в ней присутствуют варианты от S7, Аэрофлота и смежные рейсы с участием других компаний, где как минимум один перелёт выполняется S7 или Аэрофлотом.
        - do: |
              Снова открыть фильтр авиакомпаний
              Навести курсор на цену напротив S7
              Кликнуть по появившейся надписи Только
        - assert: |
              Выдача обновилась.
              Остались только варианты от S7, либо смежные рейсы
              Чекбокс с Аэрофлота снят
        - do: |
              Снова открыть фильтр авиакомпаний
              Кликнуть по синей надписи Сбросить
        - assert: Значение фильтра сбросилось. Выдача содержит варианты не только от S7

files:
    - tests/desktop/avia/serp/serp-filtering-aviacompany.hermione.ts

tags: smoke

Сервис: Авиа
Страница: Выдача
Функциональность: Фильтры и сортировки
Устройство:
    - Десктоп
Окружение:
    - Testing
    - Production
Тестирование асессорами: Да
feature: Отели
type: Поиск отелей
description: ''
specs:
  Фильтры на странице поиска отелей:
    - do: >-
        Перейти на страницу поиска отелей с любыми датами и кол-вом гостей в
        Москве (но 2 ночами минимум) (geoid=213)
    - assert: >-
        * Открылась страница поиска отелей

        * В выдаче есть карточки с отелями

        * Вверху под хедером есть строка с быстрым фильтром и кнопкой
        "Все фильтры" (в тачах иконкой)
    - do: >-
        В быстрых фильтрах нажать на "Кешбэк плюса" (в тачах вместо названия иконка плюса)
    - assert: >-
        - При нажатии на фильтр он подсвечивается желтым

        - На время загрузки отображаются скелетоны -
        https://jing.yandex-team.ru/files/rifat-k/2019-12-18_19-38-46.png

        - По завершению скелетоны заменяются карточками

    - do: Справа от быстрых фильтров попередвигать значения бегунков цены
    - assert: >-
        При изменении минимального и максимального значения выдача на странице
        соответственно меняется.

        Если в карточке указано несколько цен от партнеров, то при изменении
        фильтра, в карточке остаются только предложения, удовлетворяющие рамкам
        фильтра
    - do: |-
        Вернуть бегунки цены в изначальное положение
        Нажать на кнопку “Все фильтры”
    - assert: >-
        * Раскрылась панель со списком фильтров

        * Разделы в фильтрах
            * Звездность
            * Рейтинг
            * Опции
            * Удобства
            * Питание
            * Тип размещения
            * До центра
            * Рядом
            * Партнёры **(только на тестовом домене)**

        * В каждом разделе есть варианты с чекбоксами или радиобаттонами

        * В разделе Питание активированы чекбоксы Оплата на Я.Путешествиях

        * В правом нижнем углу отображены кнопки "Сбросить фильтры" и "Искать
        цены в Y отелях", где Y - количество отелей в выдаче

        * Кнопка сброса фильтров активна
    - do: В разделе питания активировать чекбокс "Завтрак"
    - assert: |-
        ![image](https://jing.yandex-team.ru/files/gouken67/travel_622.png)
        * На кнопке “Искать цены в Y отелях” изменилась цифра
        * Кнопка Сбросить фильтры стала активной
    - do: Нажать на кнопку "Искать цены в Y отелях"
    - assert: |-
        * Панель с фильтрами скрылась
        * На экране отобразились скелетоны с картой
        * После отобразилась выдача с карточками отелей
        * В каждой карточке есть информация про завтрак
    - do: Перейти на следующую страницу по кнопке "Далее"
    - assert: >-
        * На экране отобразился лоадер загрузки

        * После отобразился перечень с карточками отелей

        * Список отелей не совпадает со списком на первой странице

        * В каждой карточке есть оффер от яндекса (под ценой), бэйдж акции МИР и
        инфа про завтрак
    - do: >-
        Нажать на кнопку Все фильтры и в появившемся окне нажать на активную
        кнопку Сбросить фильтры
    - assert: >-
        - 1-2 секунды форма фильтров некликабельна

        - Далее форма активна, все ранее выделенные фильтры сняты

        - На кнопке "Все фильтры" пропал счетчик

        - В кнопка "Искать цены в Y отелях" цифра становится исходной и равна
        максимальному количеству отелей на данной выдаче
    - do: Нажать на кнопку Искать цены в Y отелях
    - assert: >-
        - На экране отобразилась страница поиска отеля

        - Вверху быстрые фильтры не активированы, кнопка Все фильтры без цифр

        - Под быстрыми фильтрами есть надпись "Нашлось Y отелей", где Y
        соответствует значению на кнопке выше
    - do: Вновь нажать на Все фильтры
    - assert: |-
        - Открылось окно фильтров
        - Все чекбоксы и радиобатоны пустые

Tag:
    - Smoke
    - automation (in progress)
Функциональность: Бронирование отелей
Устройство: Десктоп
Страница: Выдача
Сервис: Отели
Тестирование асессорами: Да
Окружение: Testing

Автор: iliasova
feature: Авиабилеты
type: Выдача
description: "Авиа: Як (пустой поиск)"

specs:
    Як (пустой поиск):
        - do: Выполнить поиск авиабилетов по направлению Ухта - Капо-Ватикано, через месяц для одного пассажира эконом класса. (Если по направлению указанному в кейсе есть билеты на выдаче, то подобрать направление по которому нет предложений.(Выбирать город без аэропорта, например, Шаля - Москва, Ухта - Канаш)).
        - assert: Выдача - нет вариантов. Вместо офферов - текст "Нет вариантов. Мы не нашли билетов на это направление. Давайте поищем куда-нибудь еще!"

files:
    - tests/common/avia/serp/serp-no-variants.hermione.ts

tags: smoke

Сервис: Авиа
Страница: Выдача
Функциональность:
    - Поиск, общий вид выдачи
    - Як
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
    - Production
feature: Авиабилеты
type: Выдача
description: "Авиа: пагинация"

specs:
    Пагинация:
        - do: выполнить поиск на популярное направление туда- обратно
        - assert: открылась выдача, соответствующая условиям поиска
        - do: проскроллить выдачу до подвала
        - assert: подгрузилась следующая пачка офферов, соответствующая условиям поиска

files:
    - tests/common/avia/serp/serp-pagination.hermione.ts

tags: smoke

Сервис: Авиа
Страница: Выдача
Функциональность: Содержание выдачи
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
feature: Авиабилеты
type: Выдача
description: ''
specs:
    'Авиа: Поиск город_не_рф-город_не_рф бизнес':
        - do: 'Произвести поиск не_рф-не_рф туда-обратно, 1 пассажир, бизнес.'
        - assert: |-
              |
              открылась выдача
              выдача соответствует параметрам поиска
        - do: Кликнуть по первому сниппету
        - assert: |-
              открылась страница покупки
              есть два заголовка город1-город2 и город2-город1,
              под ними есть даты вылета
              есть надпись "1 пассажир бизнес-класс"
              есть хотя бы одна кнопка перехода к партнеру
        - do: перейти по кнопке купить у любого партнера(no_autotest)
        - assert: >-
              в новой вкладке открылась страница партнера, параметры поиска
              соответствуют выбранным на сервисе(no_autotest)

files:
    - tests/common/avia/serp/serp-search-business.hermione.ts

Функциональность: Инфа на покупке
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
    - Testing
    - Production
Tag:
    - Smoke
    - Blocker
Автор: tcheremnykh
feature: Авиабилеты
type: Выдача
description: >-
    Если вместо выдачи показывается як с картой, попробовать поиск на другие даты
    (близкие, дальние, в одну сторону)

    Также можно попробовать сменить направление, указав другие аэропорты в форме
    поиска (Шереметьево - Кольцово)
specs:
    'Авиа: Поиск аэропорт-аэропорт туда':
        - do: >-
              Произвести поиск аэропорт-аэропорт (например, Домодедово-Хитроу), 1
              взрослый пассажир, эконом.
        - assert: |-
              |
              открылась выдача
              выдача соответствует параметрам поиска
        - do: Кликнуть по первому сниппету
        - assert: |-
              открылась страница покупки
              есть заголовок город1-город2
              есть дата вылета
              есть надпись "1 пассажир эконом-класс"
              есть хотя бы одна кнопка перехода к партнеру
        - do: перейти по кнопке купить у любого партнера(no_autotest)
        - assert: >-
              в новой вкладке открылась страница партнера, параметры поиска
              соответствуют выбранным на сервисе(no_autotest)

files:
    - tests/common/avia/serp/serp-search-by-airports.hermione.ts

tags: smoke
Функциональность: Инфа на покупке
Устройство:
    - Десктоп
    - Тач
Страница: Выдача
Сервис: Авиа
Окружение:
    - Testing
    - Production
feature: Авиабилеты
type: Выдача
description: "Авиа: Поиск из города в страну"

specs:
    Поиск из города в страну:
        - do: открыть главную страницу путешествий, вкладка Авиабилеты
        - do: |
              Заполнить форму поиска билетов
              Откуда: Москва
              Куда: США
              Туда: 5 число следующего месяца, дату обратно не ставить.
              Пассажиры: 2 взрослых 1 ребёнок 2 младенца
              Класс: Эконом
        - do: Нажать кнопку Найти
        - assert: |
              В поле Куда подставилось название страны
              Переходим на страницу Поиска до страны
              На странице есть: шапка со свернутой формой поиска, баннер с информацией об ограничениях, карточки с популярными городами выбранной страны, футер.
              Карточка состоит из фото города или заглушки (если фото нет), названия города и минимальной цены перелёта. Страница может содержать цены с приставкой "~" и спиннером. Если в город нет рейсов, цены не будет совсем.
              'Скриншот десктоп: https://jing.yandex-team.ru/files/kuklina/2022-04-14_16-06-58.png'
              'Скриншот тач: https://jing.yandex-team.ru/files/kuklina/2022-04-15_17-18-10.png'
        - do: Дождаться загрузки всех цен
        - do: Обновить страницу
        - assert: |
              Внешний вид страницы прежним.
              Баннер с ограничениями показывает нужную страну.
              Поиск цен заново не запускается.
        - do: Кликнуть на баннер с информацией об ограничениях
        - assert: Открывается попап-окно \ шторка с подробной информацией для страны назначения
        - do: Закрыть попап \ шторку с ограничениями.
        - do: Запомнить цену на любой карточке города, кликнуть по этой карточке города.
        - assert: |
              Открывается выдача поиска в указанный город.
              Город "Откуда", дата, количество пассажиров и класс обслуживания соответстуют запросу из поиска до страны.
              Сама низкая цена соответствует цене, которая была указана на карточке города.

files:
    - tests/common/avia/serp/serp-search-to-country.hermione.ts

tags: smoke

Сервис: Авиа
Страница: Главная
Функциональность: Форма поиска
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
    - Production
feature: Авиабилеты
type: Выдача
description: ''
specs:
  'Авиа: Поиск город_рф-город_рф на двоих туда-обратно':
    - do: 'Произвести поиск рф-рф туда-обратно, 2 взрослых пассажира, эконом.'
    - assert: |-
        |
        открылась выдача
        выдача соответствует параметрам поиска
    - do: Кликнуть по первому сниппету
    - assert: |-
        |
        открылась страница покупки
        есть два заголовка город1-город2 и город2-город1,
        под ними есть даты вылета
        есть надпись "2 пассажира эконом-класс"
        есть хотя бы одна кнопка перехода к партнеру
    - do: перейти по кнопке купить у любого партнера(no_autotest)
    - assert: >-
        в новой вкладке открылась страница партнера, параметры поиска
        соответствуют выбранным на сервисе(no_autotest)

files:
    - tests/common/avia/serp/serp-search-two-passengers.hermione.ts

Функциональность: Инфа на покупке
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag:
  - Smoke
  - Blocker
Автор: tcheremnykh
feature: Авиабилеты
type: Выдача
description: ''
specs:
  Проверка сортировки по стоимости:
    - do: 'открыть главную страницу путешествий, вкладка Авиабилеты'
    - do: |-
        Заполнить форму поиска билетов
        Откуда: Москва
        Куда: Екатеринбург
        Туда: 5 число следующего месяца, дату обратно не ставить.
        Пассажиры: 2 взрослых
        Класс: Эконом
    - do: Нажать кнопку “Найти”
    - do: Открылась страница выдачи.
    - do: Нажать на кнопку с сортировками.
    - Assert:  >-
        'Блок раскрылся.
        Для десктопа: Выбранная сортировка "Сначала рекомендуемые" 
        выделена радиокнопкой.
        Для тача: Выбранная сортировка "Сначала рекомендуемые"
        выделена желтым фоном. Слева отображается кнопка порядка сортировки. На
        кнопке отображается выбранный порядок.
        
        (Если поменять сортировку, то при следующих заходах на выдачу будет
        отображаться ранее выбранная сортировка, а не по умолчанию.)
    - do: 'Для десктопа: Выбрать сортировку “Сначала дешевые”. Повторно кликнуть по кнопке сортировок.'
    - do: 'Для тача: Выбрать сортировку “По цене”, порядок “По возрастанию”'
    - Assert: >-
        'Блок сортировок свернулся.
        Для десктопа: Кнопка сортировок стала темно-серой
        Для тача: На кнопке сортировок указано “По цене”'
    - do: Нажать на кнопку с сортировками
    - do: >-
        Блок развернулся. Выделение у прежнего пункта пропало и появилось у пункта “Сначала дешевые” (для десктопа) или “По цене” (для тача).
    - do: >-
        Варианты отсортированы по стоимости от меньшего к большему. Если
        цена совпадает, то выше вариант с наименьшим временем вылета, если время
        совпадает, то выше вариант с наименьшим временем в пути.
    - do: 'Для тача: Поменять порядок на “По убыванию”'
    - assert: >-
        'Для тача: Варианты отсортированы по стоимости от большего к меньшему.
        Блока интересных нет.'
files:
    - tests/common/avia/serp/serp-sortByPrice.hermione.ts
Функциональность: Фильтры и сортировки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
tlds: ru
Сервис: Авиа
Тестирование асессорами: Да
Окружение:
  - Testing
  - Production
Tag: Smoke
feature: Отели
type: Поиск отелей
description: Общий вид страницы поиска отелей

specs:
    Общий вид страницы поиска отелей:
        - do: Перейти на страницу поиска отелей с параметрами
              | регион - Екатеринбург(geoId=54)
              | дата заезда - завтрашний день
              | дата выезда - через 3 дня
              | количество взрослых - 1
              | количество детей - 1 (3 года)
        - assert: Во время поиска отображаются скелетоны
        - do: Дождаться завершения поиска.
        - assert: На уровне хедера есть форма поиска отелей
        - assert: Название города, даты и кол-во гостей совпадают с выбранными на 1м шаге
        - assert: Под шапкой присутствует строка поиска, фильтры и кнопка Все фильтры
        - assert: Над карточками есть надпись с количеством найденных отелей
        - assert: Город, даты заезда и выезда, количество гостей над карточками совпадают с запросом
        - assert:
              В урле есть параметры adults, childrenAges, checkinDate, checkoutDate, bbox, geoid, navigationToken
              | значение adults=1
              | childrenAges=3
              | checinDate и checkoutDate соответствуют датам, выбранным на первом шаге
              | geoid=54
        - assert: Справа находится карта Екатеринбурга, отображены пины с ценами, выше кнопка Развернуть карту
        - assert: Слева отображены предложения отелей, при общем количестве отелей >10 - 10 карточек, при меньшем - сколько найдено
        - assert: На карточке указано “цена за 2 ночи”
        - assert: Внизу страницы есть кнопки Назад и Далее. По-умолчанию кнопка Назад задизейблена, кнопка Далее кликабельна, если в заголовке возле дат количество отелей больше 10

files:
    - tests/desktop/hotels/serp/serp-view.hermione.ts

tags: smoke

Сервис: Отели
Страница: Выдача
Автор: iliasova
Устройство:
    - Десктоп
Функциональность: Поиск отелей
Окружение:
    - Testing
Tag: automation (iliasova)
Тестирование асессорами: Да
feature: Авиабилеты
type: Выдача
description: "Авиа: Общий вид выдачи в таче"

specs:
    Общий вид выдачи в таче:
        - do: |
              Зайти на главную
              На вкладке авиа ввести в поля
              откуда - Екатеринбург
              куда - Москва
              туда - завтра
              обратно не заполняем
              Кликнуть "Найти"
        - assert: |
                  Произошел переход на страницу выдачи
                  В шапке лого Путешествий и бургер для разворачивания меню (если пользователь не залогинен - внутри бургерного меню будет кнопка Войти, если залогинен - там будет его логин и аватар). Также сердечко (для избранных отелей)
                  Ниже краткая форма поиска, все данные соответствуют запросу
                  Ниже блок фильтров: Без пересадок, С багажом, кнопка для раскрытия всех фильтров
                  Ниже блок с сортировками
                  Под ним отображаются результаты выдачи
                  В выдаче есть блок Динамики и подписок (показывается в начале выдачи, перед ним может быть до 4х сниппетов с рекомендованными рейсами)
        - do: |
              Проскроллить до скелетона блока кросс-сейла под блоком динамики
              Подождать загрузки карты
        - assert: |
                  Отображается карта с отелями
                  На карте отображаются маркеры отелей
        - assert: |
                  Каждый блок с рейсом содержит:
                  * логотип (на тестовом стенде может отсутствовать, считаем нормой)
                  * время отправления
                  * время прилета
                  * время в пути
                  * информация о багаже и ручной клади в виде иконок
                  * жёлтая кнопка с ценой билета и сайтом партнёра под ней
                  * различные признаки (Лучшая цена, продает авиакомпания, и др.) - не во всех блоках; только в тех, к которым это относится
        - do: Поскролллить выдачу вниз
        - assert: По мере скоролла подгружаются новые сниппеты

files:
    - tests/touch/avia/serp/serp-view.hermione.ts

tags: smoke
Сервис: Авиа
Страница: Главная
Функциональность: Форма поиска
Устройство:
    - Тач
Окружение:
    - Testing
    - Production
Тестирование асессорами: Да
feature: Отели
type: Поиск отелей

specs:
    Общий вид страницы поиска отелей. Тач.:
        - do: Перейти на страницу поиска отелей с любым кол-вом гостей, датами заезда и выезда в городе Екатеринбург
        - assert: Откроется страница поиска отелей
        - assert: Под шапкой присутствует строка поиска, в которой указан город, даты заезду-выезда и количество гостей - данные совпадают с запросом
        - assert: Под строкой поиска есть переключатель Список/Карта и кнопка фильтров. https://jing.yandex-team.ru/files/atooxa/1.png
        - do: Нажать на кнопку Карта вверху страницы
        - assert: Переключатель Список/Карта, кнопка фильтра и её состояние остались на месте. Данные не изменились
        - assert: Кнопка Список перестала быть желтой, кнопка Карта окрасилась в желтый
        - assert: На странице пропадают карточки отелей и вместо них отображается карта
        - assert: Кнопки +/- и текущей геопозиции на карте кликабельны
        - assert: Карту можно перемещать пальцем и менять масштаб щипками 2-х пальцев (no_autotest)
        - assert: На карте есть галочка Искать при изменении карты. https://jing.yandex-team.ru/files/atooxa/2.png

files:
    - tests/touch/hotels/serp/serp-view.hermione.ts

tags: smoke

Сервис: Отели
Страница: Выдача
Устройство:
    - Тач
Тестирование асессорами: Да
feature: Авиабилеты
type: Выдача
description: Отображение основных элементов поисковой выдачи

specs:
    Внешний вид поисковой выдачи:
        - do: Зайти на главную страницу, выбрать вкладку авиа
        - do: Выполнить поиск авиабилетов по направлению Екатеринбург - Москва на завтра
        - assert: Произошел переход на страницу выдачи
        - assert: 'На странице вверху есть блок фильтров: Сортировка, Без пересадок, С багажом, Пересадки, Время, Аэропорты, Авиакомпании, Партнеры(только тестинг)'
        - assert: Под фильтрами горизонтальный баннер с акциями или рекламой
        - assert: Под ним отображаются результаты выдачи
        - assert: Справа от выдачи расположен блок с рекламой (только десктоп)
        - assert: После нескольких предложенных вариантов отображается блок Динамики и подписок
        - do: Проскроллить до скелетона блока кросс-сейла под блоком динамики
        - do: Подождать загрузки карты
        - assert: Отображается карта с отелями
        - assert: На карте отображается карточка отеля
        - assert: |
              Каждый блок выдачи содержит:
              * название авиакомпании
              * логотип (!!из-за отсутствия лого кейс не фейлите)
              * время отправления
              * время прилета
              * время в пути
              * названия аэропортов отправления/прибытия
              * цена билета в кнопке
              * наличие или отсутствие багажа
              * кнопка "Купить"

files:
    - tests/desktop/avia/serp/serp-view.hermione.ts

tags: smoke

Сервис: Авиа
Страница: Выдача
Функциональность: поиск
Устройство:
    - Десктоп
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Выдача
description: Проверка содержания на поисковой выдаче

specs:
    Поиск на дату, когда нет поездов:
        - do: Перейти на выдачу поездов на направление Екатеринбург-Южно-Сахалинск в ближайшую среду
        - assert: |
              На странице есть сообщение:
              "Нет рейсов из Екатеринбурга в Южно-Сахалинск
               Мы не нашли билетов на это направление.
               Давайте поищем куда-нибудь еще!."
        - assert: На странице нет фильтров и сортировок

files:
    - tests/common/trains/serp/serp.content.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Устройство:
    - Десктоп
    - Тач
Функциональность: Содержание выдачи
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Главная
description: переход на поиск поездов с формы поиска, разный формат даты

specs:
    Переход на поиск поездов с формы поиска, разный формат даты - дата из датапикера:
        - do: Зайти на главную страницу поездов
        - do: Заполнить поля "Откуда" и "Куда" любым направлением
        - do: Заполнить поле "Когда" произвольной датой с помощью датапикера, например +3 дня от текущего
        - do: Нажать "Найти"
        - assert: Осуществился переход на поисковую выдачу с соответствующим запросом

files:
    - tests/common/trains/serp/serp.datepicker.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Функциональность: форма поиска
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Выдача
description: Проверка формы поиска на поисковой выдаче

specs:
    Очистка саджеста в поисковой форме:
        - do: Перейти на выдачу поездов на направление Москва-Санкт-Петербург завтра
        - do: Кликнуть на крестик очистки в поле "Откуда" в форме поиска
        - assert: Поле "Откуда" пусто

files:
    - tests/desktop/trains/serp/serp.searchForm.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Устройство:
    - Десктоп
Функциональность: Форма поиска
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Выдача
description: Проверка формы поиска на поисковой выдаче

specs:
    Проверка заполения поисковой формы:
        - do: Перейти на выдачу поездов по направлению Москва-Санкт-Петербург на дату через неделю
        - assert: Поле "Откуда", "Куда" и "Когда" указаны верно

    Проверка списка подсказок в саджесте в поисковой форме:
        - do: Перейти на выдачу поездов по направлению Москва-Санкт-Петербург на дату через неделю
        - do: Кликнуть на крестик очистки в поле "Откуда"
        - do: Ввести "Сама" в поле "Откуда"
        - assert: В списке отображаются только станции, название которых или область начинается на "Сама"

    Выбор из списка саджестов в форме поиска:
        - do: Перейти на выдачу поездов по направлению Москва-Санкт-Петербург на дату через неделю
        - do: Кликнуть на крестик очистки в поле "Откуда"
        - do: Ввести "Саратов" в поле "Откуда"
        - assert: Поле "Откуда" заполнено значением "Саратов"

files:
    - tests/common/trains/serp/serp.searchForm.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Устройство:
    - Десктоп
    - Тач
Функциональность: Форма поиска
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Выдача
description: Проверка поисковой выдачи и её элементов

specs:
    Сортировка по цене:
        - do: Открыть выдачу Москва - Санкт-Петербург на завтра
        - do: Отсортировать выдачу по цене
        - assert: Сниппеты на выдаче отсортировались от наименьшей стоимости билета к наибольшей
        - assert: Изменился урл страницы добавилось sortBy=price
        - do: Нажать на ссылку “сначала дешевле”
        - assert: Изменился урл страницы добавилось sortBy=-price
        - assert: Сниппеты на выдаче отсортировались от наибольшей стоимости билета к наименьшей


files:
    - tests/desktop/trains/serp/serp.hermione.ts

tags: smoke

# meta
Сервис: ЖД
feature: Отели
type: Поиск отелей
description: Перепоиск отелей через шапку на странице поиска отелей

specs:
    Перепоиск отелей через поисковую форму:
        - do: Перейти на страницу поиска отелей с параметрами
            | регион - Екатеринбург(geoId=54)
            | дата заезда - завтрашний день
            | дата выезда - послезавтра
            | количество взрослых - 2
        - do: Дождаться завершения поиска.
        - assert: Произошел успешный поиск, параметры в шапке и под фильтрами совпадают с поисковыми параметрами.
        - do: Кликнуть по области шапки поиска.
        - do: Открылась форма поиска.
        - do: Заполнить форму поиска параметрами
            | регион - Екатеринбург(geoId=54)
            | дата заезда - первое число следующего месяца
            | дата выезда - через три дня после даты заезда
            | количество взрослых - 1
            | количество детей - 2 (2 года и 5 лет)
        - do: Нажать кнопку "Найти".
        - do: Начался новый поиск.
        - do: Дождаться завершения поиска.
        - assert: Произошел успешный поиск, параметры в шапке и под фильтрами совпадают с поисковыми параметрами.

files:
    - tests/desktop/hotels/serp/serp.hermione.ts

tags: smoke

Сервис: Отели
Страница: Выдача
Автор: iliasova
Устройство:
    - Десктоп
Функциональность: Бронирование отелей
Окружение:
    - Testing
Tag: automation (iliasova)
Тестирование асессорами: Да
feature: Поезда
type: Выдача
description: Общий вид сниппетов в таче

specs:
    Общий вид сниппетов в таче - шапка:
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц
        - assert: |
            Открылась страница поиска
            Вверху страницы в шапке есть логотипы Яндекса и Путешествий, иконка плюса, избранного и бургер
            Ниже есть краткая форма поиска
            В ней указано Москва - Санкт-Петербург, дата поиска (соответствует той, на какую искали), есть иконка "лупа" для запуска поиска
            Справа от краткой формы поиска отображается кнопка раскрытия фильтров
            Ниже расположены сниппеты

    Общий вид сниппетов в таче - время, футер:
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц
        - assert: |
            Страница скроллится плавно, без рывков (no_autotest)
            Для первого сниппета над временем указана дата отправления и прибытия
            Для последующих сниппетов дат нет (дата есть, только если она не совпадает с датой, указанной для первого сниппета)
            Если есть рейсы с отправлением в пределах 4 часов от даты поиска, они отображаются под линией перехода суток (отметка с со следующей датой)
            Внизу страницы закреплена кнопка Фильтры, при скролле кнопка остается внизу экрана
            Внизу под последним сниппетом есть блок с информацией - ссылка на рейсы обратно на ту же дату, текст "Стоимость билетов указана с учетом комиссии Яндекса"
            Ниже есть блок с хлебными крошками
            Ниже есть футер со ссылками

    Общий вид сниппетов в таче - сегмент подробно:
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц
        - assert: |
            На сниппете вверху есть номер поезда. Значок ЭР (электронная регистрация), если доступна. Значок ДЦ (динамическое ценообразование) - может быть не на всех сниппетах
            В правом верхнем углу значок ?
            Время отправления, приписка местное, вокзал отправления
            Время прибытия, время по мск, вокзал прибытия
            Время в пути
            Варианты размещения, количество мест и их стоимость с припиской "от" (например, плацкарт 212, от 2329 р)
            Кнопка "Выбрать место" (может не быть для некоторых сниппетов)
            Название поезда, если есть (например фирменный "Тюмень", двухэтажный и т.п. - https://jing.yandex-team.ru/files/shenfeld/2019-09-16_15.46.50-xkmkd.png)

    Общий вид сниппетов в таче - редиректы:
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц
        - do: Тапнуть по кнопке "Выбрать место" на любом сниппете
        - assert: Открывается страница выбора мест
        - do: Тапнуть на этап "Выбор поезда"
        - assert: Открывается выдача со сниппетами

    Общий вид сниппетов в таче - отельный кросс-сейл:
        - do: |
            **Не для асессоров**
            Залипнуть в эксп KOMOD_trains_search_hotels_cross_sale:enabled
            Открыть выдачу Москва - Санкт-Петербург через месяц
            Дождаться загрузки сниппетов
            Проскроллить до скелетона кросс-сейла через 5 сниппетов
            Подождать загрузки карты
        - assert: |
            Отображается карта с отелями
            На карте отображаются маркеры отелей

files:
    - tests/touch/trains/serp/serpGeneralLook.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Устройство:
    - Тач
Функциональность: Форма поиска
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Выдача
description: Общий вид выдачи в десктопе

specs:
    Общий вид выдачи в десктопе - шапка:
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц
        - assert: |
              Открылась страница поиска
              Вверху страницы в шапке есть логотипы Яндекса и Путешествий, ссылки на сервисы (Авиа, ЖД, Отели, Автобусы), иконка ЛК и кнопка Войти
              Активная ссылка (жд) выделена черным, остальные ссылки на сервисы серые
              В форме поиска указано Москва - Санкт-Петербург, дата поиска (соответствует той, на какую искали)
              Над выдачей есть блок с фильтрами
              Ниже есть заголовок "Купить билеты на поезд из Москвы в Санкт-Петербург от 827  ₽" (цена указана минимальная из всех цен на выдаче)
              Ниже сортировки

    Общий вид выдачи в десктопе - время, футер:
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц
        - assert: |
              Страница скроллится плавно, без рывков (no_autotest)
              Для первого сниппета над временем указана дата отправления и прибытия
              Для последующих сниппетов дат нет (дата есть, только если она не совпадает с датой, указанной для первого сниппета)
              Если есть рейсы с отправлением в пределах 4 часов от даты поиска, они отображаются под датой перехода суток: - https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.29.38-g8413.png
              Внизу под последним сниппетом есть блок с информацией - ссылка на рейсы обратно на ту же дату, текст “Стоимость билетов указана с учетом комиссии Яндекса”
              Ниже есть блок с хлебными крошками “ЖД билеты - Купить билеты на поезда Москва — Санкт-Петербург - На 'выбранная дата'”
              Ниже есть футер со ссылками

    Общий вид выдачи в десктопе - сегмент подробно:
        - do: Открыть выдачу Москва - Санкт-Петербург через месяц
        - assert: |
              На сниппете есть номер поезда, станции отправления/прибытия
              Указан перевозчик (например, РЖД/ФПК)
              Время отправления и прибытия
              Время в пути
              Варианты размещения, количество мест и их стоимость с припиской “от” (например, плацкарт 212, от 2329 р)
              Кнопка “Выбрать место” (может не быть для некоторых сниппетов)(также может быть кнопка "Купить на УФС" или приписка Места закончились)
              Название поезда, если есть (например фирменный “Тюмень”, двухэтажный и т.п. - https://jing.yandex-team.ru/files/shenfeld/2020-12-03_13.36.00-1c8i2.png)

    Общий вид выдачи в десктопе - переход на выбор мест:
        - do: |
              Открыть выдачу Москва - Санкт-Петербург через месяц
              Кликнуть по кнопке Выбрать место для любого сниппета
        - assert: Произошел переход на страницу выбора мест

    Общий вид выдачи в десктопе - отельный кросс-сейл:
        - do: |
              **Не для асессоров**
              Залипнуть в эксп KOMOD_trains_search_hotels_cross_sale:enabled
              Открыть выдачу Москва - Санкт-Петербург через месяц
              Дождаться загрузки сниппетов
              Проскроллить до скелетона кросс-сейла через 5 сниппетов
              Подождать загрузки карты
        - assert: |
              Отображается карта с отелями
              На карте отображается карточка отеля

files:
    - tests/desktop/trains/serp/serpGeneralLook.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Устройство:
    - Десктоп
Функциональность: Форма поиска
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: Отели
type: Поиск отелей

specs:
    Пагинация:
        - do: выполнить поиск в крупном населенном пункте
        - assert: открылась выдача, соответствующая условиям поиска
        - do: на тачах проскроллить выдачу до подвала
        - assert: подгрузилась следующая пачка офферов
        - do: на десктопе нажать кнопку "Далее"
        - assert: |
              подгрузилась следующая пачка офферов,
              соответствующая условиям поиска(no_autotest)
        - do: проскроллить выдачу до подвала, нажать кнопку "Назад"
        - assert: |
              открылась первая страница выдачи,
              офферы соответствуют условиям поиска(no_autotest)

files:
    - tests/common/hotels/serp/serpPagination.hermione.ts

tags: smoke

Сервис: Отели
Страница: Выдача
Устройство:
    - Десктоп
    - Тач
Функциональность: Содержание выдачи
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Выдача
description: Проверка вариантов с пересадками на странице поиска

specs:
    Поезда / Выдача Проверка вариантов с пересадками:
        - do: Перейти на страницу поиска ЖД c параметрами
              | Пункт отправления - Москва
              | Пункт прибытия - Тихвин
              | Дата - любой день следующей недели
        - assert: Открылась страница поиска, отображаются скелетоны вместо вариантов.
        - do: Дождаться завершения поллинга.
        - assert: Присутствует заголовок с пунктами отправления-прибытия.
        - assert: Отображается информационный баннер, указывающий на выдачу с вариантами только с пересадкими.
        - assert: Все варианты на странице с пересадками.
        - assert: В верхней части варианта отображается информация о маршруте и пересадке
              | Время отправления и прибытия
              | Пункты отправления и прибытия
              | Блок с информацией о пересадке
              | Блок с информацией о длительности поездки
        - do: Кликнуть на кнопку "Маршрут и цены".
        - assert: Отображается полная информация о маршруте следования и пункт пересадки.
        - assert: Каждый сегмент содержит информацию о конкретном участке маршрута
              | Время отправления и прибытия
              | Пункты отправления и прибытия
              | Блок с информацией о длительности поездки
              | Информация о номере поезда и перевозчике
files:
    - tests/common/trains/serp/serpWithTransfersOnly.hermione.ts

tags: smoke

# meta
Сервис: ЖД
Устройство:
    - Десктоп
    - Тач
Функциональность: ЖД+ЖД Пересадки
Окружение:
    - Production
    - Testing
Тестирование асессорами: Да
feature: ЖД
type: Выбор мест
description: |
    Перейти на вкладку ЖД билеты
    Перейти на вкладку ЖД
    Найти такой поезд, чтобы в каждом из вагонов одного типа осталось <4 мест ( Например тип Плацкарт и во всех вагонах меньше 4 мест)
    Для этого нужно поискать на ближайшие даты поезд, где в целом осталось не много мест (посмотреть на выдаче)
    Можно искать на выдачах Москва - Санкт-Петербург, Москва - Екатеринбург или любых других

    Если не получается найти, можно взять поезд с наименьшим количеством свободных мест и в соседних вкладках забронировать лишние места в вагонах.
specs:
  'Скрывать табики при выборе большего кол-во билетов чем есть мест в этом типе':
      - do: Перейти на страницу выбора мест для поезда из подготовки
      - do: Кликнуть по типу вагонов в котором осталось меньше 4 свободных мест для всех вагонов в типе. (Например СВ)
      - assert: Выбранный тип обвелся в желтую рамку
      - do: В блоке "укажите количество биллетов" выставить  4 взрослых билета
      - assert: |
            * Тип вагонов в котором во всех вагонах меньше 4 мест пропал
            * Остались только типы вагонов в которых есть вагоны с  нужным кол-во свободных мест или больше
            * Самый левый тип по умолчанию выбрался и обведен в желтую рамку
      - do: В блоке "укажите количество биллетов" выставить  значение  0 биллетов.
      - assert: |
            * Появился ранее спрятаный тип вагонов
            * Он автоматически становится выбраным и обведен в желтую рамку.
      - do: |
            В блоке "укажите количество биллетов" выставить
            1 взрослых
            1 детский без места билет
      - assert: Выбраный тип НЕ пропал
      - do: Выбрать место на схеме, нажать "Указать пассажиров"

manual: true
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: Автобусы
type: Поиск
description: Сниппеты

specs:
    Сниппеты:
        - do: |
            Сформировать поиск по направлению "Москва - Санкт-Петербург" на завтра
            Если рейсов нет - выбрать одно из https://testing.backend.internal.bus.yandex.net/api/popular
        - assert: |
            - Открылась выдача, поиск произошел на дату "Завтра"
            - Каждый сниппет содержит информацию о
            - пунктах отправления и прибытия,
            - времени отправления и прибытия, (время прибытия может быть "Неизвестно")
            - времени в пути, (может отсутствовать при неизвестном времени прибытия")
            - названии перевозчика,
            - стоимости билета,
            - наличии мест.
            В правой части кнопка "Выбрать"
        - do: |
            Пункт отправления или прибытия может содержать координаты (а может не содержать), тогда: в дестопе он будет подсвечен синим шрифтом, в таче будет выводиться ссылка "Детали рейса" (no_autotest)
            Кликните на подсвеченный пункт, либо ссылку. (no_autotest)
            (если пунктов с координатами, подсвеченным синим нет, попробуйте другой поиск, например Москва-Бронницы, либо любой из описания кейса) (no_autotest)
        - assert: открылась модалка с картой (no_autotest)
        - do: |
            В таче - заголовок Адреса остановок, ниже есть название остановки, на карте отмечена точка расположения остановки есть кнопки изменения масштаба, ниже кнопка "Как добраться" (no_autotest)
            В десктопе: в заголовке модалки с картой название остановки, ниже ссылка "Построить маршрут до остановки", на карте кнопки изменения масштаба (no_autotest)
        - assert: |
            - все элементы работают (no_autotest)
            - по клику на ссылку "Построить маршрут до остановки", либо кнопку "Как добраться" открывается новое окно яндекс карт, в пункте "куда" подставлен адрес остановки, карта открыта на этой же области (no_autotest)
        - do: Проверить закрытие модалки. На десктопе - по крестику и по клику мимо, в таче - переходом назад по ссылке Назад, либо аппаратной кнопкой (no_autotest)
        - assert: модалка закрывается корректно (no_autotest)



files:
    - tests/common/buses/search/date/snippets-information.hermione.ts

tags: smoke

# meta
Сервис: Автобусы
Страница: Выдача
Функциональность: Поиск, общий вид выдачи
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
    - Production
Тестирование асессорами: Да
feature: Отели
type: Страница отеля
description: >-
  Залогиниться и быть на главной отеля Radisson Slavyanskaya Hotel & Business
  Center, Moscow 4*.

  Добавить параметр в URL - &srcParams=travel%3AenabledTestUgc%3Dtrue
specs:
  Страница отеля. Создание отзыва без комментария.:
    - do: В блоке отзывов кликнуть по любому кол-ву звезд.
    - assert: Открылось модальное окно с возможностью изменения звезд и написанием комментария
    - do: Изменить кол-во звезд
    - assert: Кол-во звезд изменяется (звезды окрашены желтым)
    - do: Кликнуть по кнопке "Отправить"
    - assert: Модальное окно с отзывом закрылось и появилось модальное окно с благодарностью.
    - do: Кликнуть по кнопке "Понятно"
    - assert: >-
        Модальное окно закрылось, наш отзыв опубликован.
        Кол-во звезд, которое мы указывали, совпадает с тем, что указано в опубликованном отзыве.
manual: true
Функциональность: Отзывы
Страница: Страница отеля
Сервис: Отели
Тестирование асессорами: Да
Автор: ivalor
Tag: Smoke
feature: Отели
type: Страница отеля
description: >-
  Если при открытии страницы отеля не будет найдено предложений от яндекса (с
  фотками и кнопками Забронировать) то поискать этот отель на другие даты
specs:
  Страница отеля. Клики на главной.:
    - do: |-
        Перейти на страницу отеля со следующими параметрами
        отель - novotel
        дата заезда - завтра
        дата выезда - послезавтра
        кол-во гостей - 1
    - assert: Открылась страница отеля
    - do: |-
        По очереди навести курсор на
        ссылку на выдачу (под баннером)
        ссылку "Показать на карте"
        кол-во отзывов
        раскрывашка "Все услуги"
        название отеля из блока похожих
        ссылка "Подробнее о номере"
        варианты сортировки отзывов
        имя юзера из отзывов
        ссылка "Еще отзывы"
    - assert: Курсор поменялся на указатель руку
    - assert: Ссылка стала красной
    - do: Кликнуть по ссылке на выдачу
    - assert: Произошел переход на выдачу соответствующего региона
    - do: Вернуться на страницу отеля
    - do: >-
        нажать на сердечко возле названия отеля (если оно красное, снять
        выделение кликом, а потом кликнуть снова)
    - assert: >-
        Знак сердечка окрасился в красный и появилось сообщение что отель
        добавлен в избранное
    - do: повторно нажать на сердечко
    - assert: >-
        Сердечко стало белым и появилось сообщение что отель убран из
        избранного.
    - do: нажать на ссылку "Показать на карте"
    - assert: открылось модальное окно с картой
    - assert: сниппет отеля отображается на карте
    - do: >-
        закрыть модальное окно крестиком или нажать на затемненную область за
        модальным окном.
    - assert: 'модальное окно закрылось, остались на странице отеля.'
    - do: нажать на кол-во отзывов справа от названия отеля
    - assert: произошел подскролл вниз страницы до блока отзывов.
    - do: нажать на выпадашку "Все услуги"
    - assert: 'выпадашка раскрылась, появились услуги отеля в несколько колонок'
    - do: нажать на выпадашку "Скрыть услуги"
    - assert: 'услуги скрылись, остались только топ фичи (которые были до раскрытия)'
    - assert: ссылка заменилась на "Все услуги"
    - do: нажать на карту.
    - assert: >-
        откроется модальное окно с картой и выбранный отель будет отмечен на
        карте.
    - do: >-
        закрыть модальное окно с картой крестиком или нажать на область за
        модальным окном.
    - assert: модальное окно закрылось и мы остались на странице отеля.
    - do: нажать на любое предложение в блоке "Похожие отели рядом"
    - assert: произошел переход на страницу выбранного отеля (в новой вкладке).
    - do: Вернуться на страницу отеля Novotel
    - do: в блоке номеров нажать "Подробнее о номере"
    - assert: >-
        открылось модальное окно с информацией о номере (название, тип кроватей,
        площадь, топ фичи и все фичи)
    - do: закрыть модальное окно крестиком или нажать за пределы модального окна
    - assert: 'модальное окно закрылось, мы оказались на странице отеля'
    - do: >-
        в блоке номеров у любого предложения кликнуть по иконке или тексту про
        плюс
        ![](https://jing.yandex-team.ru/files/iliasova/2021-08-19_17.00.18-mkb0a.png)
    - assert: открылся попап с информацией про кэшбек плюса
    - assert: в попапе есть ссылка с подробностями
    - do: кликнуть по ссылке в попапе
    - assert: произошел переход на страницу плюса
    - do: вернуться на страницу отеля
manual: true
Устройство:
  - Десктоп
Страница: Страница отеля
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - hotels-api
  - Smoke
Автор: iliasova
feature: Маркетинг
type: Блок
description: >-
 Быть на главной портала, быть незалогином.
 Блоки могут находиться в верхней части главной или в нижней, блоки могут отсутсвовать в шагах кейса.
 Блоки подпики имеют 2 вида (примерные): 
    1) Обычный - https://jing.yandex-team.ru/files/molox/ПОДПИСКА.png
    2) С промокодом - https://jing.yandex-team.ru/files/molox/ПОДПИСКАПРОМИК.png
specs:
  'Общий вид блоков подписки (Тач)':
    - do: >- 
        Кликнуть по "Отели" и найти на странице блок с подпиской
    - assert: >- 
        На странице есть блок с подпиской
        Поле с электронной почтой пустое
        Есть кнопка подписки
    - do: >-
        Кликнуть по "Ж/д" и найти на странице блок с подпиской
    - assert: >-
        На странице есть блок с подпиской
        Поле с электронной почтой пустое
        Есть кнопка подписки
    - do: >-
        Кликнуть по "Авиа" и найти на странице блок с подпиской
    - assert: >- 
        На странице есть блок с подпиской
        Поле с электронной почтой пустое
        Есть кнопка подписки
    - do: >-
        Кликнуть по "Автобусы" и найти на странице блок с подпиской
    - assert: >- 
        На странице есть блок с подпиской
        Поле с электронной почтой пустое
        Есть кнопка подписки
    - do: >-
        Кликнуть по "Отели"
        Выбрать в поиске - Москва, заезд 5 число след. месяца, выезд через 5 дней, 1 взрослый
        Кликнуть по кнопке поиска
    - assert: >- 
        Получили выдачу отелей,
        Блок подписки находится в конце выдачи или после 15 предложения
    - do: >-
        Вернуться на главную и выбрать "Ж/д"
        Откуда - "Санкт-Петербург", Куда - "Москва", Туда - через неделю и кликнуть по кнопке поиска
    - assert: >- 
        Получили выдачу "Ж/д",
        Блок подписки находится в конце выдачи или после 15 предложения
    - do: >-
        Вернуться на главную и выбрать "Авиа"
        Откуда - "Екатеринбург", Куда - "Москва", Туда - 5 число след. месяца и кликнуть по кнопке поиска
    - assert: >- 
        Получили выдачу "Авиа",
        Блок подписки находится в конце выдачи или после 15 предложения
    - do: >-
        Вернуться на главную и выбрать "Автобусы"
        Откуда - "Москва", Куда - "Воронеж", Когда - (поискать в календаре даты с суммой и выбрать их), произвести поиск
    - assert: >- 
        Получили выдачу "Автобусов",
        Блок подписки находится в конце выдачи или после 15 предложения
manual: true
Функциональность:
  - 'Блок на главной и выдаче'
Устройство:
  - Тач
Сервис: Маркетинг
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag:
feature: Маркетинг
type: Блок
description: >-
 Быть на главной портала, быть незалогином.
 Блоки могут находиться в верхней части главной или в нижней, блоки могут отсутсвовать в шагах кейса.
 Блоки подпики имеют 2 вида (примерные): 
    1) https://jing.yandex-team.ru/files/molox/блокбез%20промика.png
    2) https://jing.yandex-team.ru/files/molox/block-1.png
specs:
  'Общий вид блоков подписки (Десктоп)':
    - do: >- 
        Кликнуть по "Отели" и найти на странице блок с подпиской
    - assert: >- 
        На странице есть блок с подпиской
        Поле с электронной почтой пустое
        Есть кнопка подписки
    - do: >-
        Кликнуть по "Ж/д" и найти на странице блок с подпиской
    - assert: >-
        На странице есть блок с подпиской
        Поле с электронной почтой пустое
        Есть кнопка подписки
    - do: >-
        Кликнуть по "Авиа" и найти на странице блок с подпиской
    - assert: >- 
        На странице есть блок с подпиской
        Поле с электронной почтой пустое
        Есть кнопка подписки
    - do: >-
        Кликнуть по "Автобусы" и найти на странице блок с подпиской
    - assert: >- 
        На странице есть блок с подпиской
        Поле с электронной почтой пустое
        Есть кнопка подписки
    - do: >-
        Кликнуть по "Отели"
        Выбрать в поиске - Москва, заезд 5 число след. месяца, выезд через 5 дней, 1 взрослый
        Кликнуть по кнопке поиска
    - assert: >- 
        Получили выдачу отелей,
        Блок подписки находится в конце выдачи или после 15 предложения
    - do: >-
        Вернуться на главную и выбрать "Ж/д"
        Откуда - "Санкт-Петербург", Куда - "Москва", Туда - через неделю и кликнуть по кнопке поиска
    - assert: >- 
        Получили выдачу "Ж/д",
        Блок подписки находится в конце выдачи или после 15 предложения
    - do: >-
        Вернуться на главную и выбрать "Авиа"
        Откуда - "Екатеринбург", Куда - "Москва", Туда - 5 число след. месяца и кликнуть по кнопке поиска
    - assert: >- 
        Получили выдачу "Авиа",
        Блок подписки находится в конце выдачи или после 15 предложения
    - do: >-
        Вернуться на главную и выбрать "Автобусы"
        Откуда - "Москва", Куда - "Воронеж", Когда - (поискать в календаре даты с суммой и выбрать их), произвести поиск
    - assert: >- 
        Получили выдачу "Автобусов",
        Блок подписки находится в конце выдачи или после 15 предложения
manual: true
Функциональность:
  - 'Блок на главной и выдаче'
Устройство:
  - Десктоп
Сервис: Маркетинг
Тестирование асессорами: Нет
Окружение:
  - Production
  - Testing
Tag:
feature: Отели
type: Бронирование отелей

specs:
    Бронь в рассрочку (с промокодом):
        - condition: Быть залогиненным.
        - do: Перейти на страницу бронирования отеля c параметрами
              | бесплатная отмена
              | 1 ночь
              | 2 взрослых
        - assert: Открылась страница бронирования.
        - assert: В блоке корзинки со стоимостью есть чекбоксы для оплаты "Оплатить позже" и "полной оплаты".
        - assert: В чекбоксе "полной оплаты" цена совпадает с итоговой ценой "к оплате".
        - assert: В чекбоксе "Оплатить позже" есть указание, до какого числа и времени нужно внести доплату.
        - do: Выбрать чекбокс "Оплатить позже".
        - assert: Чекбокс рассрочки должен содержать текст "Оплатить позже"
        - assert: Чекбокс активировался.
        - assert: Итоговая цена "к оплате" равна сумме рассрочки.
        - do: В корзинке над рассрочками активировать чекбокс "У меня есть промокод" и ввести промокод "SUCCESS" и нажать "Применить".
        - assert: Чекбокс промокода и поле для ввода стали неактивными.
        - assert: По прежнему выбран чекбокс Оплатить позже
        - assert: Итоговая цена не должна измениться - 0 р
        - assert: В поле инфы о полной оплате (под итоговой суммой) цена уменьшилась на сумму промокода (200р).
        - do: Заполнить валидными данными гостей и контактную инфу и нажать "Забронировать".
        - assert: После прокрутки всех необходимых лоадеров произошел переход на HappyPage.
        - assert: В заголовке указано "Отель забронирован".
        - assert: Сумма доплаты и дата с временем на HappyPage совпадает с суммой и датами на бронировании.
        - assert: В верху страницы есть ссылка на страницу заказа для старта доплаты.
        - do: Перейти по ссылке на страницу заказа.
        - assert: Есть информация о сумме рассрочки и общей сумме заказа (с учетом скидки).
        - assert: Ниже указано, сколько необходимо доплатить, до какого числа и времени и есть кнопка "Доплатить".
        - assert: Все суммы и даты с временем совпадают с информацией на бронировании.
        - assert: Есть ссылка на фискальный чек.
        - do: Кликнуть на кнопку "Доплатить".
        - assert: Произошел переход на страницу старта доплаты.
        - assert: Отображается лоудер подготовки доплаты.
        - assert: Произошел переход на страницу оплаты.
        - assert: В заголовке отображается "Доплата".
        - assert: Цена доплаты на странице оплаты совпадает с ценой на странице бронирования.
        - do: Ввести данные карты и нажать "Оплатить".
        - assert: После прокрутки всех необходимых лоадеров произошел переход на HappyPage.
        - assert: В заголовке отображается "Отель оплачен полностью".
        - assert: Информация про внесении доплаты отсутствует.
        - do: Перейти по ссылке на страницу заказа.
        - assert: Есть 2 ссылки на фискальные чеки.
        - assert: Информация про внесении доплаты отсутствует.

files:
    - tests/common/hotels/book/deferredPayment/success-deferredPayment.hermione.ts

tags: smoke

Сервис: Отели
Страница: Бронирование
Автор: iliasova
Устройство:
    - Тач
    - Десктоп
Функциональность:
    - Рассрочки
    - Промокод
Окружение:
    - Testing
    - Production
Тестирование асессорами: Нет
feature: Отели
type: Бронирование отелей

specs:
    Успешное использование промокода:
        - condition: Быть залогиненым.
        - do: Перейти на страницу бронирования для любого отеля, на любые даты
        - assert: Открылась страница бронирования.
        - assert: В корзинке есть галка "У меня есть промокод", по умолчанию выключена. Поле инпут для промокода и кнопка "Применить" не показывается.
        - do: Включить галку "У меня есть промокод"
        - assert: Появилось Поле инпут для промокода и кнопка "Применить"
        - do: Запомнить итоговую сумму заказа
        - do: В инпут написать промокод "AUTOTEST_PROMOCODE_200", нажать применить
        - assert: Инпут, кнопка и галка задизейблились
        - assert: В блоке с промокодом появилась сумма скидки "− 200 ₽"
        - assert: Появилась ссылка "Отменить"
        - assert: Сумма заказа стала на 200р меньше, чем была до применения промокода
        - do: Заполнить информацию о гостях и контактную информацию любыми валидными данными.
        - do: Нажать Оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
        - assert: Открылась страница успешной брони happy page
        - do: Нажать на кнопку "Подробнее о заказе"
        - assert: Открылась страница заказа в личном кабинете
        - assert: Сумма заказа соответствует сумме со скидкой по промокоду
        - do: Нажать на стрелку рядом с ценой заказа
        - assert: Открылся список деталей формирования цены
        - assert: В списке есть информация о примененном промокоде "Скидка по промокоду AUTOTEST_PROMOCODE_200 − 200 ₽"

files:
    - tests/common/hotels/book/promoCodes/success-promoCodes.hermione.ts

Сервис: Отели
Страница: Бронирование
Автор: tcheremnykh
Устройство:
    - Тач
    - Десктоп
Функциональность: Промокод
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Страница заказа

specs:
    Покупка со страховкой и успешный возврат:
        - do: |
            Перейти на вкладку ЖД
            Перейти на поиск Москва - Санкт-Петербург через месяц
            Для любого поезда кликнуть по кнопке Выбрать место
            На странице выбора мест выбрать любое место в любом вагоне
            Нажать Указать пассажиров
        - assert: Произошел переход на страницу ввода данных
        - do: |
            Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_SUCCESS&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0
            В ответе запомнить токен из поля test_context_token
            Добавить к урлу параметр trainTestContextToken со значением полученного токена
            Перейти по полученной ссылке
            Заполнить все поля валидными данными
            Нажать Проверить заказ и купить
        - assert: |
            Произошел переход на страницу подтверждения
            Есть блок для добавления страховки
        - do: |
            Установить чекбокс страховки
            Нажать Ввести карту и оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
            Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: |
            Произошел переход на страницу успешного заказа
            У каждого билета есть позиция Страховка
            Сумма за билеты со страховкой совпадает с суммой за билеты на шаге подтверждения
        - do: Нажать Сдать билет
        - assert: Появилось модальное окно с суммой к возврату
        - do: Нажать Подтвердить
        - assert: |
            Появился статус "Возврат" у билета
            Пропала кнопка "Сдать билет"
            Появился чек на возврат, квитанция на возврат
            Сумма к возврату совпадает с суммой в модальном окне

files:
    - tests/common/trains/order/orderPage/successfulReturn.hermione.ts

tags:
    - TK
    - orkestrator

# meta
Сервис: ЖД
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Отели
type: Страница отеля
description: >-
  Если при открытии страницы отеля не будет найдено предложений от яндекса (с
  фотками и кнопками Забронировать) то поискать этот отель на другие даты
specs:
  Тач.Страница отеля.Клики на главной.:
    - do: |-
        Перейти на страницу отеля со следующими параметрами
        отель - Бета Измайлово
        дата заезда - завтра
        дата выезда - послезавтра
        кол-во гостей - 1
    - assert: Открылась страница отеля
    - do: Кликнуть по ссылке на выдачу
    - assert: Произошел переход на выдачу соответствующего региона
    - do: Вернуться на страницу отеля
    - do: >-
        нажать на сердечко возле названия отеля (если оно красное, снять
        выделение кликом, а потом кликнуть снова)
    - assert: >-
        Знак сердечка окрасился в красный и появилось сообщение что отель
        добавлен в избранное
    - do: повторно нажать на сердечко
    - assert: >-
        Сердечко стало белым и появилось сообщение что отель убран из
        избранного.
    - do: нажать на "Посмотреть на карте"
    - assert: открылась карта в виде шторки снизу
    - assert: сниппет отеля отображается на карте
    - do: закрыть карту, смахнув шторку вниз, или нажать на затемненную область над шторкой.
    - assert: карта закрылась, остались на странице отеля, кнопка "Посмотреть на карте" синего цвета 
    - do: нажать на кол-во отзывов под названием отеля
    - assert: произошел подскролл вниз страницы до блока отзывов.
    - do: нажать на "Все услуги"
    - assert: открылась шторка снизу с информацией об услугах
    - do: закрыть, смахнув шторку вниз, или нажать на затемненную область над шторкой
    - assert: услуги скрылись, остались на странице отеля, кнопка "Все услуги" синего цвета
    - do: нажать на любое предложение в блоке "Похожие отели рядом"
    - assert: произошел переход на страницу выбранного отеля (в новой вкладке).
    - do: Вернуться на страницу отеля Бета Измайлово
    - do: в блоке номеров нажать "Подробнее о номере"
    - assert: открылась шторка снизу с информацией о номере (название, тип кроватей,
        площадь, топ фичи и все фичи)
    - do: закрыть, смахнув шторку вниз, или нажать на затемненную область над шторкой
    - assert: информация о номере скрылась, остались на странице отеля, кнопка "Подробнее о номере" синего цвета
    - do: в блоке номеров у любого предложения кликнуть по иконке или тексту про
        плюс
    - assert: открылась шторка снизу с информацией про кэшбек плюса
    - assert: в шторке есть ссылка с подробностями
    - do: кликнуть по ссылке с подробностями
    - assert: произошел переход на страницу плюса
    - do: вернуться на страницу отеля
manual: true
Устройство:
  - Тач
Страница: Страница отеля
Сервис: Отели
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag:
  - hotels-api
  - Smoke
Автор: ivalor
title: Введение в API
items:
  - href: index.md
    name: О HTTP API
  - name: Общие сведения
    items:
      - href: api-theory/workflow.md
        name: Как работает API
      - href: glossary.md
        hidden: true
        name: Основные понятия
      - href: api-theory/methods.md
        name: HTTP-методы
      - href: api-theory/request.md
        name: Запрос
      - href: api-theory/response.md
        name: Ответ
      - name: Форматы обмена данными
        items: 
          - href: api-theory/formats/json-markup.md
            name: JSON
          - href: api-theory/formats/yaml-markup.md
            name: YAML
          - href: api-theory/formats/xml-html-markup.md
            name: XML и HTML
          - href: api-theory/formats/wsdl-markup.md
            name: WSDL
  - name: Работа с API
    items: 
       - href: api-practice/installation.md
         name: Установка ПО
       - href: api-practice/authorization.md
         name: Аутентификация и авторизация
       - name: Postman
         items:
           - href: api-practice/postman-test.md
             name: Тестовый запрос в Postman
           - href: api-practice/postman-variables.md
             name: Использование переменных
           - href: api-practice/postman-analog-thunder.md
             name: Thunder Client
       - href: api-practice/curl-test.md
         name: Тестовый запрос в curl
       - href: api-practice/swagger-test.md
         name: Тестовый запрос в Swagger
       - name: Тестовые запросы в браузере
         items:
           - href: api-practice/browser-test.md
             name: Создание тестового запроса в строке браузера
           - href: api-practice/postman-html.md
             name: Создание HTML‑страницы с помощью Postman
  - href: documentation/doc-structure.md
    name: "Как задокументировать API"
  - href: documentation/doc-method.md
    hidden: true
    name: Шаблон описания метода API
  - name: Практические задания
    items:
      - href: tasks/postman-weather.md
        name: Практическое задание с Postman
      - href: tasks/curl-dictionary.md
        name: Практическое задание с curl
      - href: tasks/swagger-video.md
        name: Практическое задание со Swagger
      - href: tasks/doc-practice.md
        name: Практическое задание по документированию API
  - href: useful-links.md
    name: Полезные ссылки
  - href: feedback.md
    name: Обратная связь
  - href: reusables.md
    hidden: true
    name: Ресурсный файл для заимствований
title: Java в Яндексе
items:
  - name: Intro
    href: index.md
  - name: Style Guide
    href: java_style_guide.md
  - name: Library Guide
    href: java_library_guide.md
  - name: Best practices
    items:
      - name: Optional & null-safety
        href: practices/optional.md
      - name: Final
        href: practices/final.md
      - name: Local variables type inference
        href: practices/var.md
      - name: Lombok
        href: practices/lombok.md
      - name: ForkJoinPool
        href: practices/fork_join_pool.md
      - name: Collections
        href: practices/collections.md
      - name: Streams
        href: practices/streams.md
      - name: Exceptions Hanlding
        href: practices/exceptions.md
      - name: ArrayList vs LinkedList
        href: practices/list.md
      - name: String concatenation
        href: practices/string_concatenation.md
  - name: JetBrains IntelliJ Idea
    href: idea.md
title: Lang detect
href: index.md
items:
  - href: concepts/about.md
    name: Введение
  - href: concepts/lang-detect-descr.md
    name: Описание библиотеки
  - items:
      - href: concepts/interfaces.md
        name: Интерфейсы
      - href: concepts/cplusplus-api.md
        name: С++
      - href: concepts/xscript-api.md
        name: XScript
      - href: concepts/python-api.md
        name: Python
      - href: concepts/perl-api.md
        name: 'Perl '
      - href: concepts/nodejs-api.md
        name: Node.js
      - href: concepts/source-data.md
        name: Подготовка исходных данных
    name: Интерфейсы
  - href: concepts/releases.md
    name: Релизы
title: Yandex Market Mobile
items:
  - name: Введение
    href: index.md
  - name: Новичку
    href: common/welcome-to-yandex.md
  - name: Общие материалы
    items:
      - name: Задачи
        items:
          - name: Что такое задача
            href: common/ticket-intro.md
          - name: Жизненный цикл задачи
            href: common/ticket-lifecycle.md
      - name: Работа с VCS
        href: common/git-flow-guide.md
      - name: Архитектура Маркета для мобильщика
        href: common/architecture.md
      - name: Code Review
        items:
          - name: Ревью кода
            href: common/code_review/code_review_motivation.md
          - name: Оформление пул реквестов
            href: common/code_review/code_review_create.md
          - name: Проведение ревью
            href: common/code_review/code_review_make.md
      - name: Материалы для развития
        href: common/ways-to-grow.md
      - name: Архитектурное ревью проектов
        href: common/architecture-review.md
      - name: Адаптация разработчика (ментору)
        href: common/adaptation-guide.md
      - name: Feature Toggle (фича тогглы)
        href: common/remote-configuration.md
      - name: Rearr-factors (rear-флаги)
        href: common/rearr-factors.md
      - name: A/B-Эксперименты
        href: common/experiments.md
      - name: Активности
        items:
          - name: Постоянные активности
            href: common/activities/streams.md
          - name: Как работать с активностями
            href: common/activities/projects.md
      - name: Лайфхаки
        href: common/lifehacks.md
      - name: Работа с Solomon
        href: common/solomon.md
      - name: Расследование ошибок на экране Android
        href: common/screen-error-codes.md
      - name: CMS
        href: common/cms.md
  - name: Обеспечение качества
    items:
      - name: Интро
        href: common/quality-assurance.md
      - name: О процессе и полях в трекере
        href: common/qa-tracker.md
      - name: Тестовые данные
        href: common/qa-test-data.md
  - name: Разработчику под Android
    items:
      - name: Новому разработчику
        hidden: true
        href: android/for-new-employee.md
      - name: Начало работы над тикетом
        href: android/start-task.md
      - name: Мейнфреймер
        href: android/mainframer.md
      - name: Хорошие и плохие практики
        href: android/corner-cases.md
      - name: Статические анализаторы
        items:
          - name: Detekt
            href: android/static-analyzers/detekt.md
      - name: Граф зависимостей
        items:
          - name: Введение
            href: android/di/brief.md
          - name: Dagger 2 (прошлое)
            href: android/di/dagger2.md
          - name: Toxin (будущее)
            href: android/di/toxin.md
      - name: Сетевой слой
        items:
          - name: Front API
            href: common/front-api.md
          - name: Работа с Front API
            href: android/front-api.md
      - name: Тесты
        items:
          - name: Unit-тесты
            href: android/tests/unit-tests.md
          - name: UI-тесты
            href: android/tests/ui-tests.md
      - name: Архитектура
        items:
          - name: Основы
            href: android/architecture/main.md
          - name: Domain
            href: android/architecture/domain.md
          - name: Data
            href: android/architecture/data.md
          - name: Presentation
            href: android/architecture/presentation.md
      - name: Модульность
        href: android/modules/index.md
      - name: CI/CD
        items:
          - name: Github
            href: android/ci-cd/github.md
          - name: TSUM
            href: android/ci-cd/tsum.md
          - name: Teamcity
            href: android/ci-cd/teamcity.md
          - name: Sandbox
            href: android/ci-cd/sandbox.md
      - name: Чекаут
        href: android/checkout.md
  - name: Разработчику под iOS
    items:
      - name: Быстрый старт
        hidden: true
        href: ios/for-new-employee.md
      - name: Архитектура проекта
        href: ios/project-architecture.md
      - name: Front API
        href: common/front-api.md
      - name: Тесты
        items:
          - name: Unit-тесты
            href: ios/tests/unit-tests.md
          - name: UI-тесты
            href: ios/tests/ui-tests.md
          - name: Snapshot-тесты
            href: ios/tests/snapshot-tests.md
          - name: Ручное тестирование
            href: ios/tests/manual-tests.md
      - name: CI
        href: ios/ci.md
      - name: Модульность
        href: ios/modularity.md
  - name: Дежурство
    items:
      - name: Описание
        href: common/duty/common.md
      - name: Поддержка
        items:
          - name: Описание
            href: common/duty/tech-support.md
      - name: Релизное
        items:
          - name: Описание
            href: common/duty/duty-guide.md
          - name: Доступы
            href: common/release-accessess-guide.md
          - name: Роли
            href: common/release-roles.md
          - name: Соглашения
            href: common/release-conventions.md
          - name: Сценарий релиза
            href: common/release-scenario.md
          - name: Джобы релизного пайплайна
            href: common/release-jobs.md
          - name: Продуктовый хотфикс
            href: common/business-hotfix.md
          - name: Инструменты
            href: common/release-tools.md
          - name: Раскатка релизов
            items:
              - name: Android
                href: common/android-release-distribution.md
              - name: iOS
                href: common/ios-release-distribution.md
          - name: Обновление материалов
            items:
              - name: App Store
                href: ios/app-store-content.md
              - name: Google Play Market
                href: android/play-market-content.md
      - name: Факапное
        items:
          - name: Описание
            href: common/duty/fuckup-duty.md
          - name: Чаты
            href: common/duty/chats.md
          - name: Графики
            href: common/duty/graphs.md
          - name: Советы
            href: common/duty/article.md
          - name: Виды проблем
            href: common/duty/problems.md
          - name: Пример расследования инциндента
            href: common/duty/investigation-example.md
          - name: Дополнительно
            href: common/duty/more.md
          - name: Clickhouse
            href: common/duty/clickhouse.md
  - name: Неформальное
    items:
      - name: Совместные активности
        href: common/informal/informal-activities.md
  - name: Глоссарий
    href: common/glossology.md
title: "Membrace"
href: index.yaml
items:
  - name: How to get a solution
    items:
      - name: Stages of connecting to Membrace
        href: concept/create-project.md
      - name: First steps
        href: concept/demo.md
      - name: Launch stream processing
        href: concept/commissioning.md
  - name: How Membrace works
    href: concept/how-it-work.md
  - name: FAQ
    href: concept/faq.md
  - name: Feedback
    href: concept/feedback.mdtitle: "Membrace"
href: index.yaml
items:
  - name: Как получить решение задачи
    items:
      - name: Этапы подключения к Membrace
        href: concept/create-project.md
      - name: С чего начать
        href: concept/demo.md
      - name: Запуск потоковой обработки
        href: concept/commissioning.md
  - name: Как работает Membrace
    href: concept/how-it-work.md
  - name: FAQ
    href: concept/faq.md
  - name: Обратная связь
    href: concept/feedback.md
      
title: MessengerSDK
href: index.yaml
items:
  - name: Android
    expanded: true
    items:
      - name: Подключение и инициализация
        href: android/init.md
      - name: Авторизация
        href: android/auth.md
      - name: Запуск мессенджера
        href: android/start.md
      - name: Обработка диплинков
        href: android/deeplink.md
      - name: Получение пушей
        href: android/push.md
      - name: Обработка кликов по нотификациям
        href: android/notification_click.md
      - name: Отправка медиа файлов в чат
        href: android/attachments.md
      - name: Изоляция по workspace
        href: android/workspace.md
      - name: Цветовые Темы
        href: android/theme.md
      - name: FAQ
        href: android/faq.md
      - name: Справочник
        href: android/kdoc.md
      - name: Релизы
        href: android/release_notes.md
  - name: Contribute guide
    href: contribute.md
      title: "Nirvana"
href: index.md
items:
  - name: Все туториалы
    href: index.md
  - name: Урок 1. Запускаем граф
    href: lessons/graph-running.md
  - name: Урок 2. Дерево навигации
    href: lessons/navigation-tree.md
  - name: Урок 3. Данные
    href: lessons/data-working.md
  - name: Урок 4. Введение в операции
    href: lessons/operations.md
  - name: Урок 5. Управление логикой выполнения графа
    href: lessons/graph-logic.md
  - name: Урок 6. Управление работой операций
    href: lessons/data-transform.md
  - name: Урок 7. Забираем данные из Нирваны
    href: lessons/datablock.md
  - name: Урок 8. Использование Generic-операций
    href: lessons/generic-operations.md
  - name: Урок 9. Организация рабочих процессов
    href: lessons/working-process.md
  - name: Урок 10. Доступы
    href: lessons/access.md
  - name: Урок 11. История изменения графа
    href: lessons/graphs-changes-history.md
  - name: Урок 12. Создание базовых операций
    href: lessons/operations-create.md
  - name: Урок 13. Создание композитных операций
    href: lessons/composite-operations.md
  - name: Урок 14. Подграфы
    href: lessons/undergraphs.md
  - name: Урок 15. Секреты
    href: lessons/secrets.md
  - name: Урок 16. Управление кешированием
    href: lessons/cash.md
  - name: Урок 17. Отладка упавшего графа
    href: lessons/graph-error.md
  - name: Урок 18. Обновление графа
    href: lessons/graph-update.md
  - name: Урок 19. Как найти нужную операцию?
    href: lessons/operation-search.md
  - name: Урок 20. Описание графа
    href: lessons/graph-description.md
  - name: Урок 21. Что такое хороший продакшн процесс?
    href: lessons/good-prod.md
  - name: Урок 22. Запуск графов по расписанию
    href: lessons/shedule-running.md
  - name: Урок 23. Квоты
    href: lessons/quotas.md
  - name: Урок 24. Запуск графов по событию
    href: lessons/regular-launches-by-event.md
  - name: Урок 26. Отладка упавших процессов в хитман
    href: lessons/debug-in-reactor.md
  - name: Урок 27. Тестирование и ревью графов
    href: lessons/graphs-testing-and-review.md
  - name: Урок 30. Автоматизируем пайплайн
    href: lessons/auto-pipline.md
title: PassportSDK
items:
  - name: Главное
    href: index.md
  - name: Справочник по классам
    include:
      path: android/reference/toc.yamltitle: Система сборки ya make
href: index.md
items:
  - name: О системе сборки ya make
    items:
      - name: Обзор
        href: index.md
      - name: Что такое система сборки ya make
        href: general/about.md
      - name: С чего начать
        href: general/getting_started.md
      - name: Базовые понятия и принципы
        href: general/base_concepts.md
      - name: Как работает система сборки
        href: general/how_it_works.md
      - name: Правила и проверки
        href: general/rules.md
      - name: FAQ
        href: general/faq.md
  - name: Использование ya make
    items:
      - name: О командах сборки
        href: usage/index.md
      - name: ya make
        items:
          - name: Обзор
            href: usage/ya_make/index.md
          - name: Локальная сборка
            href: usage/ya_make/local.md
          - name: Запуск тестов
            href: usage/ya_make/tests.md
          - name: Распределённая сборка
            href: usage/ya_make/dist.md
          - name: Распределённый кэш
            href: usage/ya_make/yt_store.md
          - name: Локальный кэш
            href: usage/ya_make/local_ya_cache.md
          - name: Сборка проекта в Sandbox
            href: usage/sandbox/ya_make.md
          - name: Список опций
            href: usage/ya_make/all_options.md
          - name: Сообщения ya make
            href: usage/ya_make/messages.md
      - name: ya ide
        items:
          - name: Обзор
            href: usage/ya_ide/index.md
          - name: Microsoft Visual Studio
            href: usage/ya_ide/msvs.md
          - name: JetBrains IntelliJ Idea
            href: usage/ya_ide/idea.md
          - name: JetBrains Clion
            href: usage/ya_ide/clion.md
          - name: JetBrains Goland
            href: usage/ya_ide/goland.md
          - name: JetBrains PyCharm
            href: usage/ya_ide/pycharm.md
          - name: QtCreator
            href: usage/ya_ide/qt.md
          - name: Разработка в vim
            href: usage/ya_ide/vim.md
          - name: Разработка в emacs
            href: usage/ya_ide/emacs.md
          - name: Разработка в VSCode
            href: usage/ya_ide/vscode.md
          - name: Виртуальное окружения Python
            href: usage/ya_ide/venv.md
          - name: fix-jb-fsnotifier
            href: usage/ya_ide/fix-jb-fsnotifier.md
      - name: ya dump
        href: usage/ya_dump.md
      - name: ya package
        items:
          - name: Команда ya package
            href: usage/ya_package/index.md
          - name: Формат описания
            href: usage/ya_package/json.md
          - name: Сборка пакетов в Sandbox
            href: usage/ya_package/sandbox.md
          - name: Типы пакетов
            items:
              - name: Доступные форматы пакетов
                # Ideally this page should be hidden from ToC
                # visible: false
                href: usage/ya_package/formats.md
              - name: tar-пакеты
                href: usage/ya_package/tar.md
              - name: deb-пакеты
                href: usage/ya_package/deb.md
              - name: rpm-пакеты
                href: usage/ya_package/rpm.md
              - name: Docker образы
                href: usage/ya_package/docker.md
              - name: Wheel пакеты
                href: usage/ya_package/wheel.md
              - name: aar-пакеты
                href: usage/ya_package/aar.md
              - name: npm-пакеты
                href: usage/ya_package/npm.md
              - name: Загрузка в artifactory
                href: usage/ya_package/artifactory.md
      - name: ya analyze-make
        href: usage/ya_analyze.md
      - name: ya project
        href: usage/ya_project.md
      - name: ya gc
        href: usage/ya_make/local_ya_cache.md
      - name: Использование ya в sandbox
        items:
          - name: Обзор
            href: usage/sandbox/index.md
          - name: Сборка проекта
            href: usage/sandbox/ya_make.md
          - name: Сборка и запуск проекта
            href: usage/sandbox/ya_exec.md
          - name: Пакетирование
            href: usage/sandbox/ya_package.md
  - name: Пошаговые руководства
    items:
       - name: C++
         href: tutorials/cpp.md
       - name: Python
         href: tutorials/python.md
       - name: Java
         href: tutorials/java.md
       - name: Go
         href: tutorials/go.md
       - name: Protobuf
         href: tutorials/protobuf.md
       - name: Flatbuffers
         href: tutorials/flatbuf.md
       - name: Документация
         href: tutorials/doc.md
       - name: Тестирование
         href: tutorials/tests.md
       - name: Короткие рецепты в вопросах и ответах
         href: tutorials/miniqa.md
  - name: Описание сборки в ya.make
    items:
      - name: Обзор
        href: manual/index.md
      - name: Описание сборки
        href: manual/syntax.md
      - name: Обработка файлов по расширеням
        href: manual/extensions.md
      - name: Для всех
        items:
          - name: Обзор
            href: manual/common/index.md
          - name: Модули
            href: manual/common/modules.md
          - name: Макросы
            href: manual/common/macros.md
          - name: Переменные
            href: manual/common/vars.md
          - name: Данные для сборки и тестов
            href: manual/common/data.md
          - name: Ограничения зависимостей
            href: manual/common/peerdir_rules.md
          - name: Примеры
            href: manual/common/examples.md
      - name: С++
        items:
          - name: Обзор
            href: manual/cpp/index.md
          - name: Модули
            href: manual/cpp/modules.md
          - name: Макросы
            href: manual/cpp/macros.md
          - name: Переменные
            href: manual/cpp/vars.md
          - name: Инклуды
            href: manual/cpp/includes.md
          - name: Тестирование
            href: manual/tests/cpp.md
          - name: Команда для С++-контрибов
            href: manual/cpp/yamaker.md
          - name: Примеры
            href: manual/cpp/examples.md
      - name: Python
        items:
          - name: Обзор
            href: manual/python/index.md
          - name: Модули
            href: manual/python/modules.md
          - name: Макросы
            href: manual/python/macros.md
          - name: Переменные
            href: manual/python/vars.md
          - name: Python-специфичные команды
            href: manual/python/commands.md
          - name: Тестирование
            href: manual/tests/python.md
          - name: Примеры
            href: manual/python/examples.md
      - name: Java
        items:
          - name: Обзор
            href: manual/java/index.md
          - name: Модули
            href: manual/java/modules.md
          - name: Макросы
            href: manual/java/macros.md
          - name: Переменные
            href: manual/java/vars.md
          - name: Управление зависимостями
            href: manual/java/dependencies.md
          - name: Java-специфичные команды
            href: manual/java/commands.md
          - name: Тестирование
            href: manual/tests/java.md
          - name: Примеры
            href: manual/java/examples.md
      - name: Go
        items:
          - name: Обзор
            href: manual/go/index.md
          - name: Модули
            href: manual/go/modules.md
          - name: Макросы
            href: manual/go/macros.md
          - name: Переменные
            href: manual/go/vars.md
          - name: Go-специфичные команды
            href: manual/go/commands.md
          - name: Тестирование
            href: manual/tests/go.md
          - name: Примеры
            href: manual/go/examples.md
      - name: Protobuf
        items:
          - name: Обзор
            href: manual/proto/index.md
          - name: Модули
            href: manual/proto/modules.md
          - name: Макросы
            href: manual/proto/macros.md
          - name: Переменные
            href: manual/proto/vars.md
          - name: Примеры
            href: manual/proto/examples.md
      - name: Flatbuffers
        items:
          - name: Обзор
            href: manual/flatbuf/index.md
          - name: Модули
            href: manual/flatbuf/modules.md
          - name: Макросы
            href: manual/flatbuf/macros.md
          - name: Переменные
            href: manual/flatbuf/vars.md
          - name: Примеры
            href: manual/flatbuf/examples.md
      - name: Documentation
        items:
          - name: Обзор
            href: manual/doc/index.md
          - name: Модули
            href: manual/doc/modules.md
          - name: Описание проекта
            href: manual/doc/yml.md
          - name: Макросы
            href: manual/doc/macros.md
          - name: Примеры
            href: manual/doc/examples.md
      - name: Пакетирование и объединение целей
        items:
          - name: Обзор
            href: manual/package/index.md
          - name: Модули
            href: manual/package/modules.md
          - name: Макросы
            href: manual/package/macros.md
          - name: Примеры
            href: manual/package/examples.md
      - name: Специфичное для проектов и технологий
        items:
          - name: Обзор
            href: manual/project_specific/index.md
          - name: CUDA
            href: manual/project_specific/cuda.md
          - name: Тасклеты
            href: manual/project_specific/tasklet.md
          - name: Мобильные платформы
            href: manual/project_specific/mobile.md
          - name: OpenMPI
            href: manual/project_specific/openmpi.md
          - name: YQL
            href: manual/project_specific/yql.md
          - name: Алиса
            href: manual/project_specific/alice.md
          - name: Метрика
            href: manual/project_specific/metrika.md
          - name: Карты
            href: manual/project_specific/maps.md
  - name: Описание тестов в ya.make
    items:
      - name: Обзор
        href: manual/tests/index.md
      - name: Общие макросы и параметры
        href: manual/tests/common.md
      - name: Тестовые данные
        href: manual/common/data.md
      - name: Канонизация
        href: manual/tests/canon.md
      - name: Рецепты
        href: manual/tests/recipe.md
      - name: Проверки кода
        href: manual/tests/style.md
      - name: Clang-tidy
        href: manual/tests/clang-tidy.md
      - name: EXECTEST
        href: manual/tests/exectest.md
      - name: C++
        href: manual/tests/cpp.md
      - name: Python
        href: manual/tests/python.md
      - name: Java
        href: manual/tests/java.md
      - name: Go
        href: manual/tests/go.md
      - name: C++ бенчмарки
        href: manual/tests/benchmark.md
      - name: Тесты с sanitizer
        href: manual/tests/sanitizer.md
      - name: Fuzzing
        href: manual/tests/fuzzing.md
      - name: Flaky
        href: manual/tests/flaky.md
  - name: Настройка и расширение
    items:
      - name: Обзор
        href: extension/index.md
      - name: ymake.core.conf
        href: extension/core_conf.md
      - name: ymake_conf.py
        href: extension/conf_py.md
      - name: build/plugins
        href: extension/plugins.md
      - name: build/scripts
        href: extension/scripts.md
      - name: Парсеры зависимостей
        href: extension/parsers.md
      - name: autocheck и платформы
        href: extension/platforms.md
      - name: Миграции
        items:
         - name: Go
           href: extension/migrations/go.md
         - name: Flake8
           href: extension/migrations/flake8.md
  - name: Все модули и макросы
    href: generated.md
  - name: Разработка
    href: development/index.md
items:
  - name: core
    items:
      - name: О модуле
        href: core/Home.md
      - name: PaymentKitResult
        href: core/PaymentKitResult.md
      - name: AuthChallengeDisposition
        href: core/AuthChallengeDisposition.md
      - name: Payment.PartnerInfo
        href: core/Payment_PartnerInfo.md
      - name: Order.CurrencyAmount
        href: core/Order_CurrencyAmount.md
      - name: ApplePayApi
        href: core/ApplePayApi.md
      - name: Payment.BankName
        href: core/Payment_BankName.md
      - name: Payment.Method
        href: core/Payment_Method.md
      - name: ApplePayDelegate
        href: core/ApplePayDelegate.md
      - name: PaymentApiBuilder
        href: core/PaymentApiBuilder.md
      - name: PaymentKitError
        href: core/PaymentKitError.md
      - name: PaymentApi
        href: core/PaymentApi.md
      - name: Payment.Settings.PayMethodMarkup
        href: core/Payment_Settings_PayMethodMarkup.md
      - name: Payment.Card
        href: core/Payment_Card.md
      - name: PaymentFactory
        href: core/PaymentFactory.md
      - name: Payment.Card.PaymentSystem
        href: core/Payment_Card_PaymentSystem.md
      - name: BoundCard
        href: core/BoundCard.md
      - name: Metrica.Mode
        href: core/Metrica_Mode.md
      - name: Payment.Option.Ids
        href: core/Payment_Option_Ids.md
      - name: Payment.BankAppLaunchInfo
        href: core/Payment_BankAppLaunchInfo.md
      - name: Payment.Status
        href: core/Payment_Status.md
      - name: Order
        href: core/Order.md
      - name: Payment.Token
        href: core/Payment_Token.md
      - name: PaymentPollingResult
        href: core/PaymentPollingResult.md
      - name: Metrica
        href: core/Metrica.md
      - name: Payment.ApplePay
        href: core/Payment_ApplePay.md
      - name: Payment.Settings.MerchantInfo
        href: core/Payment_Settings_MerchantInfo.md
      - name: ConsoleLoggingMode
        href: core/ConsoleLoggingMode.md
      - name: Payment.MethodsFilter
        href: core/Payment_MethodsFilter.md
      - name: Payment.BankAppInfo
        href: core/Payment_BankAppInfo.md
      - name: PaymentSdkResources
        href: core/PaymentSdkResources.md
      - name: PaymentKitError.Trigger
        href: core/PaymentKitError_Trigger.md
      - name: AuthCredentials
        href: core/AuthCredentials.md
      - name: Payment.FamilyInfo
        href: core/Payment_FamilyInfo.md
      - name: PaymentCallbacks
        href: core/PaymentCallbacks.md
      - name: Order.PaymentSheet
        href: core/Order_PaymentSheet.md
      - name: Payment.Card.Id
        href: core/Payment_Card_Id.md
      - name: PaymentKitAuthExchanger
        href: core/PaymentKitAuthExchanger.md
      - name: Swift.Result
        href: core/Swift_Result.md
      - name: Payment.Option
        href: core/Payment_Option.md
      - name: AuthEnvironment
        href: core/AuthEnvironment.md
      - name: BoundApplePayToken
        href: core/BoundApplePayToken.md
      - name: Order.Tag
        href: core/Order_Tag.md
      - name: SbpHandler
        href: core/SbpHandler.md
      - name: PaymentKitError.Kind
        href: core/PaymentKitError_Kind.md
      - name: Payment.AppInfo
        href: core/Payment_AppInfo.md
      - name: PaymentKitMode
        href: core/PaymentKitMode.md
      - name: Payment.Merchant
        href: core/Payment_Merchant.md
      - name: Payment.Settings
        href: core/Payment_Settings.md
      - name: Order.Builder
        href: core/Order_Builder.md
      - name: Payment.Payer
        href: core/Payment_Payer.md
      - name: ExternalResult
        href: core/ExternalResult.md
      - name: BindApi
        href: core/BindApi.md
      - name: Payment
        href: core/Payment.md
      - name: PaymentInstance
        href: core/PaymentInstance.md
      - name: Payment.RegionId
        href: core/Payment_RegionId.md
      - name: Payment.Settings.Acquirer
        href: core/Payment_Settings_Acquirer.md
  - name: ui
    items:
      - name: О модуле
        href: ui/Home.md
      - name: SelectCellProps
        href: ui/SelectCellProps.md
      - name: CardBinValidationConfig
        href: ui/CardBinValidationConfig.md
      - name: CommandWith
        href: ui/CommandWith.md
      - name: SelectMethodProps
        href: ui/SelectMethodProps.md
      - name: CardInputState
        href: ui/CardInputState.md
      - name: WebViewControllerAuthChallengeResolver
        href: ui/WebViewControllerAuthChallengeResolver.md
      - name: PaymentSdkCellProps.CellType
        href: ui/PaymentSdkCellProps_CellType.md
      - name: CardBinValidationConfig.Builder
        href: ui/CardBinValidationConfig_Builder.md
      - name: PayButton
        href: ui/PayButton.md
      - name: PaymentSDKWebViewController
        href: ui/PaymentSDKWebViewController.md
      - name: ActionButtonProps
        href: ui/ActionButtonProps.md
      - name: RadioButtonCell
        href: ui/RadioButtonCell.md
      - name: PaymentSdkCellProps
        href: ui/PaymentSdkCellProps.md
      - name: Theme
        href: ui/Theme.md
      - name: CardExpirationDateValidationConfig.Builder
        href: ui/CardExpirationDateValidationConfig_Builder.md
      - name: CustomCellProvider
        href: ui/CustomCellProvider.md
      - name: TinkoffSubmitFormDelegate
        href: ui/TinkoffSubmitFormDelegate.md
      - name: PrebuiltUiFactory
        href: ui/PrebuiltUiFactory.md
      - name: ActionButtonProps.Labels
        href: ui/ActionButtonProps_Labels.md
      - name: SelectMethodTableView
        href: ui/SelectMethodTableView.md
      - name: Theme.Builder
        href: ui/Theme_Builder.md
      - name: createPrebuiltUiFactory(theme:)
        href: ui/createPrebuiltUiFactory(theme_).md
      - name: CardExpirationDateField
        href: ui/CardExpirationDateField.md
      - name: TinkoffFormState
        href: ui/TinkoffFormState.md
      - name: CardExpirationDateValidationConfig
        href: ui/CardExpirationDateValidationConfig.md
      - name: Theme.Kind
        href: ui/Theme_Kind.md
      - name: Command
        href: ui/Command.md
      - name: PaymentCellIconsMode
        href: ui/PaymentCellIconsMode.md
      - name: WebViewControllerDelegate
        href: ui/WebViewControllerDelegate.md
      - name: CvnInput
        href: ui/CvnInput.md
      - name: CardValidationConfig
        href: ui/CardValidationConfig.md
      - name: CardInputMode
        href: ui/CardInputMode.md
      - name: ActionButtonProps.Style
        href: ui/ActionButtonProps_Style.md
      - name: CardInput
        href: ui/CardInput.md
  - name: mediators
    items:
      - name: О модуле
        href: mediators/Home.md
      - name: CardActionButtonState
        href: mediators/CardActionButtonState.md
      - name: PaymentScreenDelegate
        href: mediators/PaymentScreenDelegate.md
      - name: CardActionButtonTitle
        href: mediators/CardActionButtonTitle.md
      - name: PaymentProcessingApi
        href: mediators/PaymentProcessingApi.md
      - name: CardScreenState
        href: mediators/CardScreenState.md
      - name: BindCardMediator
        href: mediators/BindCardMediator.md
      - name: WebView3dsDelegate
        href: mediators/WebView3dsDelegate.md
      - name: NewCardPayMediator
        href: mediators/NewCardPayMediator.md
      - name: CardScreenDelegate
        href: mediators/CardScreenDelegate.md
      - name: BindProcessingApi
        href: mediators/BindProcessingApi.md
      - name: CardActionButton
        href: mediators/CardActionButton.md
      - name: PaymentScreenState
        href: mediators/PaymentScreenState.md
      - name: CardInputMediator
        href: mediators/CardInputMediator.md
      - name: SimplePaymentMediator
        href: mediators/SimplePaymentMediator.md
title: PaymentSDK
href: index.yaml
items:
  - name: Главное
    href: main.md
  - name: Диалог PaymentSDK
    items:
      - name: How To Dev
        href: paymentsdk/index.md
      - name: Быстрый запуск СБП
        href: paymentsdk/sbp.md
  - name: Модули PaymentSDK
    items:
      - name: Схема работы с данными карт
        href: scheme.md
      - name: Привязка карт
        href: binding.md
      - name: Android
        expanded: true
        items:
          - name: Quick Start
            href: android/quick.md
          - name: Core API
            items:
              - name: О модуле
                href: android/core/index.md
              - name: Инициализация
                href: android/core/initialization.md
              - name: Платежи
                href: android/core/payment.md
              - name: Работа с GooglePay
                href: android/core/google.md
          - name: Prebuilt UI
            href: android/ui/index.md
          - name: Resources
            href: android/resources/index.md
          - name: Datasource
            href: android/datasource/index.md
          - name: Cardscanner
            href: android/cardscanner/index.md
          - name: Справочник по классам
            include:
              path: android/reference/toc.yaml
      - name: iOS
        expanded: true
        items:
          - name: Quick Start
            href: ios/quick.md
          - name: Core API
            items:
              - name: О модуле
                href: ios/core/index.md
              - name: Инициализация
                href: ios/core/initialization.md
              - name: Платежи
                href: ios/core/payment.md
          - name: Prebuilt UI
            href: ios/ui/index.md
          - name: Mediators
            href: ios/mediators/index.md
          - name: Справочник по классам
            include:
              path: ios/reference/toc.yaml
  - name: OAuth скоупы для платежей
    href: oauth.md
  - name: PaymentSDK и Trust
    href: trust.md
  - name: О документации
    href: about.mdtitle: Python в Яндексе
items:
  - name: Rules
    href: index.md
  - name: Arcadia Python Style Guide
    href: python_style_guide.md
  - name: Cookbook
    href: python_cookbook.md
  - name: Python 23
    href: python3.md
title: rms
href: index.md
items:
  - name: Case Management
    expanded: true
    items:
      - name: Начало работы
        href: case-management/quickstart.md
      - name: Инструкции
        items:
          - name: Работа с событиями
            href: case-management/howto/open-event.md
          - name: Настроить кнопки
            href: case-management/howto/set-buttons.md
          - name: Настроить правила
            href: case-management/howto/set-rules.md
          - name: Настроить фильтры событий
            href: case-management/howto/set-event-filters.md
      - name: Как устроен сервис
        href: case-management/concepts/about.md
      - name: Частые вопросы
        href: case-management/faq.md
  - name: Доступы
    expanded: true
    items:
      - name: Настроить VPN
        href: access/vpn.md
      - name: Список хостов бэкенда
        href: access/change-host.mdtitle: SpeechKit Box
href: index.md
items:
  - name: О системе
    href: index.md
  - name: Установка
    href: concepts/installation.md
  - name: Настройка
    href: concepts/params.md
  - name: Мониторинг
    href: concepts/monitoring.md

title: SpeechKit Mobile SDK
href: index.md
items:
  - name: SpeechKit Mobile SDK
    href: index.md

title: Документация Speechkit
href: index.yaml
items:
  - name: SpeechKit Box
    href: box-guide/index.md
  - name: SpeechKit Mobile SDK
    href: mobilesdk-nda/index.md
title:  XScript 5
href: index.md
items:
  - name: Релизы
    href: concepts/releases.md
  - name: Концепции
    items:
      - name: Общие сведения
        items:
          - name: Общие сведения
            href: concepts/xscript-ov.md
          - name: Обработка запроса
            href: concepts/xscript-functionality.md
          - name: XML-файл на XScript
            href: concepts/xscript-file-ov.md
      - name: Пакеты и модули XScript
        items:
          - name: Список пакетов и модулей XScript
            href: concepts/struct.md
          - name: Пакеты XScript
            href: concepts/packages.md
          - name: Модули XScript
            href: concepts/modules.md
      - name: Блоки XScript
        items:
          - name: Понятие XScript-блока и его типы
            href: concepts/block-ov.md
          - name: Auth-блок
            href: concepts/block-auth-ov.md            
          - name: Banner-блок
            href: concepts/block-banner-ov.md
          - name: CORBA-блок
            href: concepts/block-corba-ov.md            
          - name: Custom-morda-блок
            href: concepts/block-custom-morda-ov.md
          - name: File-блок
            href: concepts/block-file-ov.md            
          - name: Geo-блок
            href: concepts/block-geo-ov.md           
          - name: HTTP-блок
            href: concepts/block-http-ov.md            
          - name: JavaScript-блок
            href: concepts/block-js-ov.md            
          - name: Lang-detect-блок
            href: concepts/block-lang-detect-ov.md            
          - name: Local-блок
            href: concepts/block-local-ov.md            
          - name: Local-program-блок
            href: concepts/block-local-program-ov.md            
          - name: Lua-блок
            href: concepts/block-lua-ov.md            
          - name: Mist-блок
            href: concepts/block-mist-ov.md            
          - name: Mobile-блок
            href: concepts/block-mobile-ov.md            
          - name: Regional-units-блок
            href: concepts/block-regional-units-ov.md            
          - name: Tinyurl-блок
            href: concepts/block-tinyurl-ov.md            
          - name: Uatraits-блок
            href: concepts/block-xscript-uatraits-ov.md            
          - name: While-блок
            href: concepts/block-while-ov.md            
      - name: Параметры XScript-блоков
        items:
          - name: Типы параметров
            href: concepts/parameters-ov.md            
          - name: Простые типы параметров
            href: concepts/parameters-simple-ov.md            
          - name: Объектные и структурные типы параметров
            href: concepts/parameters-complex-ov.md            
          - name: Приводимые типы параметров
            href: concepts/parameters-matching-ov.md            
          - name: Специальные типы параметров
            href: concepts/parameters-other-ov.md            
      - name: Обработка запроса
        items:
          - name: Общий процесс обработки запроса
            href: concepts/request-handling-ov.md            
          - name: 'Первый этап: инициализация'
            href: concepts/request-handling-init.md           
          - name: 'Второй этап: обработка XScript-страницы'
            href: concepts/request-handling-file.md            
          - name: Обработка XScript-блока
            href: concepts/block-handling-ov.md            
          - name: Обработка блока с секцией <meta>
            href: concepts/block-handling-with-meta.md            
          - name: Заключительный этап
            href: concepts/request-handling-final.md            
      - name: Базовые объекты и структуры
        items:
          - name: 'Объекты авторизации: Auth, LiteAuth и SecureAuth'
            href: concepts/auth-ov.md            
          - name: 'Объект CustomMorda: проектные настройки'
            href: concepts/custom-morda-ov.md            
          - name: 'Объект Request: данные запроса пользователя'
            href: concepts/request-ov.md            
          - name: 'Объект State: контейнер данных на время обработки запроса'
            href: concepts/state-ov.md            
          - name: 'Структура Tag: параметры кэширования'
            href: concepts/tag-ov.md            
      - name: Преобразование XSL
        items:
          - name: Перблочное XSL-преобразование
            href: concepts/per-block-transformation-ov.md            
          - name: Основное XSL-преобразование
            href: concepts/general-transformation-ov.md            
          - name: XScript-блок в файле XSL-преобразования
            href: concepts/xscript-block-in-xsl.md            
      - name: Кэширование
        items:
          - name: Кэширование XML-страницы
            href: concepts/caching-ov.md            
          - name: Стратегии кэширования XML-страниц
            href: concepts/page-cache-strategies.md            
          - name: Кэширование результата работы XScript-блока
            href: concepts/block-results-caching.md            
          - name: Управление кэшированием с помощью <meta>
            href: concepts/meta-cache.md            
      - name: Требования и соглашения
        items:
          - name: Требования для разработчика интерфейсов
            href: concepts/requirements-iface.md            
          - name: Требования для системного администратора
            href: concepts/requirements-admin.md            
          - name: Требования для разработчика CORBA-компонентов
            href: concepts/requirements-dev.md            
      - name: Метаинформация о вызове блока
        href: concepts/meta.md        
      - name: Определение запросов от роботов
        href: concepts/bot-detect.md        
      - name: Секретный ключ
        href: concepts/secret-key.md        
      - name: Прикладные средства XScript
        href: concepts/xscript-tools-ov.md        
      - name: Диагностика ошибок в XScript
        href: concepts/error-diag-ov.md        
  - name: Процедуры
    items:
      - name: Как создать веб-страницу с использованием XScript
        href: tasks/how-to-design-page-with-xscript.md        
      - name: Как загрузить страницу без XSL-преобразования
        href: tasks/how-to-display-page-without-xslt.md        
      - name: Как выставить заголовки HTTP-ответа и куки
        href: tasks/how-to-set-headers.md        
      - name: Как вернуть пользователю двоичный файл
        href: tasks/how-to-return-binary-file.md        
      - name: Как закэшировать результат работы блока с учетом параметра
        href: tasks/how-to-cache-with-param.md        
      - name: Как показать страницу 404
        href: tasks/how-to-show-404.md        
      - name: Как определить город пользователя
        href: tasks/how-to-get-city.md        
      - name: Как проверить значение параметра на принадлежность множеству
        href: tasks/how-to-check-inclusion.md        
      - name: Как передать данные между блоками или CORBA-компонентами
        href: tasks/how-to-transfer-data-between-servers.md        
      - name: Как создать XScript-блок нового типа
        href: tasks/how-to-create-new-block.md        
  - name: Теги XScript
    items:
      - name: add-headers
        href: reference/add-header.md        
      - name: auth-block
        href: reference/auth-block.md        
      - name: banner-block
        href: reference/banner-block.md        
      - name: block
        href: reference/block.md        
      - name: custom-morda
        href: reference/custom-morda.md        
      - name: file
        href: reference/file.md        
      - name: geo-block
        href: reference/geo.md        
      - name: guard
        href: reference/guard.md        
      - name: guard-not
        href: reference/guard-not.md        
      - name: header
        href: reference/header.md        
      - name: http
        href: reference/http.md        
      - name: js
        href: reference/js.md        
      - name: lang-detect
        href: reference/lang-detect.md        
      - name: local
        href: reference/local.md        
      - name: local-program
        href: reference/local-program.md        
      - name: lua
        href: reference/lua.md        
      - name: lua-after-cache-load
        href: reference/lua-after-cache-load.md        
      - name: lua-before-cache-save
        href: reference/lua-before-cache-save.md        
      - name: meta
        href: reference/meta-tag.md        
      - name: method
        href: reference/method.md        
      - name: mist
        href: reference/mist.md        
      - name: mobile-block
        href: reference/mobile-block.md        
      - name: name
        href: reference/name.md        
      - name: nameref
        href: reference/nameref.md        
      - name: param
        href: reference/param.md        
      - name: query-param
        href: reference/query-param.md        
      - name: regional-units-block
        href: reference/regional-units.md        
      - name: root
        href: reference/root.md        
      - name: tinyurl
        href: reference/tinyurl.md        
      - name: uatraits
        href: reference/uatraits.md        
      - name: while
        href: reference/while.md        
      - name: xpath
        href: reference/xpath.md        
      - name: xpointer
        href: reference/xpointer-tag.md        
      - name: xscript
        href: reference/xscript.md        
      - name: xslt
        href: reference/xslt-tag.md        
      - name: xslt-param
        href: reference/xslt-param.md        
      - name: 'xi:include'
        href: reference/xi-include.md        
      - name: 'xi:fallback'
        href: reference/xi-fallback.md        
  - name: Методы и функции блоков
    items:
      - name: Методы Auth-блока
        href: appendices/block-auth-methods.md        
      - name: Методы Banner-блока
        href: appendices/block-banner-methods.md        
      - name: Методы блока custom-morda
        href: appendices/block-custom-morda-methods.md        
      - name: Методы File-блока
        href: appendices/block-file-methods.md        
      - name: Методы Geo-блока
        href: appendices/block-geo-methods.md        
      - name: Методы HTTP-блока
        href: appendices/block-http-methods.md        
      - name: Методы Lang-detect-блока
        href: appendices/block-lang-detect-methods.md        
      - name: Методы блока Local-program
        href: appendices/block-local-program-methods.md        
      - name: Методы Mist-блока
        href: appendices/block-mist-methods.md        
      - name: Методы Mobile-блока
        href: appendices/block-mobile-methods.md        
      - name: Методы Regional-units-блока
        href: appendices/block-regional-units-methods.md        
      - name: Методы Tinyurl-блока
        href: appendices/block-tinyurl-methods.md        
      - name: Методы uatraits-блока
        href: appendices/block-uatraits-methods.md        
  - name: Компоненты JavaScript-блока
    items:
      - name: Функции пространства имен xscript
        href: appendices/block-js-xscript-methods.md        
      - name: Функции пространства имен xscript.logger
        href: appendices/block-js-xscript-logger-methods.md        
      - name: Функции пространства имен xscript.request
        href: appendices/block-js-xscript-request-methods.md        
      - name: Псевдообъект xscript.request.args
        href: appendices/block-js-xscript-request-args-object.md        
      - name: Псевдообъект xscript.request.argArrays
        href: appendices/block-js-xscript-request-argarrays-object.md        
      - name: Псевдообъект xscript.request.cookies
        href: appendices/block-js-xscript-request-cookies-object.md        
      - name: Псевдообъект xscript.request.headers
        href: appendices/block-js-xscript-request-headers-object.md        
      - name: Функции пространства имен xscript.response
        href: appendices/block-js-xscript-response-methods.md        
      - name: Класс xscript.cookie
        href: appendices/block-js-xscript-cookie-methods.md        
      - name: Псевдообъект xscript.localargs
        href: appendices/block-js-xscript-localargs-object.md        
      - name: Псевдообъект xscript.params
        href: appendices/block-js-xscript-params-object.md        
      - name: Псевдообъект xscript.state
        href: appendices/block-js-xscript-state-object.md        
      - name: Модуль xscript.uatraits
        href: appendices/block-js-xscript-uatraits-module.md        
      - name: Модуль xscript.langdetect
        href: appendices/block-js-xscript-langdetect-module.md        
      - name: Модуль xscript.cache
        href: appendices/block-js-xscript-cache-module.md        
      - name: Псевдообъект xscript.HttpRequest
        href: appendices/block-js-xscript-httprequest-object.md        
      - name: Модуль xscript.sanitize
        href: appendices/block-js-xscript-sanitize-module.md        
      - name: Модуль xscript.secretkey
        href: appendices/block-js-xscript-secretkey-module.md        
      - name: Модуль xscript.yandex
        href: appendices/block-js-xscript-yandex-module.md        
      - name: Модуль xscript.geo
        href: appendices/block-js-xscript-geo-module.md        
  - name: Компоненты Lua-блока
    items:
      - name: Пространство имен xscript
        items:
          - name: Методы объекта xscript.state
            href: appendices/block-lua-state-methods.md            
          - name: Методы объекта xscript.request
            href: appendices/block-lua-request-methods.md            
          - name: Методы объекта xscript.response
            href: appendices/block-lua-response-methods.md            
          - name: Методы объекта xscript.localargs
            href: appendices/block-lua-localargs-methods.md            
          - name: Методы объекта xscript.meta
            href: appendices/block-lua-meta.md            
          - name: Методы класса xscript.cookie
            href: appendices/block-lua-cookie-methods.md            
          - name: Функции таблицы xscript
            href: appendices/block-lua-other-methods.md            
      - name: Пространство имен xscript.logger
        items:
          - name: Функции таблицы xscript.logger
            href: appendices/block-lua-logger-methods.md            
      - name: Пространство имен xscript.ycookie
        items:
          - name: Методы класса xscript.ycookie.ys
            href: appendices/block-lua-ycookie-ys-methods.md            
          - name: Методы класса xscript.ycookie.yp
            href: appendices/block-lua-ycookie-yp-methods.md            
          - name: Методы класса xscript.ycookie.gp
            href: appendices/block-lua-ycookie-gp-methods.md            
          - name: Методы класса xscript.ycookie.gpauto
            href: appendices/block-lua-ycookie-gpauto-methods.md            
          - name: Методы класса xscript.ycookie.ygo
            href: appendices/block-lua-ycookie-ygo-methods.md            
          - name: Функции таблицы xscript.ycookie
            href: appendices/block-lua-ycookie-methods.md            
  - name: Типы параметров методов
    items:
      - name: Все типы параметров методов, вызываемых в XScript-блоках
        href: appendices/block-param-types.md        
      - name: Тип параметра ProtocolArg
        href: appendices/protocol-arg.md        
  - name: Атрибуты блоков
    items:
      - name: Атрибуты XScript-блоков
        href: appendices/attrs-ov.md        
      - name: Атрибут xpointer
        href: appendices/xpointer.md        
  - name: Настройки
    items:
      - name: Файл настроек
        href: appendices/config.md        
      - name: Параметры файла настроек
        href: appendices/config-params.md        
      - name: Переменные окружения веб-сервера, обрабатываемые XScript-ом
        href: appendices/env-var.md        
  - name: Приложения
    items:
      - name: Пример XML-файла на XScript
        href: appendices/example-page.md        
      - name: Способы адресации файлов
        href: appendices/file-address.md        
      - name: Поддержка JSON
        items:
          - name: Обзор
            href: appendices/json.md
          - name: JSON→XML
            href: appendices/json-to-xml.md
          - name: XML→JSON
            href: appendices/xml-to-json.md
      - name: Статистика работы XScript
        items:
          - name: control-response-time.xml
            href: appendices/control-response-time.md
          - name: control-status-info.xml
            href: appendices/control-status-info.md
          - name: control-tagged-block-cache-stat.xml
            href: appendices/control-tagged-block-cache-stat.md
          - name: control-tagged-page-cache-stat.xml
            href: appendices/control-tagged-page-cache-stat.md
          - name: control-xml-cache-stat.xml
            href: appendices/control-xml-cache-stat.md
  - name: XSL-функции
    href: appendices/xslt-functions.md 
title: ydo
href: index.md
items:
  - name: Введение
    expanded: true
    items:
      - name: Интро
        href: index.md
      - name: Внесение изменений в документацию
        href: how-to.md
  - name: Бекенд
    href: backend.md
  - name: Фронтенд
    expanded: true
    items:
      - name: ЧаВо
        href: faq.md
      - name: Новичку
        href: new-staff.md
      - name: Процессы
        expanded: true
        items:
          - name: Критерии подготовки задачи
            href: processes/tasks-readiness-criteria.md
          - name: Код-ревью
            href: processes/review.md
          - name: Заведение PR
            href: processes/tickets.md
          - name: АБ эксперименты
            href: processes/ab-experiments.md
          - name: Дежурство
            href: processes/duty.md
          - name: Роль контур-лида
            href: processes/vteam-lead.md
          - name: Роль техлида
            href: processes/techlead.md
          - name: Ожидания от грейдов
            href: processes/grades.md
      - name: Тестирование
        expanded: true
        items:
          - name: Введение
            href: testing/testing.md
          - name: Гермиона
            href: testing/auto-tests/hermione.md
          - name: Unit
            href: testing/auto-tests/unit.md
      - name: Общие технологии
        expanded: true
        items:
          - name: Инструменты для разработчиков
            href: common-tech/tools.md
          - name: Общие пакеты
            href: common-tech/common-packages.md
          - name: Аналитика (счетчики)
            href: common-tech/analytics.md
          - name: S3
            href: common-tech/s3.md
          - name: Оптимизация изображений
            href: common-tech/image-optimization.md
          - name: Report Renderer, Aphost и Kotik
            href: common-tech/report-renderer.md
      - name: Проекты
        expanded: true
        items:
          - name: Ydo-admin
            expanded: true
            items:
              - name: Основная информация о проекте
                href: ydo-admin/index.md
              - name: Быстрый старт
                href: ydo-admin/quick-start-guide.md
              - name: Соглашения
                expanded: true
                items:
                  - name: Стек
                    href: ydo-admin/stack.md
              - name: Тестирование
                href: ydo-admin/testing.md
          - name: Ydo
            expanded: true
            items:
              - name: Основная информация о проекте
                href: ydo/index.md
              - name: Быстрый старт
                href: ydo/quick-start-guide.md
              - name: ЧаВо
                href: ydo/faq.md
              - name: Структура проекта
                href: ydo/structure.md
              - name: Поддерживаемые браузеры
                href: ydo/supported-browsers.md
              - name: Соглашения
                expanded: true
                items:
                  - name: Дизайн система
                    href: ydo/conventions/design-system.md
                  - name: Соглашения об именовании
                    href: ydo/conventions/naming.md
                  - name: Оптимизация изображений
                    href: ydo/conventions/image-optimization.md
                  - name: Мемоизация
                    href: ydo/conventions/memoization.md
                  - name: Тайпинги
                    href: ydo/conventions/typings.md
              - name: Скорость
                expanded: true
                items:
                  - name: Ленивый код
                    href: ydo/performance/lazy-code.md
                  - name: Утечки памяти
                    href: ydo/performance/memory-leaks.md
                  - name: Пульс
                    href: ydo/performance/pulse.md
              - name: Инструментарий
                expanded: true
                items:
                  - name: Dev-tool
                    href: ydo/tools/dev-tools.md
                  - name: Env-vars
                    href: ydo/tools/env-vars.md
                  - name: Кодогенерация
                    href: ydo/tools/scaffolding.md
                  - name: Шина событий
                    href: ydo/tools/event-bus.md
                  - name: Хранилище сессионных данных
                    href: ydo/tools/sessions-storage.md
                  - name: Data Fetching
                    href: ydo/tools/data-fetching.md
              - name: Тестирование
                href: ydo/testing.md
              - name: Статичные ручки
                href: ydo/static-api.md
          - name: Ydo-erp
            expanded: true
            items:
              - name: Основная информация о проекте
                href: ydo-erp/index.md
              - name: Соглашения
                expanded: true
                items:
                  - name: Стек
                    href: reference.md
              - name: Тестирование
                href: reference.md
          - name: Ydo-mobapp-employee
            expanded: true
            items:
              - name: Основная информация о проекте
                href: ydo-mobapp-employee/index.md
              - name: Быстрый старт
                href: ydo-mobapp-employee/quick-start-guide.md
              - name: Соглашения
                href: ydo-mobapp-employee/agreements.md
              - name: Сценарии
                href: ydo-mobapp-employee/scenarios.md
              - name: Тестирование
                expanded: false
                items:
                  - name: Создание и запуск тестов
                    href: ydo-mobapp-employee/testing.md
                  - name: Тестирование приложения
                    href: ydo-mobapp-employee/testing-app.md
              - name: Полезные ссылки
                href: ydo-mobapp-employee/links.md
      - name: Лендинги
        expanded: true
        items:
          - name: Основная информация
            href: landings/index.md
          - name: Схема конфига
            items:
              - name: Конфиг блока
                href: landings/block-config.md
              - name: Доступные блоки
                href: landings/available-blocks.md
          - name: Процесс конфигурирования
            items:
              - name: Управление конфигами в админке
                href: landings/config-setting-admin.md
              - name: Проверка конфига
                href: landings/config-check.md
          - name: Техническая реализация
            items:
              - name: Работа на фронте
                href: landings/frontend.md
      - name: Загрузка картинок
        href: imaginator.md
title: Яндекс.Капча
href: index.md
items:
  - href: concepts/new.md
    name: Изменения по версиям
  - name: Описание капча-сервера
    items:
      - href: concepts/overview.md
        name: Обзор
      - href: concepts/functions.md
        name: Функциональное описание
      - href: concepts/schema.md
        name: Алгоритм тестирования
  - name: Программный интерфейс
    items:
      - href: concepts/api.md
        name: Обзор
      - href: concepts/generate.md
        name: Метод generate
      - href: concepts/image.md
        name: Метод image
      - href: concepts/check.md
        name: Метод check
  - href: concepts/perl-lib.md
    name: Доступ к капча-серверу на Perl
  - href: concepts/releases.md
    name: Релизы документа
title: C++ в Яндексе
items:
  - name: Intro
    href: index.md
  - name: Style Guide
    href: cpp_style_guide.md
  - name: Library Guide
    href: cpp_library_guide.md
  - name: Cookbook
    expanded: true
    items:
      - name: Компиляторы и стандартная библиотека
        href: cookbook/std.md
      - name: Простые контейнеры
        href: cookbook/containers_simple.md
      - name: Параллельность и конкурентность
        href: cookbook/concurrency.md
      - name: Работа с текстом
        href: cookbook/texts.md
      - name: Работа с исключениями
        href: cookbook/exceptions.md
  - name: Tests
    href: docs/build/manual/tests/cpp.md
  - name: Benchmarks
    href: docs/build/manual/tests/benchmark.md
title: Разработка в Аркадии
items:
  - name: Введение
    href: index.md
  - name: Начало работы
    items:
      - name: Быстрый старт
        href: intro/quick-start-guide.md
      - name: Сетевые доступы
        href: intro/firewall.md
      - name: Авторизация и роли
        href: intro/auth.md
      - name: Переезд в Arcadia
        href: intro/migration.md
      - name: Поддержка пользователей
        href: intro/support.md
      - name: Часто задаваемые вопросы
        href: intro/faq.md

  - name: Работа с исходным кодом
    items:
      - name: Единый репозиторий Аркадия
        href: src/arcadia.md
      - name: Система контроля версий Arc
        items:
          - name: Основные команды
            href: src/arc/workflow.md
          - name: Ветки и теги
            href: src/arc/branches.md
          - name: Конфликты
            href: src/arc/conflict.md
          - name: Изменение истории
            href: src/arc/history.md
          - name: Конфигурация
            href: src/arc/config.md
          - name: Хуки
            href: src/arc/hooks.md
      - name: Веб-интерфейс Arcanum
        href: src/arcanum.md
      - name: Поддержка IDE
        href: src/ide.md
      - name: Внешние сотрудники
        href: src/outstaff.md

  - name: Правила разработки
    items:
      - name: Введение
        href: rules/intro.md
      - name: Использование внешних библиотек
        items:
          - name: Добавление внешних библиотек
            href: rules/contrib/add.md
          - name: Карантин для новых библиотек
            href: rules/contrib/quarantine.md
          - name: Внесение правок во внешние библиотеки
            href: rules/contrib/patches.md
          - name: Разрешённые лицензии
            href: rules/contrib/licenses.md
          - name: Разметка репозитория лицензиями
            href: rules/contrib/licenses_in_repo.md
      - name: Достижимость проектов
        href: rules/reachability.md
      - name: 🡭 Правила разработки на C++
        href: https://docs.yandex-team.ru/arcadia-cpp/
      - name: 🡭 Правила разработки на Go
        href: https://docs.yandex-team.ru/arcadia-golang/
      - name: 🡭 Правила разработки на Java
        href: https://docs.yandex-team.ru/arcadia-java/
      - name: 🡭 Правила разработки на Python
        href: https://docs.yandex-team.ru/arcadia-python/

  - name: Сборка исходного кода
    items:
      - name: Введение
        href: build/index.md
      - name: Утилита ya
        href: build/ya.md
      - name: Файлы ya.make
        href: build/ya-make.md
      - name: 🡭 Сборка кода на C++
        href: https://docs.yandex-team.ru/ya-make/tutorials/cpp
      - name: 🡭 Сборка кода на Go
        href: https://docs.yandex-team.ru/ya-make/tutorials/go
      - name: 🡭 Сборка кода на Java
        href: https://docs.yandex-team.ru/ya-make/tutorials/java
      - name: 🡭 Сборка кода на Python
        href: https://docs.yandex-team.ru/ya-make/tutorials/python
      - name: 🡭 Использование Protobuf
        href: https://docs.yandex-team.ru/ya-make/tutorials/protobuf

  - name: Тестирование
    items:
      - name: Введение
        href: test/intro.md
      - name: Ручной запуск тестов
        href: test/manual.md
      - name: Автоматический запуск тестов
        href: test/automated.md
      - name: Зависимости тестов
        href: test/dependencies.md
      - name: Подсчёт покрытия
        href: test/coverage
      - name: Подготовка окружения
        href: test/environment.md
      - name: Запуск тестов в YT
        href: test/yt.md
      - name: Selenium
        href: test/selenium.md
      - name: 🡭 Тесты на C++
        href: https://docs.yandex-team.ru/arcadia-cpp/docs/build/manual/tests/cpp
      - name: 🡭 Тесты на Go
        href: https://docs.yandex-team.ru/ya-make/manual/tests/go
      - name: 🡭 Тесты на Java
        href: https://docs.yandex-team.ru/ya-make/manual/tests/java
      - name: 🡭 Тесты на Python
        href: https://docs.yandex-team.ru/ya-make/manual/tests/python
      - name: 🡭 Exec-тесты
        href: https://docs.yandex-team.ru/ya-make/manual/tests/exectest

  - name: Документирование
    items:
      - name: 🡭 Сервис docs.yandex-team.ru
        href: https://docs.yandex-team.ru/docstools/
      - name: 🡭 Синтаксис Yandex Flavored Markdown
        href: https://ydocs.tech/
      - name: Рекомендации по написанию документации
        href: docs/conventions.md

  - name: Пакетирование
    href: package.md

  - name: Выкладка сервисов
    items:
      - name: Облако контейнеров Yandex.Deploy
        href: https://yd.yandex-team.ru/
      - name: Облако виртуальных машин QYP
        href: https://qyp.yandex-team.ru/
      - name: Система управления поисковым облаком Nanny
        href: https://nanny.yandex-team.ru/
      - name: Базы данных "по кнопке" (DBaaS)
        href: https://cloud.yandex-team.ru/
      - name: Система мониторинга Juggler
        href: https://juggler.yandex-team.ru/
      - name: Метрики и графики Monitoring
        href: https://monitoring.yandex-team.ru/
      - name: Инциденты Infra
        href: https://infra.yandex-team.ru/
      - name: Редактирование фаервольных правил Puncher
        href: https://puncher.yandex-team.ru/
      - name: Редактирование DNS записей
        href: https://dns.tt.yandex-team.ru/request
      - name: Разные cервисы для системных администраторов
        items:
          - name: Создание сетевого балансировщика
            href: https://l3.tt.yandex-team.ru/service
          - name: Наливка железных серверов Wall-E
            href: https://wall-e.yandex-team.ru/
          - name: Управление датацентрами Bot
            href: https://bot.yandex-team.ru/
          - name: Racktables
            href: https://racktables.yandex-team.ru/

  - name: Документация по отдельным инструментам
    items:
    - name: Arc
      href: https://docs.yandex-team.ru/arc/
    - name: Arcanum
      href: https://docs.yandex-team.ru/arcanum/
    - name: CI
      href: https://docs.yandex-team.ru/ci/
    - name: Sandbox
      href: https://docs.yandex-team.ru/sandbox/
    - name: Система сборки ya make
      href: https://docs.yandex-team.ru/ya-make/
title: Админка Драйва
href: index.md
items:
  - name: Основные объекты
    href: index.md
    expanded: true
    items:
      - name: Пользователи и автомобили
        href: users-and-cars.md
      - name: Теги
        href: tags.md
      - name: Экшны и роли
        href: action-and-roles.md
      - name: Сессии
        href: sessions.md
      - name: GVars
        href: gvars.md
      - name: Локализации
        href: localisations.md
      - name: Сигналы
        href: signals.md
        
title: Цели
items:
  - href: index.md
    name: О сервисе
  - href: new-goal.md
    name: Создать цель
  - href: navigation.md
    name: Навигация по целям
  - href: update.md
    name: Редактировать цель
  - items:
      - href: okr.md
        name: Обзор
      - href: create-okr.md
        name: Создать цели Градиента
      - href: table-view.md
        name: Табличное представление
    name: Цели и Градиент
  - items:
      - href: staff.md
        name: Обзор
      - href: hc-table-view.md
        name: Работа в табличном виде
      - href: hc-goal-card.md
        name: Работа в карточке цели
      - href: hc-team-accounting.md
        name: Учет сотрудников в команде
      - href: hc-division-accounting.md
        name: Учет сотрудников в подразделении
    name: Управление сотрудниками
  - href: goals-tracker.md
    name: Работа с целями через {{ tracker-name }}
  - href: feedback.md
    name: Обратная связь
title: arcadia-golang
href: index.md
items:
  - name: Правила разработки в Аркадии на Go
    href: index.md
  - name: Getting started
    href: getting-started.md
  - name: Tutorials
    href: tutorials.md
  - name: Линтинг
    href: linting.md
  - name: Форматирование Go кода
    href: formatting.md
  - name: Работа с контрибами
    href: contrib.md
  - name: Roadmap
    href: roadmap.md
  - name: Встречи
    items:
      - name: Первая встреча сообщества (net)
        href: meetings/first-community-meeting.md
      - name: Вторая встреча сообщества (linting & static analysis)
        href: meetings/second-community-meeting.md
title: Billing
href: index.md
items:
  - name: Основные разделы
    href: index.md
  - name: Принципы формирования SKU
    expanded: true
    items:
      - name: Обзор
        href: concepts/overview.md
      - name: Заказ ресурсов и биллинг
        href: concepts/order.md
      - name: Free Tier
        href: concepts/ft.md
      - name: Правила пересмотра тарифов
        href: concepts/costs_policy.md
      - name: Особые случаи
        href: concepts/cases.md
  - name: Провайдеры и продукты
    expanded: true
    items:
      - name: RTC
        href: sku/rtc.md
      - name: YT
        href: sku/yt.md
      - name: MDS
        href: sku/mds.md
      - name: MDB
        href: sku/mdb.md
  - name: Инструменты
    expanded: true
    items:
      - name: Общие принципы
        items:
          - name: Обзор
            href: tools/concepts.md
          - name: Дашборды
            href: tools/dashboards.md
      - name: API
        href: tools/api.md
      - name: RTC
        href: tools/rtc.md
      - name: YT
        href: tools/yt.md
      - name: MDS
        href: tools/mds.md
      - name: MDB
        href: tools/mdb.md
title: Аркадия
items:
  - name: Аркадия
    href: index.md

feature: Поезда
type: Подтверждение
description: >-
    Перейти на вкладку ЖД билеты

    Перейти на покупку для любого поезда на любую дату по направлению Москва -
    Санкт-Петербург, выбрать одного пассажира и заполнить все поля ввода данных
    валидными значениями. Находимся на странице ввода данных.
specs:
    'ЖД - Реквизиты компаний партнеров на странице подтверждения':
        - do: Кликнуть по кнопке Проверить заказ и купить
        - assert: >-
              * Произошел переход на страницу подтверждения

              * На странице подтверждения под корзиной с расчетом стоимости есть текст
              "Данные предоставлены партнёрами."

              ![image](https://jing.yandex-team.ru/files/shenfeld/2020-06-22_12.27.37-zl1e2.png)

              * Текст расположен как на скрине
        - do: Кликнуть по ссылке "партнерами"
        - assert: >-
              * Открылось модальное окно с заголовком Реквизиты

              * На странице за пределами окна появилась тень

              * В окне перечислены реквизиты: перевозчика, партнера, страховщика,
              Яндекса

              * Для каждой из компаний есть ОГРН, адрес (если фактический и
              юридический адрес отличаются, то отображаются они оба, если совпадают,
              то просто отображается один адрес) и время работы
        - do: Кликнуть по области за пределами окна
        - assert: |-
              * Окно закрылось
              * Тень на странице исчезла

files:
    - tests/common/trains/order/confirmation/trains-confirmation-partners.hermione.ts

Функциональность: Действия на подтверждении
Устройство:
    - Десктоп
    - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
    - Production
    - Testing
Tag: Smoke
Автор: shenfeld
feature: Поезда
type: Выбор мест
description: >-
  Кейс проверяет корректность информации и верстку на странице выбора мест в
  блоке с информацией о поезде:

  ![image](https://jing.yandex-team.ru/files/arhey/2022-01-14T07:52:52Z.eac2382.png)

  Перейти на вкладку ЖД билеты

  Открыта произвольная выдача, например, Москва - Санкт-Петербург на завтра
specs:
  'ЖД: Тач: блок с информацией о поезде на странице выбора мест':
    - do: Тапнуть "выбрать место" у поезда с наименованием (например, фирменный)
    - assert: |-
        Открывается страница выбора мест.
        На странице сверху есть блок с информацией о поезде
        В нем указано:
        - Города отправления и прибытия
        - Дата поездки
        - Номер поезда, название (если есть), города следования поезда
        - Время отправления/прибытия, время в пути, приписка "Время местное"
        - Станции отправления/прибытия

files:
    - tests/touch/trains/places/trains-places-train-info-touch.hermione.ts

Функциональность: Разное по странице выбора мест
Устройство: Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Tag: Smoke
Автор: shenfeld
feature: Комод
type: Моя поездка
description: Фильтр в блоке развлечений на странице моей поездки

specs:
    Работа фильтра по типу в блоке развлечений:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - do: Проскроллить до блока развлечений
        - assert: По умолчанию должен быть выбран фильтр "Все"
        - assert: Должны отображаться все виды активностей
        - do: По очереди выбирать фильтры, кроме "Все"
        - assert: Все активности должны быть только выбранного в фильтре типа

    Фильтр по типу в блоке развлечений, когда есть только один тип развлечений:
        - do: Авторизоваться
        - do: |
              Включить фронтовые моки бекенда
              (cookie "use_trips_mock" со значением "true",
              "mock_activity_types" со значением "[AFISHA]")
        - do: Зайти на страницу "/my/trips/1"
        - do: Проскроллить до блока развлечений
        - assert: Фильтры должны отсутствовать в блоке

files:
    - tests/common/account/trips/trip-activities-filter.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Моя поездка
Функциональность: Блок развлечений
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Моя поездка
description: Блок развлечений на странице моей поездки

specs:
    Блок развлечений на странице моей поездки:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - do: Проскроллить до блока развлечений
        - assert: У блока есть заголовок "Чем заняться"
        - assert: |-
              У 1й и 3й карточки в 1м столбце:
              * есть заголовок
              * есть картинка
              * ссылка ведет на "https://izi.travel" или "https://afisha.tst.yandex.ru"

files:
    - tests/common/account/trips/trip-activities.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Моя поездка
Функциональность: Блок развлечений
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Моя поездка
description: Печать и скачивание ж/д билетов

specs:
    Печать и скачивание жд билетов на странице моей поездки:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Получить доступ к тестовому заказу ж/д "/my/trips/search" заказ "YA-8886-9809-2943" почта "autotest@autotest.ru"
        - do: Зайти на страницу "/my/trips/1"
        - assert: У первого ж/д заказа должна отображаться ссылка на скачивание билетов
        - assert: У первого ж/д заказа должна быть указана верная ссылка на скачивание "/api/trains/downloadBlank/"
        - assert: У первого ж/д заказа в ссылке на скачивание должен быть корректно указан аттрибут download "order-616d98aa-c89c-4151-91f9-ac349de68447.pdf"
        - assert: У первого ж/д заказа ссылка на скачивание должна корректно отрабатывать и возвращать статус 200
        - assert: У первого ж/д заказа должна отображаться кнопка для печати билетов (десктоп)
        - do: Кликнуть "Печать" у первого ж/д заказа (десктоп)
        - assert: Открылась форма для печати билета (десктоп)

files:
    - tests/common/account/trips/trip-download-train-tickets.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Моя поездка
Функциональность: Печать и скачивание ж/д билетов
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Моя поездка
description: Статусы заказов на странице моей поездки

specs:
    Отели, Авиа. Бронирование отменено:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - assert: В списке отельных/авиа заказов должен быть отмененный заказ
        - assert: Должна отображаться основная информация о заказе
        - assert: Должна отсутствовать дополнительная информация о заказе и действия
        - assert: Должна отображаться серая надпись "Бронирование отменено" на заказе

    Отели. Чат поддержки для отменённого и активного заказов:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - assert: В списке отельных заказов должен быть отмененный заказ
        - assert: В списке отельных заказов должен быть активный заказ
        - assert: Должна отображаться кнопка "Написать в поддержку" на обоих заказах

    ЖД, Автобусы. Полный возврат:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - assert: В списке заказов жд/автобусы должен быть заказ с полным возвратом
        - assert: Должна отображаться основная информация о заказе
        - assert: Должна отсутствовать дополнительная информация о заказе и действия
        - assert: Должна быть серая надпись "Оформлен полный возврат" на сниппете

    ЖД, Автобусы. Частичный возврат:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - assert: В списке заказов жд/автобусы должен быть заказ с частичным возвратом
        - assert: Должна отображаться основная информация о заказе
        - assert: Должна отображаться дополнительная информация о заказе и действия
        - assert: Должна быть серая надпись "Возврат N билетов" на сниппете

files:
    - tests/common/account/trips/trip-orders-statuses.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Моя поездка
Функциональность: Страница моей поездки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Моя поездка
description: Общий вид страницы Моя поездка

specs:
    Общий вид страницы Моя поездка:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на страницу "/my/trips/1"
        - assert: |-
              * На странице должна быть хлебная крошка "Мои поездки"
              * Хлебная крошка должна вести на страницу со списком поездок
              * На странице должен быть текст "Поможем с заказом" с номером телефона
              * На странице должно быть фото поездки
        - assert: |-
              * Должен отображаться блок с прогнозом погоды
              * Должно быть несколько элементов прогноза (> 1)
              * В каждом элементе погоды должна быть иллюстрация погоды
              * В каждом элементе погоды должен быть указан период прогноза
              * В каждом элементе погоды должна быть указана температура
              * В каждом элементе погоды должна быть указана ссылка на Яндекс.Погоду
        - assert: |-
              * На странице должен быть блок "Авиабилеты"
              * В блоке авиабилетов должно быть 4 заказа
        - assert: |-
              В первом авиа заказе:
              * Должен быть заголовок "Санкт–Петербург — Александровск–Сахалинск"
              * Должна быть дата туда "24 ноя, 17:14"
              * Должна быть дата обратно "24 дек, 22:00"
              * Должны отображаться надписи "туда" и "обратно"
              * Должно отображаться 2 иконки авиакомпаний
              * Должен отображаться текст "Код бронирования (PNR)"
              * Должен отображаться pnr "JHG78"
              * Должна быть кнопка копирования
              * Ссылка должна вести на страницу этого заказа
        - assert: |-
              В третьем авиа заказе:
              * Должен быть заголовок "Сочи — Екатеринбург"
              * Должна быть дата туда "24 ноя, 17:14"
              * Не должно быть даты обратно
              * Не должны отображаться надписи "туда" и "обратно"
              * Должна отображаться 1 иконка авиакомпании
              * Должен отображаться текст "Код бронирования (PNR)"
              * Должен отображаться pnr "OHF88"
              * Должна быть кнопка копирования
              * Ссылка должна вести на страницу этого заказа
        - assert: |-
              * На странице должен быть блок "Ж/д билеты"
              * В блоке ж/д билетов должно быть 5 заказов
        - assert: |-
              В первом ж/д заказе:
              * Должен быть заголовок "Санкт–Петербург — Александровск–Сахалинск"
              * Должна быть дата туда "24 ноя, 17:14"
              * Должна быть дата обратно "24 дек, 22:00"
              * Должны отображаться надписи "туда" и "обратно"
              * Должно быть 2 описания поездов
              * Описание первого поезда должно быть "Поезд 339Г Москва — Санкт-Петербург, «Ласточка»"
              * Описание второго поезда должно быть "Поезд 146У Екатеринбург — Москва"
              * Должна быть кнопка скачивания
              * На десктопе должна быть кнопка печати
              * Ссылка должна вести на страницу этого заказа
        - assert: |-
              В четвертом ж/д заказе:
              * Должен быть заголовок "Екатеринбург — Санкт-Петербург"
              * Должна быть дата туда "3 мая, 23:59"
              * Не должно быть даты обратно
              * Не должны отображаться надписи "туда" и "обратно"
              * Должно быть описание поездов "Поезда 091И и 756А"
              * Должна быть надпись "Пересадка со сменой вокзала"
              * Должна быть кнопка скачивания
              * На десктопе должна быть кнопка печати
              * Ссылка должна вести на страницу этого заказа
        - assert: |-
              В пятом ж/д заказе:
              * Должен быть заголовок "Сочи — Казань"
              * Должна быть дата туда "24 ноя, 17:14"
              * Не должно быть даты обратно
              * Не должны отображаться надписи "туда" и "обратно"
              * Не должно быть описаний поездов
              * Не должно быть кнопки скачивания
              * Не должно быть кнопки печати
              * Должна отображаться надпись "Бронирование отменено"
              * Ссылка должна вести на страницу этого заказа
        - assert: |-
              * На странице должен быть блок "Отели"
              * В блоке отелей должно быть 4 заказа
        - assert: |-
              В первом отельном заказе:
              * Должен быть заголовок "Друзья на Банковском"
              * Должны быть даты "24 ноя — 24 дек"
              * Должен быть адрес "Санкт-Петербург, площадь Александра Невского, 2"
              * Должна быть кнопка локации
              * На десктопе должна быть кнопка печати
              * Ссылка должна вести на страницу этого заказа
        - assert: |-
              Во втором отельном заказе:
              * Должен быть заголовок "Друзья на Банковском"
              * Должны быть даты "24 ноя — 24 дек"
              * Не должно быть адреса
              * Не должно быть кнопки локации
              * Не должно быть кнопки печати
              * Должна быть надпись "Бронирование отменено"
              * Ссылка должна вести на страницу этого заказа
        - assert: |-
              Должен быть блок отельного кросс-сейла с заголовком "Выберите подходящий отель в Санкт–Петербурге"

files:
    - tests/common/account/trips/trip-view.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Моя поездка
Функциональность: Страница моей поездки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Мои поездки
description: Ссылки на активные поездки в меню-бургер

specs:
    Ссылки на активные поездки в меню-бургер:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на главную сервиса в таче
        - do: Открыть боковое меню-бургер
        - assert: В меню должен быть пункт "Мои поездки"
        - assert: Пункт "Мои поездки" должен вести на "/my/trips/"
        - assert: |
              В меню должны отображаться две активные поездки
              1 поездка в меню должна содержать заголовок "Санкт–Петербург"
              1 поездка в меню должна содержать картинку "https://avatars.mds.yandex.net/get-travel-hotels/2456341/region_image_213_0/region-desktop"
              1 поездка в меню должна содержать ссылку "/my/trips/1"
              2 поездка в меню должна содержать заголовок "Франция"
              2 поездка в меню должна содержать картинку заглушку
              2 поездка в меню должна содержать ссылку "/my/order/2"

files:
    - tests/touch/account/trips/trips-navigation-links.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Главная
Функциональность: Список моих поездок в меню-бургер
Устройство:
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Мои поездки
description: Поиск заказа со страницы моих поездок

specs:
    Поиск заказа (залогин):
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти в "Мои поездки" по адресу "/my/trips/"
        - do: Кликнуть в ссылку "Найти свой заказ"
        - assert: Должен открыться попап для поиска заказа
        - assert: Заголовок в попапе должен быть "Поиск заказа"
        - do: Заполнить форму поиска номер заказа "YA-1486-0570-3223", почта "autotest@autotest.ru"
        - do: Кликнуть в кнопку "Найти заказ"
        - assert: Открылась страница заказа "/my/order/f28b9e73-a178-4719-a9cd-d3ee3415a044"

    Поиск заказа (незалогин):
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти в "Мои поездки" по адресу "/my/trips/"
        - assert: Должна открыться страница с поиском заказа
        - assert: Заголовок на странице должен быть "Поиск заказа"
        - assert: Должна быть ссылка "Войдите в аккаунт"
        - do: Заполнить форму поиска номер заказа "YA-1486-0570-3223", почта "autotest@autotest.ru"
        - do: Кликнуть в кнопку "Найти заказ"
        - assert: Открылась страница заказа "/my/order/f28b9e73-a178-4719-a9cd-d3ee3415a044"

files:
    - tests/common/account/trips/trips-order-search.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Мои поездки
Функциональность: Поиск заказа со страницы моих поездок
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Мои поездки
description: Отображение отмененных поездок

specs:
    Поездка отменена:
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Перейти в мои поездки "/my/trips/"
        - assert: В списке прошлых и отмененных поездок должна быть отмененная поездка
        - assert: У поездки должна отображаться серая надпись "Поездка отменена"

files:
    - tests/common/account/trips/trips-statuses.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Мои поездки
Функциональность: Список моих поездок
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Комод
type: Мои поездки
description: Общий вид страницы со списком моих поездок

specs:
    Общий вид страницы (есть и будущие и прошедшие проездки):
        - do: Авторизоваться
        - do: Включить фронтовые моки бекенда (cookie "use_trips_mock" со значением "true")
        - do: Зайти на главную сервиса
        - do: Кликнуть в иконку личного кабинета
        - assert: Должна открыться страница Мои поездки
        - assert: На странице в десктопе должна быть вкладка "Мои поездки"
        - assert: На странице в десктопе должна быть вкладка "Пассажиры"
        - assert: На странице в десктопе вкладка "Мои поездки" должна быть активна
        - assert: На странице должен быть текст "Поможем с заказом" и номер телефона
        - assert: На странице должна быть ссылка "Найти свой заказ"
        - assert: |
              На странице должны отображаться поездки в блоке активных поездок
                1. Тексты "Санкт-Петербург", "Послезавтра", картинка соответствует городу, ссылка ведет на my/trips/{id}
                2. Тексты "Франция", "24 — 25 мар, 2021", картинка-заглушка, ссылка ведет на my/trips/{id}
                3. Тексты "Лондон", "5 мая, 2021", картинка-заглушка, ссылка ведет на /my/order/{id}
        - assert: |
              На странице должен отображаться заголовок "Прошлые поездки" в блоке прошедших поездок, а также поездки
                1. Тексты "Сочи", "20 дек, 2021 - 11 янв, 2022", картинка соответствует городу, ссылка ведет на my/trips/{id}
                2. Тексты "Санкт-Петербург — Александровск-Сахалинский", "20 дек, 2021 - 11 янв, 2022", картинка соответствует городу, ссылка ведет на my/trips/{id}

    Общий вид страницы (есть только прошедшие проездки):
        - do: Авторизоваться
        - do: Включить моки (количество активных поездок = 0)
        - do: Зайти на страницу Мои поездки
        - assert: Должна отображаться картинка-заглушка
        - assert: Текст картинки-заглушки должен быть "Никуда не собираетесь? Это стоит исправить"
        - assert: Текст кнопки картинки-заглушки должен быть "Подобрать билеты или отель"
        - assert: Кнопка с картинки-заглушки должна вести на главную
        - assert: Должен отображаться заголовок "Прошлые поездки"
        - assert: Должны отображаться прошлые поездки

    Общий вид страницы (есть только активные поездки):
        - do: Авторизоваться
        - do: Включить моки (количество прошедших поездок = 0, количество активных поездок = 1)
        - do: Зайти на страницу Мои поездки
        - assert: Должна быть одна активная поездка
        - assert: Заголовок активной поездки должен быть "Санкт–Петербург"
        - assert: Должен отсутствовать заголовок "Прошлые поездки"
        - assert: Должны отсутствовать прошлые поездки

files:
    - tests/common/account/trips/trips-view.hermione.ts

tags: smoke

Сервис: Поездка
Страница: Мои поездки
Функциональность: Список моих поездок
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Отели
type: Бронирование отелей

specs:
    Рефреш формы траста - отмена заказа:
        - condition: Быть залогиненым.
        - do: Перейти на страницу бронирования для любого отеля, на любые даты
        - assert: Открылась страница бронирования.
        - assert: В корзинке есть галка "У меня есть промокод", по умолчанию выключена. Поле инпут для промокода и кнопка "Применить" не показывается.
        - do: Включить галку "У меня есть промокод"
        - do: В инпут написать промокод "AUTOTEST_PROMOCODE_200", нажать применить
        - assert: В блоке с промокодом появилась сумма скидки "−200₽"
        - do: Запомнить итоговую сумму
        - do: Заполнить информацию о гостях и контактную информацию любыми валидными данными.
        - do: Нажать оплатить.
        - assert: Открылась страница с формой оплаты.
        - assert: Сумма к оплате соответствует сумме с примененным промокодом
        - do: Обновить страницу
        - assert: Остались на странице с трастом
        - assert: Показался попап "Ошибка оплаты Вы отменили платеж."
        - assert: В нем две кнопки - Отменить заказ, Попробовать еще раз
        - assert: Сумма c учетом промокода
        - do: Нажать на кнопку Отменить заказ
        - assert: Попап закрылся
        - assert: Открылась страница бронирования
        - assert: Промокод не применен
    Рефреш формы траста - повторная оплата:
        - condition: Быть залогиненым.
        - do: Перейти на страницу бронирования для любого отеля, на любые даты
        - assert: Открылась страница бронирования.
        - assert: В корзинке есть галка "У меня есть промокод", по умолчанию выключена. Поле инпут для промокода и кнопка "Применить" не показывается.
        - do: Включить галку "У меня есть промокод"
        - do: В инпут написать промокод "AUTOTEST_PROMOCODE_200", нажать применить
        - assert: В блоке с промокодом появилась сумма скидки "−200₽"
        - do: Запомнить итоговую сумму
        - do: Заполнить информацию о гостях и контактную информацию любыми валидными данными.
        - do: Нажать оплатить.
        - assert: Открылась страница с формой оплаты.
        - assert: Сумма к оплате соответствует сумме с примененным промокодом
        - do: Обновить страницу
        - assert: Остались на странице с трастом
        - assert: Показался попап "Ошибка оплаты Вы отменили платеж."
        - assert: В нем две кнопки - Отменить заказ, Попробовать еще раз
        - assert: Сумма c учетом промокода
        - do: Нажать на кнопку "Попробовать еще раз"
        - assert: Попап скрылся
        - assert: Открылась форма траста
        - do: Завершить оплату
        - assert: Открылась страница успешного заказа
        - do: Нажать на кнопку "Подробнее о заказе"
        - assert: Открылась страница заказа в личном кабинете
        - assert: Сумма соответствует сумме с учетом промокода
    Рефреш формы траста с попапом ошибки оплаты:
        - condition: Быть залогиненым.
        - do: Перейти на страницу бронирования для любого отеля, на любые даты
        - assert: Открылась страница бронирования.
        - assert: В корзинке есть галка "У меня есть промокод", по умолчанию выключена. Поле инпут для промокода и кнопка "Применить" не показывается.
        - do: Включить галку "У меня есть промокод"
        - do: В инпут написать промокод "AUTOTEST_PROMOCODE_200", нажать применить
        - assert: В блоке с промокодом появилась сумма скидки "−200₽"
        - do: Запомнить итоговую сумму
        - do: Заполнить информацию о гостях и контактную информацию любыми валидными данными.
        - do: Нажать оплатить.
        - assert: Открылась страница с формой оплаты.
        - assert: Сумма к оплате соответствует сумме с примененным промокодом
        - do: Обновить страницу
        - assert: Остались на странице с трастом
        - assert: Показался попап "Ошибка оплаты Вы отменили платеж."
        - assert: В нем две кнопки - Отменить заказ, Попробовать еще раз
        - assert: Сумма c учетом промокода
        - do: Обновить страницу
        - assert: Попап снова открылся
        - do: Нажать на кнопку "Попробовать еще раз"
        - assert: Попап скрылся
        - assert: Открылась форма траста
        - do: Завершить оплату
        - assert: Открылась страница успешного заказа
        - do: Нажать на кнопку "Подробнее о заказе"
        - assert: Открылась страница заказа в личном кабинете
        - assert: Сумма соответствует сумме с учетом промокода

files:
    - tests/common/hotels/book/errorFlow/trust-update.hermione.ts

Сервис: Отели
Страница: Бронирование
Автор: tcheremnykh
Устройство:
    - Тач
    - Десктоп
Функциональность: Промокод
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: ЖД
type: Выдача
description: ''
specs:
  'Туда-Обратно. Изменение поездов после выбора':
      - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно».
      - do: Выбрать понравившийся поезд и нажать «Выбрать поезд туда»
      - assert: Выбранный поезд закрепился в шапке.
      - do: Нажать кнопку «Изменить поезд»
      - assert: Вернулись на шаг «Выбор поезда туда».
      - do: Снова выбрать понравившийся поезд и нажать «Выбрать поезд туда».
      - do: Выбрать понравившийся поезд и нажать «Выбрать поезд обратно».
      - assert: Оба поезда закреплены в шапке.
      - do: Для первого поезда нажать «Изменить поезд туда»
      - assert: Вернулись на самый первый шаг выбора поезда «туда».
      - do: Снова выбрать поезд, можно тот же самый.
      - assert: |
          * Перешли на поисковую выдачу поездов обратно.
          * Выбранный ранее поезд «обратно» сбросился
      - do: Снова выбрать понравившийся поезд и нажать «Выбрать поезд обратно».
      - do: В шапке с закрепленными поездами «туда-обратно» нажать «изменить поезд обратно»
      - assert: |
          *	перешли на шаг «Выбор поезда обратно».
          *	Поезд «туда» закреплен в шапке и не сбросился.

manual: true
tags: smoke
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Выдача
description: ''
specs:
  'Переход по хлебным крошкам':
      - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно».
      - do: Выбрать понравившийся поезд и нажать «Выбрать поезд туда»
      - do: Выбрать понравившийся поезд и нажать «Выбрать поезд обратно»
      - assert: Перешли на шаг «Выбор мест».
      - do: Выбрать любое место в любом вагоне туда и нажать «Далее»
      - assert: перешли на шаг «Выбор мест обратно»
      - do: Выбрать любое место в любом вагоне туда и нажать «Далее»
      - assert: Перешли на шаг «Данные пассажиров»
      - do: Ввести данные пассажира и нажать кнопку «Проверить заказ и купить»
      - assert: Перешли на шаг «Подтверждение»
      - do: Кликнуть по хлебной крошке «Данные пассажиров».
      - assert: |
            *	Произошел переход на шаг «Данне пассажиров»
            *	При этом данные пассажира заполнены
            *	выбранные места в поездах туда обратно сохранились
      - do: Кликнуть по хлебной крошке «Выбор мест туда»
      - assert: |
            *	Произошел переход на шаг «Выбор мест туда»
            *	Выбранные места в поезде туда сохранены
            *	Схема вагонов соответствует выбранной на 3 шаге
      - do: Кликнуть по хлебной крошке «Выбор мест обратно»
      - assert: |
            *	Произошел переход на шаг «Выбор мест туда»
            *	Выбранные места в поезде туда-обратно сохранены
            *	Схема вагонов соответствует выбранной на 4 шаге
      - do: Кликнуть по хлебной крошке «Выбор поезда обратно»
      - assert: |
            *	Произошел переход на шаг «Выбор поезда туда»
            *	Следующий шаг «Выбор мест» неактивен
            *	Информация о выбранных местах сброшена

manual: true
tags: smoke
Функциональность: Хлебные крошки
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Выдача
description: ''
specs:
  'Поведение календаря в поисковой строке':
    - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург»
    - do: Указать только дату «туда» и нажать кнопку «Найти».
    - assert: Открылась поисковая выдача в одном направлении
    - do: Раскрыть поисковую строку
    - assert: В поисковой строке в поле «Обратно» текст - не нужен.
    - do: Раскрыть календарь «обратно»
    - assert: Нельзя выбрать дату «Обратно», раньше чем дату «Туда».
    - do: Выбрать дату «Обратно» и стереть дату «Туда». Нажать на кнопку «Найти».
    - assert: |
          Получаем ошибку, что нужно выбрать дату «туда»
            Десктоп https://jing.yandex-team.ru/files/arhey/2022-01-10T07:09:42Z.cb2225d.png
            Тач https://jing.yandex-team.ru/files/arhey/2022-01-12T14:00:05Z.45e38f7.png


manual: true
tags: smoke
Функциональность: Форма поиска
Устройство:
  - Десктоп
  - Тач
Страница: Поиск
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Страница заказа
description: |
    Информация для асессоров: форма оплаты с полями ввода данных карты в тестинге намеренно пропускается.
    Шаги, где требуется ввести данные карты и нажать кнопку Оплатить, нужно пропустить.

    При выборе мест стараемся выбирать место №10 в вагоне.
specs:
  'Туда-Обратно. Просмотр заказа в ЛК и возврат билетов':
      - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно».
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд туда»
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд обратно» и перейти на шаг выбора мест.
      - do: Указать количество пассажиров "1 взрослый" и выбрать места на поезда туда-обратно. Запомнить номера мест и схемы поездов.
      - do: Указать данные пассажира и нажать кнопку «Проверить заказ и купить»
      - do: Ввести данные карты и купить билеты.
      - do: На странице HP нажать «Подробнее о поездке»
      - assert: |
            * Откроется ЛК
            * Блок с направлениями поездов такой же как на Happy Page:
            * Только десктоп - есть кнопки «Сдать все билеты», «Распечатать», «Скачать»
            * Только тач - есть кнопки «Сдать все билеты», «Скачать»
            * Ниже блок пассажиры, в котором указаны ФИО пассажиров и сегменты поездов туда и обратно.
            * Есть кнопки «Сдать билет» напротив каждого сегмента
      - do: Нажать «Сдать билет» для поезда туда.
      - do: Подтвердить возврат
      - assert: |
            * Билет сдан:
               Десктоп - https://jing.yandex-team.ru/files/arhey/2022-01-10T14:06:12Z.e39521d.png
               Тач - https://jing.yandex-team.ru/files/arhey/2022-01-12T14:17:17Z.37a7ca1.png
            * Чек доступен для скачивания и скачивается
            * Квитанция доступна для скачивания и скачивается
            * На почту пришло письмо о том, что сдан только билет «туда»

manual: true
tags: smoke
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница с заказом
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Страница заказа
description: |
    Информация для асессоров: форма оплаты с полями ввода данных карты в тестинге намеренно пропускается.
    Шаги, где требуется ввести данные карты и нажать кнопку Оплатить, нужно пропустить.
    При выборе мест стараемся выбирать место №10 в вагоне.
specs:
  'Туда-Обратно. Просмотр заказа в ЛК и возврат билетов, когда применилась скидка ИМа по направлению':
        - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно».
        - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд туда»
        - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд обратно» и перейти на шаг выбора мест.
        - do: Указать количество пассажиров "1 взрослый" и выбрать места на поезда туда-обратно. Запомнить номера мест и схемы поездов.
        - do: Указать данные пассажира, запомнить цену за оба билета и нажать кнопку «Проверить заказ и купить»
        - assert: Проверить, что на шаге «Подтверждение» цена билетов отличается на 10% - это скидка от ИМ за покупку билетом туда-обратно по направлению МСК-СПБ
        - do: Ввести данные карты и купить билеты.
        - do: На странице HP нажать «Подробнее о поездке» и перейти в ЛК.
        - assert: |
              * Откроется ЛК
              * Блок с направлениями поездов такой же как на Happy Page.
              * Только десктоп - есть кнопки «Распечатать», «Скачать».
              * Только тач - есть кнопка "Скачать".
              * Отсутствует кнопка «Сдать все билеты».
              * Есть понятный текст почему нельзя сдать билет «Туда».
              * Есть кнопка «Сдать билет» для поезда обратно.
        - do: Cдать билет на поезд «Обратно».
        - assert: |
              * Билет сдан
                    Десктоп https://jing.yandex-team.ru/files/arhey/2022-01-10T14:06:12Z.e39521d.png
                    Тач https://jing.yandex-team.ru/files/arhey/2022-01-12T14:13:00Z.dbb4d7e.png
              * Чек доступен для скачивания и скачивается
              * Квитанция доступна для скачивания и скачивается
              * На почту пришло письмо о том, что сдан только билет «туда»
              * Появилась возможность сдать билет «Туда».
        - do: Cдать билет «туда»
        - assert: Cданы оба билета
        - do: Перейти в ЛК и найти заказ
        - assert: |
              * Блок выглядит так
                    Десктоп https://jing.yandex-team.ru/files/arhey/2022-01-10T14:29:34Z.a007e30.png
                    Тач https://jing.yandex-team.ru/files/arhey/2022-01-12T14:14:20Z.0db517c.png
              * Билеты помечены лейблом «возврат двух билетов»

manual: true
tags: smoke
Функциональность: Действия с заказом
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Подтверждение
description: |
    Проверяем, что на этапе подтверждение при покупке билетов "туда-обратно" рисуется верная шапка и в заказе отрисованы два поезда
    При выборе мест стараемся выбирать место №10 в вагоне.
specs:
  'Туда-Обратно. Проверка ввода данных пассажиров при покупке билетов':
      - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно».
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд туда»
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд обратно» и перейти на шаг выбора мест.
      - do: Указать количество пассажиров "1 взрослый" и выбрать им места на поезда туда-обратно. Запомнить номера мест и схемы поездов.
      - do: Указать данные пассажира и нажать кнопку «Проверить заказ и купить»
      - assert: |
            * Перешли на шаг «Подтверждение»
            * Заголовок в шапке «Москва - Санкт-Петербург туда и обратно, ХХХ - УУУ», где ХХХ и УУУ даты поездки
            * В шапке заказа два поезда
            * В блоке «Вагон и схема» приведены правильные схемы и места для обоих направлений.
            * В блоке «Пассажиры» указано верное ФИО пассажира.
            * Ниже в этом же блоке указана верная стоимость за билеты в каждом направлении

manual: true
tags: smoke
Функциональность: Подтверждение
Устройство:
  - Десктоп
  - Тач
Страница: Подтверждение
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
Tag: Smoke
feature: ЖД
type: Выбор мест
description: ''
specs:
  'Туда-Обратно. Редактирование выбранных мест':
      - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно».
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд туда»
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд обратно» и перейти на шаг выбора мест
      - do: Указать количество пассажиров "2 взрослых" и выбрать им места на схеме вагона (рекомендуется выбирать места №10, №11).
      - do: Нажать далее и выбрать места для пассажиров на поезд обратно.
      - do: Вернуться на шаг выбора мест на поезд туда (по хлебным крошкам) и изменить выбранные места
      - assert: |
            * Выбранные места на поезд "туда" изменились на схеме
            * Выбранные места на поезд "туда" изменились в блоке «Стоимость».
      - do: Изменить количество пассажиров с 2 взрослых на 1 взрослого
      - assert: |
            * Выбранные места на поезда "туда-обратно" сбросились на схеме
            * Выбранные места на поезда "туда-обратно" сбросились в блоке "Стоимость".

manual: true
tags: smoke
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Выдача
description: ''
specs:
  'Туда-Обратно. Сортировка и фильтрация поездов на выдаче':
      - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно».
      - do: Применить фильтр по поездам «сапсан» сортировку по цене, где самые дешевые билеты сверху
      - assert: |
            *	сортировка применилась. В выдаче остались только сапсаны и первыми показываются самые дешевые поезда.
            *	Есть лейблы «самый быстрый» и «самый дешевый».
            *	Телько десктоп - фильтр применен и кнопка выделена серым цветом.
      - do: Выбрать любой поезд и нажать «Выбрать поезд туда»
      - assert: |
            *	к выдаче поездов обратно не применен фильтр по сапсанам, показываются все поезда
            *	к выдаче поездов обратно не применена сортировка по цене
            *	В списке есть поезда с лейблами «самый быстрый» и «самый дешевый»

manual: true
tags: smoke
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Выбор мест
description: ''
specs:
  'Туда-Обратно. Выбор мест':
      - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно».
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд туда»
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд обратно»
      - assert: |
            * В хлебных крошках перешли на шаг «Выбор мест туда»
            * Шапка, вокруг поезда туда, выделена желтой рамкой
            * Заголовок в шапке «Москва - Санкт-Петербург туда и обратно, ХХХ - УУУ», где ХХХ и УУУ даты поездки
      - do: выбрать количество пассажиров - 2 взрослых, 1 ребенок с местом и 1 без места
      - do: выбрать места в поезде туда (рекомендуется выбирать места №10, №11)
      - assert: |
            * В блоке «Стоимость» указаны выбранные места с разбиением на взрослые билеты, детский билет и билет на ребенка без места
            * В «Итого» появилась примерная цена за места для всех пассажиров
      - do: нажать «Далее»
      - assert: |
            * Перешли на шаг «Выбор мест обратно»
            * Шапка, вокруг поезда обратно, выделена желтой рамкой
            * Блок в выбором количества пассажиров неактивен, выбрано 2 взрослых, 1 ребенок с местом и 1 ребенок без места.
      - do: выбрать места для пассажиров в поезде обратно
      - assert: |
            * В блок «Стоимость»  для поезда обратно подтянулась информация о местах и ценах за них.
            * В блоке «Стоимость» по каждому сегменту верно указаны направления туда и обратно.
            * В «Итого» суммарная стоимость всех выбранных билетов и она высчитана корректно.

manual: true
tags: smoke
Функциональность: Схемы вагонов
Устройство:
  - Десктоп
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Выдача
description: ''
specs:
  'Туда-Обратно. Выбор поездов в обе направления':
      - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно».
      - assert: |
            * В шапке выдачи заголовок «Выбрать поезд из Москвы в Санкт-Петербург на ХХХ», где ХХХ - дата из поля «Туда».
            * Если смотреть  на «хлебные крошки», то находимся на шаге «Выбор поезда туда»
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд туда»
      - assert: |
            * В хлебных крошках перешли на шаг «Выбор поезда обратно»
            * Выбранный поезд «туда» закрепился в шапке.
                Десктоп https://jing.yandex-team.ru/files/arhey/2022-01-10T07:25:59Z.b17991d.png
                Тач https://jing.yandex-team.ru/files/arhey/2022-01-12T13:53:49Z.aa0742e.png
            В шапке выдачи изменился заголовок «Выбрать поезд из Москвы в Санкт-Петербург на УУУ», где УУУ - это дата из поля «Обратно»
      - do: Выбрать на любой поезд из выдачи и нажать кнопку «Выбрать поезд обратно»
      - assert: |
            * В хлебных крошках перешли на шаг «Выбор мест туда»
            * Выбранные поезда «туда-обратно» закрепился в шапке
                Десктоп https://jing.yandex-team.ru/files/arhey/2022-01-10T07:30:10Z.a3a4cf1.png
                Тач https://jing.yandex-team.ru/files/arhey/2022-01-12T13:54:37Z.0ae4209.png
            * Поезд, для которого выбираем места выделен желтой рамкой


manual: true
tags: smoke
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Выдача
description: ''
specs:
  'Туда-Обратно. Выдача при поиске билетов':
    - do: Сформировать поисковую выдачу по направлению «Москва - Санкт-Петербург» и на произвольные даты «Туда-обратно»
    - assert: |
          * Изменилось название кнопок на «Выбрать поезд туда»
          * Под фильтрами появились хлебные крошки с выбором поездов туда-обратно (см. скрин https://jing.yandex-team.ru/files/arhey/2022-01-10T06:56:49Z.d3a1ed5.png)
          * В URL добавился параметр ?returnWhen= с правильной датой возвращения.
          * Ссылки на тип поезда стали просто текстом
                Только десктоп см. скрин https://jing.yandex-team.ru/files/arhey/2022-01-10T07:02:24Z.26086be.png
          * Из выдачи пропали поезда с пересадками
          * Из выдачи пропали поезда УФС
          * В подвале нет ссылок «Посмотреть рейсы обратно на ХХХ»

manual: true
tags: smoke
Функциональность: Содержание выдачи
Устройство:
  - Десктоп
  - Тач
Страница: Выдача
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: Отели
type: Бронирование отелей

specs:
    Применение промокода незалогин:
        - condition: Быть незалогиненым.
        - do: Перейти на страницу бронирования для любого отеля, на любые даты.
        - assert: Открылась страница бронирования.
        - assert: В корзинке есть галка "У меня есть промокод", по умолчанию выключена. Поле инпут для промокода и кнопка "Применить" не показывается.
        - do: Включить галку "У меня есть промокод"
        - assert: Поле инпут для промокода и кнопка "Применить" не показывается.
        - assert: Появилась надпись "Использование промокодов доступно только после авторизации"

files:
    - tests/common/hotels/book/promoCodes/unauth-promoCodes.hermione.ts

Сервис: Отели
Страница: Бронирование
Автор: tcheremnykh
Устройство:
    - Тач
    - Десктоп
Функциональность: Промокод
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Поезда
type: Страница заказа

specs:
    Не удалось провести возврат:
        - do: |
            Перейти на вкладку ЖД
            Перейти на поиск Москва - Санкт-Петербург через месяц
            Для любого поезда кликнуть по кнопке Выбрать место
            На странице выбора мест выбрать любое место в любом вагоне
            Нажать Указать пассажиров
            Дернуть ручку тестового контекста: https://api.travel-balancer-test.yandex.net/api/test_context/v1/train_token?insurancePricingOutcome=IPO_SUCCESS&insuranceCheckoutOutcome=ICO_SUCCESS&insuranceCheckoutConfirmOutcome=ICCO_SUCCESS&refundPricingOutcome=RPO_SUCCESS&refundCheckoutOutcome=RCO_FAILURE&createReservationOutcome=RCRO_SUCCESS&confirmReservationOutcome=RCOO_SUCCESS&officeReturnDelayInSeconds=0&officeAcquireDelayInSeconds=0&alwaysTimeoutAfterConfirmingInSeconds=0
            В ответе запомнить токен из поля test_context_token
            Добавить к урлу параметр trainTestContextToken со значением полученного токена
            Перейти по полученной ссылке
            Заполнить все поля валидными данными
            Нажать Проверить заказ и купить
            Нажать Ввести карту и оплатить (если будет шаг оплаты, ввести данные тестовой карты и оплатить)
            Кликнуть по кнопке перехода в личный кабинет "Подробнее о заказе"
        - assert: |
            Произошел переход на страницу успешного заказа
            Есть кнопка Сдать билет
        - do: Кликнуть по кнопке Сдать билет
        - assert: Появилось модальное окно с суммой к возврату
        - do: Нажать Подтвердить
        - assert: Появилась ошибка "Не удалось выполнить операцию" и кнопкой "Перезагрузить страницу"
        - do: Нажать Перезагрузить страницу
        - assert: |
            Страница обновилась
            Возврат не произошел, кнопка Сдать билет доступна

files:
    - tests/common/trains/order/orderPage/unsuccessfulReturn.hermione.ts

tags:
    - TK
    - orkestrator

# meta
Сервис: ЖД
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: Автобусы
type: Поиск
description: Проверка корретности загрузки страницы поиска и ее элементов

specs:
    Общий вид выдачи.:
        - do: |
            Перейти по url на выдачу
            Откуда: Москва
            Куда: Воронеж
            Когда: завтра
        - assert: Открылась выдача, поиск произошел на дату "Завтра"
        - assert: Выдача соответствует параметрам поиска - откуда, куда, дата отбытия
        - assert: На странице появился блок с фильтрами и блок сортировки выдачи.
        - assert: Блок поиска свернулся в компактный, состоит из пунктов отправления, прибытия, даты и лупы.
        - assert: |
            Блок сниппета состоит из двух частей, отделенных разделителем
            В левой части:
                - время отправления, дата отправления, место отправления
                - время прибытия, дата прибытия, место прибытия
                - время в пути в часах и минутах или только в часах, название компании перевозчика
            В правой части:
                - стоимость в рублях с приставкой "от"
                - если есть указание количества мест (зависит от партнера) - проверяем "{число} мест/места". Если нет - пропускаем проверку
                - кнопка "Выбрать места"


files:
    - tests/common/buses/search/date/view.hermione.ts

tags: smoke

# meta
Сервис: Автобусы
Страница: Поиск
Функциональность: Поиск, общий вид выдачи
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Автобусы
type: Поиск
description: Общий вид страницы

specs:
    Общий вид страницы:
        - do: Совершить поиск, например, "Москва - Санкт-Петербург" на завтра
        - assert: открылась страница с поисковой выдачей
        - assert: при загрузке выдачи есть скелетоны
        - assert: футер и хедер присутствуют во время загрузки данных и после
        - assert: |
              - верстка корректна
              - присутствует форма поиска
              - присутствует блок с фильтрами (по цене, времени и остановкам)
              - присутствует заголовок поисковой выдачи (Автобусы из "город отправления" в "город прибытия", дата (число, месяц))
              - под заголовком есть сортировки (по времени отправления, прибытия, цене и времени в пути)
              - присутствуют сниппеты с данными о рейсе и кнопкой "Выбрать"
              - присутствует футер

files:
    - tests/desktop/buses/search/view.hermione.ts

tags: smoke

# meta
Сервис: Автобусы
Страница: Выдача
Функциональность: Поиск, общий вид выдачи
Устройство:
    - Десктоп
Окружение:
    - Testing
    - Production
Тестирование асессорами: Нет
feature: Автобусы
type: Главная
description: Проверка корректности загрузки главной страницы и ее элементов

specs:
    Общий вид главной страницы.:
        - do: Зайти на главную страницу автобусов
        - assert: |
              На странице есть:
                - форма поиска
                - seo блок преимуществ “10 миллионов путешественников ежегодно бронируют у нас билеты на автобусы, номера в отелях и туры”
                - блок с перекрестными направлениями "Билеты на автобусы по России и СНГ" с предложениями других направлений
                - seo блок “Как купить билет на автобус онлайн”
        - do: Только десктоп. Выполнить поиск Москва- Санкт-Петербург, после получения выдачи вернуться на главную страницу
        - assert: Только десктоп. Под блоком поиска появился блок "недавние поиски"
        - do: Установить в тюне (https://yandex.ru/tune) Екатеринбург (Свердловская область, Россия), обновить главную Путешествий, раздел "Автобусы"
        - assert: В форме поиска город отправления - Екатеринбург
        - assert: |
              SEO блок преимуществ состоит из четырех частей:
                - первая часть состоит из картинки и текста "Покупайте билеты прямо здесь. Без поездок на автовокзал и очереди в кассу"
                - вторая часть состоит из картинки и текста "Без звёздочек. Тарифы и условия возврата известны сразу"
                - третья часть состоит из картинки и текста
                      "Всё путешествие под рукой в разделе «Мои поездки»: билеты, брони и интересные места"
                - четвертая часть состоит из картинки и текста "Поддержка 24/7 по телефону и в чате. Даже в выходные. И в Новый год"
        - do: Установить в тюне (https://yandex.ru/tune) Москва, обновить главную Путешествий, раздел “Автобусы”
        - assert: В форме поиска город отправления - Москва

files:
    - tests/common/buses/index/view.hermione.ts

tags: smoke

# meta
Сервис: Автобусы
Страница: Главная
Функциональность: работа с главной страницей
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Да
feature: Поезда
type: Happy page
description: |
    Пример ссылки на выбор мест для пересадок: https://travel-test.yandex.ru/trains/order/?adults=1&forward=P1_049А_c2_c213_2021-07-10T13.32%2CP1_070Ч_c213_c54_2021-07-11T13.50&fromId=c2&fromName=Санкт-Петербург&number=049А&provider=P1&time=13.32&toId=c54&toName=Екатеринбург&when=2021-07-10

specs:
    ЖД+ЖД Данные о рейсах на happy page:
        - do: Перейти на страницу выбора мест в первый поезд, для сложного заказа с пересадкой
        - do: Запомнить данные о рейсах (номера поездов, время отправления/прибытия, пункты отправления/прибытия, данные о пересадке)
        - do: Выбрать любое место
        - do: Далее следовать по шагам покупки до страницы хэппи пейдж (место любое, данные пассажиров любые)
        - assert: открылась хэппи пейдж
        - assert: вверху страницы есть блок с данными о рейсах
        - assert: все данные (номера поездов, время отправления, пункты отправления/прибытия, информация о пересадке) совпадают с предыдущими шагами
        - assert: под блоком с данными о рейсах есть кнопки - Подробнее о заказе, Распечатать (только десктоп), Скачать

files:
    - tests/common/trains/happyPage/withTransfer/withTransfer.hermione.ts

# meta
Сервис: ЖД
Страница: Happy page
Функциональность: ЖД+ЖД Пересадки
Устройство:
    - Десктоп
    - Тач
Окружение:
    - Testing
Тестирование асессорами: Нет
feature: ЖД
type: Страница заказа
description: |
    Реквизиты для покупки
    5100 0036 9725 3468  12/24  090
    5555 5555 5555 4444  12/24  395

    Кассовые возвраты реализованы на моках.
    1. Необходимо находясь на главной путешествий дописать в url /test.
    2. Перейти в вкладку "Поезда----> Заказ"
    3. Найти поле "Период возврата билета через кассу (в секундах)" и поставить 60 секунд
    Это время будет отсчитываться с момента оформления заказа до выполнения возврата.
    4. На этой же странице выставить значение = FAILURE для полей:
    "Результат получения цены страховки",
    "Результат выписывания страховки",
    "Результат подтверждения выписанной страховки (после оплаты)"
    5. Нажать "запросить и сохранить токен".
specs:
  'Ручной возврат билетов с зафейленным получением страховки через ЛК':
    - do: Оформить билеты  на любое направление для 1 взрослого пассажира и 1 ребенка без места.  Почту указать на yandex-team.  На странице подтверждения нет блока страховки https://jing.yandex-team.ru/files/semirka/Screenshot_104-1.png
    - do: Провести покупку и перейти в "Подбронее о Заказе"
    - assert: |
        * Есть информация о купленном билете , стоимости и пассажирах
        * Есть кнопка сдать билет (если уже выполнился возврат, значит выбрали мало времени на странице мока, поставить больше)
    - do: Обновить страницу
    - assert: |
        * Был выполнен возврат https://jing.yandex-team.ru/files/semirka/Screenshot_103-1.png
        * Кнопка "сдать билет" отсутсвует
        * На почту пришло сообщение о возврате билета
        * Сумма к возврату в письме соответсвует на странице и в чеке (чек может не сформироваться, скипнуть проверку в чеке)

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: semirka
feature: ЖД
type: Выбор мест
description: |
    Перейти на вкладку ЖД билеты
    Открыта произвольная выдача, содержащая разные типы вагонов.
    Например, Москва-Санкт-Петербург на завтра
specs:
  'Скролл табиков "выбора типа вагонов"':
      - do: Найти поезд с бразными типами вагонов (например Сапсан) и тапнуть "Выбрать место"
      - assert: |
            * Открывается страница выбора мест
            * Есть блок "Выберите тип вагона и место" и кол-во табиков с типом вагонов больше 3.
      - do: свайпнуть табики вбок
      - assert: |
            * Карусель прокрутилась
            * Выбранный тип вагона не изменился
      - do: свайпнуть табики вначало
      - assert: |
            * Первый и последний табики в карусели НЕ обрезаны
            * Примерный вид https://jing.yandex-team.ru/files/semirka/Screenshot_98-1.png

manual: true
Функциональность: Схемы вагонов
Устройство:
  - Тач
Страница: Выбор мест
Сервис: ЖД
Тестирование асессорами: Да
Окружение:
  - Production
  - Testing
Автор: arhey
feature: ЖД
type: Страница заказа
description: |
    Реквизиты для покупки
    5100 0036 9725 3468  12/24  090
    5555 5555 5555 4444  12/24  395

    Кассовые возвраты реализованы на моках, необходимо находясь на главной путешествий
    1. Дописать в url /test, перейти в вкладку "Поезда----> Заказ"
    2. Найти поле "Период возврата билета через кассу (в секундах)"
    3. Поставить 60 секунд (это время будет отсчитываться с момента оформления заказа до выполнения возврата)
    4. Нажать "запросить и сохранить токен".
specs:
  'Возврат билета через кассовый возврат':
    - do: Оформить билеты  на любое направление для 1 взрослого пассажира и 1 ребенка без места.  Почту указать на yandex-team.
    - do: Провести покупку и перейти в "Подбронее о Заказе"
    - assert: |
        * Есть информация о купленном билете , стоимости и пассажирах
        * Есть кнопка сдать билет (если уже выполнился возврат, значит выбрали мало времени на странице мока, поставить больше)
    - do: Обновить страницу
    - assert: |
        * Был выполнен возврат https://jing.yandex-team.ru/files/semirka/Screenshot_103-1.png
        * Кнопка "сдать билет" отсутсвует
        * На почту пришло сообщение о возврате билета
        * Сумма к возврату в письме соответсвует на странице и в чеке ( чек может не сформироваться, скипнуть проверку в чеке )

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: semirka
feature: ЖД
type: Страница заказа
description: |
    Реквизиты для покупки
    5100 0036 9725 3468  12/24  090
    5555 5555 5555 4444  12/24  395

    Кассовые возвраты реализованы на моках, необходимо находясь на главной путешествий
    1. Дописать в url /test, перейти в вкладку "Поезда----> Заказ"
    2. Найти поле "Период возврата билета через кассу (в секундах)"
    3. Поставить 60 секунд (это время будет отсчитываться с момента оформления заказа до выполнения возврата)
    4. Нажать "запросить и сохранить токен".
specs:
  'Возврат билета через кассовый возврат со страховкой':
    - do: Оформить билеты  на любое направление для 1 взрослого пассажира и 1 ребенка без места.  Почту указать на yandex-team.  На странице подтверждения поставить галочку напротив страховки
    - do:  Провести покупку и перейти в "Подбронее о Заказе"
    - assert: |
        * Есть информация о купленном билете , стоимости и пассажирах
        * Есть кнопка сдать билет (если уже выполнился возврат, значит выбрали мало времени на странице мока, поставить больше)
        * Есть блок с стоимостью страховки
    - do:  Обновить страницу
    - assert: |
        * Был выполнен возврат https://jing.yandex-team.ru/files/semirka/Screenshot_103-1.png
        * Кнопка "сдать билет" отсутсвует
        * Есть блок со стоимостью страховки
        * На почту пришло сообщение о возврате билета
        * В письме есть блок "Страхование"
        * Сумма к возврату в письме соответсвует на странице и в чеке (чек может не сформироваться, скипнуть проверку в чеке)

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: semirka
feature: ЖД
type: Страница заказа
description: |
    Реквизиты для покупки
    5100 0036 9725 3468  12/24  090
    5555 5555 5555 4444  12/24  395

    Получение страховки можно зафейлить через моки:
    1. Необходимо находясь на главной путешествий дописать в url /test,
    2. Перейти в вкладку "Поезда----> Заказ"
    3. Выставить значение = FAILURE в поля:
        "Результат получения цены страховки" ,
        "Результат выписывания страховки",
        "Результат подтверждения выписанной страховки (после оплаты)"
    4. Нажать "запросить и сохранить токен"
specs:
  'Возврат билета с зафейленной страховкой через кассовый возврат':
    - do: |
        Оформить билеты  на любое направление для 1 взрослого пассажира и 1 ребенка без места.
        Почту указать на yandex-team.
    - assert: На странице подтверждения нет блока страховки https://jing.yandex-team.ru/files/semirka/Screenshot_104-1.png
    - do: Провести покупку и перейти в "Подбронее о Заказе"
    - assert: Есть информация о купленном билете , стоимости и пассажирах
    - do: Выполнить возврат билета нажав по кнопке "Сдать билет"
    - assert: |
        * Был выполнен возврат https://jing.yandex-team.ru/files/semirka/Screenshot_103-1.png
        * Кнопка "сдать билет" отсутсвует
        * На почту пришло сообщение о возврате билета
        * Сумма к возврату в письме соответсвует на странице и в чеке (чек может не сформироваться, скипнуть проверку в чеке)

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: semirka
feature: ЖД
type: Страница заказа
description: |
    Реквизиты для покупки
    5100 0036 9725 3468  12/24  090
    5555 5555 5555 4444  12/24  395

    Кассовые возвраты реализованы на моках.
    1. Необходимо находясь на главной путешествий дописать в url /test.
    2. Перейти в вкладку "Поезда----> Заказ"
    3. Найти поле "Период возврата билета через кассу (в секундах)" и поставить 60 секунд
    Это время будет отсчитываться с момента оформления заказа до выполнения возврата.
    4. Поставить галочку "Выставить для второго поезда (сложный заказ)" --->   "Период возврата билета через кассу (в секундах)"
    5. Поставить 0 секунд (0 - возврата не будет)
    6. Нажать "запросить и сохранить токен".
specs:
  'Возврат билета с пересадкой через кассовый возврат и ЛК':
    - do: Оформить билеты  с пересадкой (примеры направлений Москва- Новодугинская, Москва - Санкт-Петербург) для 1 взрослого пассажира и 1 ребенка без места.  Почту указать на yandex-team.
    - do:  Провести покупку и перейти в "Подбронее о Заказе"
    - assert: |
        * Есть информация о купленных билетах , стоимости и пассажирах
        * Есть кнопка сдать билет (если уже выполнился возврат, значит выбрали мало времени на странице мока, поставить больше)
    - do:  Обновить страницу
    - assert: |
        * Был выполнен возврат  для одного из поездов (скрин)
        * Кнопка "сдать билет"  для этого поезда отсутсвует
        * На почту пришло сообщение о возврате билета
        * Сумма к возврату в письме соответсвует на странице и в чеке (чек может не сформироваться, скипнуть проверку в чеке)
    - do:  Выполнить возврат для второго поезда
    - assert: |
        * Выполнился возврат билета
        * На почту пришло сообщение о возврате билета
        * Сумма к возврату в письме соответсвует на странице и в чеке (чек может не сформироваться, скипнуть проверку в чеке)

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: semirka
feature: ЖД
type: Страница заказа
description: |
    Реквезиты для покупки
    5100 0036 9725 3468  12/24  090
    5555 5555 5555 4444  12/24  395

    Кассовые возвраты реализованы на моках.
    1. Необходимо находясь на главной путешествий дописать в url /test.
    2. Перейти в вкладку "Поезда----> Заказ"
    3. Найти поле "Период возврата билета через кассу (в секундах)" и поставить 60 секунд
    Это время будет отсчитываться с момента оформления заказа до выполнения возврата.
    4. Поставить галочку "Выставить для второго поезда (сложный заказ)" --->   "Период возврата билета через кассу (в секундах)"
    5. Поставить 0 секунд (0 - возврата не будет)
    6. Нажать "запросить и сохранить токен".
specs:
  'Возврат билетов с пересадкой и страховкой через кассовый возврат и ЛК':
    - do: Провести покупку и перейти в "Подбронее о Заказе"
    - assert: |
        * Есть информация о купленных билетах , стоимости и пассажирах
        * Есть кнопка сдать билет (если уже выполнился возврат, значит выбрали мало времени на странице мока, поставить больше)
        * Есть информация о страховке
    - do: Обновить страницу
    - assert: |
        * Был выполнен возврат  для одного из поездов (скрин)
        * Кнопка "сдать билет"  для этого поезда отсутсвует
        * На почту пришло сообщение о возврате билета
        * В письме есть блок "Страхование"
        * Сумма к возврату в письме соответсвует на странице и в чеке ( чек может не сформироваться, скипнуть проверку в чеке )
    - do: Выполнить возврат для второго поезда
    - assert: |
        * Выполнился возврат билета
        * На почту пришло сообщение о возврате билета
        * В письме есть блок "Страхование"
        * Сумма к возврату в письме соответсвует на странице и в чеке ( чек может не сформироваться, скипнуть проверку в чеке )

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: semirka
feature: ЖД
type: Страница заказа
description: |
    Реквизиты для покупки
    5100 0036 9725 3468  12/24  090
    5555 5555 5555 4444  12/24  395

    Кассовые возвраты реализованы на моках.
    1. Необходимо находясь на главной путешествий дописать в url /test.
    2. Перейти в вкладку "Поезда----> Заказ"
    3. Найти поле "Период возврата билета через кассу (в секундах)" и поставить 60 секунд
    Это время будет отсчитываться с момента оформления заказа до выполнения возврата.
    4. Поставить галочку "Выставить для второго поезда (сложный заказ)" --->   "Период возврата билета через кассу (в секундах)"
    5. На этой же странице выставить значение = FAILURE для полей:
        "Результат получения цены страховки",
        "Результат выписывания страховки",
        "Результат подтверждения выписанной страховки (после оплаты)"
    6. Нажать "запросить и сохранить токен".
specs:
  'Возврат билетов с пересадкой и зафейленной страховкой через кассовый возврат и ЛК':
        - do: |
            Оформить билеты  с пересадкой (примеры направлений Москва- Новодугинская, Москва - Санкт-Петербург)
            для 1 взрослого пассажира и 1 ребенка без места.
            Почту указать на yandex-team.
            На странице подтверждения нет блока страховки
        - do:  Провести покупку и перейти в "Подбронее о Заказе"
        - assert: |
            * Есть информация о купленных билетах, стоимости и пассажирах
            * Есть кнопка сдать билет (если уже выполнился возврат, значит выбрали мало времени на странице мока, поставить больше)
        - do:  Обновить страницу
        - assert: |
            * Был выполнен возврат  для одного из поездов (скрин)
            * Кнопка "сдать билет"  для этого поезда отсутсвует
            * На почту пришло сообщение о возврате билета
            * В письме есть блок "Страхование"
            * Сумма к возврату в письме соответсвует на странице и в чеке (чек может не сформироваться, скипнуть проверку в чеке)
        - do:  Выполнить возврат для второго поезда
        - assert: |
            * Выполнился возврат билета
            * На почту пришло сообщение о возврате билета
            * В письме есть блок "Страхование"
            * Сумма к возврату в письме соответсвует на странице и в чеке (чек может не сформироваться, скипнуть проверку в чеке)

manual: true
Устройство:
  - Десктоп
  - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Окружение: Testing
Автор: semirka
feature: ЖД
type: Страница заказа
description: >-
    Реквизиты тестовой карты: 5100003697253468, 12/20, 090 (не для асессоров)

    Для выполнения кейса нужно иметь билеты, купленные со страховкой.
    Для этого можно выполнить кейс https://testpalm.yandex-team.ru/travel/testcases/2658
specs:
    'Возврат билетов со страховкой (дубль 1205 для смоука)':
        - do: |-
              Купить билеты, как описано в Preconditions
              На хэппи пейдж нажать на кнопку "Подробнее о заказе"
        - assert: |-
              * Открылась страница подробного заказа
              * Есть пункт про страховку для обоих билетов
        - do: Нажать на кнопку "Сдать билет"
        - assert: '* Появилось модальное окно возврата'
        - do: |-
              Запомнить сумму, которая отображается как "К возврату"
              Нажать на кнопку "Подтвердить"
        - assert: >-
              * Статус заказа сменился на "Отменен"
              * Появилась красная надпись для сданных билетов “Возврат”
              * Через какое-то время сформировалась КРС
              * На указанную почту пришло письмо о возврате
              * Сумма к возврату в письме и на странице заказа совпадает с суммой,
              которая была указана в модальном окне возврата
        - do: >-
              Открыть чек из письма и на странице заказа - **асессоры пропускают этот
              шаг, чека не будет**
        - assert: >-
              * В чеке есть две позиции "Страхование поездки (страховая премия)" и
              "Услуги перевозки пассажира ж/д

              транспортом"

              * Общая сумма к возврату совпадает с суммой в письме и суммой в
              модальном окне при возврате
manual: true
Функциональность: Действия с заказом
Устройство:
    - Десктоп
    - Тач
Страница: Страница заказа
Сервис: ЖД
Тестирование асессорами: Нет
Tag: Smoke
Окружение: Testing
Автор: shenfeld
