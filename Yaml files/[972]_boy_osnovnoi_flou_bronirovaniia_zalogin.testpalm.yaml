feature: Авиа
type: ''
description: >-
    Как попасть на страницу бронирования аэрофлота:


    **Если вы тестируете тач-версию, можно для удобства создавать нужную ссылку на
    бронирование (или другие ссылки из кейсов) в десктопе, потом просто копировать
    и проверять кейс в таче.**


    * В поиске авиа поискать по направлению, по которому летает аэрофлот
    (например, Москва - Екатеринбург, или направление, указанное в кейсе).

    * Выбрать в фильтре по авиакомпаниям Аэрофлот

    * Кликнуть по сниппету с предложением Я.Путешествий (где есть приписка Продает
    авиакомпания).

    * На открывшейся странице кликнуть по кнопке Купить для Я.Путешествий. //
    произойдет переход на travel-test

    ![image](https://jing.yandex-team.ru/files/gouken67/aeroflot_to_travel.png)

    * **У Асессоров откроется travel.crowdtest** - должна открыться страница
    бронирования с формой ввода данных пассажиров


    При релизном смоуке:

    В тестинге продажа Авиа не всегда работает стабильно, если в релизе нет
    изменений в продаже и нет особых подозрений, то допустимо проверить уже в
    проде, что заказы появляются в админке.

    Залогиниться под тестовым аккаунтом

    Создать взрослого пассажира с валидными данными
    **Важно:** Если  в релизе были изменения по логам редиректа - посмотреть в престейбле логи тоже
specs:
  BOY основной флоу бронирования залогин + логи редиректа:
    - do: Выполнить переход как описано в Description.
    - assert: '1) Переход сработал, открылась страница бронирования'
    - do: Подставить данные пассажира из интента ЗКП
    - assert: Все поля заполнились корректно
    - do: Кликнуть по кнопке "Оплатить"
    - assert: 1)Открылась форма для оплаты
    - do: >-
        Заполнить форму Карта для тестовой оплаты тестовой брони: 4111 1111 1111
        1111 Месяц год: 12/24 CVV: 123

        Если получим ошибку - повторить с 5555 5555 5555 5599 и теми же данными.
    - do: Нажать кнопку оплатить
    - assert: 1)Оплата прошла
    - do: >-
        После спинера, в этом же окне появилась страница воода 3ds, ввести
        12345678 нажать submit
    - assert: >-
        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-24_12-07-00.png
    - do: В этом же окне появилась страница аэрофлота с информацией об оплате
    - assert: >-
        https://jing.yandex-team.ru/files/megamgistr/Yandeks.Puteshestviya__aviabilety_bilety_na_poezd_bronirovanie_otelei_2019-04-24_12-07-42.png
    - do: После успешной оплаты произошёл переход на страницу хэппи пейдж
    - assert: |-
        В шапке информация о том что заказ успешно забронирован
        Есть номер для регистрации на рейс
        Данные о перелёте совпадают с данным со страницы ввода данных пассажиров
        Контактные данные верные
    - do: Нажать Подробнее о заказе
    - assert: >-
        Произошел переход на страницу заказа

        Наверху страницы есть ссылка "Билеты и бронирования"

        Данные о перелёте, багаже, ручной клади совпадают с данным со страницы
        ввода данных пассажиров

        Данные о пассажирах верные

        Цена верная

        Контактные данные верные
    - do: |-
        Перейти по ссылке https://deploy.yandex-team.ru/stages/travel-frontend-portal-testing/logs
        В поле Search parameters ввести message = "AVIA_REDIRECT";
        Кликнуть по кнопке Search
    - assert: Отобразились логи AVIA_REDIRECT и AVIA_REDIRECT_SHOW
    - do: |-
        Среди логов AVIA_REDIRECT отыскать свой:
        - На десктопе: посмотреть свой yandexuid в куках (F12, затем Application), затем найти последний лог с таким же yandexuid
        - На таче: Просто найти подходящий по времени и направлению
    - assert: Нужный лог присутствует в начале поиска логов
    - do: Проверить данные, которые содержит лог
    - assert: |-
        Следующие поля должны быть заполнены соответствующим образом:
        * marker - число-буквенный код с разделителем '-'
        * show_id - 'число.число.0'
        * userip - совпадает с тем, что указано на ip.yandex.ru
        * yandexuid - на десктопе - совпадает с тем, что в куках, на тачах - непустой
        * billing_order_id - число
        * billing_client_id - число
        * national_version - 'ru'
        * original_price - число, совпадает с ценой варианта, по которому совершили редирект
        * price_cpa - число, не равно 0
        * pp - 502 для десктопа, 508 для тачей
manual: true
Функциональность: Бронирование
Устройство:
  - Десктоп
  - Тач
Сервис: Авиа
Тестирование асессорами: Нет
Окружение: Testing
Tag:
  - Smoke
  - Blocker
